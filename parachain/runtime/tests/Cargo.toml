[package]
name = "snowbridge-runtime-tests"
description = "Snowbridge Runtime Tests"
version = "0.1.0"
authors = ["Snowfork <contact@snowfork.com>"]
edition = "2021"
license = "Apache-2.0"

[workspace]

[dependencies]
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
hex-literal = { version = "0.4.1" }
log = { version = "0.4.20", default-features = false }
scale-info = { version = "2.10.0", default-features = false, features = ["derive"] }
serde = { version = "1.0.188", optional = true, features = ["derive"] }
smallvec = "1.11.0"

# Substrate
frame-benchmarking = { path = "../../../polkadot-sdk/substrate/frame/benchmarking", default-features = false, optional = true }
frame-executive = { path = "../../../polkadot-sdk/substrate/frame/executive", default-features = false }
frame-support = { path = "../../../polkadot-sdk/substrate/frame/support", default-features = false }
frame-system = { path = "../../../polkadot-sdk/substrate/frame/system", default-features = false }
frame-system-benchmarking = { path = "../../../polkadot-sdk/substrate/frame/system/benchmarking", default-features = false, optional = true }
frame-system-rpc-runtime-api = { path = "../../../polkadot-sdk/substrate/frame/system/rpc/runtime-api", default-features = false }
frame-try-runtime = { path = "../../../polkadot-sdk/substrate/frame/try-runtime", default-features = false, optional = true }
pallet-aura = { path = "../../../polkadot-sdk/substrate/frame/aura", default-features = false }
pallet-authorship = { path = "../../../polkadot-sdk/substrate/frame/authorship", default-features = false }
pallet-balances = { path = "../../../polkadot-sdk/substrate/frame/balances", default-features = false }
pallet-session = { path = "../../../polkadot-sdk/substrate/frame/session", default-features = false }
pallet-multisig = { path = "../../../polkadot-sdk/substrate/frame/multisig", default-features = false }
pallet-message-queue = { path = "../../../polkadot-sdk/substrate/frame/message-queue", default-features = false }
pallet-timestamp = { path = "../../../polkadot-sdk/substrate/frame/timestamp", default-features = false }
pallet-transaction-payment = { path = "../../../polkadot-sdk/substrate/frame/transaction-payment", default-features = false }
pallet-transaction-payment-rpc-runtime-api = { path = "../../../polkadot-sdk/substrate/frame/transaction-payment/rpc/runtime-api", default-features = false }
pallet-utility = { path = "../../../polkadot-sdk/substrate/frame/utility", default-features = false }
sp-api = { path = "../../../polkadot-sdk/substrate/primitives/api", default-features = false }
sp-block-builder = { path = "../../../polkadot-sdk/substrate/primitives/block-builder", default-features = false }
sp-consensus-aura = { path = "../../../polkadot-sdk/substrate/primitives/consensus/aura", default-features = false }
sp-core = { path = "../../../polkadot-sdk/substrate/primitives/core", default-features = false }
sp-genesis-builder = { path = "../../../polkadot-sdk/substrate/primitives/genesis-builder", default-features = false }
sp-inherents = { path = "../../../polkadot-sdk/substrate/primitives/inherents", default-features = false }
sp-io = { path = "../../../polkadot-sdk/substrate/primitives/io", default-features = false }
sp-offchain = { path = "../../../polkadot-sdk/substrate/primitives/offchain", default-features = false }
sp-runtime = { path = "../../../polkadot-sdk/substrate/primitives/runtime", default-features = false }
sp-session = { path = "../../../polkadot-sdk/substrate/primitives/session", default-features = false }
sp-std = { path = "../../../polkadot-sdk/substrate/primitives/std", default-features = false }
sp-storage = { path = "../../../polkadot-sdk/substrate/primitives/storage", default-features = false }
sp-transaction-pool = { path = "../../../polkadot-sdk/substrate/primitives/transaction-pool", default-features = false }
sp-version = { path = "../../../polkadot-sdk/substrate/primitives/version", default-features = false }

# Polkadot
rococo-runtime-constants = { path = "../../../polkadot-sdk/polkadot/runtime/rococo/constants", default-features = false }
pallet-xcm = { path = "../../../polkadot-sdk/polkadot/xcm/pallet-xcm", default-features = false }
pallet-xcm-benchmarks = { path = "../../../polkadot-sdk/polkadot/xcm/pallet-xcm-benchmarks", default-features = false, optional = true }
polkadot-core-primitives = { path = "../../../polkadot-sdk/polkadot/core-primitives", default-features = false }
polkadot-parachain-primitives = { path = "../../../polkadot-sdk/polkadot/parachain", default-features = false }
polkadot-runtime-common = { path = "../../../polkadot-sdk/polkadot/runtime/common", default-features = false }
xcm = { package = "staging-xcm", path = "../../../polkadot-sdk/polkadot/xcm", default-features = false }
xcm-builder = { package = "staging-xcm-builder", path = "../../../polkadot-sdk/polkadot/xcm/xcm-builder", default-features = false }
xcm-executor = { package = "staging-xcm-executor", path = "../../../polkadot-sdk/polkadot/xcm/xcm-executor", default-features = false }

# Cumulus
cumulus-pallet-aura-ext = { path = "../../../polkadot-sdk/cumulus/pallets/aura-ext", default-features = false }
cumulus-pallet-dmp-queue = { path = "../../../polkadot-sdk/cumulus/pallets/dmp-queue", default-features = false }
cumulus-pallet-parachain-system = { path = "../../../polkadot-sdk/cumulus/pallets/parachain-system", default-features = false, features = ["parameterized-consensus-hook"] }
cumulus-pallet-session-benchmarking = { path = "../../../polkadot-sdk/cumulus/pallets/session-benchmarking", default-features = false }
cumulus-pallet-xcm = { path = "../../../polkadot-sdk/cumulus/pallets/xcm", default-features = false }
cumulus-pallet-xcmp-queue = { path = "../../../polkadot-sdk/cumulus/pallets/xcmp-queue", default-features = false, features = ["bridging"] }
cumulus-primitives-core = { path = "../../../polkadot-sdk/cumulus/primitives/core", default-features = false }
cumulus-primitives-utility = { path = "../../../polkadot-sdk/cumulus/primitives/utility", default-features = false }
pallet-collator-selection = { path = "../../../polkadot-sdk/cumulus/pallets/collator-selection", default-features = false }
parachain-info = { package = "staging-parachain-info", path = "../../../polkadot-sdk/cumulus/parachains/pallets/parachain-info", default-features = false }
parachains-common = { path = "../../../polkadot-sdk/cumulus/parachains/common", default-features = false }
parachains-runtimes-test-utils = { path = "../../../polkadot-sdk/cumulus/parachains/runtimes/test-utils", default-features = false }
bridge-hub-rococo-runtime = { path = "../../../polkadot-sdk/cumulus/parachains/runtimes/bridge-hubs/bridge-hub-rococo", default-features = false }
asset-hub-rococo-runtime = { path = "../../../polkadot-sdk/cumulus/parachains/runtimes/assets/asset-hub-rococo", default-features = false }
assets-common = { path = "../../../polkadot-sdk/cumulus/parachains/runtimes/assets/common", default-features = false }

# Ethereum Bridge (Snowbridge)
snowbridge-core = { path = "../../primitives/core", default-features = false }
snowbridge-beacon-primitives = { path = "../../primitives/beacon", default-features = false }
snowbridge-router-primitives = { path = "../../primitives/router", default-features = false }
snowbridge-ethereum-beacon-client = { path = "../../pallets/ethereum-beacon-client", default-features = false }
snowbridge-inbound-queue = { path = "../../pallets/inbound-queue", default-features = false }
snowbridge-outbound-queue = { path = "../../pallets/outbound-queue", default-features = false }
snowbridge-outbound-queue-runtime-api = { path = "../../pallets/outbound-queue/runtime-api", default-features = false }
snowbridge-system = { path = "../../pallets/system", default-features = false }
snowbridge-system-runtime-api = { path = "../../pallets/system/runtime-api", default-features = false }

[dev-dependencies]
static_assertions = "1.1"
bridge-hub-test-utils = { path = "../../../polkadot-sdk/cumulus/parachains/runtimes/bridge-hubs/test-utils" }
bridge-runtime-common = { path = "../../../polkadot-sdk/bridges/bin/runtime-common", features = ["integrity-test"] }
sp-keyring = { path = "../../../polkadot-sdk/substrate/primitives/keyring" }

[features]
default = ["std"]
std = [
	"asset-hub-rococo-runtime/std",
	"assets-common/std",
	"bridge-hub-rococo-runtime/std",
	"codec/std",
	"cumulus-pallet-aura-ext/std",
	"cumulus-pallet-dmp-queue/std",
	"cumulus-pallet-parachain-system/std",
	"cumulus-pallet-session-benchmarking/std",
	"cumulus-pallet-xcm/std",
	"cumulus-pallet-xcmp-queue/std",
	"cumulus-primitives-core/std",
	"cumulus-primitives-utility/std",
	"frame-benchmarking/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-system-benchmarking?/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"frame-try-runtime?/std",
	"log/std",
	"pallet-aura/std",
	"pallet-authorship/std",
	"pallet-balances/std",
	"pallet-collator-selection/std",
	"pallet-message-queue/std",
	"pallet-multisig/std",
	"pallet-session/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"pallet-utility/std",
	"pallet-xcm-benchmarks?/std",
	"pallet-xcm/std",
	"parachain-info/std",
	"parachains-common/std",
	"parachains-runtimes-test-utils/std",
	"polkadot-core-primitives/std",
	"polkadot-parachain-primitives/std",
	"polkadot-runtime-common/std",
	"rococo-runtime-constants/std",
	"scale-info/std",
	"serde",
	"snowbridge-beacon-primitives/std",
	"snowbridge-core/std",
	"snowbridge-ethereum-beacon-client/std",
	"snowbridge-inbound-queue/std",
	"snowbridge-outbound-queue-runtime-api/std",
	"snowbridge-outbound-queue/std",
	"snowbridge-router-primitives/std",
	"snowbridge-system-runtime-api/std",
	"snowbridge-system/std",
	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-core/std",
	"sp-genesis-builder/std",
	"sp-inherents/std",
	"sp-io/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-std/std",
	"sp-storage/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	"xcm-builder/std",
	"xcm-executor/std",
	"xcm/std",
]

runtime-benchmarks = [
	"asset-hub-rococo-runtime/runtime-benchmarks",
	"assets-common/runtime-benchmarks",
	"bridge-hub-rococo-runtime/runtime-benchmarks",
	"bridge-runtime-common/runtime-benchmarks",
	"cumulus-pallet-dmp-queue/runtime-benchmarks",
	"cumulus-pallet-parachain-system/runtime-benchmarks",
	"cumulus-pallet-session-benchmarking/runtime-benchmarks",
	"cumulus-pallet-xcmp-queue/runtime-benchmarks",
	"cumulus-primitives-core/runtime-benchmarks",
	"cumulus-primitives-utility/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-collator-selection/runtime-benchmarks",
	"pallet-message-queue/runtime-benchmarks",
	"pallet-multisig/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-utility/runtime-benchmarks",
	"pallet-xcm-benchmarks/runtime-benchmarks",
	"pallet-xcm/runtime-benchmarks",
	"parachains-common/runtime-benchmarks",
	"polkadot-parachain-primitives/runtime-benchmarks",
	"polkadot-runtime-common/runtime-benchmarks",
	"snowbridge-core/runtime-benchmarks",
	"snowbridge-ethereum-beacon-client/runtime-benchmarks",
	"snowbridge-inbound-queue/runtime-benchmarks",
	"snowbridge-outbound-queue/runtime-benchmarks",
	"snowbridge-router-primitives/runtime-benchmarks",
	"snowbridge-system/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"xcm-builder/runtime-benchmarks",
	"xcm-executor/runtime-benchmarks",
]

try-runtime = [
	"asset-hub-rococo-runtime/try-runtime",
	"bridge-hub-rococo-runtime/try-runtime",
	"cumulus-pallet-aura-ext/try-runtime",
	"cumulus-pallet-dmp-queue/try-runtime",
	"cumulus-pallet-parachain-system/try-runtime",
	"cumulus-pallet-xcm/try-runtime",
	"cumulus-pallet-xcmp-queue/try-runtime",
	"frame-executive/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"frame-try-runtime/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-collator-selection/try-runtime",
	"pallet-message-queue/try-runtime",
	"pallet-multisig/try-runtime",
	"pallet-session/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-utility/try-runtime",
	"pallet-xcm/try-runtime",
	"parachain-info/try-runtime",
	"polkadot-runtime-common/try-runtime",
	"snowbridge-ethereum-beacon-client/try-runtime",
	"snowbridge-inbound-queue/try-runtime",
	"snowbridge-outbound-queue/try-runtime",
	"snowbridge-system/try-runtime",
	"sp-runtime/try-runtime",
]
fast-runtime = [
	"bridge-hub-rococo-runtime/fast-runtime",
]
experimental = ["pallet-aura/experimental"]

# A feature that should be enabled when the runtime should be built for on-chain
# deployment. This will disable stuff that shouldn't be part of the on-chain wasm
# to make it smaller like logging for example.
on-chain-release-build = ["sp-api/disable-logging"]
