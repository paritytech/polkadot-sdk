[package]
name = "solochain-template-node"
description = "A solochain node template built with Substrate, part of Polkadot Sdk."
version = "0.0.0"
license = "MIT-0"
authors.workspace = true
homepage.workspace = true
repository.workspace = true
edition.workspace = true
publish = false

build = "build.rs"

[lints]
workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
clap = { version = "4.5.3", features = ["derive"] }
futures = { version = "0.3.30", features = ["thread-pool"] }
serde_json = { workspace = true, default-features = true }
jsonrpsee = { version = "0.22", features = ["server"] }

# substrate client
sc-cli = { path = "../../../substrate/client/cli" }
sp-core = { path = "../../../substrate/primitives/core" }
sc-executor = { path = "../../../substrate/client/executor" }
sc-network = { path = "../../../substrate/client/network" }
sc-service = { path = "../../../substrate/client/service" }
sc-telemetry = { path = "../../../substrate/client/telemetry" }
sc-transaction-pool = { path = "../../../substrate/client/transaction-pool" }
sc-transaction-pool-api = { path = "../../../substrate/client/transaction-pool/api" }
sc-offchain = { path = "../../../substrate/client/offchain" }
sc-consensus-aura = { path = "../../../substrate/client/consensus/aura" }
sp-consensus-aura = { path = "../../../substrate/primitives/consensus/aura" }
sc-consensus = { path = "../../../substrate/client/consensus/common" }
sc-consensus-grandpa = { path = "../../../substrate/client/consensus/grandpa" }
sp-consensus-grandpa = { path = "../../../substrate/primitives/consensus/grandpa" }
sc-client-api = { path = "../../../substrate/client/api" }
sc-rpc-api = { path = "../../../substrate/client/rpc-api" }
sc-basic-authorship = { path = "../../../substrate/client/basic-authorship" }

# substrate primitives
sp-runtime = { path = "../../../substrate/primitives/runtime" }
sp-io = { path = "../../../substrate/primitives/io" }
sp-timestamp = { path = "../../../substrate/primitives/timestamp" }
sp-inherents = { path = "../../../substrate/primitives/inherents" }
sp-keyring = { path = "../../../substrate/primitives/keyring" }
sp-api = { path = "../../../substrate/primitives/api" }
sp-blockchain = { path = "../../../substrate/primitives/blockchain" }
sp-block-builder = { path = "../../../substrate/primitives/block-builder" }

# frame and pallets
frame-system = { path = "../../../substrate/frame/system" }
pallet-transaction-payment = { path = "../../../substrate/frame/transaction-payment", default-features = false }
pallet-transaction-payment-rpc = { path = "../../../substrate/frame/transaction-payment/rpc" }
substrate-frame-rpc-system = { path = "../../../substrate/utils/frame/rpc/system" }

# These dependencies are used for runtime benchmarking
frame-benchmarking-cli = { path = "../../../substrate/utils/frame/benchmarking-cli" }

# Local Dependencies
solochain-template-runtime = { path = "../runtime" }

# CLI-specific dependencies
try-runtime-cli = { path = "../../../substrate/utils/frame/try-runtime/cli", optional = true }

[build-dependencies]
substrate-build-script-utils = { path = "../../../substrate/utils/build-script-utils" }

[features]
default = []
# Dependencies that are only required if runtime benchmarking should be build.
runtime-benchmarks = [
	"frame-benchmarking-cli/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
	"solochain-template-runtime/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
]
# Enable features that allow the runtime to be tried and debugged. Name might be subject to change
# in the near future.
try-runtime = [
	"frame-system/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"solochain-template-runtime/try-runtime",
	"sp-runtime/try-runtime",
	"try-runtime-cli/try-runtime",
]
