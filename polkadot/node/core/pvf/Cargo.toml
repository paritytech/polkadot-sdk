[package]
name = "polkadot-node-core-pvf"
description = "Polkadot crate that implements the PVF validation host. Responsible for coordinating preparation and execution of PVFs."
version = "22.0.0-rc1"
authors.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true

[lints]
workspace = true

[dependencies]
always-assert = { workspace = true }
array-bytes = { workspace = true, default-features = true }
blake3 = { workspace = true }
cfg-if = { workspace = true }
futures = { workspace = true }
futures-timer = { workspace = true }
gum.workspace = true
gum.default-features = true
is_executable = { optional = true, workspace = true }
pin-project = { workspace = true }
rand = { workspace = true, default-features = true }
slotmap = { workspace = true }
strum = { features = ["derive"], workspace = true, default-features = true }
tempfile = { workspace = true }
thiserror = { workspace = true }
tokio = { features = ["fs", "process"], workspace = true, default-features = true }

codec = { features = [
	"derive",
], workspace = true }
polkadot-core-primitives.workspace = true
polkadot-core-primitives.default-features = true
polkadot-node-core-pvf-common.workspace = true
polkadot-node-core-pvf-common.default-features = true
polkadot-node-metrics.workspace = true
polkadot-node-metrics.default-features = true
polkadot-node-primitives.workspace = true
polkadot-node-primitives.default-features = true
polkadot-node-subsystem.workspace = true
polkadot-node-subsystem.default-features = true
polkadot-parachain-primitives.workspace = true
polkadot-parachain-primitives.default-features = true
polkadot-primitives.workspace = true
polkadot-primitives.default-features = true
polkadot-node-core-pvf-execute-worker = { optional = true, workspace = true, default-features = true }
polkadot-node-core-pvf-prepare-worker = { optional = true, workspace = true, default-features = true }
sc-tracing.workspace = true
sp-core.workspace = true
sp-core.default-features = true
sp-maybe-compressed-blob = { optional = true, workspace = true, default-features = true }

[dev-dependencies]
assert_matches = { workspace = true }
criterion = { features = [
	"async_tokio",
	"cargo_bench_support",
], workspace = true }
hex-literal = { workspace = true, default-features = true }

polkadot-node-core-pvf-common = { features = ["test-utils"], default-features = true, path = "common" }
polkadot-node-subsystem-test-helpers = { path = "../../subsystem-test-helpers" }
# For benches and integration tests, depend on ourselves with the test-utils
# feature.
polkadot-node-core-pvf = { features = ["test-utils"], default-features = true, path = "" }
rococo-runtime = { path = "../../../runtime/rococo" }

test-parachain-adder = { path = "../../../parachain/test-parachains/adder" }
test-parachain-halt = { path = "../../../parachain/test-parachains/halt" }

[target.'cfg(target_os = "linux")'.dev-dependencies]
libc = "0.2.155"
procfs = "0.16.0"
rusty-fork = "0.3.0"
sc-sysinfo = { default-features = true, path = "../../../../substrate/client/sysinfo" }

[[bench]]
name = "host_prepare_rococo_runtime"
harness = false

[features]
ci-only-tests = []
jemalloc-allocator = ["polkadot-node-core-pvf-common/jemalloc-allocator"]
# This feature is used to export test code to other crates without putting it in the production build.
test-utils = [
	"dep:is_executable",
	"dep:polkadot-node-core-pvf-execute-worker",
	"dep:polkadot-node-core-pvf-prepare-worker",
	"dep:sp-maybe-compressed-blob",
]
