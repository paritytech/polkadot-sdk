[package]
name = "polkadot-service"
rust-version = "1.60"
version = "7.0.0"
authors.workspace = true
edition.workspace = true
license.workspace = true
description = "Utils to tie different Polkadot components together and allow instantiation of a node."

[lints]
workspace = true

[dependencies]
# Substrate Client
sc-authority-discovery = { workspace = true, default-features = true }
sc-consensus-babe = { workspace = true, default-features = true }
sc-consensus-beefy = { workspace = true, default-features = true }
sc-consensus-grandpa = { workspace = true, default-features = true }
mmr-gadget = { workspace = true, default-features = true }
sp-mmr-primitives = { workspace = true, default-features = true }
sc-block-builder = { workspace = true, default-features = true }
sc-chain-spec = { workspace = true, default-features = true }
sc-client-api = { workspace = true, default-features = true }
sc-client-db = { workspace = true, default-features = true }
sc-consensus = { workspace = true, default-features = true }
sc-consensus-slots = { workspace = true, default-features = true }
sc-executor = { workspace = true, default-features = true }
sc-network = { workspace = true, default-features = true }
sc-network-common = { workspace = true, default-features = true }
sc-network-sync = { workspace = true, default-features = true }
sc-transaction-pool = { workspace = true, default-features = true }
sc-transaction-pool-api = { workspace = true, default-features = true }
sc-sync-state-rpc = { workspace = true, default-features = true }
sc-keystore = { workspace = true, default-features = true }
sc-basic-authorship = { workspace = true, default-features = true }
sc-offchain = { workspace = true, default-features = true }
sc-sysinfo = { workspace = true, default-features = true }
sc-service = { workspace = true }
sc-telemetry = { workspace = true, default-features = true }

# Substrate Primitives
sp-authority-discovery = { workspace = true, default-features = true }
sp-consensus = { workspace = true, default-features = true }
sp-consensus-beefy = { workspace = true, default-features = true }
sp-consensus-grandpa = { workspace = true, default-features = true }
sp-inherents = { workspace = true, default-features = true }
sp-keyring = { workspace = true, default-features = true }
sp-api = { workspace = true, default-features = true }
sp-block-builder = { workspace = true, default-features = true }
sp-blockchain = { workspace = true, default-features = true }
sp-core = { workspace = true, default-features = true }
sp-io = { workspace = true, default-features = true }
sp-keystore = { workspace = true, default-features = true }
sp-offchain = { workspace = true, default-features = true }
sp-runtime = { workspace = true, default-features = true }
sp-session = { workspace = true, default-features = true }
sp-storage = { workspace = true, default-features = true }
sp-transaction-pool = { workspace = true, default-features = true }
pallet-transaction-payment = { workspace = true, default-features = true }
sp-timestamp = { workspace = true, default-features = true }
sp-consensus-babe = { workspace = true, default-features = true }
sp-state-machine = { workspace = true, default-features = true }
sp-weights = { workspace = true, default-features = true }
sp-version = { workspace = true, default-features = true }

# Substrate Pallets
pallet-babe = { workspace = true, default-features = true }
pallet-staking = { workspace = true, default-features = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true, default-features = true }
frame-metadata-hash-extension = { optional = true, workspace = true, default-features = true }
frame-system = { workspace = true, default-features = true }

# Substrate Other
frame-system-rpc-runtime-api = { workspace = true, default-features = true }
prometheus-endpoint = { workspace = true, default-features = true }
frame-support = { workspace = true, default-features = true }
frame-benchmarking-cli = { workspace = true, default-features = true }
frame-benchmarking = { workspace = true, default-features = true }

# External Crates
async-trait = { workspace = true }
futures = { workspace = true }
hex-literal = { workspace = true, default-features = true }
is_executable = { workspace = true }
gum = { workspace = true, default-features = true }
log = { workspace = true, default-features = true }
schnellru = { workspace = true }
serde = { features = ["derive"], workspace = true, default-features = true }
serde_json = { workspace = true, default-features = true }
thiserror = { workspace = true }
kvdb = { workspace = true }
kvdb-rocksdb = { optional = true, workspace = true }
parity-db = { optional = true, workspace = true }
codec = { workspace = true, default-features = true }
parking_lot = { workspace = true, default-features = true }
bitvec = { optional = true, workspace = true, default-features = true }

# Polkadot
polkadot-core-primitives = { workspace = true, default-features = true }
polkadot-node-core-parachains-inherent = { workspace = true, default-features = true }
polkadot-overseer = { workspace = true, default-features = true }
polkadot-parachain-primitives = { workspace = true, default-features = true }
polkadot-primitives = { workspace = true, default-features = true }
polkadot-node-primitives = { workspace = true, default-features = true }
polkadot-rpc = { workspace = true, default-features = true }
polkadot-node-subsystem = { workspace = true, default-features = true }
polkadot-node-subsystem-util = { workspace = true, default-features = true }
polkadot-node-subsystem-types = { workspace = true, default-features = true }
polkadot-runtime-parachains = { workspace = true, default-features = true }
polkadot-node-network-protocol = { workspace = true, default-features = true }

# Polkadot Runtime Constants
rococo-runtime-constants = { optional = true, workspace = true, default-features = true }
westend-runtime-constants = { optional = true, workspace = true, default-features = true }

# Polkadot Runtimes
westend-runtime = { optional = true, workspace = true }
rococo-runtime = { optional = true, workspace = true }

# Polkadot Subsystems
polkadot-approval-distribution = { optional = true, workspace = true, default-features = true }
polkadot-availability-bitfield-distribution = { optional = true, workspace = true, default-features = true }
polkadot-availability-distribution = { optional = true, workspace = true, default-features = true }
polkadot-availability-recovery = { optional = true, workspace = true, default-features = true }
polkadot-collator-protocol = { optional = true, workspace = true, default-features = true }
polkadot-dispute-distribution = { optional = true, workspace = true, default-features = true }
polkadot-gossip-support = { optional = true, workspace = true, default-features = true }
polkadot-network-bridge = { optional = true, workspace = true, default-features = true }
polkadot-node-collation-generation = { optional = true, workspace = true, default-features = true }
polkadot-node-core-approval-voting = { optional = true, workspace = true, default-features = true }
polkadot-node-core-av-store = { optional = true, workspace = true, default-features = true }
polkadot-node-core-backing = { optional = true, workspace = true, default-features = true }
polkadot-node-core-bitfield-signing = { optional = true, workspace = true, default-features = true }
polkadot-node-core-candidate-validation = { optional = true, workspace = true, default-features = true }
polkadot-node-core-chain-api = { optional = true, workspace = true, default-features = true }
polkadot-node-core-chain-selection = { optional = true, workspace = true, default-features = true }
polkadot-node-core-dispute-coordinator = { optional = true, workspace = true, default-features = true }
polkadot-node-core-prospective-parachains = { optional = true, workspace = true, default-features = true }
polkadot-node-core-provisioner = { optional = true, workspace = true, default-features = true }
polkadot-node-core-pvf = { optional = true, workspace = true, default-features = true }
polkadot-node-core-pvf-checker = { optional = true, workspace = true, default-features = true }
polkadot-node-core-runtime-api = { optional = true, workspace = true, default-features = true }
polkadot-statement-distribution = { optional = true, workspace = true, default-features = true }

xcm = { workspace = true, default-features = true }
xcm-fee-payment-runtime-api = { workspace = true, default-features = true }

[dev-dependencies]
polkadot-test-client = { workspace = true }
polkadot-node-subsystem-test-helpers = { workspace = true }
polkadot-primitives-test-helpers = { workspace = true }
env_logger = { workspace = true }
assert_matches = { workspace = true }
serial_test = { workspace = true }
tempfile = { workspace = true }

[features]
default = ["db", "full-node"]

db = ["sc-service/rocksdb"]

full-node = [
	"kvdb-rocksdb",
	"parity-db",
	"polkadot-approval-distribution",
	"polkadot-availability-bitfield-distribution",
	"polkadot-availability-distribution",
	"polkadot-availability-recovery",
	"polkadot-collator-protocol",
	"polkadot-dispute-distribution",
	"polkadot-gossip-support",
	"polkadot-network-bridge",
	"polkadot-node-collation-generation",
	"polkadot-node-core-approval-voting",
	"polkadot-node-core-av-store",
	"polkadot-node-core-backing",
	"polkadot-node-core-bitfield-signing",
	"polkadot-node-core-candidate-validation",
	"polkadot-node-core-chain-api",
	"polkadot-node-core-chain-selection",
	"polkadot-node-core-dispute-coordinator",
	"polkadot-node-core-prospective-parachains",
	"polkadot-node-core-provisioner",
	"polkadot-node-core-pvf",
	"polkadot-node-core-pvf-checker",
	"polkadot-node-core-runtime-api",
	"polkadot-statement-distribution",
]

# Configure the native runtimes to use.
westend-native = [
	"bitvec",
	"frame-metadata-hash-extension",
	"westend-runtime",
	"westend-runtime-constants",
]
rococo-native = [
	"bitvec",
	"frame-metadata-hash-extension",
	"rococo-runtime",
	"rococo-runtime-constants",
]

runtime-benchmarks = [
	"frame-benchmarking-cli/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-babe/runtime-benchmarks",
	"pallet-staking/runtime-benchmarks",
	"polkadot-parachain-primitives/runtime-benchmarks",
	"polkadot-primitives/runtime-benchmarks",
	"polkadot-runtime-parachains/runtime-benchmarks",
	"polkadot-test-client/runtime-benchmarks",
	"rococo-runtime?/runtime-benchmarks",
	"sc-client-db/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"westend-runtime?/runtime-benchmarks",
	"xcm-fee-payment-runtime-api/runtime-benchmarks",
]
try-runtime = [
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"pallet-babe/try-runtime",
	"pallet-staking/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"polkadot-runtime-parachains/try-runtime",
	"rococo-runtime?/try-runtime",
	"sp-runtime/try-runtime",
	"westend-runtime?/try-runtime",
]
fast-runtime = ["rococo-runtime?/fast-runtime", "westend-runtime?/fast-runtime"]

malus = ["full-node"]
runtime-metrics = [
	"polkadot-runtime-parachains/runtime-metrics",
	"rococo-runtime?/runtime-metrics",
	"westend-runtime?/runtime-metrics",
]
