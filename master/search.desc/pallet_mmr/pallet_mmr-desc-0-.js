searchState.loadedDescShard("pallet_mmr", 0, "Merkle Mountain Range\nAn MMR ancestry proof for a prior mmr root.\nThis trait decoples dependencies on pallets needed for …\nBlock hash provider for a given block number.\nError committing changes.\nDefault implementation of BlockHashProvider using …\nMerkle Mountain Range operation error.\nA full leaf content stored in the offchain-db.\nError during proof generation.\nError getting the new root.\nThe provided best know block number is invalid.\nCannot find the requested leaf index\nError during translation of a block number into a leaf …\nA type that should end up in the leaf of MMR.\nA provider of the MMR’s leaf data.\nA type to describe leaf position in the MMR.\nLeaf not found in the storage.\nAn MMR proof data for a group of leaves.\nA type to describe node position in the MMR (node index).\nMMR nodes &amp; size -related utilities.\nNew MMR root notification hook.\nMmr Pallet not included in runtime\nThe most common use case for MMRs is to store historical …\nError while pushing new node.\nProof verification error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProof elements (hashes of siblings of inner nodes on the …\nProof elements (positions and hashes of siblings of inner …\nNumber of leaves in MMR, when the proof was generated.\nNumber of leaves in MMR, when the proof was generated.\nThe method to return leaf data that should be placed in …\nCalculate <code>LeafIndex</code> for the leaf that added <code>node_index</code> to …\nTranslate a <code>LeafIndex</code> to its <em>leaf</em> <code>NodeIndex</code>.\nThe indices of the leaves the proof is for.\nConsume given error <code>e</code> with <code>self</code> and generate a native log …\nConsume given error <code>e</code> with <code>self</code> and generate a native log …\nCreate new instance of MMR nodes utilities for given …\nBuild canonical offchain key for node <code>pos</code> in MMR.\nBuild offchain key from <code>parent_hash</code> of block that …\nReturn the number of leaves in the MMR.\nCalculate number of peaks in the MMR.\nFunction called by the pallet in case new MMR root has …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nNumber of leaves in the ancestor’s MMR.\nPeaks of the ancestor’s mmr\nStarting from any leaf index, get the sequence of …\nCalculate the total size of MMR (number of nodes).\nEncode the leaf either in its full or compact form.\nMerkle Mountain Range utilities.\nStateless ancestry proof verification.\nStateless MMR proof verification for batch of leaves.\nBenchmarking setup helper trait.\nBlock hash provider for a given block number.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nA hasher type for MMR.\nPrefix for elements stored in the Off-chain DB via …\n<code>Instance1</code> to be used for instantiable pallets defined with …\nData stored in the leaf nodes.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nHashes of the nodes in the MMR.\nCurrent size of the MMR (number of leaves).\nA hook to act on the new MMR root.\nThe <code>Pallet</code> struct, the main type that implements traits …\nLatest MMR Root hash.\nHelper flag used in the runtime benchmarks for the initial …\nWeights for this pallet.\nConvert a block number into a leaf index.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate an MMR proof for the given <code>block_numbers</code>. If …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn auto-generated getter for <code>NumberOfLeaves</code>.\nAn auto-generated getter for <code>Nodes</code>.\nReturn the on-chain MMR root hash.\nAuto-generated docs-only module listing all (public and …\nVerify MMR proof for given <code>leaves</code>.\nHashes of the nodes in the MMR.\nCurrent size of the MMR (number of leaves).\nLatest MMR Root hash.\nHelper flag used in the runtime benchmarks for the initial …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMMR nodes &amp; size -related utilities.\nConvert a block number into a leaf index.\nGet the first block with MMR.")