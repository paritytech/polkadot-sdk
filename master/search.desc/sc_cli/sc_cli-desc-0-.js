searchState.loadedDescShard("sc_cli", 0, "Substrate CLI library.\nApplication specific error chain sequence forwarder.\nKeep the data of all blocks.\nKeep only the data of finalized blocks.\nActual authority.\nWrapper type that is either a <code>Hash</code> or the number of a <code>Block</code>…\nCommon interface of a chain specification.\nA trait that allows converting an object to a Configuration\nOptional flag for specifying crypto algorithm\nKeep the data of the last number of finalized blocks.\nParameters for database\nSpecifies the pruning mode of the database.\nDefault configuration values used by Substrate\nContains the error value\nError type for the CLI.\nExecution strategies parameters.\nUses a fork-aware transaction pool.\nRegular full node.\nWrapper type of <code>String</code> that holds an unsigned integer of …\nParameters for block import.\nParameters of the keystore\nA builder that is used to initialize the global logger.\nParams to configure how a message should be passed into a …\nParameters used to create the mixnet configuration.\nParameters used to create the network configuration.\nOptional flag for specifying network scheme\nParameters used to create the <code>NodeKeyConfig</code>, which …\nOffchain worker related parameters.\nContains the success value\nOptional flag for specifying output type\nParameters used to config prometheus.\nParameters to define the pruning mode\nThe default concurrent connection limit.\nThe default max request size in MB.\nThe default max response size in MB.\nThe default max number of subscriptions per connection.\nThe default number of messages the RPC server is allowed …\nThe default port.\nResult type alias for the CLI.\nRole of the local node.\nRepresent a single RPC endpoint with its configuration.\nParameters of RPC.\nA Substrate CLI runtime that can be used to run a node or …\nParameters used to config runtime.\nRuntime version. This should not be thought of as classic …\nShared parameters used by all <code>CoreParams</code>.\nAbstraction over OS signals to handle the shutdown of the …\nUses a legacy, single-state transaction pool.\nSubstrate client CLI\nParameters used to config telemetry.\nParameters used to create the pool configuration.\nType of transaction pool to be used\nAdd a bootnode to the list.\nAlways accept connecting to private IPv4/IPv6 addresses.\nActivate or not the automatic announcing of blocks after …\nActivate or not the automatic announcing of blocks after …\nReturns the api version found for api with <code>id</code>.\nList of supported API “features” along with their …\nDefinitions of <code>ValueEnum</code> types.\nReturn spec as JSON.\nReturn StorageBuilder for this spec.\nA helper function that runs a future with tokio and stops …\nExecutable file author.\n<code>authoring_version</code> is the version of the authorship …\nGet the base path of the configuration (if any)\nGet the base path of the configuration (if any)\nSpecify custom base path.\nSpecify custom base path.\nBatch request configuration.\nGet the block pruning mode.\nGet the block pruning mode.\nGet the block pruning value from the parameters\nSpecify the blocks pruning mode.\nA list of bootnode addresses.\nSpecify a list of bootnodes.\nBuild a tokio runtime with all features.\nCheck if this version matches other version for calling …\nCapture the relevant signals to handle shutdown of the …\nSpecify the chain specification.\nGet the chain ID (string).\nGet the chain ID (string).\nGet the chain spec for the parameters provided\nType of the chain.\nReturns the client ID: <code>{impl_name}/v{impl_version}</code>\nReturns a cloned <code>Box&lt;dyn ChainSpec&gt;</code>.\nReturns code substitutes that should be used for the on …\nVarious subcommands that can be included in a …\nGet an immutable reference to the node Configuration\nReturns the mixnet configuration, or <code>None</code> if the mixnet is …\nGet a mutable reference to the node Configuration\nCopyright starting year (x-current year)\nCORS.\nCreate a Configuration object from the current object\nCreate a Configuration object from the current object\nOnly create a Configuration for the command provided in …\nCreate a runner for the command provided in argument. This …\nCreate a runner for the command provided in argument. The …\nGet the database backend variant.\nGet the database backend variant.\nDatabase backend\nSelect database backend to use.\nGet the database cache size.\nGet the database cache size.\nLimit the memory the database cache can use.\nLimit the memory the database cache can use.\nGet the database configuration object for the parameters …\nGet the database configuration object for the parameters …\nGet the DatabaseParams for this object\nGet the DatabaseParams for this object\n<code>Decode</code> while giving a “version hint”\nGet the default value for heap pages\nGet the default value for heap pages\nExecutable file description.\nShould the detailed log output be enabled.\nShould the detailed log output be enabled.\nShould the detailed log output be enabled.\nEnable detailed log output.\nSpecify the development chain.\nGet the development key seed from the current object\nGet the development key seed from the current object\nReturns <code>Ok(true)</code> if grandpa should be disabled\nReturns <code>Ok(true)</code> if grandpa should be disabled\nShould the log color output be disabled?\nShould the log color output be disabled?\nShould the log color output be disabled?\nDisable log color output.\nEnable peer discovery on local networks.\nA dummy signal that never returns.\nIs log reloading enabled?\nIs log reloading enabled?\nIs log reloading enabled\nEnable feature to dynamically update and reload the log …\nExecute offchain workers on every block.\nExecutable file name.\nThe execution strategy that should be used by all …\nRuntime execution strategy for constructing blocks.\nRuntime execution strategy for general block import …\nRuntime execution strategy for offchain workers.\nRuntime execution strategy when not syncing, importing or …\nRuntime execution strategy for importing blocks during …\nEXPERIMENTAL: Specify the JSON-RPC server interface and …\nReturns a reference to the defined chain spec extensions.\nReturns a mutable reference to the defined chain spec …\nReturns the state version to use for Extrinsics root.\nReturns <code>Ok(true)</code> if authoring should be forced\nReturns <code>Ok(true)</code> if authoring should be forced\nOptional network fork identifier. <code>None</code> by default.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHelper function used to parse the command line arguments. …\nHelper function used to parse the command line arguments. …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn the signals future.\nGenerate a valid random name for the node\nCheck if the given api with <code>api_id</code> is implemented and the …\nSpec id.\nImplementation name.\nName of the implementation of the spec. This is of little …\nImplementation version.\nVersion of the implementation of the specification.\nGet the ImportParams for this object\nGet the ImportParams for this object\nMaximum number of inbound full nodes peers.\nMaximum number of inbound light nodes peers.\nEnable offchain indexing API.\nInitialize the global logger\nInitialize substrate. This must be done only once per …\nInitialize substrate. This must be done only once per …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nJoin the IPFS network and serve transactions over bitswap …\nTrue for <code>Role::Authority</code>.\nReturns <code>true</code> if the node is for development or not\nReturns <code>true</code> if the node is for development or not\nSpecify the development chain.\nReturns whether the endpoint is globally exposed.\nWhether it’s an optional listening address i.e, it’s …\nRequire iterative Kademlia DHT queries to use disjoint …\nKademlia replication factor.\nGet the keystore configuration.\nGet the keystore configuration.\nGet the keystore configuration for the parameters\nGet the KeystoreParams for this object\nGet the KeystoreParams for this object\nSpecify custom keystore path.\nListen on this multiaddress.\nListen address.\nChain spec factory\nSets a custom logging filter (syntax: <code>&lt;target&gt;=&lt;level&gt;</code>).\nGet the filters for the logging.\nGet the filters for the logging.\nGet the filters for the logging\nMaximum number of blocks per request.\nMaximum buffer capacity per connection.\nMaximum number of connections.\nMaximum number of peers from which to ask for the same …\nMaximum inbound payload size in MB.\nMaximum outbound payload size in MB.\nGet maximum runtime instances\nGet maximum runtime instances\nThe size of the instances cache for each runtime [max: 32].\nMaximum number of subscriptions per connection.\nEnable the mixnet service.\nThe mixnet key-exchange secret to use in session 0.\nSpec name.\nnetwork address format\nNetwork backend used for P2P networking.\nGet the network configuration\nGet the network configuration\nFill the given <code>NetworkConfiguration</code> by looking at the cli …\nGet the NetworkParams for this object\nGet the NetworkParams for this object\nCreate a new <code>LoggerBuilder</code> which can be used to initialize …\nCreate a new runtime with the command provided in argument\nDisable mDNS discovery (default: true).\nAlways forbid connecting to private IPv4/IPv6 addresses.\nDo not expose a Prometheus exporter endpoint.\nDisable connecting to the Substrate telemetry server.\nGet the node key from the current object\nGet the node key from the current object\nCreate a <code>NodeKeyConfig</code> from the given <code>NodeKeyParams</code> in the …\nSecret key to use for p2p networking.\nFile from which to read the node’s secret key to use for …\nGet the NodeKeyParams for this object\nGet the NodeKeyParams for this object\nCrypto primitive to use for p2p networking.\nGet the name of the node.\nGet the name of the node.\nReturns an offchain worker config wrapped in <code>Ok(_)</code>\nReturns an offchain worker config wrapped in <code>Ok(_)</code>\nLoad spec to <code>Configuration</code> from <code>OffchainWorkerParams</code> and …\nGet a reference to <code>OffchainWorkerParams</code> for this object.\nGet a reference to <code>OffchainWorkerParams</code> for this object.\nNumber of outgoing connections we’re trying to maintain.\noutput format\nThe port Substrate should listen on for p2p connections.\nThe port Substrate should listen on for p2p connections.\nWrapper on top of <code>std::str::parse&lt;N&gt;</code> but with <code>Error</code> as a …\nParse the inner value as <code>BlockId</code>.\nParse Ss58AddressFormat\nPassword used by the keystore.\nFile that contains the password used by the keystore.\nUse interactive shell for entering the password used by …\nMaximum number of kilobytes of all transactions stored in …\nMaximum number of transactions in the transaction pool.\nThe type of transaction pool to be instantiated.\nSpecify p2p protocol TCP port.\nLog information about the node itself.\nGet the prometheus configuration (<code>None</code> if disabled)\nGet the prometheus configuration (<code>None</code> if disabled)\nCreates <code>PrometheusConfig</code>.\nExpose Prometheus exporter on all interfaces.\nThe port Substrate should listen on for prometheus …\nThe port Substrate should listen on for prometheus …\nSpecify Prometheus exporter TCP Port.\nAdditional loosely-typed properties of the chain.\nNetwork protocol id.\nGet the PruningParams for this object\nGet the PruningParams for this object\nPublic address that other nodes will use to connect to …\nRate limit per minute.\nWhether to trust proxy headers for rate limiting.\nWhitelisted IPs for rate limiting.\nhelper method to fetch password from <code>KeyParams</code> or read …\nSpecify a list of reserved node addresses.\nWhether to only synchronize the chain with reserved nodes.\nWhether to retry with a random port if the provided port …\nGets the role\nGets the role\nGet the RPC address.\nGet the RPC address.\nReturns the RPC endpoints.\nRPC server batch request configuration.\nRPC server batch request configuration.\nReturns the configuration for batch RPC requests.\nThe number of messages the RPC server is allowed to keep …\nThe number of messages the RPC server is allowed to keep …\nGet the RPC cors (<code>None</code> if disabled)\nGet the RPC cors (<code>None</code> if disabled)\nReturns the RPC CORS configuration.\nSpecify browser <em>origins</em> allowed to access the HTTP &amp; WS …\nDisable RPC batch requests\nListen to all RPC interfaces (default: local).\nThe port Substrate should listen on for JSON-RPC …\nThe port Substrate should listen on for JSON-RPC …\nLimit the max length per RPC batch request\nGet the maximum number of RPC server connections.\nGet the maximum number of RPC server connections.\nMaximum number of RPC server connections.\nGet maximum RPC request payload size.\nGet maximum RPC request payload size.\nSet the maximum RPC request payload size for both HTTP and …\nGet maximum RPC response payload size.\nGet maximum RPC response payload size.\nSet the maximum RPC response payload size for both HTTP …\nGet maximum number of subscriptions per connection.\nGet maximum number of subscriptions per connection.\nSet the maximum concurrent subscriptions per connection.\nThe number of messages the RPC server is allowed to keep …\nReturns the RPC method set to expose.\nReturns the RPC method set to expose.\nRPC methods to expose.\nRPC methods to expose.\nSpecify JSON-RPC server TCP port.\nRPC rate limit configuration.\nRPC rate limit configuration.\nRPC rate limiting (calls/minute) for each connection.\nRPC rate limit trust proxy headers.\nRPC rate limit trust proxy headers.\nTrust proxy headers for disable rate limiting.\nRPC rate limit whitelisted ip addresses.\nRPC rate limit whitelisted ip addresses.\nDisable RPC rate limiting for certain ip addresses.\nA helper function that runs a node with tokio and stops if …\nRun a future task until receive a signal.\nGet maximum different runtimes in cache\nGet maximum different runtimes in cache\nMaximum number of different runtimes that can be cached.\ncryptography scheme\nParse a secret string, returning a displayable error.\nSet the storage that should be used by this chain spec.\nGet the SharedParams for this object\nIdentifies the different Substrate runtimes. There’ll be …\nVersion of the runtime specification.\nGet the state pruning mode.\nGet the state pruning mode.\nGet the pruning value from the parameters\nSpecify the state pruning mode.\nReturns state version to use for update.\nSupport URL.\nBlockchain syncing mode.\nA helper function that runs a command with the …\nVersion of the system implementation used by this runtime. …\nTelemetry endpoints (if any)\nGet the telemetry endpoints (if any)\nGet the telemetry endpoints (if any)\nThe URL of the telemetry server to connect to.\nGet the TracingReceiver value from the current object\nGet the TracingReceiver value from the current object\nReceiver to process tracing messages.\nReceiver to process tracing messages.\nGet the tracing targets from the current object (if any)\nGet the tracing targets from the current object (if any)\nComma separated list of targets for tracing.\nSets a custom profiling filter.\nGet the transaction pool options\nGet the transaction pool options\nFill the given <code>PoolConfiguration</code> by looking at the cli …\nAll existing calls (dispatchables) are fully compatible …\nGet the trie cache maximum size.\nGet the trie cache maximum size.\nSpecify the trie cache maximum size.\nSpecify the state cache size.\nHelper function used to parse the command line arguments. …\nExecute the future task and returns it’s value if it …\nHow long a transaction is banned for.\nForces key generation if node-key-file file does not exist.\nListen to all RPC interfaces.\nGet the WASM execution method.\nGet the WASM execution method.\nGet the WASM execution method from the parameters\nMethod for executing Wasm runtime code.\nGet the path where WASM overrides live.\nGet the path where WASM overrides live.\nEnable overriding on-chain WASM with locally-stored WASM …\nSpecify the path where local WASM runtimes are stored.\nThe WASM instantiation method to use.\nForce enable/disable colors.\nAllows for calling $method with appropriate crypto impl.\nAdd a custom profiler.\nWhether detailed log output should be enabled.\nWether or not to disable log reloading.\nSet up the profiling.\nAll hosts allowed.\nAlways have offchain worker enabled.\nExpose every RPC method only when RPC is listening on …\nDetect whether there is an existing database. Use it, if …\nExecute with both native (where available) and WebAssembly …\nUses a compiled runtime.\nCORS setting\nThe crypto scheme to use.\nThe default <code>WasmtimeInstantiationStrategy</code>.\nThe default <code>WasmExecutionMethod</code>.\nDatabase backend\nUse ecdsa.\nUse ed25519.\nUse ed25519.\nHow to execute blocks\nDownload blocks without executing them. Download latest …\nDownload blocks without executing them. Download latest …\nFull sync. Download and verify all blocks.\nUses an interpreter which now is deprecated.\nOutput as json.\nUse libp2p for P2P networking.\nOnly hosts on the list are allowed.\nUse litep2p for P2P networking.\nOutput the tracing records using the log.\nExecute with native build (if available, WebAssembly …\nExecute with the native build if possible; if it fails, …\nNetwork backend type.\nNever enable the offchain worker.\nThe type of the node key.\nWhether off-chain workers are enabled.\nThe type of the output format.\nParityDb. https://github.com/paritytech/parity-db/\nParityDb. https://github.com/paritytech/parity-db/\nPool the instances to avoid initializing everything from …\nPool the instances to avoid initializing everything from …\nRecreate the instance from scratch on every instantiation. …\nRecreate the instance from scratch on every instantiation. …\nFacebooks RocksDB\nAvailable RPC methods.\nAllow only a safe subset of RPC methods.\nUse sr25519.\nSyncing mode.\nOutput as text.\nExpose every RPC method (even potentially unsafe ones).\nProve finality and download the latest state.\nOnly execute with the WebAssembly build.\nHow to execute Wasm runtime code.\nThe instantiation strategy to use in compiled mode.\nOnly enable the offchain worker when running as a …\nConverts the execution method and instantiation strategy …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns all the variants of this enum to be shown in the …\nThe <code>build-spec</code> command used to build a specification.\nThe <code>chain-info</code> subcommand used to output db meta columns …\nThe <code>check-block</code> command used to validate blocks.\nThe <code>export-blocks</code> command used to export blocks.\nThe <code>export-state</code> command used to export the state of a …\nGenerate a random account\nThe <code>generate</code> command\nCommon arguments accross all generate key commands, subkey …\nGenerate a random node key, write it to a file or stdout …\nThe <code>import-blocks</code> command used to import blocks.\nInsert a key to the keystore of a node.\nThe <code>insert</code> command\nGets a public key and a SS58 address from the provided …\nThe <code>inspect</code> command\nLoad a node key from a file or stdin and print the …\nThe <code>inspect-node-key</code> command\nKey utilities for the cli.\nThe <code>purge-chain</code> command used to remove the whole chain.\nThe <code>revert</code> command used revert the chain to a previous …\nThe <code>run</code> command used to run a node.\nThe <code>sign</code> command\nThe <code>vanity</code> command\nThe <code>verify</code> command\nShortcut for <code>--name Alice --validator</code>.\nUse binary output rather than JSON.\nTry importing blocks from binary format rather than JSON.\nShortcut for <code>--name Bob --validator</code>.\nShortcut for <code>--name Charlie --validator</code>.\nShortcut for <code>--name Dave --validator</code>.\nThe default number of 64KB pages to ever allocate for Wasm …\nThe default number of 64KB pages to ever allocate for Wasm …\nDisable adding the default bootnode to the specification. …\nShortcut for <code>--name Eve --validator</code>.\nExpect that <code>--uri</code> has the given public key/account-id. If …\nShortcut for <code>--name Ferdie --validator</code>.\nEnable authoring even when offline.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSpecify starting block number. Default is 1.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet the <code>Sr25519Keyring</code> matching one of the flag.\nBlock hash or number.\nBlock hash or number.\nInput file or stdin if unspecified.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe human-readable name for this node.\nThis argument is deprecated and has no effect for this …\nDisable GRANDPA.\nNumber of blocks to revert.\nShortcut for <code>--name One --validator</code>.\nOutput file name or stdout if unspecified.\nForce raw genesis storage output.\nRun the build-spec command\nRun the <code>chain-info</code> subcommand\nRun the check-block command\nRun the export-blocks command\nRun the <code>export-state</code> command\nRun the command\nRun the command\nRun the import-blocks command\nRun the command\nRun the command\nruns the command\nrun the key subcommands\nRun the purge command\nRun the revert command\nRun the command\nRun the command\nRun the command\nThe cryptography scheme that should be used to generate …\nRun a temporary node.\nSpecify last block number. Default is best block.\nShortcut for <code>--name Two --validator</code>.\nsubcommand utilities\nEnable validator mode.\nSkip interactive prompt by answering yes automatically.\nPublic key type for Runtime\nSeed type for Runtime\nformats seed as hex\ngenerate a pair from suri\nTry to parse given <code>public</code> as hex encoded public key and …\nTry to parse given <code>uri</code> and print relevant information.\nhelper method to fetch uri from <code>Option&lt;String&gt;</code> either as a …")