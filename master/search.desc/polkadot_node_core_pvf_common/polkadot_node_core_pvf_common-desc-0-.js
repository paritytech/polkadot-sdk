searchState.loadedDescShard("polkadot_node_core_pvf_common", 0, "Contains functionality related to PVFs that is shared by …\nCPU Time Used by The Whole Process\nStatus of security features on the current system.\nA handshake with information for the worker.\nReturns the total amount of CPU time used from the program …\nWhether we are able to call <code>clone</code> with all sandboxing …\nWhether the landlock features we use are fully available …\nWhether the seccomp features we use are fully available on …\nWhether we are able to unshare the user namespace and …\nUse this macro to declare a <code>fn main() {}</code> that will create …\nReturns the amount of CPU time used from the previous …\nReturns the amount of CPU time used from the previous …\nInterface to the Substrate Executor\nRead some data prefixed by its length from <code>r</code>. Sync version …\nWrite some data prefixed by its length into <code>w</code>. Sync …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet current CPU time used by a process\nWhether Secure Validator Mode is enabled. This mode …\nReturns the amount of CPU time used from the previous …\nGet current CPU time used by a process process\nFunctionality common to both prepare and execute workers.\nShared functions for getting the known worker files.\nThe response from the worker is received, but the worker …\nHost could not clear the worker cache after a job.\nHost could not create a hard link to the artifact path.\nCould not create a pipe between the worker and a child …\nCode blob failed to decompress\nCould not find or open compiled artifact file.\nThe temporary file for the artifact could not be created …\nContains the error value\nContains the error value\nContains the error value\nError type.\nSome communication error occurred with the host.\nSome internal error occurred.\nAn IO error occurred. This state is reported by either the …\nThe preparation job process died, due to OOM, a seccomp …\nAn unexpected error has occurred in the preparation job.\nSome error occurred when interfacing with the kernel.\nSome error occurred when interfacing with the kernel.\nSome non-deterministic preparation error occurred.\nContains the success value\nContains the success value\nContains the success value\nMemory limit reached\nResult of prechecking PVF performed by the validation …\nCompilation failed for the given PVF.\nAn error that occurred during the prepare part of the PVF …\nResult of PVF preparation propagated all the way back to …\nResult of PVF preparation from a worker, with checksum of …\nDuring the prevalidation stage of preparation an issue was …\nThe response from the worker is received, but the file …\nInstantiation of the WASM module instance failed.\nFailed to prepare the PVF due to the time limit.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether this is a deterministic error, i.e. one …\nContains the error value\nThe payload of the one-time handshake that is done when a …\nSome internal error occurred.\nThe candidate is invalid.\nThe job process has died. We must kill the worker just in …\nAn unexpected error occurred in the execution job process. …\nAn unexpected error occurred in the job process, e.g. …\nThe successful response from a job on the execution worker.\nThe result of a job on the execution worker.\nThe job timed out.\nSome error occurred when interfacing with the kernel.\nContains the success value\nPoV decompression failed\nA possibly transient runtime instantiation error happened …\nSince the job can return any exit status it wants, we have …\nAn error occurred in the worker process.\nThe response from the execution worker.\nThe amount of CPU time taken by the job.\nThe executor parameters.\nCreates an invalid response from a context <code>ctx</code> and a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe response from the execute job process.\nThe uncompressed PoV size.\nCreates a may retry response from a context <code>ctx</code> and a …\nThe result of parachain validation.\nConstructs the runtime for the given PVF, given the …\nExecutes the given PVF in the form of a compiled artifact …\nTakes the default config and overwrites any settings with …\nRuns preparation on the given runtime blob. If successful, …\nRuns the prevalidation on the given code. Returns a …\nCompilation triggered by a candidate validation request.\nStatistics of collected memory metrics.\nHelper struct to contain all the memory stats, including …\nA prechecking job.\nThe kind of prepare job.\nPreparation statistics, including the CPU time and memory …\nResult of PVF preparation if successful.\nResult from prepare worker if successful.\nTotal allocated memory, in bytes.\nChecksum of the compiled PVF.\nThe CPU time that elapsed for the preparation job.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ru_maxrss</code> from <code>getrusage</code>. <code>None</code> if an error occurred.\nThe observed memory statistics for the preparation job.\nMemory stats from <code>tikv_jemalloc_ctl</code>, polling-based and not …\nThe decompressed Wasm code length observed during the …\nCanonical path to the compiled artifact.\nPeak allocation in bytes measured by tracking allocator\nTotal resident memory, in bytes.\nSize in bytes\nStats of the current preparation run.\nStats of the current preparation run.\nA struct that carries the exhaustive set of data to …\nReturns validation code hash\nReturns executor params\nReturns the argument unchanged.\nReturns an instance of the PVF out of the given PVF code …\nCreates a structure for tests.\nCreates a structure for tests.\nCreates a structure for tests.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns PVF code blob\nReturns preparation kind.\nReturns preparation timeout.\nSome allowed overhead that we account for in the “CPU …\nA wrapper around a file descriptor used to encapsulate and …\nReturns the raw file descriptor associated with this <code>PipeFd</code>\nLoop that runs in the CPU time monitor thread on prepare …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nCreates a new <code>PipeFd</code> instance from a raw file descriptor.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalculate the total CPU time from the given <code>usage</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet a job response.\nInitializes the worker process, then runs the given event …\nFunctionality for securing workers.\nAttempt to convert an opaque panic payload to a string.\nFunctionality related to threads spawned by the workers.\nFunctionality for securing workers by unsharing some …\nRequire env vars to have been removed when spawning the …\nFunctionality for securing the job processes spawned by …\nThe landlock docs say it best:\nFunctionality for sandboxing workers by restricting their …\nContains the error value\nContains the success value\nRuns a check for unshare-and-change-root and returns an …\nTry to enable for the given kind of worker.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nRuns a check for clone(2) with all sandboxing flags and …\nTry to run clone(2) on the current worker.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nContains the error value\nAll requested restrictions are enforced.\nLandlock ABI version. We use ABI V1 because:\nThe running system doesn’t support Landlock or a subset …\nContains the success value\nSome requested restrictions are enforced, following a …\nEnforcement status of a ruleset.\nRuns a check for landlock in its own thread, and returns …\nTry to enable landlock for the given kind of worker.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nRuns a check for seccomp in its own thread, and returns an …\nTry to enable seccomp for the given kind of worker.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nHelper type.\nContains the outcome of waiting on threads, or <code>Pending</code> if …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGets a condvar initialized to <code>Pending</code>.\nCalls <code>U::from(self)</code>.\nRuns a worker thread. Will run the requested function, and …\nRuns a worker thread with the given stack size. See …\nBlock the thread while it waits on the condvar.\nBlock the thread while it waits on the condvar or on a …")