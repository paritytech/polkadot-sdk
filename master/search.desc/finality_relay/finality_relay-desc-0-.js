searchState.loadedDescShard("finality_relay", 0, "This crate has single entrypoint to run synchronization …\nRelay all headers.\nA reader that can extract the consensus log from the …\nBase finality pipeline.\nFinality proof type.\nSource finality proofs buffer.\nSource finality proofs stream that may be restarted.\nStream of new finality proofs. The stream is allowed to …\nFinality proof synchronization loop parameters.\nFinality proofs synchronization pipeline.\nRelay only free (including mandatory) headers.\nSynced headers are identified by this hash.\nType of header that we’re syncing.\nType of headers that we relay.\nRelay only mandatory headers.\nSynced headers are identified by this number.\nName of the finality proofs source.\nSource client used in finality synchronization loop.\nSource client used in finality related loops.\nHeader that we’re receiving from source node.\nHeaders sync metrics.\nName of the finality proofs target.\nTarget client used in finality synchronization loop.\nTransaction tracker to track submitted transactions.\nGet best finalized block number.\nGet best finalized source block number.\nSubscribe to new finality proofs.\nGet free source headers submission interval, if it is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns hash of header.\nGet canonical header and its finality proof by number.\nIf true, only mandatory headers are relayed.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this header needs to be submitted to …\nReturn prefix that will be used by default to expose …\nCreate and register headers loop metrics.\nReturns number of header.\nPrune all finality proofs that target header numbers older …\nNumber of finality proofs to keep in internal buffer …\nRun finality proofs synchronization loop.\nTimeout before we treat our transactions as lost and …\nSubmit header finality proof.\nInterval at which we check updates on both clients. …\nUpdate best block number at source.\nUpdate best block number at target.\nUpdate using-same-fork flag.")