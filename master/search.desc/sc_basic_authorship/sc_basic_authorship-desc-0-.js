searchState.loadedDescShard("sc_basic_authorship", 0, "Basic implementation of block-authoring logic.\nDefault block size limit in bytes used by <code>Proposer</code>.\nArguments for <code>Proposer::propose_block</code>.\nThe proposer logic.\n<code>Proposer</code> factory.\nOptional size limit for the produced block.\nDisable the proof inclusion when estimating the block size.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nTrie nodes that should not be recorded.\nThe inherent data to pass to the block production.\nThe inherent digests to include in the produced block.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMax duration for building the block.\nCreate a new proposer factory.\nPropose a new block.\nSet the default block size limit in bytes.\nSet soft deadline percentage.\nCreate a new proposer factory with proof recording enabled.")