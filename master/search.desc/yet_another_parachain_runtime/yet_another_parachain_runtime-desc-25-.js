searchState.loadedDescShard("yet_another_parachain_runtime", 25, "A <code>TryMorph</code> implementation to reduce a scalar by a …\nPerforms a left shift that returns <code>None</code> on shifts larger …\nPerforms a right shift that returns <code>None</code> on shifts larger …\nPerforms subtraction that returns <code>None</code> instead of wrapping …\nTrait for things that can be clear (have no bits set). For …\nGuard type for clearing all pushed constraints from a …\n…\nSome sort of cost taken from account temporarily in order …\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for signed integers.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for unsigned integers.\nConstant <code>Price</code> regardless of the given <code>Footprint</code>.\nA trait for querying whether a type can be said to “…\nA trait for querying bound for the length of an …\nA trait for querying whether a type can be said to “…\nInfallible conversion trait. Generic over both source and …\nReversing infallible conversion trait. Generic over both …\nA structure that performs standard conversion using the …\nAdapter which turns a Get implementation into a Convert …\nThe message data is bad (e.g. decoding returns an error).\nThe version of a crate.\nAbstraction over a fungible assets system.\nThe currency that this schedule applies to.\nThe currency that this schedule applies to.\n<code>?</code> formatting.\nDerive macro generating an impl of the trait <code>Debug</code>.\nOne of the proof nodes could not be decoded.\nCorrupt Trie item.\nA trait to handle errors and options when you are really …\nDefensively calculates the maximum of two values.\nDefensively calculates the minimum of two values.\nSubset of methods similar to <code>Defensive</code> that can only work …\nSubset of methods similar to <code>Defensive</code> that can only work …\nA variant of <code>Defensive</code> with the same rationale, for the …\nConstruct an object by defensively truncating an input if …\nDefensively truncate a value and convert it into its …\nPlaceholder marking functionality disabled. Useful for …\nTrait used to check whether a given validator is currently …\nShortcut to reference the <code>Info</code> type of a <code>Dispatchable</code>.\nShortcut to reference the <code>RuntimeOrigin</code> type of a …\nSingle-function utility trait with a blanket impl over …\nA lazy call (module function and argument values) that can …\nThe statement being verified contains multiple key-value …\n“OR gate” implementation of <code>EnsureOrigin</code>, <code>Success</code> type …\n“OR gate” implementation of <code>EnsureOrigin</code> allowing for …\nCan enqueue messages for multiple origins.\nAdapter type to transform an <code>EnqueueMessage</code> with an origin …\nPerforms addition that returns <code>ArithmeticError</code> instead of …\nPerforms self addition that returns <code>ArithmeticError</code> …\nPerforms division that returns <code>ArithmeticError</code> instead of …\nPerforms self division that returns <code>ArithmeticError</code> …\nExtends <code>FixedPointNumber</code> with the Ensure family functions.\nSimilar to <code>TryFrom</code> but returning an <code>ArithmeticError</code> error.\nSimilar to <code>TryInto</code> but returning an <code>ArithmeticError</code> error.\nPerforms multiplication that returns <code>ArithmeticError</code> …\nPerforms self multiplication that returns <code>ArithmeticError</code> …\n“OR gate” implementation of <code>EnsureOrigin</code> allowing for …\nMeta trait that supports all immutable arithmetic <code>Ensure*</code> …\nMeta trait that supports all assigned arithmetic <code>Ensure*</code> …\nSome sort of check on the origin is performed by this …\n<code>EnsureOrigin</code> implementation that checks that an origin has …\nSome sort of check on the origin is performed by this …\nPerforms subtraction that returns <code>ArithmeticError</code> instead …\nPerforms self subtraction that returns <code>ArithmeticError</code> …\nAn <code>Iterator</code> over tasks of this type used as the return …\nImplementation of <code>PrivilegeCmp</code> that only checks for equal …\nAn implementation of <code>Contains</code> which contains only equal …\nContains the error value\nContains the error value\nThe error type that gets returned when a collection can’…\nThe error type that will be returned by the functions.\nSomething that can estimate the fee of a (frame-based) …\nSomething that can estimate at which block scheduling of …\nSomething that can estimate at which block the next …\nA <code>Contains</code> implementation that contains every value.\nA <code>Contains</code> implementation that contains everything except …\nSomething that can execute a given block.\nErrors that can happen when attempting to execute an …\nSimple boolean for whether an account needs to be kept in …\nA type that can handle weight refunds and incorporate …\nThe proof contains at least one extraneous hash reference …\nThe proof contains at least one extraneous node.\nThe proof contains at least one extraneous value which …\nSomething that acts like an <code>Extrinsic</code>.\nType for extrinsics.\nAn extrinsic on which we can get access to call.\nSomething that acts like an <code>Extrinsic</code>.\nImplementor is an <code>Extrinsic</code> and provides metadata about …\nDispatchable impl containing an arbitrary value which …\nTrait to add a constraint onto the filter.\nGuard type for pushing a constraint to a <code>FilterStack</code> and …\nA trait for finding the author of a block header based on …\nThe resource footprint of a bunch of blobs. We assume only …\nFunds are free, as corresponding to <code>free</code> item in Balances.\nA <code>ContainsPair</code> implementation that has a <code>Contains</code> …\nConverter <code>struct</code> to use a <code>ContainsPair</code> implementation for …\nA trait to define the build function of a genesis config, …\nA trait for querying a single value from a type.\nRetrieve the backing from an object’s ref.\nGets the function index of the Call.\nGets the metadata for the Call - function name and pallet …\nGets the function name of the Call.\nImplement Get by returning Default for any type that …\nA marker trait for something that knows the type of the …\nA marker trait for something that knows the type of the …\nProvides information about a pallet’s storage versions.\nThe hasher used in the runtime.\nA simple, generic one-parameter event notifier/handler.\nHandles incoming messages for a single origin.\nAbstraction around hashing\nHeader hash type\nBlock hash type.\nThe hash type.\nSuper trait with all the attributes for a hashing output.\nHashing algorithm\nExtract the hashing type for a block.\nSomething which fulfills the abstract idea of a Substrate …\nHeader type.\nThe pallet hooks trait. This is merely an umbrella trait …\nUnique identifier of this signed extension.\nUnique identifier of this signed extension.\nUnique numerical identifier for an instance.\nFull identification of <code>ValidatorId</code>.\nA type for converting <code>ValidatorId</code> to <code>Identification</code>.\nThe full identification of a key owner and the stash …\nSome type that is able to be collapsed into an account ID. …\nA structure that performs identity conversion.\nA lookup implementation returning the input value.\nA trait for a not-quite Linear Type that tracks an …\nInterface of implications in the transaction extension …\nThe implication in a transaction.\nAny additional data which was known at the time of …\nThis type is generated by the <code>pallet</code> macro.\nTrie item not found in the database,\nThe proof is missing trie nodes required to verify.\nA trait representing an incrementable type.\nThe info type.\nAn opaque set of information attached to the transaction. …\nInterface for types capable of constructing an inherent …\nTrait for type that can handle the initialization of …\nThe wrapped whose drop function is ignored.\nA <code>Contains</code> implementation which contains all members of …\nA inspect interface for a currency whose accounts can have …\nAn instance of a pallet in the storage.\nSimple trait for providing a filter over a reference to …\nThe available weight was insufficient to execute the …\nA trait implementing integer square root.\nSee <code>Hooks::integrity_test</code>.\nThe proof contains an invalid child reference that exceeds …\nHash is not value.\nAttempted to create a trie with a state root not in the DB.\nTrivial utility for implementing <code>Contains</code>/<code>OrderedMembership</code>…\nA trait to check if an extrinsic is an inherent.\nDetermine if a <code>MemberId</code> is a valid member.\nSomething that can be checked to be a of sub type <code>T</code>.\nTrait to be used when types are exactly same.\nKeccak-256 Hash implementation.\nOperation must not result in the account going out of …\nThe key type expected.\nSomething which can compute and check proofs of a …\nTypes bound to this opaque keys that provide the key type …\nTrait to be used by block producing consensus engine …\nA lazy value.\nAnything that can have a <code>::len()</code> method.\nA storage price that increases linearly with the number of …\nAn identifier for a lock. Used for disambiguating …\nA currency whose accounts can have liquidity restrictions.\nTrait to handle NFT locking mechanism to ensure …\nMeans of changing one type into another in a manner …\nAn error that indicates that a lookup failed.\nThe maximum encoded size for the implementing type.\nThe maximum length of preimage we can store.\nA derivative <code>EnsureOrigin</code> implementation. It mutates the …\nThe maximum number of locks a user should have on their …\nThe maximal length any enqueued message may have.\nThe maximal length any enqueued message may have.\nThe maximal length any enqueued message may have.\nMaximum size of a preimage.\nAn extension of the <code>Consideration</code> trait that allows for …\nFallible conversion trait returning an Option. Generic …\nReversing fallible conversion trait returning an Option. …\nA type that implements Display when in std environment.\nDefinition for a bi-directional, fallible conversion …\nA type that implements FromStr when in std environment.\nA type that implements Hash when in std environment.\nA type that implements Serialize when in std environment …\nA type that implements Serialize, DeserializeOwned and …\nA type that can be used in runtime structures.\nThe quantity used to denote time; usually just a …\nThe quantity used to denote time; usually just a …\nThe quantity used to denote time; usually just a …\nExtensible conversion trait. Generic over only source …\nImplementation of <code>Morph</code> which converts between types using …\nA <code>TryMorph</code> implementation to enforce an upper limit for a …\nA negative imbalance (funds have been destroyed but none …\nThe opaque token type for an imbalance. This is returned …\n<code>EnsureOrigin</code> implementation that always fails.\nWrap a type so that is <code>Drop</code> impl is never called.\nNoOp polling is required if pallet-referenda functionality …\nSpecial marker struct used when <code>storage_version</code> is not …\nThe <code>NodeBlock</code> type.\nNo item.\nNone of them.\nRun no checks.\nServices queues by doing nothing.\nThe call could not be found in the runtime.\nThe referenced message was not found.\nA <code>Contains</code> implementation that contains no value.\nHeader number.\nExtract the number type for a block.\nOff-chain computation trait.\nContains the success value\nContains the success value\nSee <code>Hooks::on_finalize</code>.\nA trait that will be called at genesis.\nSee <code>Hooks::on_idle</code>.\nSee <code>Hooks::on_initialize</code>.\nThe account with the given id was reaped.\nHandler for when a new account has been created.\nPeriodically executes logic. Is not guaranteed to run …\nSee <code>Hooks::on_runtime_upgrade</code>.\nA trait which is called when the timestamp is set in the …\nHandler for when some currency “account” decreased in …\nDefines a multiplicative identity element for <code>Self</code>.\nA session handler for specific key type.\nRun only pallets who’s name matches the given list.\nOpaque data type that may be destructured into a series of …\nThe oppositely imbalanced type. They come in pairs.\nThe origin type of the transaction.\nThe transport from where a message originates.\nMethods available on <code>frame_system::Config::RuntimeOrigin</code>.\nAn item of the opposite type to the <code>Self</code> on which the …\nAn unspecified error.\nThe type into which <code>A</code> is mutated.\nThe type into which <code>A</code> is mutated.\nThe output type of the product of <code>self</code> and <code>Other</code>.\nThe hash type produced.\nMessage processing was not attempted because it was not …\nAddresses a specific overweight message.\nUnique module prefix. E.g. “InstanceNMyModule” or “…\nTrait indicating that the implementing type is going to be …\nProvides information about the pallet itself and its setup …\nProvides information about the pallet itself and its setup …\nInformation regarding an instance of a pallet.\nProvide information about a bunch of pallets.\nThe caller origin, overarching type of all pallets origins.\nSimilar to <code>StorageInfoTrait</code>, a trait to give partial …\nZero-sized type used to mark things that “act like” …\nA positive imbalance (funds have been created but none …\nThe opaque token type for an imbalance. This is returned …\nShortcut to reference the <code>PostInfo</code> type of a <code>Dispatchable</code>.\nAdditional information that is returned by <code>dispatch</code>. Can …\nProvides a callback to execute logic after the all …\nProvides a callback to execute logic before the all …\nThe <code>Pre</code> of the extension.\nThe type that encodes information that can be passed from …\nThe type that encodes information that can be passed from …\nRun the <code>pre_upgrade</code> and <code>post_upgrade</code> checks.\nProvides a callback to execute logic before the all …\nA interface for looking up preimages from their hash on …\nA interface for managing preimages to hashes on chain.\nTrait for things which can be printed from the runtime.\nSomething that can compare privileges of two origins.\nCan process messages from a specific origin.\nErrors that can happen when attempting to process a …\nThe Proof type we will use to determine the number of …\nThe proof of membership itself.\nThe proof type.\nThis trait is one strategy that can be used to benchmark a …\nAn interface for creating, interacting with, and creating …\nA interface for looking up preimages from their hash on …\nThe resource footprint of a queue.\nProvides information on queue footprint.\nThe queue is paused and no message can be executed from it.\nProvides information on paused queues.\nA trait that is able to provide randomness.\nRanked membership data structure.\nHandler that can deal with the swap of two members.\nAnother call is currently ongoing and prevents this call …\nMutator which reduces a scalar by a particular amount.\nA type that can handle weight refunds.\nMorpher to disregard the source value and replace with …\nMorpher to disregard the source value and replace with the …\nA currency where funds can be reserved from the user.\nAn identifier for a reserve. Used for disambiguating …\nFunds are reserved, as corresponding to <code>reserved</code> item in …\nThe resultant type.\nTrait for reporting additional validator reward points\nThe root hash computed from the proof is incorrect.\nRun a fixed number of them in a round robin manner.\nThe <code>RuntimeBlock</code> type.\nEvery function call from your runtime has an origin, which …\nThe origin type of the runtime, (i.e. …\nPrefix given to a storage to isolate from other storages …\nThe storage key postfix that is used to store the …\nCan put the runtime into a safe mode.\nThe error type for <code>SafeMode</code>.\nA trait to notify when the runtime enters or exits safe …\nAn item of the same type as the <code>Self</code> on which the return …\nReturn type used when we need to return one of two items, …\nConvenience type to work around the highly unergonomic …\nSaturating arithmetic operations, returning maximum or …\nMultiply and divide by a number that isn’t necessarily …\nCan service queues and execute overweight messages.\nThe signature type of the extrinsic.\nThe type of the address that signed the extrinsic.\nThe additional data that is specific to the signed …\nSomething that acts like a <code>SignaturePayload</code> of an <code>Extrinsic</code>…\nThe payload we carry for signed extrinsics.\nMeans by which a transaction may be extended. This type …\nEither a positive or a negative imbalance.\nInterface for types capable of constructing a signed …\nType of the signer.\nA meta trait for all bit ops.\nProof used by <code>SixteenPatriciaMerkleTreeProver</code> for …\nImplements <code>VerifyExistenceProof</code> using a 16-patricia merkle …\nA trait for a set which can enumerate its members in order.\nType to lookup from.\nType to lookup from.\nThe type used to archive the stack.\nThe message could not be processed for reaching the stack …\nMeans of changing one type into another in a manner …\nMetadata about storage from the runtime.\nA trait to give information about storage.\nAn instance of a storage in a pallet.\nA shim for placing around a storage item in order to use …\nThe storage version of a pallet.\nA interface for managing preimages to hashes on chain.\nAn abstraction of a value stored within storage, but …\nA return type.\nA return type.\nSealed trait that marks a type with a suppressed Drop …\nImplementation of <code>Morph</code> to retrieve just the first element …\nType to lookup into.\nType to lookup into.\nA general-purpose trait which defines a type of service …\nA <code>Contains</code> implementation that contains all members of …\nA non-const <code>Get</code> implementation parameterised by a <code>Currency</code> …\nStorage key with read/write tracking information.\nInput that adds infinite number of zero after wrapped …\nMeans by which a transaction may be extended. This type …\nInformation about a <code>TransactionExtension</code> for the runtime …\nTransaction extensions attached to this <code>Extrinsic</code>.\nCan pause specific transactions from being processed.\nThe error type for <code>TransactionPause</code>.\nTransform the origin of an <code>EnqueueMessage</code> via <code>C::convert</code>.\nA runtime friendly error type for tries.\nTry and collect into a collection <code>C</code>.\nFallible conversion trait which returns the argument in …\nReversing fallible conversion trait which returns the …\nA structure that performs standard conversion using the …\nDecode the entire data under the given storage type.\nA value could not be decoded.\nA type for which some values make sense to be able to drop …\nA derivative <code>EnsureOrigin</code> implementation. It mutates the …\nExtensible conversion trait. Generic over only source …\nImplementation of <code>TryMorph</code> which attempts to convert …\nExecute some checks to ensure the internal state of a …\nRun the <code>try_state</code> checks.\nWhich state tests to execute.\nThe base implication in a transaction.\nThe type which is returned.\nA trait for querying a single value from a type defined in …\nThis trait is intended for use within <code>VersionedMigration</code> …\nType that can be dispatched with an origin but without …\nJust like <code>From</code> except that if the source value is too big …\nJust like <code>Into</code> except that if the source value is too big …\nTrait to deal with unix time.\nUnknown error.\nUnknown error.\nCall cannot be paused.\nThe message format is unsupported (e.g. old XCM version).\nSelect which checks should be run when trying a runtime …\nGet the number of variants.\nThe format versions of the <code>Extrinsic</code>.\nThe <code>Val</code> of the extension.\nThe type that encodes information that can be passed from …\nShortcut for the result value of the <code>validate</code> function.\nProvide validation for unsigned extrinsics.\nType for representing validator id in a session.\nA type for converting <code>AccountId</code> to <code>ValidatorId</code>.\nImplementors of this trait provide information about …\nA trait for online node inspection in a session.\n<code>ValidatorSet</code> combined with an identification.\nA value was found in the trie with a nibble key that was …\nThe proof indicates that an expected value was not found …\nTrait to get the number of variants in any enum.\nAdapter for <code>Get&lt;u32&gt;</code> to access <code>VARIANT_COUNT</code> from …\nMeans of signature verification.\nSomething that can verify the existence of some data in a …\nA trait for verifying the seal of a header and returning …\nA vested transfer over a currency. This allows a …\nA vesting schedule over a currency. This allows a …\nAllows a pallet to specify storage keys to whitelist …\nReasons for moving funds out of an account.\nA wrapper for any type <code>T</code> which implement encode/decode in …\nA wrapper for any type <code>T</code> which implement encode/decode in …\nThe queue wants to give up its current processing slot.\nDefines an additive identity element for <code>Self</code>.\nAdd an item that would satisfy <code>contains</code>. It does not make …\nAdd a filter to the origin.\nAdd a storage read to this key.\nAdds a vesting schedule to a given account.\nAdd a storage write to this key.\nConstruct any additional data that should be in the signed …\nExecutes all necessary logic needed prior to dispatch and …\nReturns the approval ratio (positive to total votes) for …\nThe number of members of the group that back some motion.\n<code>Some</code> if the referendum <code>index</code> can be voted on, along with …\nExtract the signer from it if a system <code>Signed</code> origin, <code>None</code> …\nExtract a reference of the inner value of the System …\nExtract a reference to the system-level <code>RawOrigin</code> if it is …\nAssimilate the storage for this module into pre-existing …\nThe authorize function.\nReturn the average length of a session.\nReturn the average length of a session.\nReturns the number of positive votes for the tally.\nAmount of funds locked for <code>who</code> associated with <code>id</code>.\nThe base implication, that is implication not part of any …\nSomething that should happen before runtime migrations are …\nConvert an otherwise unbounded or large value into a type …\nThe build function puts initial <code>GenesisConfig</code> keys/values …\nThe build function is called within an externalities …\nBuild the storage using <code>build</code> inside default storage.\nReduce the total issuance by <code>amount</code> and return the …\nConsume a ticket for some <code>old</code> footprint attributable to <code>who</code>…\nGet the call of the extrinsic.\nGet a reference to the caller (<code>CallerTrait</code> impl).\nChecks if <code>add_vesting_schedule</code> would work against <code>who</code>.\nWhether this call can be paused.\nSame result as <code>reserve(who, value)</code> (but without the …\nSame result as <code>slash(who, value)</code> (but without the …\nA number of members <code>_incoming</code> just joined the set and …\nCheck self, given an instance of Context.\nCheck self.\nPerform the equality check.\nCheck a proof of membership on-chain. Return <code>Some</code> iff the …\nAdds two numbers, checking for overflow. If overflow …\nDivides two numbers, checking for underflow, overflow and …\nMultiplies two numbers, checking for underflow or …\nRaises a value to the power of exp, returning <code>None</code> if an …\nChecked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …\nChecked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …\nSubtracts two numbers, checking for underflow. If …\nProvides a vec of values that <code>T</code> may take.\nReturn the value of Self that is clear.\nCompare the <code>left</code> to the <code>right</code> origin.\nReturn <code>true</code> if this “contains” the given value <code>t</code>.\nReturn <code>true</code> if this “contains” the pair-value <code>(a, b)</code>.\nReturn <code>true</code> if this “contains” the given value <code>t</code>.\nMake conversion.\nAttempt to convert reference of <code>A</code> into value of <code>B</code>, …\nMake conversion back.\nAttempt to convert reference of <code>B</code> into value of <code>A</code>, …\nGet the number of items in the set.\nThe number of pallets’ information that this type …\nThe number of blobs.\nConvert the given pallet <code>P</code> into its containing crate …\nVersion of the crate containing the pallet.\nVersion of the crate containing the pallet.\nCreate an ongoing majority-carries poll of given class …\nCreate a proof that can be used to verify a key and its …\nAn account was created.\nReturns the current block number.\nSplit the block into header and list of extrinsics.\nTake <code>self</code> and return the underlying inner value.\nDoes not alter the inner value at all, but it will log …\nExactly the same as <code>map</code>, but it prints the appropriate …\nExactly the same as <code>map</code>, but it prints the appropriate …\nDefensively map the error into another return type, but …\nDefensively map and unpack the value to something else (<code>U</code>…\nPotentially map and unpack the value to something else (<code>U</code>…\nReturns the maximum and defensively asserts that <code>other</code> is …\nReturns the minimum and defensively checks that <code>self</code> is …\nDefensively transform this result into an option, …\nDefensively transform this option to a result, mapping <code>None</code>…\nDefensively transform this option to a result, mapping <code>None</code>…\nSame as <code>Defensive::defensive</code>, but it takes a proof as …\nIncrease <code>self</code> by <code>other</code> defensively.\nReturn <code>self</code> plus <code>other</code> defensively.\nDecrement <code>self</code> by one defensively.\nIncrement <code>self</code> by one defensively.\nReturn the product of <code>self</code> and <code>other</code> defensively.\nReduce <code>self</code> by <code>other</code> defensively.\nReturn <code>self</code> minus <code>other</code> defensively.\nReturns the maximum and defensively asserts that <code>other</code> is …\nReturns the minimum and defensively checks that <code>self</code> is …\nUse <code>TryFrom</code> first and defensively fall back to truncating …\nDefensively truncate a value and convert it into its …\nExactly the same as <code>unwrap_or</code>, but it does the defensive …\nExactly the same as <code>unwrap_or_default</code>, but it does the …\nExactly the same as <code>unwrap_or_else</code>, but it does the …\nDemote a member to the next lower rank; demoting beyond …\nAdds up to <code>value</code> to the free balance of <code>who</code>. If <code>who</code> doesn…\nMints <code>value</code> to the free balance of <code>who</code>.\nThe deposit amount of a native currency required for …\nReturns a reference to the digest.\nGet a mutable reference to the digest.\nReturns all disabled validators\nActually dispatch this call and return the result of it.\nDispatch this call but do not check the filter in origin.\nDispatch a transaction with the given base origin and call.\n@return the integer division of <code>self</code> and <code>other</code>.\nConsume a ticket for some <code>old</code> footprint attributable to <code>who</code>…\nNo longer request that the data required for decoding the …\nDrop an instance cleanly. Only works if its <code>self.value()</code> …\nDrop <code>Self</code> if and only if it is equal to zero. Return <code>Err</code> …\nThe total count of group members.\nCreates an encoded block from the given <code>header</code> and …\nReturns the encoded data.\nReturns the length of the encoded <code>T</code>.\nEnd the given ongoing poll and return the result.\nEnqueue a single <code>message</code> from a specific <code>origin</code>.\nEnqueue multiple <code>messages</code> from a specific <code>origin</code>.\nReturns <code>Ok</code> iff the account is able to make a withdrawal of …\nPerform the origin check.\nRaises a value to the power of exp, returning …\nEnsure the reserved balance is equal to <code>value</code>.\nEnsure that creating a ticket for a given account and …\nEnter safe mode for <code>duration</code> blocks.\nCalled when the runtime enters safe mode.\nEstimate the fee of this call.\nReturn an estimate of the current session progress.\nReturn the block number at which the next new session is …\nReturn the block number at which the next session rotation …\nExecute the given <code>block</code>.\nExit safe mode immediately.\nCalled when the runtime exits safe mode.\nThe explicit implication in transaction extensions.\nExtend safe mode for <code>duration</code> blocks.\nChanges a balance lock (selected by <code>id</code>) so that it becomes …\nMutate <code>self</code> by extracting a new instance with at most …\nReturns a reference to the list of extrinsics.\nReturns a reference to the extrinsics root.\nReturns the preimage for a given hash. If given, <code>len</code> must …\nDetermine if a given value should be allowed through the …\nFilter the call if caller is not root, if false is …\nFind the author of a block based on the pre-runtime …\nThe position in the first available MQ page where the …\nFormats the value using the given formatter.\nReturn the state footprint of the given queue.\nThe ‘free’ balance of a given account.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct a footprint with one item, and size equal to the …\nCreate from the given encoded <code>data</code>.\nConstruct a footprint with one item, and size equal to the …\nCast mutable reference.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nConstruct a footprint directly from <code>items</code> and <code>len</code>.\nCast reference.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns an instance of the tally given some <code>approval</code> and …\nName of the function.\nCreate a new instance of a <code>ProvingTrie</code> using an iterator …\nReturn the current value.\nReturn the current value.\nGet a reference to the underlying value.\nGet the item, or its default if it doesn’t yet exist; we …\nGet the decoded key with key-type ID <code>i</code>.\nReturns <code>Some</code> <code>Backing</code> if <code>self</code> represents a …\nGet the <code>BatchFootprint</code> for each batch of messages <code>[0..n]</code> …\nReturn the index of this Call.\nReturn all call indices in the same order as <code>GetCallName</code>.\nReturn a <code>CallMetadata</code>, containing function and pallet name …\nReturn the function name of the Call.\nReturn all function names in the same order as <code>GetCallIndex</code>…\nReturn all function names for the given <code>module</code>.\nReturn all module names.\nReturns the preimage for a given hash.\nGet the raw bytes of key with key-type ID <code>i</code>.\nEnqueue a single <code>message</code> with an implied origin.\nEnqueue multiple <code>messages</code> from an implied origin.\nCheck if this key has been “read”, i.e. it exists in …\nCheck if this key has been “written”, i.e. a new value …\nCheck to see if all data required for the given <code>bounded</code> …\nReturns whether a preimage exists for a given hash.\nReturns a reference to the header.\nRequest that the data required for decoding the given …\nThe unique identifier of the <code>TransactionExtension</code>.\nThe type of the <code>TransactionExtension</code> additional signed …\nThe implicit implication in transaction extensions.\nReturns the in-code storage version as specified in the …\nIncrements the value.\nConvert the given pallet <code>P</code> into its index as configured in …\nIndex of the pallet as configured in the runtime.\nIndex of the pallet as configured in the runtime.\nAdd a member to the group at the <code>min_rank()</code>.\nThe storage info of the key.\nAll of the pallets’ information that this type …\nReturns the initial value.\nInitialize the members to the given <code>members</code>.\nSet the item to something new.\nFind the integer square root, returning <code>None</code> if the number …\nSee <code>Hooks::integrity_test</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTransform into an account.\nConsume <code>self</code> and return the caller.\nCast mutable reference.\nCast reference.\nConvert this value amalgamated with a secondary “sub” …\nExtract the signer from the message if it is a <code>Signed</code> …\nReturns <code>true</code> if this <code>Extrinsic</code> is bare.\nReturns <code>true</code> if this <code>Extrinsic</code> is bare.\nTrue iff no bits are set.\nReturns true if the given validator is disabled.\nWhether safe mode is entered.\nWhether this extrinsic is an inherent.\nCheck if the asset should be locked and prevent …\nIs the given <code>MemberId</code> a valid member?\nReturns <code>true</code> if this <code>Consideration</code> represents a no-cost …\nReturns <code>true</code> if <code>self</code> is a system <code>None</code> origin, <code>None</code> …\nWhether this queue is paused.\nWhether this call is paused.\nReturns true if the provided validator ID has been …\nReturns whether a preimage request exists for a given hash.\nReturns <code>true</code> if <code>self</code> is a system <code>Root</code> origin, <code>None</code> …\nIs this <code>Extrinsic</code> signed? If no information are available …\nIs this <code>Extrinsic</code> signed? If no information are available …\nReturns <code>Some(_)</code> if <code>self</code> is an instance of sub type <code>T</code>.\nWhether the origin is authorized to include a transaction …\nChecks if a particular instance of this <code>Task</code> variant is a …\nReturns <code>true</code> if <code>self</code> is equal to the additive identity.\nIncrease the total issuance by <code>amount</code> and return the …\nInspects the pallet’s state and enumerates tasks of this …\nThe key of the value to prove.\nThe key of the undecodable value.\nReturn the key-type IDs supported by this set.\nAn account was killed.\nReturns a generic measure of how late the current block is …\nReturn the length of data type.\nReturns whether a preimage exists for a given hash and if …\nAttempt a lookup.\nAttempt a lookup.\nThe major version of the crate.\nEnsure an account’s free balance equals some value; this …\nMaximum number of elements contained\nThe maximum amount of ongoing polls within any single …\nThe maximum size of key/values in the storage, or none if …\nThe maximum number of values in the storage, or none if no …\nAttempt to make conversion.\nAttempt to make conversion back.\nConsume <code>self</code> and maybe an <code>other</code> to return a new instance …\nMaybe consume an <code>other</code> to mutate <code>self</code> into a new instance …\nConsume <code>self</code> and an <code>other</code> to return a new instance that …\nConsume <code>self</code> and an <code>other</code> to return a new instance that …\nConsume self to mutate <code>other</code> so that it combines both. …\nReturns the metadata for this signed extension.\nMinimum number of elements contained\nThe lowest rank possible in this membership organisation.\nThe minimum balance any single account may have. This is …\nThe minor version of the crate.\nConvert the given pallet <code>P</code> into its Rust module name as …\nName of the Rust module containing the pallet.\nName of the Rust module containing the pallet.\nMake conversion.\nThe number of messages in the batch.\n@return the product of <code>self</code> and <code>other</code>.\nMutate the item.\nMutate the item, removing or resetting to default value if …\nConvert the given pallet <code>P</code> into its name as configured in …\nName of the pallet as configured in the runtime.\nName of the pallet as configured in the runtime.\nThe two128 hash of name.\nTwo128 hash of name.\nCreates new header.\nCreates new block from header and extrinsics.\nCreate a ticket for the <code>new</code> footprint attributable to <code>who</code>. …\nInitializes a new tally.\nCreate a default <code>TrackedStorageKey</code>\nCreate a new old-school extrinsic, either a bare extrinsic …\nCreate a new instance from the given byte array.\nCreate a new instance, adding a new <code>constraint</code> onto the …\nCreate a new instance, adding a new <code>constraint</code> onto the …\nCreate a new inherent from a given call.\nThe number of resulting new pages in the queue if the …\nCreate a new signed transaction from a given call and …\nCreate with system none origin and …\nRequest and attempt to store the bytes of a preimage on …\nStore the bytes of a preimage on chain infallible due to …\nReturn duration since <code>SystemTime::UNIX_EPOCH</code>.\nReturns a reference to the header number.\nThis function is being called after every block import …\nConsume self and along with an opposite counterpart to …\nReturns the storage version of the pallet as last set in …\nA validator got disabled. Act accordingly until a new …\nSomething that should happen at genesis.\nThe given validator set will be used for the genesis …\nThe account with the given id was reaped.\nA new account <code>who</code> has been registered.\nSession set has changed; act appropriately. Note that this …\nCode to execute every now and then at the beginning of the …\nCalled within <code>VersionedMigration</code> to execute the actual …\nCalled when the timestamp is set.\nReturns the multiplicative identity element of <code>Self</code>, <code>1</code>.\nThe ordered Patricia tree root of the given <code>input</code>.\nVerify a proof of ownership for the keys.\nThe number of pages in the queue (including overweight …\nName of the pallet to which the function belongs.\nEncoded string of pallet name.\nPrefix of a pallet to isolate it from other pallets.\nReturn the prefix hash of pallet instance.\nCreate new implementations of the <code>Get</code> trait.\nReturns a reference to the parent hash.\nDestructure the implication into its parts.\nThe patch version of the crate.\nPause this call immediately.\nThe raw value of self.\nConvert the given <code>bounded</code> instance back into its original …\nCreate a <code>Bounded</code> instance based on the <code>hash</code> and <code>len</code> of the …\nRemoves the most recently pushed, and not-yet-popped, …\nDo any post-flight stuff for an extrinsic.\nCalled after all inherents were applied.\nCalled after all transactions were applied but before …\nSee <code>Hooks::post_upgrade</code>.\nDo any pre-flight stuff for a signed transaction.\nDo any pre-flight stuff for an unsigned transaction.\nCalled before all inherents were applied but after …\nSee <code>Hooks::pre_upgrade</code>.\nThe prefix of the storage. All keys after the prefix are …\nReturn the prefix hash of instance.\nReturns whether a preimage request exists for a given hash.\nDo any pre-flight stuff for a transaction after validation.\nPrint the object.\nProcess the given message, using no more than the …\nPromote a member to the next higher rank.\nThe encoded nodes to prove the existence of the data under …\nThis function returns the number of hashes we expect to …\nProve membership of a key owner in the current block-state.\nAdd a new <code>constraint</code> onto the filter.\nAppends a batch footprint to the back of the collection.\nQuery a value contained within the current trie. Returns …\nGet the most recently determined random seed, along with …\nReturn the rank of the given ID, or <code>None</code> if they are not a …\nConsume <code>self</code> and return two independent instances; the …\nConsume self and add its two components, defined by the …\nConsume self and add its two components, defined by the …\nThe raw value.\nThe number of pages that are ready (not yet processed and …\nConvert the given <code>bounded</code> value back into its original …\nRefund some unspent weight.\nReturns an instance of the tally representing a rejecting …\n@return the modulo remainder of <code>self</code> and <code>other</code>.\nHow many more blocks safe mode will stay entered.\nRemove the item or otherwise replace it with its default …\nRemove an existing lock.\nRemove a vesting schedule for a given account.\nMove all the named reserved balance of one account into …\nMoves up to <code>value</code> from reserved balance of account <code>slashed</code> …\nMoves up to <code>value</code> from reserved balance of account <code>slashed</code> …\nRequest that someone report a preimage. Providers use this …\nRequest that someone report a preimage. Providers use this …\nMoves <code>value</code> from balance to reserved balance.\nMoves <code>value</code> from balance to reserved balance.\nThe amount of the balance of a given account that is …\nThe amount of the balance of a given account that is …\nReset origin filters to default one, i.e …\nRestore the filter from a previous <code>take</code> operation.\nThe input is an iterator of tuples of validator account …\nAccess the underlying trie root.\nCreate with system root origin and …\nPerforms the work for this particular <code>Task</code> variant.\nSaturating addition. Compute <code>self + rhs</code>, saturating at the …\nSaturating multiply. Compute <code>self * rhs</code>, saturating at the …\nSaturating exponentiation. Compute <code>self.pow(exp)</code>, …\nSaturating subtraction. Compute <code>self - rhs</code>, saturating at …\nGets the biggest batch for which the comparator function …\nService all message queues in some fair manner.\nReturns current session index.\nReplace the caller with caller from the other origin\nReplace the caller with caller from the other origin\nAccrue some weight pertaining to the extension.\nSets the extrinsic root.\nCreate a new balance lock on account <code>who</code>.\nSets the header number.\nSets the parent hash.\nSets the state root.\nA function that should be called before any use of the …\nCheck if an account for a given asset should be touched to …\nCreate with system signed origin and …\nThe total size of the blobs in bytes.\nThe total size in bytes of all the messages in the batch.\nDeducts up to <code>value</code> from the combined balance of <code>who</code>, …\nSlash all the reserved balance, returning the negative …\nDeducts up to <code>value</code> from reserved balance of <code>who</code>. This …\nDeducts up to <code>value</code> from reserved balance of <code>who</code>. This …\nGet a vector of all members in the set, ordered.\nConsume <code>self</code> and return two independent instances; the …\nConsume self and add its two components, defined by the …\nConsume self and add its two components, defined by the …\nReturns a reference to the state root.\nThe storage footprint of the queue (including overweight …\nEncoded string of storage name.\nReturn the prefix hash of storage instance.\nConsume an <code>other</code> to mutate <code>self</code> into a new instance that …\nReturns the approval ratio (positive to total votes) for …\nMember <code>old</code> was swapped with <code>new</code> at <code>rank</code>.\nAny remaining unprocessed messages should happen only …\nAny remaining unprocessed messages should happen only …\nClear the filter, returning a value that may be used later …\nA unique value representing this <code>Task</code> within the current …\nDo everything which would be done in a dispatch_transaction…\nConvert the given <code>block_id</code> to the corresponding block hash.\nConvert the given <code>block_id</code> to the corresponding block …\nThe combined balance of <code>who</code>.\nThe total amount of issuance in the system.\nCreate an account for <code>who</code> of the <code>asset</code> with a deposit …\nTransfer some liquid free balance to another staker.\nThe Patricia tree root of the given mapping.\nConsume self and try to collect the results into <code>C</code>.\nAttempt to make conversion. If returning Result::Err, the …\nAttempt to make conversion back. If returning Result::Err, …\nTry to decode the wrapped type from the inner <code>data</code>.\nDecode the entire data under the given storage, returning …\nDrop an instance cleanly. Only works if its value …\nTry to convert an account ID into this type. Might not …\nSame as <code>into_sub_account_truncating</code>, but ensuring that all …\nMake conversion.\nMaybe mutate the item only if an <code>Ok</code> value is returned from …\nReturns <code>Ok</code> if <code>self</code> is <code>None</code>, otherwise returns <code>Err</code> with <code>self</code>…\nPerform the origin check.\nPerform the origin check, returning the origin value if …\nReturns <code>Ok</code> with the inner value of <code>Other</code> if <code>self</code> is that, …\nReturns <code>Ok</code> with the inner value of <code>Same</code> if <code>self</code> is that, …\nExecute the state checks.\nAttempt to get an outer origin capable of passing …\nAttempt to get an outer origin capable of passing …\nDo something with the caller, consuming self but returning …\nThe type of the <code>TransactionExtension</code>.\nReturns an instance of the tally representing a unanimous …\nBlindly check self.\nConvert from a value of <code>T</code> into an equivalent instance of …\nConsume self to return an equivalent value of <code>T</code>.\nConvert from Target back to Source.\nAttempt to clear a previously noted preimage. Exactly the …\nClear a previously noted preimage. This is infallible and …\nUnpause this call immediately.\nCancel a previous preimage request.\nCancel a previous preimage request.\nMoves up to <code>value</code> from reserved balance to free balance. …\nUnreserve all the named reserved balances, returning …\nMoves up to <code>value</code> from reserved balance to free balance. …\nOptionally consume an old ticket and alter the footprint, …\nValidate a transaction for the transaction queue.\nChecks to see if this is a valid <em>transaction</em>. It returns …\nValidate a signed transaction for the transaction queue.\nValidate and prepare a transaction, ready for dispatch.\nJust validate a transaction.\nReturn the validity of the call\nValidate an unsigned transaction for the transaction queue.\nReturns the active set of validators.\nThe value for that the existence is proved.\nVerify a signature.\nVerify a signature. Return <code>true</code> if signature is valid for …\nVerify the existence of <code>key</code> and <code>value</code> in a given trie root …\nVerify the given <code>proof</code>.\nVerify a header and return the author, if any.\nExecute a vested transfer from <code>source</code> to <code>target</code> with the …\nGet the amount that is currently being vested and cannot …\nThe weight consumed by executing this extension instance …\nReturns the weight of executing this <code>Task</code>.\nThe weight of the authorization function.\nWhitelist this key.\nReturns a <code>Vec&lt;TrackedStorageKey&gt;</code> indicating the storage …\nRemoves some free balance from <code>who</code> account for <code>reason</code> if …\nReturns the additive identity element of <code>Self</code>, <code>0</code>.\nThe zero imbalance. Can be destroyed with <code>drop_zero</code>.\nCreate a <code>Positive</code> instance of <code>Self</code> whose value is zero.\nThe transaction birth block is ancient.\nInterface to differentiate between Runtime Origins …\nAn extrinsic with a Mandatory dispatch resulted in Error. …\nGeneral error to do with the transaction’s proofs (e.g. …\nThe sending address is disabled or known to be invalid.\nThe call of the transaction is not expected.\nThe function and pallet name of the Call.\nAny other custom invalid validity that is not covered by …\nSingle-function utility trait with a blanket impl over …\nContains the error value\nThe transaction would exhaust the resources of current …\nType to represent the version of the Extension used in …\nGeneral error to do with the transaction not yet being …\nGets the metadata for the Call - function name and pallet …\nUnique identifier of this signed extension.\nAny additional data which was known at the time of …\nThe implicit data was unable to be calculated.\nThe info type.\nAn invalid transaction validity.\nAn extrinsic with a mandatory dispatch tried to be …\nContains the success value\nThe origin type of the transaction.\nGeneral error to do with the inability to pay some fees …\nThe <code>Pre</code> of the extension.\nThe type that encodes information that can be passed from …\nThe resultant type.\nGeneral error to do with the transaction being outdated …\nMeans by which a transaction may be extended. This type …\nThe transaction extension did not authorize any origin.\nThe <code>Val</code> of the extension.\nThe type that encodes information that can be passed from …\nInformation concerning a valid transaction.\nShortcut for the result value of the <code>validate</code> function.\nDispatch a transaction with the given base origin and call.\nName of the function.\nReturn a <code>CallMetadata</code>, containing function and pallet name …\nReturn all function names for the given <code>module</code>.\nReturn all module names.\nHelper macro to be used in a <code>impl TransactionExtension</code> …\nWhether the origin is authorized to include a transaction …\nTransaction longevity\nName of the pallet to which the function belongs.\nDo any pre-flight stuff for a transaction after validation.\nPriority of the transaction.\nA flag indicating if the transaction should be propagated …\nProvided tags\nTransaction dependencies\nDo everything which would be done in a dispatch_transaction…\nValidate a transaction for the transaction queue.\nValidate and prepare a transaction, ready for dispatch.\nJust validate a transaction.\nThe weight consumed by executing this extension instance …\nAn arithmetic error.\nA bad origin.\nFailed to lookup some data.\nAt least one consumer is remaining so the account cannot …\nThe state is corrupt; this is generally not going to fix …\nResources exhausted, e.g. attempt to read/write data which …\nA custom error in a module.\nThere are no providers so the account cannot be created.\nSome error occurred.\nRoot origin is not allowed.\nAn error to do with tokens.\nThere are too many consumers so the account cannot be …\nThe number of transactional layers has been reached, or we …\nAn error with tries.\nThe error type used as return type in try runtime hooks.\nSome resource (e.g. a preimage) is unavailable right now. …\nA trait for querying a single value from a type.\nParityDB can be enabled with a feature flag, but is still …\nZero-sized type used to mark things that “act like” …\nBy default, Substrate uses RocksDB, so this will be the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn the current value.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nGeneral result.\nThe statement distribution subsystem.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new Statement Distribution Subsystem\nAn authority ID\nCandidate type. In practice this will be a candidate …\nContext for the statement table.\nThe digest (hash or other unique attribute) of a candidate.\nThe group ID type\nA signature type.\nStores votes\nGet the attested candidate for <code>digest</code>.\nget the digest of a candidate.\nCreate a draining iterator of misbehaviors.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe statement table: generic implementation.\nGet a candidate by digest.\nGet a validator group size.\nAccess all witnessed misbehavior.\nImport a signed statement. Signatures should be checked …\nCalls <code>U::from(self)</code>.\nWhether a authority is a member of a group. Members are …\nConcrete instantiations suitable for v2 primitives.\nAn attested-to candidate.\nAn authority ID\nCandidate type. In practice this will be a candidate …\nStores votes and data about a candidate.\nContext for the statement table.\nThe digest (hash or other unique attribute) of a candidate.\nMisbehavior: multiple signatures on same statement.\nSubmitted two valid signatures for the same message.\nSubmitted two valid signatures for the same message.\nContains the error value\nAn explicit attestation. This corresponds to issuance of a …\nThe group ID type\nimplicit validity attestation by issuing. This corresponds …\nType alias for the result of a statement import.\nImplicit vote by issuing and explicitly voting validity.\nDifferent kinds of misbehavior. All of these kinds of …\nType alias for misbehavior corresponding to context type.\nContains the success value\nBroadcast by an authority to indicate that this is its …\nOn candidate.\nA signature type.\nA signed statement.\nStatements circulated among peers.\nA summary of import of a statement.\nStores votes\nMisbehavior: submitted statement for wrong group.\nSubmitted a message that was unauthorized.\nSubmitted a message that was unauthorized.\nBroadcast by a authority to attest that the candidate with …\nOn validity.\nA validity attestation.\nMisbehavior: voting more than one way on candidate …\nVoted invalid and valid on validity.\nVoted invalid and valid on validity.\nYield a full attestation for a candidate. If the candidate …\nThe digest of the candidate referenced.\nThe candidate data.\nget the digest of a candidate.\nDeconstruct this misbehavior into two …\nDeconstruct this misbehavior into a statement with two …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a validator group size.\nThe group that the candidate is in.\nThe group ID that the candidate is in.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether a authority is a member of a group. Members are …\nThe sender.\nThe signature.\nThe statement.\nA signed statement which was submitted without proper …\nHow many validity votes are currently witnessed.\nValidity attestations.\nSubmitted two valid signatures for the same message.\nKinds of misbehavior, along with proof.\nBroadcast by an authority to indicate that this is its …\nSigned statements about candidates.\nStatements about candidates on the network.\nA summary of import of a statement.\nSubmitted a message that was unauthorized.\nBroadcast by a authority to attest that the candidate with …\nVoted invalid and valid on validity.\nThe digest of the candidate referenced.\nThe group that the candidate is in.\nThe sender.\nThe signature.\nThe statement.\nHow many validity votes are currently witnessed.\nMemory allocation stats gathered during the lifetime of …\nAllocator run out of space.\nThe error type used by the allocators.\nAn implementation of freeing bump allocator.\nGrants access to the memory for the allocator.\nThe client passed a memory instance which is smaller than …\nSome other error occurred.\nSomeone tried to allocate more memory than the allowed …\nThe amount of address space (in bytes) used by the …\nGets requested number of bytes to allocate and returns a …\nThe current number of bytes allocated.\nThe peak number of bytes ever allocated.\nThe sum of every allocation ever made.\nDeallocates the space which was allocated for a pointer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGrow the memory by <code>additional</code> pages.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the maximum number of pages this memory is allowed …\nCreates a new allocation heap which follows a freeing-bump …\nReturns the current number of pages this memory has …\nReturns the allocation stats for this allocator.\nRun the given closure <code>run</code> and grant it read access to the …\nRun the given closure <code>run</code> and grant it write access to the …\nWrapper for <code>AuthorityDiscoveryApi</code>. Can be be implemented …\nDiscover addresses of others.\nError type for the authority discovery module.\nNetworkProvider provides <code>Worker</code> with all necessary hooks …\nPublish own addresses and discover addresses of others.\nRole an authority discovery <code>Worker</code> can run as.\nService to interact with the <code>crate::Worker</code>.\nAn authority discovery <code>Worker</code> can publish the local node’…\nConfiguration of <code>Worker</code>.\nRetrieve authority identifiers of the current and next …\nRetrieve best block hash\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet the addresses for the given <code>AuthorityId</code> from the local …\nGet the <code>AuthorityId</code> for the given <code>PeerId</code> from the local …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInterval at which the keystore is queried. If the keys …\nThe maximum interval in which the node will publish its …\nThe maximum interval in which the node will query the DHT …\nCreate a new authority discovery <code>Worker</code> and <code>Service</code>.\nSame as <code>new_worker_and_service</code> but with support for …\nPersists <code>AddrCache</code> to disk if the <code>persisted_cache_file_path</code>…\nThe directory of where the persisted AddrCache file is …\nPublic addresses set by the node operator to always …\nIf <code>false</code>, the node won’t publish on the DHT …\nStart the worker\nReject authority discovery records that are not signed by …\nDefault block size limit in bytes used by <code>Proposer</code>.\nArguments for <code>Proposer::propose_block</code>.\nThe proposer logic.\n<code>Proposer</code> factory.\nOptional size limit for the produced block.\nDisable the proof inclusion when estimating the block size.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nTrie nodes that should not be recorded.\nThe inherent data to pass to the block production.\nThe inherent digests to include in the produced block.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMax duration for building the block.\nCreate a new proposer factory.\nPropose a new block.\nSet the default block size limit in bytes.\nSet soft deadline percentage.\nCreate a new proposer factory with proof recording enabled.\nUtility for building new (valid) blocks from a stream of …\nThe <code>BlockBuilder</code> api trait that provides the required …\nA builder for creating an instance of <code>BlockBuilder</code>.\nThe second stage of the <code>BlockBuilderBuilder</code>.\nThe second stage of the <code>BlockBuilderBuilder</code>.\nA block that was build by <code>BlockBuilder</code> plus some …\nApply the given extrinsic.\nThe actual block that was build.\nCreate the instance of the <code>BlockBuilder</code>.\nConsume the builder to build a valid <code>Block</code> containing all …\nCheck that the inherents are valid. The inherent data will …\nCreate the inherents for the block.\nEnable proof recording for the block builder.\nEstimate the size of the block in the current state.\nThe extrinsic inclusion mode of the runtime for this block.\nFetch the parent block number from the given <code>header_backend</code>…\nFinish the current block.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate inherent extrinsics. The inherent data will vary …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into the inner values.\nCreate a new instance of the builder.\nSpecify the parent block to build on top of.\nAn optional proof that was recorded while building the …\nPush onto the block’s list of extrinsics.\nThe changes that need to be applied to the backend to get …\nBuild the block with the given inherent digests.\nProvide the block number for the parent block directly.\nEnable/disable proof recording for the block builder using …\nEnable/disable proof recording for the block builder.\nA base <code>Group</code> type.\nThe import operation used to import the genesis block into …\nTrait for building the genesis block.\nCommon interface of a chain specification.\nBuilder for creating <code>ChainSpec</code> instances.\nThe type of chain.\nSome custom chain type.\nThe default <code>development</code> preset used to communicate with …\nA development chain that runs mainly on one node.\nA collection of <code>ChainSpec</code> extensions.\nA <code>ChainSpec</code> extension fork definition.\nAn associated type containing fork definition.\nA configuration of a chain. Can be used to build a genesis …\nDefault genesis block builder in Substrate.\nA utility that facilitates calling the GenesisBuilder API …\nA subset of the <code>Extension</code> trait that only allows for …\nA <code>ChainSpec</code> extension.\nThe default <code>local_testnet</code> preset used to communicate with …\nA live chain.\nA local chain that runs locally on multiple nodes for …\nA type denoting empty extensions.\nNo value.\nArbitrary properties defined in chain spec as a JSON object\nSome value of type <code>T</code>.\nAdd a bootnode to the list.\nAdd a bootnode to the list.\nReturn spec as JSON.\nDump the chain specification to JSON string.\nReturn StorageBuilder for this spec.\nReturn a set of parameters for <code>Group</code> including all forks …\nA list of bootnode addresses.\nA list of bootnode addresses.\nBuilds a <code>ChainSpec</code> instance using the provided settings.\nReturns the built genesis block along with the block …\nProvides a <code>ChainSpec</code> builder.\nType of the chain.\nReturns a cloned <code>Box&lt;dyn ChainSpec&gt;</code>.\nReturns code substitutes that should be used for the on …\nCombine with another struct.\nCreate a genesis block, given the initial storage.\nReturns a reference to the defined chain spec extensions.\nReturns a reference to the defined chain spec extensions.\nReturns a mutable reference to the defined chain spec …\nReturns a mutable reference to the defined chain spec …\nGet forks definition for a subset of this extension.\nOptional network fork identifier. <code>None</code> by default.\nOptional network fork identifier.\nGet forkable extensions of specific type.\nGet forkable extensions of specific type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse json content into a <code>ChainSpec</code>\nParse json file into a <code>ChainSpec</code>\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet an extension of specific type.\nGet an extension of specific type as reference to <code>Any</code>.\nGet an extension of specific type.\nGet an extension of specific type as mutable reference to …\nGet an extension of specific type with mutable access.\nReturns a json representation of the default …\nHelper function that queries an extension by type from …\nHelper function that queries an extension by type from …\nReturns a JSON blob representation of the builtin …\nCalls <code>sp_genesis_builder::GenesisBuilder::build_state</code> …\nCreates the genesis state by patching the default …\nSpec id.\nSpec id.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRecursively merges two JSON objects, <code>a</code> and <code>b</code>, into a …\nA helper module providing json patching functions.\nSpec name.\nSpec name.\nCreates a new builder instance with no defaults.\nConstructs a new instance of <code>GenesisBlockBuilder</code>.\nCreates new instance using the provided code blob.\nCreate new fork definition given the base and the forks.\nConstructs a new instance of <code>GenesisBlockBuilder</code> using …\nAdditional loosely-typed properties of the chain.\nAdditional loosely-typed properties of the chain.\nNetwork protocol id.\nNetwork protocol id.\nReturn the state version given the genesis storage and …\nThis function sets a codeSubstitute in the chain spec.\nSet the storage that should be used by this chain spec.\nTelemetry endpoints (if any)\nTelemetry endpoints (if any)\nAttempt to convert to the base type if all parameters are …\nConvert to fork type.\nThis function updates the code in given chain spec.\nSets a list of bootnode addresses.\nSets the type of the chain.\nSets the code.\nSets chain spec extensions.\nSets an optional network fork identifier.\nSets the full runtime’s GenesisConfig JSON.\nApplies a patch to whatever genesis build action is set.\nSets the name of runtime-provided JSON patch for runtime’…\nSets the spec ID.\nSets the spec name.\nSets additional loosely-typed properties of the chain.\nSets the network protocol ID.\nSets telemetry endpoints.\nRecursively merges two JSON objects, <code>a</code> and <code>b</code>, into a …\nAll hosts allowed.\nAlways have offchain worker enabled.\nApplication specific error chain sequence forwarder.\nKeep the data of all blocks.\nKeep only the data of finalized blocks.\nActual authority.\nExpose every RPC method only when RPC is listening on …\nDetect whether there is an existing database. Use it, if …\nWrapper type that is either a <code>Hash</code> or the number of a <code>Block</code>…\nWarm up the cache in a blocking way (not recommended for …\nExecute with both native (where available) and WebAssembly …\nThe <code>build-spec</code> command used to build a specification.\nThe <code>chain-info</code> subcommand used to output db meta columns …\nCommon interface of a chain specification.\nThe <code>check-block</code> command used to validate blocks.\nA trait that allows converting an object to a Configuration\nUses a compiled runtime.\nCORS setting\nThe crypto scheme to use.\nOptional flag for specifying crypto algorithm\nKeep the data of the last number of finalized blocks.\nThe default <code>WasmtimeInstantiationStrategy</code>.\nThe default <code>WasmExecutionMethod</code>.\nDatabase backend\nParameters for database\nSpecifies the pruning mode of the database.\nDefault configuration values used by Substrate\nUse ecdsa.\nUse ed25519.\nUse ed25519.\nContains the error value\nError type for the CLI.\nExecution strategies parameters.\nHow to execute blocks\nThe <code>export-blocks</code> command used to export blocks.\nExport a chain-spec to a JSON file in plain or in raw …\nThe <code>export-state</code> command used to export the state of a …\nDownload blocks without executing them. Download latest …\nDownload blocks without executing them. Download latest …\nUses a fork-aware transaction pool.\nRegular full node.\nFull sync. Download and verify all blocks.\nGenerate a random account\nThe <code>generate</code> command\nCommon arguments accross all generate key commands, subkey …\nGenerate a random node key, write it to a file or stdout …\nWrapper type of <code>String</code> that holds an unsigned integer of …\nThe <code>import-blocks</code> command used to import blocks.\nParameters for block import.\nInsert a key to the keystore of a node.\nThe <code>insert</code> command\nGets a public key and a SS58 address from the provided …\nThe <code>inspect</code> command\nLoad a node key from a file or stdin and print the …\nThe <code>inspect-node-key</code> command\nUses an interpreter which now is deprecated.\nOutput as json.\nKey utilities for the cli.\nParameters of the keystore\nUse libp2p for P2P networking.\nOnly hosts on the list are allowed.\nUse litep2p for P2P networking.\nOutput the tracing records using the log.\nA builder that is used to initialize the global logger.\nParams to configure how a message should be passed into a …\nParameters used to create the mixnet configuration.\nExecute with native build (if available, WebAssembly …\nExecute with the native build if possible; if it fails, …\nNetwork backend type.\nParameters used to create the network configuration.\nOptional flag for specifying network scheme\nNever enable the offchain worker.\nParameters used to create the <code>NodeKeyConfig</code>, which …\nThe type of the node key.\nWarm up the cache in a non-blocking way.\nWhether off-chain workers are enabled.\nOffchain worker related parameters.\nContains the success value\nThe type of the output format.\nOptional flag for specifying output type\nParityDb. https://github.com/paritytech/parity-db/\nParityDb. https://github.com/paritytech/parity-db/\nPool the instances to avoid initializing everything from …\nPool the instances to avoid initializing everything from …\nParameters used to config prometheus.\nParameters to define the pruning mode\nThe <code>purge-chain</code> command used to remove the whole chain.\nThe default concurrent connection limit.\nThe default max request size in MB.\nThe default max response size in MB.\nThe default max number of subscriptions per connection.\nThe default number of messages the RPC server is allowed …\nThe default port.\nRecreate the instance from scratch on every instantiation. …\nRecreate the instance from scratch on every instantiation. …\nResult type alias for the CLI.\nThe <code>revert</code> command used revert the chain to a previous …\nFacebooks RocksDB\nRole of the local node.\nRepresent a single RPC endpoint with its configuration.\nAvailable RPC methods.\nParameters of RPC.\nThe <code>run</code> command used to run a node.\nA Substrate CLI runtime that can be used to run a node or …\nParameters used to config runtime.\nRuntime version. This should not be thought of as classic …\nAllow only a safe subset of RPC methods.\nShared parameters used by all <code>CoreParams</code>.\nThe <code>sign</code> command\nAbstraction over OS signals to handle the shutdown of the …\nUses a legacy, single-state transaction pool.\nUse sr25519.\nSubstrate client CLI\nSyncing mode.\nParameters used to config telemetry.\nOutput as text.\nParameters used to create the pool configuration.\nType of transaction pool to be used\nWarmup strategy for the trie cache.\nExpose every RPC method (even potentially unsafe ones).\nThe <code>vanity</code> command\nThe <code>verify</code> command\nProve finality and download the latest state.\nOnly execute with the WebAssembly build.\nHow to execute Wasm runtime code.\nThe instantiation strategy to use in compiled mode.\nOnly enable the offchain worker when running as a …\nAdd a bootnode to the list.\nShortcut for <code>--name Alice --validator</code>.\nAlways accept connecting to private IPv4/IPv6 addresses.\nActivate or not the automatic announcing of blocks after …\nReturns the api version found for api with <code>id</code>.\nList of supported API “features” along with their …\nDefinitions of <code>ValueEnum</code> types.\nReturn spec as JSON.\nReturn StorageBuilder for this spec.\nA helper function that runs a future with tokio and stops …\nExecutable file author.\n<code>authoring_version</code> is the version of the authorship …\nGet the base path of the configuration (if any)\nSpecify custom base path.\nSpecify custom base path.\nBatch request configuration.\nUse binary output rather than JSON.\nTry importing blocks from binary format rather than JSON.\nGet the block pruning mode.\nGet the block pruning value from the parameters\nSpecify the blocks pruning mode.\nShortcut for <code>--name Bob --validator</code>.\nA list of bootnode addresses.\nSpecify a list of bootnodes.\nBuild a tokio runtime with all features.\nCheck if this version matches other version for calling …\nCapture the relevant signals to handle shutdown of the …\nThe chain spec identifier to export.\nSpecify the chain specification.\nGet the chain ID (string).\nGet the chain spec for the parameters provided\nType of the chain.\nShortcut for <code>--name Charlie --validator</code>.\nReturns the client ID: <code>{impl_name}/v{impl_version}</code>\nReturns a cloned <code>Box&lt;dyn ChainSpec&gt;</code>.\nReturns code substitutes that should be used for the on …\nVarious subcommands that can be included in a …\nGet an immutable reference to the node Configuration\nReturns the mixnet configuration, or <code>None</code> if the mixnet is …\nGet a mutable reference to the node Configuration\nCopyright starting year (x-current year)\nCORS.\nCreate a Configuration object from the current object\nOnly create a Configuration for the command provided in …\nCreate a runner for the command provided in argument. This …\nCreate a runner for the command provided in argument. The …\nGet the database backend variant.\nDatabase backend\nSelect database backend to use.\nGet the database cache size.\nLimit the memory the database cache can use.\nLimit the memory the database cache can use.\nGet the database configuration object for the parameters …\nGet the DatabaseParams for this object\nShortcut for <code>--name Dave --validator</code>.\n<code>Decode</code> while giving a “version hint”\nGet the default value for heap pages\nThe default number of 64KB pages to ever allocate for Wasm …\nThe default number of 64KB pages to ever allocate for Wasm …\nExecutable file description.\nShould the detailed log output be enabled.\nShould the detailed log output be enabled.\nEnable detailed log output.\nSpecify the development chain.\nGet the development key seed from the current object\nDisable adding the default bootnode to the specification. …\nReturns <code>Ok(true)</code> if grandpa should be disabled\nShould the log color output be disabled?\nShould the log color output be disabled?\nDisable log color output.\nEnable peer discovery on local networks.\nA dummy signal that never returns.\nIs log reloading enabled?\nIs log reloading enabled\nEnable feature to dynamically update and reload the log …\nExecute offchain workers on every block.\nShortcut for <code>--name Eve --validator</code>.\nExecutable file name.\nThe execution strategy that should be used by all …\nRuntime execution strategy for constructing blocks.\nRuntime execution strategy for general block import …\nConverts the execution method and instantiation strategy …\nRuntime execution strategy for offchain workers.\nRuntime execution strategy when not syncing, importing or …\nRuntime execution strategy for importing blocks during …\nExpect that <code>--uri</code> has the given public key/account-id. If …\nEXPERIMENTAL: Specify the JSON-RPC server interface and …\nReturns a reference to the defined chain spec extensions.\nReturns a mutable reference to the defined chain spec …\nReturns the state version to use for Extrinsics root.\nShortcut for <code>--name Ferdie --validator</code>.\nReturns <code>Ok(true)</code> if authoring should be forced\nEnable authoring even when offline.\nOptional network fork identifier. <code>None</code> by default.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSpecify starting block number. Default is 1.\nHelper function used to parse the command line arguments. …\nHelper function used to parse the command line arguments. …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn the signals future.\nGenerate a valid random name for the node\nGet the <code>Sr25519Keyring</code> matching one of the flag.\nCheck if the given api with <code>api_id</code> is implemented and the …\nSpec id.\nImplementation name.\nName of the implementation of the spec. This is of little …\nImplementation version.\nVersion of the implementation of the specification.\nGet the ImportParams for this object\nMaximum number of inbound full nodes peers.\nMaximum number of inbound light nodes peers.\nEnable offchain indexing API.\nInitialize the global logger\nInitialize substrate. This must be done only once per …\nBlock hash or number.\nBlock hash or number.\nInput file or stdin if unspecified.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nJoin the IPFS network and serve transactions over bitswap …\nTrue for <code>Role::Authority</code>.\nReturns <code>true</code> if the node is for development or not\nSpecify the development chain.\nReturns whether the endpoint is globally exposed.\nWhether it’s an optional listening address i.e, it’s …\nRequire iterative Kademlia DHT queries to use disjoint …\nKademlia replication factor.\nGet the keystore configuration.\nGet the keystore configuration for the parameters\nGet the KeystoreParams for this object\nSpecify custom keystore path.\nListen on this multiaddress.\nListen address.\nChain spec factory\nSets a custom logging filter (syntax: <code>&lt;target&gt;=&lt;level&gt;</code>).\nGet the filters for the logging.\nGet the filters for the logging\nMaximum number of blocks per request.\nMaximum buffer capacity per connection.\nMaximum number of connections.\nMaximum number of peers from which to ask for the same …\nMaximum inbound payload size in MB.\nMaximum outbound payload size in MB.\nGet maximum runtime instances\nThe size of the instances cache for each runtime [max: 32].\nMaximum number of subscriptions per connection.\nEnable the mixnet service.\nThe mixnet key-exchange secret to use in session 0.\nSpec name.\nThe human-readable name for this node.\nnetwork address format\nNetwork backend used for P2P networking.\nGet the network configuration\nFill the given <code>NetworkConfiguration</code> by looking at the cli …\nGet the NetworkParams for this object\nThis argument is deprecated and has no effect for this …\nCreate a new <code>LoggerBuilder</code> which can be used to initialize …\nCreate a new runtime with the command provided in argument\nDisable GRANDPA.\nDisable mDNS discovery (default: true).\nAlways forbid connecting to private IPv4/IPv6 addresses.\nDo not expose a Prometheus exporter endpoint.\nDisable connecting to the Substrate telemetry server.\nGet the node key from the current object\nCreate a <code>NodeKeyConfig</code> from the given <code>NodeKeyParams</code> in the …\nSecret key to use for p2p networking.\nFile from which to read the node’s secret key to use for …\nGet the NodeKeyParams for this object\nCrypto primitive to use for p2p networking.\nGet the name of the node.\nNumber of blocks to revert.\nReturns an offchain worker config wrapped in <code>Ok(_)</code>\nLoad spec to <code>Configuration</code> from <code>OffchainWorkerParams</code> and …\nGet a reference to <code>OffchainWorkerParams</code> for this object.\nShortcut for <code>--name One --validator</code>.\nNumber of outgoing connections we’re trying to maintain.\nOutput file name or stdout if unspecified.\n<code>chain-spec</code> JSON file path. If omitted, prints to stdout.\noutput format\nThe port Substrate should listen on for p2p connections.\nWrapper on top of <code>std::str::parse&lt;N&gt;</code> but with <code>Error</code> as a …\nParse the inner value as <code>BlockId</code>.\nParse Ss58AddressFormat\nPassword used by the keystore.\nFile that contains the password used by the keystore.\nUse interactive shell for entering the password used by …\nMaximum number of kilobytes of all transactions stored in …\nMaximum number of transactions in the transaction pool.\nThe type of transaction pool to be instantiated.\nSpecify p2p protocol TCP port.\nLog information about the node itself.\nGet the prometheus configuration (<code>None</code> if disabled)\nCreates <code>PrometheusConfig</code>.\nExpose Prometheus exporter on all interfaces.\nThe port Substrate should listen on for prometheus …\nSpecify Prometheus exporter TCP Port.\nAdditional loosely-typed properties of the chain.\nNetwork protocol id.\nGet the PruningParams for this object\nPublic address that other nodes will use to connect to …\nRate limit per minute.\nWhether to trust proxy headers for rate limiting.\nWhitelisted IPs for rate limiting.\nForce raw genesis storage output.\nExport in raw genesis storage format.\nhelper method to fetch password from <code>KeyParams</code> or read …\nSpecify a list of reserved node addresses.\nWhether to only synchronize the chain with reserved nodes.\nWhether to retry with a random port if the provided port …\nGets the role\nGet the RPC address.\nReturns the RPC endpoints.\nRPC server batch request configuration.\nReturns the configuration for batch RPC requests.\nThe number of messages the RPC server is allowed to keep …\nGet the RPC cors (<code>None</code> if disabled)\nReturns the RPC CORS configuration.\nSpecify browser <em>origins</em> allowed to access the HTTP &amp; WS …\nDisable RPC batch requests\nListen to all RPC interfaces (default: local).\nThe port Substrate should listen on for JSON-RPC …\nLimit the max length per RPC batch request\nGet the maximum number of RPC server connections.\nMaximum number of RPC server connections.\nGet maximum RPC request payload size.\nSet the maximum RPC request payload size for both HTTP and …\nGet maximum RPC response payload size.\nSet the maximum RPC response payload size for both HTTP …\nGet maximum number of subscriptions per connection.\nSet the maximum concurrent subscriptions per connection.\nThe number of messages the RPC server is allowed to keep …\nReturns the RPC method set to expose.\nRPC methods to expose.\nRPC methods to expose.\nSpecify JSON-RPC server TCP port.\nRPC rate limit configuration.\nRPC rate limiting (calls/minute) for each connection.\nRPC rate limit trust proxy headers.\nTrust proxy headers for disable rate limiting.\nRPC rate limit whitelisted ip addresses.\nDisable RPC rate limiting for certain ip addresses.\nRun the build-spec command\nRun the <code>chain-info</code> subcommand\nRun the check-block command\nRun the export-blocks command\nRun the export-chain-spec command\nRun the <code>export-state</code> command\nRun the command\nRun the command\nRun the import-blocks command\nRun the command\nRun the command\nruns the command\nrun the key subcommands\nRun the purge command\nRun the revert command\nRun the command\nRun the command\nRun the command\nA helper function that runs a node with tokio and stops if …\nRun a future task until receive a signal.\nGet maximum different runtimes in cache\nMaximum number of different runtimes that can be cached.\nThe cryptography scheme that should be used to generate …\ncryptography scheme\nParse a secret string, returning a displayable error.\nSet the storage that should be used by this chain spec.\nAugments a <code>clap::Command</code> with standard metadata like name, …\nGet the SharedParams for this object\nIdentifies the different Substrate runtimes. There’ll be …\nVersion of the runtime specification.\nGet the state pruning mode.\nGet the pruning value from the parameters\nSpecify the state pruning mode.\nReturns state version to use for update.\nSupport URL.\nBlockchain syncing mode.\nA helper function that runs a command with the …\nVersion of the system implementation used by this runtime. …\nTelemetry endpoints (if any)\nGet the telemetry endpoints (if any)\nThe URL of the telemetry server to connect to.\nRun a temporary node.\nSpecify last block number. Default is best block.\nGet the TracingReceiver value from the current object\nReceiver to process tracing messages.\nReceiver to process tracing messages.\nGet the tracing targets from the current object (if any)\nComma separated list of targets for tracing.\nSets a custom profiling filter.\nGet the transaction pool options\nFill the given <code>PoolConfiguration</code> by looking at the cli …\nAll existing calls (dispatchables) are fully compatible …\nGet the trie cache maximum size.\nSpecify the trie cache maximum size.\nSpecify the state cache size.\nHelper function used to parse the command line arguments. …\nExecute the future task and returns it’s value if it …\nShortcut for <code>--name Two --validator</code>.\nHow long a transaction is banned for.\nForces key generation if node-key-file file does not exist.\nListen to all RPC interfaces.\nEnable validator mode.\nReturns all the variants of this enum to be shown in the …\nGet if we should warm up the trie cache.\nSpecify if we should warm up the trie cache.\nWarm up the trie cache.\nGet the WASM execution method.\nGet the WASM execution method from the parameters\nMethod for executing Wasm runtime code.\nGet the path where WASM overrides live.\nEnable overriding on-chain WASM with locally-stored WASM …\nSpecify the path where local WASM runtimes are stored.\nThe WASM instantiation method to use.\nForce enable/disable colors.\nAllows for calling $method with appropriate crypto impl.\nAdd a custom profiler.\nWhether detailed log output should be enabled.\nWether or not to disable log reloading.\nSet up the profiling.\nSkip interactive prompt by answering yes automatically.\nAll hosts allowed.\nAlways have offchain worker enabled.\nExpose every RPC method only when RPC is listening on …\nDetect whether there is an existing database. Use it, if …\nExecute with both native (where available) and WebAssembly …\nUses a compiled runtime.\nCORS setting\nThe crypto scheme to use.\nThe default <code>WasmtimeInstantiationStrategy</code>.\nThe default <code>WasmExecutionMethod</code>.\nDatabase backend\nUse ecdsa.\nUse ed25519.\nUse ed25519.\nHow to execute blocks\nDownload blocks without executing them. Download latest …\nDownload blocks without executing them. Download latest …\nFull sync. Download and verify all blocks.\nUses an interpreter which now is deprecated.\nOutput as json.\nUse libp2p for P2P networking.\nOnly hosts on the list are allowed.\nUse litep2p for P2P networking.\nOutput the tracing records using the log.\nExecute with native build (if available, WebAssembly …\nExecute with the native build if possible; if it fails, …\nNetwork backend type.\nNever enable the offchain worker.\nThe type of the node key.\nWhether off-chain workers are enabled.\nThe type of the output format.\nParityDb. https://github.com/paritytech/parity-db/\nParityDb. https://github.com/paritytech/parity-db/\nPool the instances to avoid initializing everything from …\nPool the instances to avoid initializing everything from …\nRecreate the instance from scratch on every instantiation. …\nRecreate the instance from scratch on every instantiation. …\nFacebooks RocksDB\nAvailable RPC methods.\nAllow only a safe subset of RPC methods.\nUse sr25519.\nSyncing mode.\nOutput as text.\nExpose every RPC method (even potentially unsafe ones).\nProve finality and download the latest state.\nOnly execute with the WebAssembly build.\nHow to execute Wasm runtime code.\nThe instantiation strategy to use in compiled mode.\nOnly enable the offchain worker when running as a …\nConverts the execution method and instantiation strategy …\nEnables colored output regardless of whether or not the …\nAny existing path.\nWhen encountered, store the associated value(s) in …\nThe abstract representation of a command line argument. …\nBehavior of arguments when they are encountered while …\nFamily of related arguments.\nContainer for parse results.\nParse a set of arguments into a user-defined container.\nGenerates the <code>Args</code> impl.\nEnables colored output only when the output is going to a …\nRepresents the color preferences for program output\nBuild a command-line interface.\nCreate a <code>Command</code> relevant for a user-defined container.\nName of a command, without arguments. May be relative to …\nA single string containing a command and its arguments.\nCapture the remaining arguments as a command name and …\nWhen encountered, increment a <code>u8</code> counter starting from <code>0</code>.\nPath to a directory.\nEmail address.\nCommand Line Argument Parser Error\nPath to an executable file.\nPath to a file.\nConverts an instance of <code>ArgMatches</code> to a user-defined …\nWhen encountered, display <code>Command::print_help</code>\nWhen encountered, display <code>Command::print_long_help</code>\nWhen encountered, display <code>Command::print_help</code>\nHost name of a computer. Shells usually parse <code>/etc/hosts</code> …\n<code>Arg</code> or <code>ArgGroup</code> identifier\nDisables colored output no matter if the output is going …\nNone of the hints below apply. Disables shell completion …\nParse command-line arguments into <code>Self</code>.\nGenerates the <code>Parser</code> implementation.\nWhen encountered, store the associated value(s) in …\nWhen encountered, act as if <code>&quot;false&quot;</code> was encountered on the …\nWhen encountered, act as if <code>&quot;true&quot;</code> was encountered on the …\nParse a sub-command into a user-defined enum.\nGenerates the <code>Subcommand</code> impl.\nDefault value if hint is not specified. Follows shell …\nComplete web address.\nName of a local operating system user.\nParse arguments into enums.\nGenerates the <code>ValueEnum</code> impl.\nProvide shell with hint on how to complete an argument.\nWhen encountered, display <code>Command::version</code>\nSets the program’s description for the short help (<code>-h</code>).\nSpecify how to react to an argument when parsing it.\nFree-form help text for after auto-generated short help (<code>-h</code>…\nFree-form help text for after auto-generated long help (…\nAdd an alias, which functions as a hidden long flag.\nSets a hidden alias to this subcommand.\nAdd aliases, which function as hidden long flags.\nSets multiple hidden aliases to this subcommand.\nAssume unexpected positional arguments are a <code>subcommand</code>.\nAllows values which start with a leading hyphen (<code>-</code>)\nAllows one to implement two styles of CLIs where …\nAllows negative numbers to pass as values.\nAdds an argument to this group by name\nAdds an argument to the list of valid possibilities.\nCreate an <code>Arg</code> from a usage string.\nExit gracefully if no arguments are present (e.g. <code>$ myprog</code>…\nAdds multiple arguments to this group by name\nAdds multiple arguments to the list of valid possibilities.\nSpecifies that use of an argument prevents the use of …\nReplace prior occurrences of arguments rather than error\nCheck if any args were present on the command line\nGet the raw string of the <code>Id</code>\nAppend to <code>Command</code> so it can instantiate <code>Self</code>.\nAppend to <code>Command</code> so it can update <code>self</code>.\nAppend to <code>Command</code> so it can instantiate <code>Self</code>.\nAppend to <code>Command</code> so it can update <code>self</code>.\nSets the author(s) for the help message.\nFree-form help text for before auto-generated short help (…\nFree-form help text for before auto-generated long help (…\nOverrides the runtime-determined name of the binary for …\nPrepare for introspecting on all included <code>Command</code>s\nDefine <code>Command</code> line arguments\nSets when to color output.\nBuild a <code>Command</code> that can instantiate <code>Self</code>.\nRequires <code>cargo</code> feature flag to be enabled.\nBuild a <code>Command</code> that can update <code>self</code>.\nThis argument is mutually exclusive with the specified …\nSpecify an argument or group that must <strong>not</strong> be present when …\nThis argument is mutually exclusive with the specified …\nSpecify arguments or groups that must <strong>not</strong> be present when …\nCheck if values are present for the argument or group id\nCatch problems earlier in the development cycle.\nValue for the argument when the flag is present but no …\nValue for the argument when the flag is present but no …\nValue for the argument when the flag is present but no …\nValue for the argument when the flag is present but no …\nValue for the argument when not present.\nSpecifies the value of the argument if <code>arg</code> has been used …\nSpecifies multiple values and conditions in the same …\nValue for the argument when not present.\nDelay initialization for parts of the <code>Command</code>\nDisables colorized help messages.\nDisables <code>-h</code> and <code>--help</code> flag.\nDisables the <code>help</code> <code>subcommand</code>.\nDisables <code>-V</code> and <code>--version</code> flag.\nOverrides the runtime-determined display name of the …\nAllows custom ordering of args within the help message.\nSet the placement of this subcommand within the help.\nDisables the automatic delimiting of values after <code>--</code> or …\nRead from <code>name</code> environment variable when argument is not …\nError reporting\nCustom error message for post-parsing validation\nThis argument must be passed alone; it conflicts with all …\nSpecifies how to parse external subcommand arguments.\nFind subcommand such that its name or one of aliases …\nFind subcommand such that its name or one of aliases …\nFlatten subcommand help into the current command’s help\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstantiate <code>Self</code> from <code>ArgMatches</code>, parsing the arguments as …\nInstantiate <code>Self</code> from <code>ArgMatches</code>, parsing the arguments as …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nParse an argument into <code>Self</code>.\nGet the help message specified via <code>Command::about</code>.\nBehavior when parsing the argument\nReturns the help heading for listing subcommands.\nReturns the help heading for listing subcommands.\nGet hidden aliases for this argument, if any\nIterate through the <em>hidden</em> aliases for this subcommand.\nGet <em>all</em> aliases for this argument, if any, both visible …\nIterate through the set of <em>all</em> the aliases for this …\nIterate through the set of <em>all</em> the long aliases for this …\nGet <em>all</em> short aliases for this argument, if any, both …\nIterate through the set of <em>all</em> the short aliases for this …\nGet a list of all arguments the given argument conflicts …\nGetters for all args. It will return a vector of <code>Id</code>\nIterate through the set of arguments.\nGet the authors of the cmd.\nReturns the help heading for listing subcommands.\nReturns the help heading for listing subcommands.\nGet the name of the binary.\nShould we color the output?\nGets the value of a specific <code>ArgAction::Count</code> flag\nGet the default values specified for this argument, if any\nGet the name of the binary.\nGet the environment variable name specified for this …\nConfigured parser for values passed to an external …\nGets the value of a specific <code>ArgAction::SetTrue</code> or …\nIterate through the set of groups.\nGet the help specified for this argument, if any\nGet the help heading specified for this argument, if any\nGet the name of the argument\nGet the name of the group\nGet the index of this argument, if any\nGet the long option name for this argument, if any\nGet the help message specified via <code>Command::long_about</code>.\nGet the long option name and its visible aliases, if any\nGet the long flag of the subcommand.\nGet the long help specified for this argument, if any\nGet the long version of the cmd.\nIterate over values of a specific option or positional …\nParse <code>env::args_os</code>, exiting on failure.\nParse the specified arguments, exiting on failure.\nParse <code>env::args_os</code>, exiting on failure.\nGet the name of the cmd.\nGet all known names of the cmd (i.e. primary name and …\nGet the custom section heading specified via …\nGet the number of values for this argument.\nIterate over the values passed to each occurrence of an …\nGets the value of a specific option or positional argument.\nIterate through the <em>options</em>.\nIterate through the <em>positionals</em> arguments.\nGet the names of possible values for this argument. Only …\nIterate over the original argument values.\nIterate over the original values for each occurrence of an …\nGet the short option name for this argument, if any\nGet the short option name and its visible aliases, if any\nGet the short flag of the subcommand.\nReturn the current <code>Styles</code> for the <code>Command</code>\nReturns the help heading for listing subcommands.\nReturns the subcommand value name.\nIterate through the set of subcommands, getting a …\nIterate through the set of subcommands, getting a mutable …\nGet the delimiter between multiple values\nGet the value hint of this argument\nGet the names of values for this argument.\nConfigured parser for argument values\nGet the value terminator for this argument. The …\nGet the version of the cmd.\nGet visible aliases for this argument, if any\nIterate through the <em>visible</em> aliases for this subcommand.\nIterate through the <em>visible</em> long aliases for this …\nGet visible short aliases for this argument, if any\nIterate through the <em>visible</em> short aliases for this …\nSpecifies that an argument can be matched to all child …\nThe name of the <code>ArgGroup</code> the argument belongs to.\nAdds an <code>ArgGroup</code> to the application.\nReport the <code>ArgGroup::id</code> for this set of arguments\nThe names of <code>ArgGroup</code>’s the argument belongs to.\nAdds multiple <code>ArgGroup</code>s to the <code>Command</code> at once.\nTest whether <code>Self</code> can parse a specific subcommand\nReturns <code>true</code> if this <code>Command</code> has subcommands.\nSets the description of the argument for short help (<code>-h</code>).\nPanic if help descriptions are omitted.\nOverride the current help section.\nSets the help template to be used, overriding the default …\nDo not display the argument in help message.\nSpecifies that this <code>subcommand</code> should be hidden from help …\nDo not display the default value of the argument in the …\nDo not display in help the environment variable name.\nDo not display in help any values inside the associated …\nHides an argument from long help (<code>--help</code>).\nDo not display the possible values in the help message.\nTells <code>clap</code> <em>not</em> to print possible values when displaying …\nHides an argument from short help (<code>-h</code>).\nSet the identifier used for referencing this argument in …\nSets the group name.\nIterate over <code>Arg</code> and <code>ArgGroup</code> <code>Id</code>s via <code>ArgMatches::ids</code>.\nMatch values against <code>PossibleValuesParser</code> without matching …\nTry not to fail on parse errors, like missing option …\nSpecifies the index of a positional argument <strong>starting at</strong> 1.\nThe first index of that an argument showed up.\nAll indices an argument appeared at when parsing.\nAllow partial matches of long arguments or their aliases.\nAllow partial matches of subcommand names and their aliases…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReport whether <code>Command::allow_external_subcommands</code> is set\nReport whether <code>Arg::allow_hyphen_values</code> is set\nReport whether <code>Command::allow_missing_positional</code> is set\nReport whether <code>Arg::allow_negative_numbers</code> is set\nReport whether <code>Command::arg_required_else_help</code> is set\nReport whether <code>Command::args_conflicts_with_subcommands</code> is …\nReport whether <code>Command::disable_colored_help</code> is set\nReport whether <code>Command::disable_help_flag</code> is set\nReport whether <code>Command::disable_help_subcommand</code> is set\nReport whether <code>Command::disable_version_flag</code> is set\nReport whether <code>Command::dont_delimit_trailing_values</code> is set\nReports whether <code>Arg::exclusive</code> is set\nGet the custom section heading specified via …\nReport whether <code>Arg::global</code> is set\nReport whether <code>Arg::hide_default_value</code> is set\nReport whether <code>Arg::hide_env</code> is set\nReport whether <code>Arg::hide_env_values</code> is set\nReport whether <code>Arg::hide_long_help</code> is set\nReport whether <code>Arg::hide_possible_values</code> is set\nReport whether <code>Arg::hide</code> is set\nReport whether <code>Command::hide</code> is set\nReport whether <code>Arg::hide_short_help</code> is set\nReports whether <code>Arg::ignore_case</code> is set\nReports whether <code>Arg::last</code> is set\nReport whether <code>Command::multicall</code> is set\nReturn true if the group allows more than one of the …\nReport whether <code>Arg::next_line_help</code> is set\nReport whether <code>Command::next_line_help</code> is set\nReport whether <code>Command::no_binary_name</code> is set\nChecks whether this argument is a positional or not.\nReport whether <code>Command::propagate_version</code> is set\nReport whether <code>Arg::require_equals</code> is set\nReports whether <code>Arg::required</code> is set\nReports whether <code>ArgGroup::required</code> is set\nReport whether <code>Command::subcommand_negates_reqs</code> is set\nReport whether <code>Command::subcommand_precedence_over_arg</code> is …\nReport whether <code>Command::subcommand_required</code> is set\nReport whether <code>Arg::trailing_var_arg</code> is set\nThis arg is the last, or final, positional argument (i.e. …\nSets the long version of the argument without the …\nSets the program’s description for the long help (<code>--help</code>…\nSets the long version of the subcommand flag without the …\nAdd an alias, which functions as a “hidden” long flag …\nAdd aliases, which function as “hidden” long flag …\nSets the description of the argument for long help (<code>--help</code>…\nSets the version for the long version (<code>--version</code>) and help …\nLimit the line length for wrapping help when using the …\nMultiple-personality program dispatched on the binary name …\nAllows more than one of the <code>Arg</code>s in this group to be used. …\nAllows one to mutate an <code>Arg</code> after it’s been added to a …\nAllows one to mutate all <code>Arg</code>s after they’ve been added …\nAllows one to mutate an <code>ArgGroup</code> after it’s been added …\nAllows one to mutate a <code>Command</code> after it’s been added as …\n(Re)Sets the program’s name.\nCreate a new <code>Arg</code> with a unique name.\nCreate a <code>ArgGroup</code> using a unique name.\nCreates a new instance of an <code>Command</code>.\nChange the starting value for assigning future display …\nSet the default section heading for future args.\nRender the help on the line after the argument.\nPlaces the help string for all arguments and subcommands …\nSpecifies that the parser should not assume the first …\nSpecifies the number of arguments parsed per occurrence\nOverrides the <code>clap</code> generated help message (both <code>-h</code> and …\nOverrides the <code>clap</code> generated usage string for help and …\nSets an overridable argument.\nSets multiple mutually overridable arguments by name.\nParse from <code>std::env::args_os()</code>, exit on error.\nParse from iterator, exit on error.\n<code>Command</code> line argument parser\nReport all <code>possible_values</code>\nPrints the short help message (<code>-h</code>) to <code>io::stdout()</code>.\nPrints the long help message (<code>--help</code>) to <code>io::stdout()</code>.\nSpecifies to use the version of the current command for …\nConsume all following arguments.\nReturn values of a specific option or positional argument.\nReturn values for each occurrence of an option.\nReturns the value of a specific option or positional …\nReturn the name and <code>ArgMatches</code> of the current subcommand.\nRender the short help message (<code>-h</code>) to a <code>StyledStr</code>\nRender the long help message (<code>--help</code>) to a <code>StyledStr</code>.\nVersion message rendered as if the user ran <code>--version</code>.\nUsage statement\nVersion message rendered as if the user ran <code>-V</code>.\nRequires that options use the <code>--option=val</code> syntax\nSpecifies that the argument must be present.\nRequire an argument from the group to be present when …\nThis argument is required only if the specified <code>arg</code> is …\nSpecify this argument is required based on multiple …\nSpecify this argument is required based on multiple …\nSet this arg as required as long as the specified argument …\nSets this arg as required unless <em>all</em> of the specified …\nSets this arg as required unless <em>any</em> of the specified …\nSets an argument that is required when this one is present\nSpecify an argument or group that must be present when …\nSpecify arguments or groups that must be present when this …\nRequire another argument if this arg matches the …\nAllows multiple conditional requirements.\nSet binary name. Uses <code>&amp;mut self</code> instead of <code>self</code>.\nSets the short version of the argument without the …\nAdd an alias, which functions as a hidden short flag.\nAdd aliases, which functions as a hidden short flag.\nSets the short version of the subcommand flag without the …\nAdd an alias, which functions as  “hidden” short flag …\nAdd aliases, which function as “hidden” short flag …\nSets the <code>Styles</code> for terminal output\nAdds a subcommand to the list of valid possibilities.\nThe name and <code>ArgMatches</code> of the current subcommand.\nSets the help heading used for subcommands when printing …\nThe <code>ArgMatches</code> for the current subcommand.\nThe name of the current subcommand.\nAllows <code>subcommands</code> to override all requirements of the …")