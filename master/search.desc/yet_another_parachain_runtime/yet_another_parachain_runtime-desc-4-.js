searchState.loadedDescShard("yet_another_parachain_runtime", 4, "A relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nThis module’s XCM version.\nOrigin should be interpreted as an XCM native origin and …\nContextual data pertaining to a specific list of XCM …\nError codes used in XCM. The first errors codes have …\nA hash type for identifying messages.\nDeduct some <code>fees</code> to the sovereign account of the given …\nActually carry out the delivery operation for a previously …\nThe destination to which the query response message should …\nExecute some XCM <code>message</code> with the message <code>hash</code> from <code>origin</code> …\nExecute some XCM <code>message</code> with the message <code>hash</code> from <code>origin</code> …\nThe fungibility of the asset, which contains either the …\nThe overall asset identity (aka <em>class</em>, in the case of a …\nThe interior (i.e. non-parent) junctions that this …\nThe interior (i.e. non-parent) junctions that this …\nThe <code>max_weight</code> field of the <code>QueryResponse</code> message.\nThe identity of the XCM; this may be a hash of its …\nThe current value of the Origin register of the <code>XCVM</code>.\nThe number of parent junctions at the beginning of this …\nThe number of parent junctions at the beginning of this …\nThe <code>query_id</code> field of the <code>QueryResponse</code> message.\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe current value of the Topic register of the <code>XCVM</code>.\nCheck whether the given <code>message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe EIP-155 chain ID.\nAn abstract location; this is a name which may mean …\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nThe unambiguous administration body (for Polkadot, an …\nAlter the current Origin to another given origin.\nAll assets in Holding.\nAll assets in Holding, up to <code>u32</code> individual assets …\nAll assets in Holding of a given fungibility and ID.\nAll assets in Holding of a given fungibility and ID up to …\nA unit struct which can be converted into a <code>MultiLocation</code> …\nA unit struct which can be converted into a <code>MultiLocation</code> …\nA 16-byte fixed-length datum.\nA 32-byte fixed-length datum.\nA 4-byte fixed-length datum.\nAn 8-byte fixed-length datum.\nClassification of an asset being concrete or abstract.\nA general identifier for an instance of a non-fungible …\nThe given asset is not handled.\nSome assets.\nNo less than the given proportion of members of the body.\nThe Origin Register does not contain a valid value for …\nThe XCM did not pass the barrier condition for execution.\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\nAn identifier of a pluralistic body.\nA part of a pluralistic body.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nExecution completed successfully; given weight was used.\nA specific location identifying an asset.\nThe unambiguous defense body (for Polkadot, an opinion on …\nSpecify the filter as being everything contained by the …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe given message cannot be translated into a format …\nThe given message cannot be translated into a format that …\nThe status of a dispatch attempt using <code>Transact</code>.\nContains the error value\nContains the error value\nExecution did not start due to the given error.\nAn Ethereum network specified by its chain ID.\nAttempt to send a message greater than the maximum …\nMessage could not be sent due to its size exceeding the …\nRecursion stack limit reached\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nType of XCM message executor.\nThe outcome of an XCM instruction.\nThe unambiguous executive body (for Polkadot, this would …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nThe message was unable to be exported.\nSend a message on to Non-Local Consensus system.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees needed to be paid in order to send the message and …\nFees were required which the origin could not pay.\nA given number of members of the body, out of some larger …\nClassification of whether an asset is fungible or not, …\nA fungible asset; we record a number of units, as a <code>u128</code> …\nThe asset is fungible.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA global network capable of externalizing its own …\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nExecution started, but did not complete successfully due …\nAn indexed body.\nA compact index. Technically this could be greater than …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nThe basic concrete type of <code>Instruction</code>, which doesn’t …\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nThe unambiguous judicial body (this doesn’t exist on …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nThe unambiguous legislative body (for Polkadot, this could …\nWeight limit imposed of the inner value.\nType alias for a better transition to V4.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nLock the locally held asset and prevent further transfer …\nSome other error with locking.\nUsed by <code>Transact</code> to indicate that the given weight limit …\nA given number of members of the body.\nA needed argument is <code>None</code> when it should be <code>Some</code>.\nA named body.\nMore than the given proportion of members of the body.\nEither an amount of a single fungible asset, or a single …\n<code>MultiAsset</code> collection, defined either by a number of …\nA <code>Vec</code> of <code>MultiAsset</code>s.\nA relative path between state-bearing consensus systems.\nThe given pallet’s name is different to that expected.\nOrigin should just be the native dispatch origin …\nA global identifier of a data structure existing within …\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nA non-fungible asset. We record the instance identifier in …\nThe asset is not fungible.\nThe message and destination combination was not recognized …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nNo response. Serves as a neutral default.\nContains the success value\nContains the success value\nThe unambiguous child.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nThe provided pallet index was not found.\nThe index, instance name, pallet name and version of some …\nAn indexed parachain belonging to and operated by the …\nA unit struct which can be converted into a <code>MultiLocation</code> …\nA tuple struct which can be converted into a <code>MultiLocation</code> …\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nThe Polkadot Bulletin chain.\nAn identifier for a query.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nInformation regarding the composition of a query response.\n<code>MultiLocation</code> value failed to be reanchored.\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nResponse data to a query.\nThe Rococo testnet Relay-chain.\nError result value when attempting to send an XCM message.\nResult value when attempting to send an XCM message.\nUtility for sending an XCM message to a given location.\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nOrigin should just be the standard account-based origin …\nAsk the destination system to respond with the most recent …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nThe unambiguous technical body (for Polkadot, this would …\nIntermediate value which connects the two phases of the …\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nDestination is routable, but there is some issue with the …\nDestination is routable, but there is some issue with the …\nAlways throws an error of type <code>Trap</code>.\nUsed by the <code>Trap</code> instruction to force an error …\nThe unambiguous treasury body (for Polkadot, an opinion on …\nThe universal location of the local consensus is improper.\nUndefined - used if the non-fungible asset class has only …\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nThe only body in its context.\nSet the Origin Register to be some child of the Universal …\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nNo weight limit imposed.\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nDestination is known to be unroutable.\nDestination is known to be unroutable. This is considered …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nAn XCM version.\nThe given pallet’s version has an incompatible version …\nThe body’s declaration, under whatever means it decides.\nAn optional weight limit.\nExecution of the XCM would potentially result in a greater …\nThe weight of an XCM message is not computable ahead of …\nThe Westend testnet Relay-chain.\nSpecify the filter as the given <code>WildMultiAsset</code> wildcard.\nClassification of whether an asset is fungible or not.\nA wildcard representing a set of assets.\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe Wococo testnet Relay-chain.\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nThis module’s XCM version.\nThe basic concrete type of <code>Xcm</code>, which doesn’t make any …\nOrigin should be interpreted as an XCM native origin and …\nContextual data pertaining to a specific list of XCM …\nError codes used in XCM. The first errors codes have …\nA hash type for identifying messages.\nDeduct some <code>fees</code> to the sovereign account of the given …\nActually carry out the delivery operation for a previously …\nThe destination to which the query response message should …\nExecute some XCM <code>message</code> with the message <code>hash</code> from <code>origin</code> …\nExecute some XCM <code>message</code> with the message <code>hash</code> from <code>origin</code> …\nThe fungibility of the asset, which contains either the …\nThe overall asset identity (aka <em>class</em>, in the case of a …\nThe interior (i.e. non-parent) junctions that this …\nThe interior (i.e. non-parent) junctions that this …\nThe <code>max_weight</code> field of the <code>QueryResponse</code> message.\nThe identity of the XCM; this may be a hash of its …\nThe current value of the Origin register of the <code>XCVM</code>.\nThe number of parent junctions at the beginning of this …\nThe number of parent junctions at the beginning of this …\nThe <code>query_id</code> field of the <code>QueryResponse</code> message.\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe current value of the Topic register of the <code>XCVM</code>.\nCheck whether the given <code>message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe EIP-155 chain ID.\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nThe unambiguous administration body (for Polkadot, an …\nAlter the current Origin to another given origin.\nAll assets in Holding.\nAll assets in Holding, up to <code>u32</code> individual assets …\nAll assets in Holding of a given fungibility and ID.\nAll assets in Holding of a given fungibility and ID up to …\nA unit struct which can be converted into a <code>Location</code> of …\nA unit struct which can be converted into a <code>Location</code> of …\nAccess to all the instructions\nA 16-byte fixed-length datum.\nA 32-byte fixed-length datum.\nA 4-byte fixed-length datum.\nAn 8-byte fixed-length datum.\nEither an amount of a single fungible asset, or a single …\n<code>Asset</code> collection, defined either by a number of <code>Assets</code> or …\nLocation to identify an asset.\nA general identifier for an instance of a non-fungible …\nThe given asset is not handled.\nA <code>Vec</code> of <code>Asset</code>s.\nSome assets.\nNo less than the given proportion of members of the body.\nThe Origin Register does not contain a valid value for …\nThe XCM did not pass the barrier condition for execution.\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\nAn identifier of a pluralistic body.\nA part of a pluralistic body.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nExecution completed successfully; given weight was used.\nThe unambiguous defense body (for Polkadot, an opinion on …\nSpecify the filter as being everything contained by the …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe given message cannot be translated into a format …\nThe given message cannot be translated into a format that …\nThe status of a dispatch attempt using <code>Transact</code>.\nContains the error value\nContains the error value\nError codes used in XCM. The first errors codes have …\nExecution did not start due to the given error.\nType to return in case of an error.\nAn Ethereum network specified by its chain ID.\nAttempt to send a message greater than the maximum …\nMessage could not be sent due to its size exceeding the …\nRecursion stack limit reached\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nType of XCM message executor.\nThe outcome of an XCM instruction.\nThe unambiguous executive body (for Polkadot, this would …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nNeed to explicitly state it won’t pay for fees\nThe message was unable to be exported.\nSend a message on to Non-Local Consensus system.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees needed to be paid in order to send the message and …\nFees were required which the origin could not pay.\nA given number of members of the body, out of some larger …\nClassification of whether an asset is fungible or not, …\nA fungible asset; we record a number of units, as a <code>u128</code> …\nThe asset is fungible.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA global network capable of externalizing its own …\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nExecution started, but did not complete successfully due …\nAn indexed body.\nA compact index. Technically this could be greater than …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nCross-Consensus Message: A message from one consensus …\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nThe unambiguous judicial body (this doesn’t exist on …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nThe unambiguous legislative body (for Polkadot, this could …\nWeight limit imposed of the inner value.\nThe holding register was loaded, now to buy execution\nA relative path between state-bearing consensus systems.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nLock the locally held asset and prevent further transfer …\nSome other error with locking.\nMaximum number of items we expect in a single <code>Assets</code> value.\nMaximum size of the encoded error code coming from a …\nUsed by <code>Transact</code> to indicate that the given weight limit …\nA given number of members of the body.\nA needed argument is <code>None</code> when it should be <code>Some</code>.\nA named body.\nMore than the given proportion of members of the body.\nThe given pallet’s name is different to that expected.\nOrigin should just be the native dispatch origin …\nA global identifier of a data structure existing within …\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nA non-fungible asset. We record the instance identifier in …\nThe asset is not fungible.\nThe message and destination combination was not recognized …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nNo response. Serves as a neutral default.\nContains the success value\nContains the success value\nThe unambiguous child.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nThe provided pallet index was not found.\nThe index, instance name, pallet name and version of some …\nAn indexed parachain belonging to and operated by the …\nA unit struct which can be converted into a <code>Location</code> of …\nA tuple struct which can be converted into a <code>Location</code> of …\nYou need to pay for execution\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nThe Polkadot Bulletin chain.\nAn identifier for a query.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nInformation regarding the composition of a query response.\n<code>MultiLocation</code> value failed to be reanchored.\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nResponse data to a query.\nThe Rococo testnet Relay-chain.\nError result value when attempting to send an XCM message.\nResult value when attempting to send an XCM message.\nUtility for sending an XCM message to a given location.\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nOrigin should just be the standard account-based origin …\nAsk the destination system to respond with the most recent …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nThe unambiguous technical body (for Polkadot, this would …\nIntermediate value which connects the two phases of the …\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nDestination is routable, but there is some issue with the …\nDestination is routable, but there is some issue with the …\nUsed by the <code>Trap</code> instruction to force an error …\nAlways throws an error of type <code>Trap</code>.\nThe unambiguous treasury body (for Polkadot, an opinion on …\nThe universal location of the local consensus is improper.\nUndefined - used if the non-fungible asset class has only …\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nThe only body in its context.\nSet the Origin Register to be some child of the Universal …\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nNo weight limit imposed.\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nDestination is known to be unroutable.\nDestination is known to be unroutable. This is considered …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nThis module’s XCM version.\nAn XCM version.\nThe given pallet’s version has an incompatible version …\nThe body’s declaration, under whatever means it decides.\nAn optional weight limit.\nExecution of the XCM would potentially result in a greater …\nThe weight of an XCM message is not computable ahead of …\nThe Westend testnet Relay-chain.\nSpecify the filter as the given <code>WildAsset</code> wildcard.\nA wildcard representing a set of assets.\nClassification of whether an asset is fungible or not.\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe Wococo testnet Relay-chain.\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nOrigin should be interpreted as an XCM native origin and …\nType used to build XCM programs\nA trait for types that track state inside the XcmBuilder\nContextual data pertaining to a specific list of XCM …\nA hash type for identifying messages.\nAlter the current Origin to another given origin.\nCreates a new <code>Location</code> with <code>parents</code> and an empty (<code>Here</code>) …\nMutate <code>self</code> so that it is suffixed with <code>suffix</code>.\nMutate <code>self</code> so that it is suffixed with <code>suffix</code>.\nConsume <code>self</code> and return its value suffixed with <code>suffix</code>.\nCasts <code>self</code> into a slice containing <code>Junction</code>s.\nCasts <code>self</code> into a mutable slice containing <code>Junction</code>s.\nReturns the junction at index <code>i</code>, or <code>None</code> if the location …\nReturns the junction at index <code>i</code>, or <code>None</code> if the location …\nReturns a mutable reference to the junction at index <code>i</code>, or …\nReturns a mutable reference to the junction at index <code>i</code>, or …\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nReturn the Location subsection identifying the chain that …\nDeduct some <code>fees</code> to the sovereign account of the given …\nCreate some assets which are being held on behalf of the …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns boolean indicating whether <code>self</code> contains only the …\nMaximum count of assets allowed to match, if any.\nMaximum count of assets it is possible to match, if known.\nConsume self and return the equivalent version but counted …\nDecrements the parent count by 1.\nActually carry out the delivery operation for a previously …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe destination to which the query response message should …\nConsume <code>self</code> and return the inner vec.\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nSend a message on to Non-Local Consensus system.\nReturns first junction, or <code>None</code> if the location is empty.\nReturn the first instruction, if any.\nReturns the first interior junction, or <code>None</code> if the …\nExecute a function <code>f</code> on every junction. We use this since …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new instance of <code>Assets</code> from a <code>Vec&lt;Asset&gt;</code> whose …\nCreate a new instance of <code>Assets</code> from a <code>Vec&lt;Asset&gt;</code> whose …\nThe fungibility of the asset, which contains either the …\nReturn a reference to an item at a specific index or <code>None</code> …\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nExtract the network ID treating this value as a universal …\nCreates a new <code>Location</code> with 0 parents and a <code>Here</code> interior.\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nThe overall asset identity (aka <em>class</em>, in the case of a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nReturn a reference to the inner vec.\nReturn a reference to the inner value.\nReturn a mutable reference to the inner value.\nReturn a reference to the interior field.\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nReturn a mutable reference to the interior field.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUse the value of <code>self</code> along with a <code>fun</code> fungibility …\nConvert <code>self</code> into a <code>Location</code> containing <code>n</code> parents.\nConvert <code>self</code> into a <code>Location</code> containing <code>n</code> parents.\nConsume <code>self</code> and return the inner vec.\nConsume and return the inner value.\nConsume and return an iterator over the items.\nConvert <code>self</code> into a <code>Location</code> containing 0 parents.\nConvert <code>self</code> into a <code>Location</code> containing 0 parents.\nReturn the only instruction, contained in <code>Self</code>, iff only …\nConvert <code>self</code> into a <code>VersionedLocation</code> containing 0 parents.\nConsume <code>self</code> and return the equivalent <code>VersionedLocation</code> …\nUse the value of <code>self</code> along with a <code>fun</code> fungibility …\nTreating <code>self</code> as the universal context, return the …\nReturn <code>true</code> if no instructions are held in <code>self</code>.\nWhether the <code>Location</code> has no parents and has a <code>Here</code> …\nReturns <code>true</code> if this definitely represents no asset.\nReturns a reference iterator over the junctions.\nReturn an iterator over references to the items.\nReturn an iterator over mutable references to the items.\nReturns last junction, or <code>None</code> if the location is empty.\nReturns last junction, or <code>None</code> if the location is empty or …\nReturn the last instruction, if any.\nReturn the number of distinct asset instances contained.\nReturns the number of junctions in <code>self</code>.\nReturns the number of parents and junctions in <code>self</code>.\nReturn the number of instructions held in <code>self</code>.\nExplicit limit on number of assets allowed to match, if …\nExplicit limit placed on the number of items, if any.\nLock the locally held asset and prevent further transfer …\nEnsures that self begins with <code>prefix</code> and that it has a …\nEnsures that <code>self</code> has the same number of parents as <code>prefix</code>…\nReturns true if the wild element of <code>self</code> matches <code>inner</code>.\nReturns true if <code>inner</code> would be matched by <code>self</code>.\nThe <code>max_weight</code> field of the <code>QueryResponse</code> message.\nThe identity of the XCM; this may be a hash of its …\nA new (empty) value.\nCreates a new <code>Location</code> with the given number of parents …\nCreate an empty instance.\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nReturn the only instruction, contained in <code>Self</code>, iff only …\nConsume and either return <code>self</code> if it contains some …\nThe current value of the Origin register of the <code>XCVM</code>.\nCreates a new <code>Location</code> which evaluates to the parent …\nReturns the number of <code>Parent</code> junctions at the beginning of …\nThe number of parent junctions at the beginning of this …\nA prelude for importing all types typically used when …\nPrepend a <code>Location</code> to an asset id, giving it a new root …\nPrepend a <code>Location</code> to a concrete asset, giving it a new …\nPrepend a <code>Location</code> to any concrete asset items, giving it …\nMutate <code>self</code> so that it is prefixed with <code>prefix</code>.\nConsume <code>self</code> and return its value prefixed with <code>prefix</code>.\nAdd some asset onto the list, saturating. This is quite a …\nMutates <code>self</code> to be appended with <code>new</code> or returns an <code>Err</code> …\nMutates <code>self</code> to be prepended with <code>new</code> or returns an <code>Err</code> …\nMutates <code>self</code>, prefixing its interior junctions with <code>new</code>. …\nMutates <code>self</code>, suffixing its interior junctions with <code>new</code>. …\nConsumes <code>self</code> and returns a <code>Junctions</code> prefixed with <code>new</code>, …\nConsumes <code>self</code> and returns a <code>Location</code> prefixed with <code>new</code>, or …\nConsumes <code>self</code> and returns a <code>Junctions</code> suffixed with <code>new</code>, …\nConsumes <code>self</code> and returns a <code>Location</code> suffixed with <code>new</code>, or …\nThe <code>query_id</code> field of the <code>QueryResponse</code> message.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nMutate <code>self</code> so that it represents the same location from …\nMutate the asset to represent the same value from the …\nMutate the location of the asset identifier if concrete, …\nMutate the asset to represent the same value from the …\nMutate the location of the asset identifier if concrete, …\nMutate <code>self</code> so that it represents the same location from …\nConsume <code>self</code> and return a new value representing the same …\nMutate the location of the asset identifier if concrete, …\nConsume <code>self</code> and return a new value representing the same …\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nConsumes <code>self</code> and returns how <code>viewer</code> would address it …\nRemove the <code>NetworkId</code> value.\nRemove the <code>NetworkId</code> value in any <code>Junction</code>s.\nRemove the <code>NetworkId</code> value in any interior <code>Junction</code>s.\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nConvenience function for using a <code>SendXcm</code> implementation. …\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nRemove any unneeded parents/junctions in <code>self</code> based on the …\nSplits off the first junction, returning the remaining …\nSplits off the first interior junction, returning the …\nExtract the network ID and the interior consensus …\nSplits off the last junction, returning the remaining …\nSplits off the last interior junction, returning the …\nAsk the destination system to respond with the most recent …\nRemoves the first element from <code>self</code>, returning it (or <code>None</code> …\nRemoves the first interior junction from <code>self</code>, returning it\nRemoves the last element from <code>self</code>, returning it (or <code>None</code> …\nRemoves the last element from <code>interior</code>, returning it (or …\nThe current value of the Topic register of the <code>XCVM</code>.\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nAlways throws an error of type <code>Trap</code>.\nSet the Origin Register to be some child of the Universal …\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nReturns the parent count and the interior <code>Junctions</code> as a …\nA directive to indicate that the origin expects free …\nA directive to indicate that the origin expects free …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nCheck whether the given <code>_message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nHow much weight was used by the XCM execution attempt.\nConstructor which sets the message ID to the supplied …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nTreat <code>self</code> as a universal location and the context of …\nThe EIP-155 chain ID.\nAlter the current Origin to another given origin.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nSend a message on to Non-Local Consensus system.\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nThe basic concrete type of <code>Instruction</code>, which doesn’t …\nLock the locally held asset and prevent further transfer …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nAsk the destination system to respond with the most recent …\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nAlways throws an error of type <code>Trap</code>.\nSet the Origin Register to be some child of the Universal …\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe basic concrete type of <code>Xcm</code>, which doesn’t make any …\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nThe unambiguous administration body (for Polkadot, an …\nAlter the current Origin to another given origin.\nAll assets in Holding.\nAll assets in Holding, up to <code>u32</code> individual assets …\nAll assets in Holding of a given fungibility and ID.\nAll assets in Holding of a given fungibility and ID up to …\nA unit struct which can be converted into a <code>Location</code> of …\nA unit struct which can be converted into a <code>Location</code> of …\nA 16-byte fixed-length datum.\nA 32-byte fixed-length datum.\nA 4-byte fixed-length datum.\nAn 8-byte fixed-length datum.\nEither an amount of a single fungible asset, or a single …\n<code>Asset</code> collection, defined either by a number of <code>Assets</code> or …\nLocation to identify an asset.\nA general identifier for an instance of a non-fungible …\nThe given asset is not handled.\nA <code>Vec</code> of <code>Asset</code>s.\nSome assets.\nNo less than the given proportion of members of the body.\nThe Origin Register does not contain a valid value for …\nThe XCM did not pass the barrier condition for execution.\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\nAn identifier of a pluralistic body.\nA part of a pluralistic body.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nExecution completed successfully; given weight was used.\nThe unambiguous defense body (for Polkadot, an opinion on …\nSpecify the filter as being everything contained by the …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe given message cannot be translated into a format …\nThe given message cannot be translated into a format that …\nThe status of a dispatch attempt using <code>Transact</code>.\nContains the error value\nContains the error value\nExecution did not start due to the given error.\nType to return in case of an error.\nAn Ethereum network specified by its chain ID.\nAttempt to send a message greater than the maximum …\nMessage could not be sent due to its size exceeding the …\nRecursion stack limit reached\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nType of XCM message executor.\nThe outcome of an XCM instruction.\nThe unambiguous executive body (for Polkadot, this would …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nThe message was unable to be exported.\nSend a message on to Non-Local Consensus system.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees needed to be paid in order to send the message and …\nFees were required which the origin could not pay.\nA given number of members of the body, out of some larger …\nClassification of whether an asset is fungible or not, …\nA fungible asset; we record a number of units, as a <code>u128</code> …\nThe asset is fungible.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA global network capable of externalizing its own …\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nExecution started, but did not complete successfully due …\nAn indexed body.\nA compact index. Technically this could be greater than …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nCross-Consensus Message: A message from one consensus …\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nThe unambiguous judicial body (this doesn’t exist on …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nThe unambiguous legislative body (for Polkadot, this could …\nWeight limit imposed of the inner value.\nA relative path between state-bearing consensus systems.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nLock the locally held asset and prevent further transfer …\nSome other error with locking.\nUsed by <code>Transact</code> to indicate that the given weight limit …\nA given number of members of the body.\nA needed argument is <code>None</code> when it should be <code>Some</code>.\nA named body.\nMore than the given proportion of members of the body.\nThe given pallet’s name is different to that expected.\nOrigin should just be the native dispatch origin …\nA global identifier of a data structure existing within …\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nA non-fungible asset. We record the instance identifier in …\nThe asset is not fungible.\nThe message and destination combination was not recognized …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nNo response. Serves as a neutral default.\nContains the success value\nContains the success value\nThe unambiguous child.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nThe provided pallet index was not found.\nThe index, instance name, pallet name and version of some …\nAn indexed parachain belonging to and operated by the …\nA unit struct which can be converted into a <code>Location</code> of …\nA tuple struct which can be converted into a <code>Location</code> of …\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nThe Polkadot Bulletin chain.\nAn identifier for a query.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nInformation regarding the composition of a query response.\n<code>MultiLocation</code> value failed to be reanchored.\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nResponse data to a query.\nThe Rococo testnet Relay-chain.\nError result value when attempting to send an XCM message.\nResult value when attempting to send an XCM message.\nUtility for sending an XCM message to a given location.\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nOrigin should just be the standard account-based origin …\nAsk the destination system to respond with the most recent …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nThe unambiguous technical body (for Polkadot, this would …\nIntermediate value which connects the two phases of the …\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nDestination is routable, but there is some issue with the …\nDestination is routable, but there is some issue with the …\nUsed by the <code>Trap</code> instruction to force an error …\nAlways throws an error of type <code>Trap</code>.\nThe unambiguous treasury body (for Polkadot, an opinion on …\nThe universal location of the local consensus is improper.\nUndefined - used if the non-fungible asset class has only …\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nThe only body in its context.\nSet the Origin Register to be some child of the Universal …\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nNo weight limit imposed.\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nDestination is known to be unroutable.\nDestination is known to be unroutable. This is considered …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nAn XCM version.\nThe given pallet’s version has an incompatible version …\nThe body’s declaration, under whatever means it decides.\nAn optional weight limit.\nExecution of the XCM would potentially result in a greater …\nThe weight of an XCM message is not computable ahead of …\nThe Westend testnet Relay-chain.\nSpecify the filter as the given <code>WildAsset</code> wildcard.\nA wildcard representing a set of assets.\nClassification of whether an asset is fungible or not.\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe Wococo testnet Relay-chain.\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nThis module’s XCM version.\nOrigin should be interpreted as an XCM native origin and …\nContextual data pertaining to a specific list of XCM …\nError codes used in XCM. The first errors codes have …\nA hash type for identifying messages.\nDeduct some <code>fees</code> to the sovereign account of the given …\nActually carry out the delivery operation for a previously …\nThe destination to which the query response message should …\nThe fungibility of the asset, which contains either the …\nThe overall asset identity (aka <em>class</em>, in the case of a …\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nThe <code>max_weight</code> field of the <code>QueryResponse</code> message.\nThe identity of the XCM; this may be a hash of its …\nThe current value of the Origin register of the <code>XCVM</code>.\nThe number of parent junctions at the beginning of this …\nThe <code>query_id</code> field of the <code>QueryResponse</code> message.\nMutate <code>self</code> so that it represents the same location from …\nConsume <code>self</code> and return a new value representing the same …\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe current value of the Topic register of the <code>XCVM</code>.\nCheck whether the given <code>_message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe EIP-155 chain ID.\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nThe unambiguous administration body (for Polkadot, an …\nAlter the current Origin to another given origin.\nAll assets in Holding.\nAll assets in Holding, up to <code>u32</code> individual assets …\nAll assets in Holding of a given fungibility and ID.\nAll assets in Holding of a given fungibility and ID up to …\nA unit struct which can be converted into a <code>Location</code> of …\nA unit struct which can be converted into a <code>Location</code> of …\nA 16-byte fixed-length datum.\nA 32-byte fixed-length datum.\nA 4-byte fixed-length datum.\nAn 8-byte fixed-length datum.\nEither an amount of a single fungible asset, or a single …\n<code>Asset</code> collection, defined either by a number of <code>Assets</code> or …\nLocation to identify an asset.\nA general identifier for an instance of a non-fungible …\nThe given asset is not handled.\nA <code>Vec</code> of <code>Asset</code>s.\nSome assets.\nNo less than the given proportion of members of the body.\nThe Origin Register does not contain a valid value for …\nThe XCM did not pass the barrier condition for execution.\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\nAn identifier of a pluralistic body.\nA part of a pluralistic body.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nExecution completed successfully; given weight was used.\nThe unambiguous defense body (for Polkadot, an opinion on …\nSpecify the filter as being everything contained by the …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe given message cannot be translated into a format …\nThe given message cannot be translated into a format that …\nThe status of a dispatch attempt using <code>Transact</code>.\nContains the error value\nContains the error value\nExecution did not start due to the given error.\nType to return in case of an error.\nAn Ethereum network specified by its chain ID.\nAttempt to send a message greater than the maximum …\nMessage could not be sent due to its size exceeding the …\nRecursion stack limit reached\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nType of XCM message executor.\nThe outcome of an XCM instruction.\nThe unambiguous executive body (for Polkadot, this would …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nThe message was unable to be exported.\nSend a message on to Non-Local Consensus system.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees needed to be paid in order to send the message and …\nFees were required which the origin could not pay.\nA given number of members of the body, out of some larger …\nClassification of whether an asset is fungible or not, …\nA fungible asset; we record a number of units, as a <code>u128</code> …\nThe asset is fungible.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA global network capable of externalizing its own …\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nExecution started, but did not complete successfully due …\nAn indexed body.\nA compact index. Technically this could be greater than …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nThe basic concrete type of <code>Instruction</code>, which doesn’t …\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nThe unambiguous judicial body (this doesn’t exist on …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nThe unambiguous legislative body (for Polkadot, this could …\nWeight limit imposed of the inner value.\nA relative path between state-bearing consensus systems.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nLock the locally held asset and prevent further transfer …\nSome other error with locking.\nUsed by <code>Transact</code> to indicate that the given weight limit …\nA given number of members of the body.\nA needed argument is <code>None</code> when it should be <code>Some</code>.\nA named body.\nMore than the given proportion of members of the body.\nThe given pallet’s name is different to that expected.\nOrigin should just be the native dispatch origin …\nA global identifier of a data structure existing within …\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nA non-fungible asset. We record the instance identifier in …\nThe asset is not fungible.\nThe message and destination combination was not recognized …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nNo response. Serves as a neutral default.\nContains the success value\nContains the success value\nThe unambiguous child.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nThe provided pallet index was not found.\nThe index, instance name, pallet name and version of some …\nAn indexed parachain belonging to and operated by the …\nA unit struct which can be converted into a <code>Location</code> of …\nA tuple struct which can be converted into a <code>Location</code> of …\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nThe Polkadot Bulletin chain.\nAn identifier for a query.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nInformation regarding the composition of a query response.\n<code>MultiLocation</code> value failed to be reanchored.\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nResponse data to a query.\nThe Rococo testnet Relay-chain.\nError result value when attempting to send an XCM message.\nResult value when attempting to send an XCM message.\nUtility for sending an XCM message to a given location.\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nOrigin should just be the standard account-based origin …\nAsk the destination system to respond with the most recent …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nThe unambiguous technical body (for Polkadot, this would …\nIntermediate value which connects the two phases of the …\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nDestination is routable, but there is some issue with the …\nDestination is routable, but there is some issue with the …\nAlways throws an error of type <code>Trap</code>.\nUsed by the <code>Trap</code> instruction to force an error …\nThe unambiguous treasury body (for Polkadot, an opinion on …\nThe universal location of the local consensus is improper.\nUndefined - used if the non-fungible asset class has only …\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nThe only body in its context.\nSet the Origin Register to be some child of the Universal …\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nNo weight limit imposed.\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nDestination is known to be unroutable.\nDestination is known to be unroutable. This is considered …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nAn XCM version.\nThe given pallet’s version has an incompatible version …\nThe body’s declaration, under whatever means it decides.\nAn optional weight limit.\nExecution of the XCM would potentially result in a greater …\nThe weight of an XCM message is not computable ahead of …\nThe Westend testnet Relay-chain.\nSpecify the filter as the given <code>WildAsset</code> wildcard.\nA wildcard representing a set of assets.\nClassification of whether an asset is fungible or not.\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe Wococo testnet Relay-chain.\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nThis module’s XCM version.\nThe basic concrete type of <code>Xcm</code>, which doesn’t make any …\nOrigin should be interpreted as an XCM native origin and …\nContextual data pertaining to a specific list of XCM …\nError codes used in XCM. The first errors codes have …\nA hash type for identifying messages.\nDeduct some <code>fees</code> to the sovereign account of the given …\nActually carry out the delivery operation for a previously …\nThe destination to which the query response message should …\nThe fungibility of the asset, which contains either the …\nThe overall asset identity (aka <em>class</em>, in the case of a …\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nThe <code>max_weight</code> field of the <code>QueryResponse</code> message.\nThe identity of the XCM; this may be a hash of its …\nThe current value of the Origin register of the <code>XCVM</code>.\nThe number of parent junctions at the beginning of this …\nThe <code>query_id</code> field of the <code>QueryResponse</code> message.\nMutate <code>self</code> so that it represents the same location from …\nConsume <code>self</code> and return a new value representing the same …\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe current value of the Topic register of the <code>XCVM</code>.\nCheck whether the given <code>_message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe EIP-155 chain ID.\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nThe unambiguous administration body (for Polkadot, an …\nAlter the current Origin to another given origin.\nAll assets in Holding.\nAll assets in Holding, up to <code>u32</code> individual assets …\nAll assets in Holding of a given fungibility and ID.\nAll assets in Holding of a given fungibility and ID up to …\nA unit struct which can be converted into a <code>Location</code> of …\nA unit struct which can be converted into a <code>Location</code> of …\nAccess to all the instructions\nA 16-byte fixed-length datum.\nA 32-byte fixed-length datum.\nA 4-byte fixed-length datum.\nAn 8-byte fixed-length datum.\nEither an amount of a single fungible asset, or a single …\nSet asset claimer for all the trapped assets during the …\n<code>Asset</code> collection, defined either by a number of <code>Assets</code> or …\nLocation to identify an asset.\nA general identifier for an instance of a non-fungible …\nThe given asset is not handled.\nMatches assets based on inner <code>AssetFilter</code> and tags them …\nA <code>Vec</code> of <code>Asset</code>s.\nSome assets.\nNo less than the given proportion of members of the body.\nThe Origin Register does not contain a valid value for …\nThe XCM did not pass the barrier condition for execution.\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\nAn identifier of a pluralistic body.\nA part of a pluralistic body.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nExecution completed successfully; given weight was used.\nThe unambiguous defense body (for Polkadot, an opinion on …\nSpecify the filter as being everything contained by the …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe given message cannot be translated into a format that …\nThe given message cannot be translated into a format …\nThe status of a dispatch attempt using <code>Transact</code>.\nContains the error value\nContains the error value\nError codes used in XCM. The first errors codes have …\nExecution did not start due to an error. We use …\nType to return in case of an error.\nAn Ethereum network specified by its chain ID.\nMessage could not be sent due to its size exceeding the …\nAttempt to send a message greater than the maximum …\nRecursion stack limit reached\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nExecutes inner <code>xcm</code> with origin set to the provided …\nType of XCM message executor.\nThe outcome of an XCM instruction.\nThe unambiguous executive body (for Polkadot, this would …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nNeed to explicitly state it won’t pay for fees\nThe message was unable to be exported.\nSend a message on to Non-Local Consensus system.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees needed to be paid in order to send the message and …\nFees were required which the origin could not pay.\nA given number of members of the body, out of some larger …\nClassification of whether an asset is fungible or not, …\nA fungible asset; we record a number of units, as a <code>u128</code> …\nThe asset is fungible.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA global network capable of externalizing its own …\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nExecution started, but did not complete successfully due to…\nAn indexed body.\nA compact index. Technically this could be greater than …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nInitiates cross-chain transfer as follows:\nCross-Consensus Message: A message from one consensus …\nXCM error and the index of the instruction that caused it.\nThe index of an instruction in an XCM.\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nThe unambiguous judicial body (this doesn’t exist on …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nThe unambiguous legislative body (for Polkadot, this could …\nWeight limit imposed of the inner value.\nThe holding register was loaded, now to buy execution\nA relative path between state-bearing consensus systems.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nLock the locally held asset and prevent further transfer …\nSome other error with locking.\nMaximum number of items we expect in a single <code>Assets</code> value.\nMaximum size of the encoded error code coming from a …\nUsed by <code>Transact</code> to indicate that the given weight limit …\nA given number of members of the body.\nA needed argument is <code>None</code> when it should be <code>Some</code>.\nA named body.\nMore than the given proportion of members of the body.\nThe given pallet’s name is different to that expected.\nOrigin should just be the native dispatch origin …\nA global identifier of a data structure existing within …\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nA non-fungible asset. We record the instance identifier in …\nThe asset is not fungible.\nThe message and destination combination was not recognized …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nNo response. Serves as a neutral default.\nContains the success value\nContains the success value\nThe unambiguous child.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nThe provided pallet index was not found.\nThe index, instance name, pallet name and version of some …\nAn indexed parachain belonging to and operated by the …\nA unit struct which can be converted into a <code>Location</code> of …\nA tuple struct which can be converted into a <code>Location</code> of …\nTakes an asset, uses it to pay for execution and puts the …\nYou need to pay for execution\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nThe Polkadot Bulletin chain.\nAn identifier for a query.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nInformation regarding the composition of a query response.\nThe genesis hash of the Rococo testnet. Used to identify …\n<code>MultiLocation</code> value failed to be reanchored.\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nreserve-transfer assets matching <code>AssetFilter</code> to a specific …\nreserve-transfer assets matching <code>AssetFilter</code> to a specific …\nResponse data to a query.\nError result value when attempting to send an XCM message.\nResult value when attempting to send an XCM message.\nUtility for sending an XCM message to a given location.\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet hints for XCM execution.\nSet the Topic Register.\nOrigin should just be the standard account-based origin …\nAsk the destination system to respond with the most recent …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nThe unambiguous technical body (for Polkadot, this would …\nteleport assets matching <code>AssetFilter</code> to a specific …\nIntermediate value which connects the two phases of the …\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nToo many assets matched the given asset filter.\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nDestination is routable, but there is some issue with the …\nDestination is routable, but there is some issue with the …\nUsed by the <code>Trap</code> instruction to force an error …\nAlways throws an error of type <code>Trap</code>.\nThe unambiguous treasury body (for Polkadot, an opinion on …\nThe universal location of the local consensus is improper.\nUndefined - used if the non-fungible asset class has only …\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nThe only body in its context.\nSet the Origin Register to be some child of the Universal …\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nNo weight limit imposed.\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nDestination is known to be unroutable. This is considered …\nDestination is known to be unroutable.\nCancel the effect of a previous <code>SubscribeVersion</code> …\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nAn XCM version.\nThe given pallet’s version has an incompatible version …\nThe body’s declaration, under whatever means it decides.\nThe genesis hash of the Westend testnet. Used to identify …\nAn optional weight limit.\nExecution of the XCM would potentially result in a greater …\nThe weight of an XCM message is not computable ahead of …\nSpecify the filter as the given <code>WildAsset</code> wildcard.\nA wildcard representing a set of assets.\nClassification of whether an asset is fungible or not.\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nOrigin should be interpreted as an XCM native origin and …\nType used to build XCM programs\nA trait for types that track state inside the XcmBuilder\nContextual data pertaining to a specific list of XCM …\nA hash type for identifying messages.\nAlter the current Origin to another given origin.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nDeduct some <code>fees</code> to the sovereign account of the given …\nCreate some assets which are being held on behalf of the …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nActually carry out the delivery operation for a previously …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe destination to which the query response message should …\nThe XCM error itself.\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nExecutes inner <code>xcm</code> with origin set to the provided …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nSend a message on to Non-Local Consensus system.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe fungibility of the asset, which contains either the …\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nThe overall asset identity (aka <em>class</em>, in the case of a …\nThe index of the intruction that caused the error.\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nInitiates cross-chain transfer as follows:\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLock the locally held asset and prevent further transfer …\nThe <code>max_weight</code> field of the <code>QueryResponse</code> message.\nThe identity of the XCM; this may be a hash of its …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nThe current value of the Origin register of the <code>XCVM</code>.\nThe number of parent junctions at the beginning of this …\nTakes an asset, uses it to pay for execution and puts the …\nTakes an asset, uses it to pay for execution and puts the …\nA prelude for importing all types typically used when …\nIf it fails, returns the index of the problematic …\nThe <code>query_id</code> field of the <code>QueryResponse</code> message.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nMutate <code>self</code> so that it represents the same location from …\nConsume <code>self</code> and return a new value representing the same …\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nConvenience function for using a <code>SendXcm</code> implementation. …\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet hints for XCM execution.\nSet hints for XCM execution.\nSet the Topic Register.\nAsk the destination system to respond with the most recent …\nThe current value of the Topic register of the <code>XCVM</code>.\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nAlways throws an error of type <code>Trap</code>.\nSet the Origin Register to be some child of the Universal …\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nA directive to indicate that the origin expects free …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nCheck whether the given <code>_message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe EIP-155 chain ID.\nAlter the current Origin to another given origin.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nExecutes inner <code>xcm</code> with origin set to the provided …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nSend a message on to Non-Local Consensus system.\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nInitiates cross-chain transfer as follows:\nThe basic concrete type of <code>Instruction</code>, which doesn’t …\nLock the locally held asset and prevent further transfer …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nTakes an asset, uses it to pay for execution and puts the …\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet hints for XCM execution.\nSet the Topic Register.\nAsk the destination system to respond with the most recent …\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nAlways throws an error of type <code>Trap</code>.\nSet the Origin Register to be some child of the Universal …\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe basic concrete type of <code>Xcm</code>, which doesn’t make any …\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nThe unambiguous administration body (for Polkadot, an …\nAlter the current Origin to another given origin.\nAll assets in Holding.\nAll assets in Holding, up to <code>u32</code> individual assets …\nAll assets in Holding of a given fungibility and ID.\nAll assets in Holding of a given fungibility and ID up to …\nA unit struct which can be converted into a <code>Location</code> of …\nA unit struct which can be converted into a <code>Location</code> of …\nA 16-byte fixed-length datum.\nA 32-byte fixed-length datum.\nA 4-byte fixed-length datum.\nAn 8-byte fixed-length datum.\nEither an amount of a single fungible asset, or a single …\nSet asset claimer for all the trapped assets during the …\n<code>Asset</code> collection, defined either by a number of <code>Assets</code> or …\nLocation to identify an asset.\nA general identifier for an instance of a non-fungible …\nThe given asset is not handled.\nA <code>Vec</code> of <code>Asset</code>s.\nSome assets.\nNo less than the given proportion of members of the body.\nThe Origin Register does not contain a valid value for …\nThe XCM did not pass the barrier condition for execution.\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\nAn identifier of a pluralistic body.\nA part of a pluralistic body.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nExecution completed successfully; given weight was used.\nThe unambiguous defense body (for Polkadot, an opinion on …\nSpecify the filter as being everything contained by the …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe given message cannot be translated into a format that …\nThe given message cannot be translated into a format …\nThe status of a dispatch attempt using <code>Transact</code>.\nContains the error value\nContains the error value\nExecution did not start due to an error. We use …\nType to return in case of an error.\nAn Ethereum network specified by its chain ID.\nMessage could not be sent due to its size exceeding the …\nAttempt to send a message greater than the maximum …\nRecursion stack limit reached\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nExecutes inner <code>xcm</code> with origin set to the provided …\nType of XCM message executor.\nThe outcome of an XCM instruction.\nThe unambiguous executive body (for Polkadot, this would …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nThe message was unable to be exported.\nSend a message on to Non-Local Consensus system.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees needed to be paid in order to send the message and …\nFees were required which the origin could not pay.\nA given number of members of the body, out of some larger …\nClassification of whether an asset is fungible or not, …\nA fungible asset; we record a number of units, as a <code>u128</code> …\nThe asset is fungible.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA global network capable of externalizing its own …\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nExecution started, but did not complete successfully due to…\nAn indexed body.\nA compact index. Technically this could be greater than …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nInitiates cross-chain transfer as follows:\nCross-Consensus Message: A message from one consensus …\nXCM error and the index of the instruction that caused it.\nThe index of an instruction in an XCM.\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nThe unambiguous judicial body (this doesn’t exist on …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nThe unambiguous legislative body (for Polkadot, this could …\nWeight limit imposed of the inner value.\nA relative path between state-bearing consensus systems.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nLock the locally held asset and prevent further transfer …\nSome other error with locking.\nUsed by <code>Transact</code> to indicate that the given weight limit …\nA given number of members of the body.\nA needed argument is <code>None</code> when it should be <code>Some</code>.\nA named body.\nMore than the given proportion of members of the body.\nThe given pallet’s name is different to that expected.\nOrigin should just be the native dispatch origin …\nA global identifier of a data structure existing within …\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nA non-fungible asset. We record the instance identifier in …\nThe asset is not fungible.\nThe message and destination combination was not recognized …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nNo response. Serves as a neutral default.\nContains the success value\nContains the success value\nThe unambiguous child.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nThe provided pallet index was not found.\nThe index, instance name, pallet name and version of some …\nAn indexed parachain belonging to and operated by the …\nA unit struct which can be converted into a <code>Location</code> of …\nA tuple struct which can be converted into a <code>Location</code> of …\nTakes an asset, uses it to pay for execution and puts the …\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nThe Polkadot Bulletin chain.\nAn identifier for a query.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nInformation regarding the composition of a query response.\n<code>MultiLocation</code> value failed to be reanchored.\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nResponse data to a query.\nError result value when attempting to send an XCM message.\nResult value when attempting to send an XCM message.\nUtility for sending an XCM message to a given location.\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet hints for XCM execution.\nSet the Topic Register.\nOrigin should just be the standard account-based origin …\nAsk the destination system to respond with the most recent …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nThe unambiguous technical body (for Polkadot, this would …\nIntermediate value which connects the two phases of the …\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nToo many assets matched the given asset filter.\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nDestination is routable, but there is some issue with the …\nDestination is routable, but there is some issue with the …\nUsed by the <code>Trap</code> instruction to force an error …\nAlways throws an error of type <code>Trap</code>.\nThe unambiguous treasury body (for Polkadot, an opinion on …\nThe universal location of the local consensus is improper.\nUndefined - used if the non-fungible asset class has only …\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nThe only body in its context.\nSet the Origin Register to be some child of the Universal …\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nNo weight limit imposed.\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nDestination is known to be unroutable. This is considered …\nDestination is known to be unroutable.\nCancel the effect of a previous <code>SubscribeVersion</code> …\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nAn XCM version.\nThe given pallet’s version has an incompatible version …\nThe body’s declaration, under whatever means it decides.\nAn optional weight limit.\nExecution of the XCM would potentially result in a greater …\nThe weight of an XCM message is not computable ahead of …\nSpecify the filter as the given <code>WildAsset</code> wildcard.\nA wildcard representing a set of assets.\nClassification of whether an asset is fungible or not.\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nOrigin should be interpreted as an XCM native origin and …\nContextual data pertaining to a specific list of XCM …\nError codes used in XCM. The first errors codes have …\nA hash type for identifying messages.\nDeduct some <code>fees</code> to the sovereign account of the given …\nActually carry out the delivery operation for a previously …\nThe destination to which the query response message should …\nThe XCM error itself.\nThe fungibility of the asset, which contains either the …\nThe overall asset identity (aka <em>class</em>, in the case of a …\nThe index of the intruction that caused the error.\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nThe <code>max_weight</code> field of the <code>QueryResponse</code> message.\nThe identity of the XCM; this may be a hash of its …\nThe current value of the Origin register of the <code>XCVM</code>.\nThe number of parent junctions at the beginning of this …\nIf it fails, returns the index of the problematic …\nThe <code>query_id</code> field of the <code>QueryResponse</code> message.\nMutate <code>self</code> so that it represents the same location from …\nConsume <code>self</code> and return a new value representing the same …\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe current value of the Topic register of the <code>XCVM</code>.\nCheck whether the given <code>_message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe EIP-155 chain ID.\nSome way of identifying an account on the chain. We …\nAn opaque 32-byte cryptographic identifier.\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nEither an amount of a single fungible asset, or a single …\nLocation to identify an asset.\nMeans of identifying one asset class from another.\nThe given asset is not handled as a fee asset.\nMatches assets based on inner <code>AssetFilter</code> and tags them …\nA <code>Vec</code> of <code>Asset</code>s.\nIt is signed by nobody, the extrinsic is authorized by the …\nThe type that is returned as result from calculation.\nThe balance of an account.\nScalar type for representing balance of an account.\nA bounded vector.\nExecution completed successfully; given weight was used.\n…\nAbstraction over a fungible assets system.\nshould reserve-transfer <code>asset</code> to <code>dest</code>, using <code>dest</code> as …\nA lazy call (module function and argument values) that can …\nThe <code>Pallet</code> struct, the main type that implements traits …\nDefine a handler for when some non-empty <code>AssetsInHolding</code> …\nAPI for dry-running extrinsics and XCM programs to get the …\nExecution did not start due to an error. We use …\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA <code>Dispatchable</code> function (aka transaction) that can carry …\nA global network capable of externalizing its own …\nExecution started, but did not complete successfully due to…\nAn opaque set of information attached to the transaction. …\nTrait for providing balance-inspection access to a set of …\nA single item in a path to describe the relative location …\nWeight limit imposed of the inner value.\nshould reserve-transfer <code>asset</code> to <code>dest</code>, using local chain …\nA relative path between state-bearing consensus systems.\nTrait for providing a basic fungible asset.\nOrigin should just be the native dispatch origin …\nThe opaque token type for an imbalance. This is returned …\nIt is signed by nobody, can be either:\nThe unambiguous child.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn instanced, indexed pallet that forms a constituent part …\nAn indexed parachain belonging to and operated by the …\nA unit struct which can be converted into a <code>Location</code> of …\nA pluralistic body existing within consensus.\nThe opaque token type for an imbalance. This is returned …\nAdditional information that is returned by <code>dispatch</code>. Can …\nOrigin for the System pallet.\nshould reserve-transfer <code>asset</code> to <code>dest</code>, using remote chain …\nreserve-transfer assets matching <code>AssetFilter</code> to a specific …\nreserve-transfer assets matching <code>AssetFilter</code> to a specific …\nThe system itself ordained this dispatch to happen: this …\nEvery function call from your runtime has an origin, which …\nIt is signed by some public key and we provide the …\nOrigin should just be the standard account-based origin …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nteleport assets matching <code>AssetFilter</code> to a specific …\nshould teleport <code>asset</code> to <code>dest</code>\nDefault <code>Args</code> provided by xcm-emulator to be stored in a …\nAuxiliar struct to help creating a new <code>Test</code> instance\nSpecify which type of asset transfer is required for a …\nXCM version not able to be handled.\nAn API part is unsupported.\nNo weight limit imposed.\nDestination is known to be unroutable.\nA single version’s <code>AssetId</code> value, together with its …\nA single <code>MultiAssets</code> value, together with its version code.\nConverting a versioned data structure from one version to …\nA single <code>Location</code> value, together with its version code.\nA single XCM message, together with its version code.\nAn optional weight limit.\nXCM message weight calculation failed.\nA trait that describes the weight to fee calculation.\nOrigin should be interpreted as an XCM native origin and …\nContextual data pertaining to a specific list of XCM …\nA trait of XCM payment API.\nThe total amount of issuance in the system excluding those …\nThe total amount of issuance in the system excluding those …\nPanic if an expression doesn’t evaluate to <code>Ok</code>.\nReturns <code>true</code> if an <code>asset</code> exists.\nGet the balance of <code>who</code> which does not include funds which …\nReduce the total issuance by <code>amount</code> and return the …\nAttempt to decrease the balance of <code>who</code>, burning the tokens.\nReturns <code>true</code> if the <code>asset</code> balance of <code>who</code> may be increased …\nDetermine whether enqueuing a downward message to a …\nSame result as <code>slash(who, value)</code> (but without the …\nReturns <code>Failed</code> if the <code>asset</code> balance of <code>who</code> may not be …\nReduce the active issuance by some amount.\nReduce the active issuance by some amount.\nAdds up to <code>value</code> to the free balance of <code>who</code>. If <code>who</code> doesn…\nMints <code>value</code> to the free balance of <code>who</code>.\nActually dispatch this call and return the result of it.\nHandler for receiving dropped assets. Returns the weight …\nDry run call V2.\nDry run XCM program\nReturns <code>Ok</code> iff the account is able to make a withdrawal of …\nThe ‘free’ balance of a given account.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe fungibility of the asset, which contains either the …\nReturn a <code>DispatchInfo</code>, containing relevant information of …\nThe overall asset identity (aka <em>class</em>, in the case of a …\nReturns reference to inner <code>AssetFilter</code> ignoring the …\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIncrease the total issuance by <code>amount</code> and return the …\nEnsure an account’s free balance equals some value; this …\nMake the parachain reachable for downward messages.\nThe identity of the XCM; this may be a hash of its …\nThe minimum balance any single account may have. This is …\nThe minimum balance any single account may have.\nIncrease the balance of <code>who</code> by exactly <code>amount</code>, minting new …\nReturns a <code>TestArgs</code> instance to be used for parachains …\nReturns a <code>TestArgs</code> instance to be used for the Relay Chain …\nThe current value of the Origin register of the <code>XCVM</code>.\nProduce a pair of imbalances that cancel each other out …\nProduce a pair of imbalances that cancel each other out …\nThe number of parent junctions at the beginning of this …\nReturns a list of acceptable payment assets.\nGet delivery fees for sending a specific <code>message</code> to a …\nConverts a weight into a fee for the specified <code>AssetId</code>.\nReturns a weight needed to execute a XCM.\nEnqueue a downward message to a specific recipient para.\nIncrease the active issuance by some amount, up to the …\nIncrease the active issuance by some amount, up to the …\nGet the maximum amount that <code>who</code> can withdraw/transfer …\nSimilar to deposit_creating, only accepts a …\nSimilar to deposit_creating, only accepts a …\nSimilar to deposit_creating, only accepts a …\nSimilar to deposit_creating, only accepts a …\nAttempt to increase the <code>asset</code> balance of <code>who</code> by <code>amount</code>.\nSimple infallible function to force an account to have a …\nSimilar to withdraw, only accepts a <code>PositiveImbalance</code> and …\nSimilar to withdraw, only accepts a <code>PositiveImbalance</code> and …\nAttempt to decrease the <code>asset</code> balance of <code>who</code> by <code>amount</code>.\nDeducts up to <code>value</code> from the combined balance of <code>who</code>, …\nThe current value of the Topic register of the <code>XCVM</code>.\nThe combined balance of <code>who</code>.\nGet the total amount of funds whose ultimate beneficial …\nThe total amount of issuance in the system.\nThe total amount of issuance in the system.\nTransfer some liquid free balance to another staker.\nTransfer funds from one account into another.\nCalculates the fee from the passed <code>weight</code>.\nRemoves some free balance from <code>who</code> account for <code>reason</code> if …\n<code>PoolId</code> to <code>AccountId</code> conversion.\n<code>PoolId</code> to <code>AccountId</code> conversion without an addition …\nA struct to represent an asset and its desired and minimum …\nProvided amount should be greater than or equal to the …\nDesired amount can’t be equal to the pool reserve.\nProvided amount should be greater than or equal to the …\nPool locator where the <code>PoolId</code> is a tuple of <code>AssetKind</code>s …\nThis runtime api allows people to query the size of the …\nThe type used to identify assets.\nKind of assets that are going to be swapped.\nKind of assets that are going to be swapped.\nType representing the kind of assets for which the price …\nType of asset class, sourced from <code>Config::Assets</code>, utilized …\nThe minimal amount requirement for the first token in the …\nThe minimal amount requirement for the first token in the …\nThe minimal amount requirement for the second token in the …\nThe minimal amount requirement for the second token in the …\nRegistry of assets utilized for providing liquidity to …\nThe balance type for assets.\nMeasure units of the asset classes for swapping.\nMeasure units of the asset classes for swapping.\nMeasurement units of the asset classes for pricing.\nThe type in which the assets for swapping are measured.\nRepresents a swap path with associated asset amounts …\nThe destination account cannot exist with the swapped …\nBenchmark Helper\nThe benchmarks need a way to create asset ids from u32s.\nPallet’s callable functions.\nPool locator that chains the <code>First</code> and <code>Second</code> …\nConfiguration trait of this pallet.\nCredit implying a negative imbalance in the system that …\nCredit of Config::Assets.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nReturns the balance of each asset in the pool. The tuple …\nA type used for calculations concerning the <code>Balance</code> type …\nIt was not possible to get or increment the Id of the pool.\nInsufficient liquidity minted.\nProvided asset pair is not supported for pool.\nThe provided path must consists of 2 assets at least.\nA % the liquidity providers will take of every swap. …\nA successful call of the <code>AddLiquidity</code> extrinsic will …\nA successful call of the <code>RemoveLiquidity</code> extrinsic will …\nA fee to withdraw the liquidity.\nThe max number of hops in a swap.\nThe minimum LP token amount that could be minted. …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nTrait for providing methods to mutate liquidity pools. …\nFactory for creating a valid asset pairs with …\nStores the <code>PoolAssetId</code> that is going to be used for the …\nThe provided path must consists of unique assets.\nOptimal calculated amount is less than desired.\nAn overflow happened.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe pallet’s id, used for deriving its sovereign account …\nAsset class for the lp tokens from <code>Self::PoolAssets</code>.\nRegistry for the lp tokens. Ideally only this pallet …\nA successful call of the <code>CreatePool</code> extrinsic will create …\nPool already exists.\nThe type used to identify a liquidity pool.\nLiquidity pool identifier.\nStores the lp_token asset id a particular pool has been …\nProvides means to resolve the <code>PoolId</code> and <code>AccountId</code> from a …\nProvides means to resolve the <code>Config::PoolId</code> and it’s …\nThe pool doesn’t exist.\nA one-time fee to setup the pool.\nAsset class from <code>Config::Assets</code> used to pay the …\nHandler for the <code>Config::PoolSetupFee</code>.\nMap from <code>PoolAssetId</code> to <code>PoolInfo</code>. This establishes whether …\nProvided maximum amount is not sufficient for swap.\nCalculated amount out is less than provided minimum amount.\nTrait providing methods to quote swap prices between asset …\nGets a quote for swapping an exact amount of <code>asset1</code> for …\nGets a quote for swapping <code>amount</code> of <code>asset1</code> for an exact …\nReserve needs to always be greater than or equal to the …\nOverarching event type.\nTrait for providing methods to swap between the various …\nTrait providing methods to swap between the various asset …\nAssets have been converted from one to another.\nAssets have been converted from one to another. Both …\nPool has been touched in order to fulfill operational …\nWeight functions needed for <code>pallet_asset_conversion</code>.\nWeight information for extrinsics in this pallet.\nPool locator that mandates the inclusion of the specified …\nDesired amount can’t be zero.\nAmount can’t be zero.\nRequested liquidity can’t be zero.\nAdds liquidity to an existing pool.\nProvide liquidity into the pool of <code>asset1</code> and <code>asset2</code>. …\nProvide liquidity into the pool of <code>asset1</code> and <code>asset2</code>. …\nRetrieves the account address associated with a valid …\nThe desired amount of the asset to add.\nThe minimum amount of the asset to add.\nThe kind of asset.\nReturns a valid assets pair for the pool creation.\nCreates a new liquidity pool for the given assets.\nCreates an empty liquidity pool and an associated new …\nCreates an empty liquidity pool and an associated new …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalculates amount in.\nCalculates amount out.\nReturns the next pool asset id for benchmark purposes only.\nReturns the balance of each asset in the pool. The tuple …\nReturns the size of the liquidity pool for the given asset …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLiquidity pool asset\nReturns the upper limit on the length of the swap path.\nReturns the upper limit on the length of the swap path.\nCreate a new [<code>#view_function_struct_ident</code>] instance.\nCreate a new [<code>#view_function_struct_ident</code>] instance.\nCreate a new [<code>#view_function_struct_ident</code>] instance.\nCreate a call with the variant <code>add_liquidity</code>.\nCreate a call with the variant <code>create_pool</code>.\nCreate a call with the variant <code>remove_liquidity</code>.\nCreate a call with the variant <code>swap_exact_tokens_for_tokens</code>…\nCreate a call with the variant <code>swap_tokens_for_exact_tokens</code>…\nCreate a call with the variant <code>touch</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nRetrieves the account address associated with a given …\nIdentifies the <code>PoolId</code> for a given pair of assets.\nCalculates the optimal amount from the reserves.\nQuotes the amount of <code>asset2</code> resulting from swapping the …\nGets a quote for swapping an exact amount of <code>asset1</code> for …\nProvides a quote for <code>Pallet::swap_exact_tokens_for_tokens</code>.\nQuotes the amount of <code>asset1</code> required to obtain the exact …\nGets a quote for swapping <code>amount</code> of <code>asset1</code> for an exact …\nProvides a quote for <code>Pallet::swap_tokens_for_exact_tokens</code>.\nRemoves liquidity from a pool.\nAllows you to remove liquidity by providing the …\nAllows you to remove liquidity by providing the …\nSwap exactly <code>amount_in</code> of asset <code>path[0]</code> for asset …\nSwap exactly <code>credit_in</code> of asset <code>path[0]</code> for asset …\nSwap the exact amount of <code>asset1</code> into <code>asset2</code>. <code>amount_out_min</code>…\nSwap the exact amount of <code>asset1</code> into <code>asset2</code>. <code>amount_out_min</code>…\nTake the <code>path[0]</code> asset and swap some amount for <code>amount_out</code> …\nSwaps a portion of <code>credit_in</code> of <code>path[0]</code> asset to obtain …\nSwap any amount of <code>asset1</code> to get the exact amount of <code>asset2</code>…\nSwap any amount of <code>asset1</code> to get the exact amount of <code>asset2</code>…\nTouch an existing pool to fulfill prerequisites before …\nTouch an existing pool to fulfill prerequisites before …\nAutogenerated weights for <code>pallet_asset_conversion</code>\nThe amount of the first asset that was removed from the …\nThe amount of the first asset that was added to the pool.\nThe amount of the second asset that was removed from the …\nThe amount of the second asset that was added to the pool.\nThe amount of the first asset that was swapped.\nThe amount of the first asset that was swapped.\nThe amount of the second asset that was received.\nThe amount of the second asset that was received.\nThe account that created the pool.\nThe id of the liquidity tokens that will be minted when …\nThe id of the lp token that was minted.\nThe id of the lp token that was burned.\nThe amount of lp tokens that were burned of that id.\nThe amount of lp tokens that were minted of that id.\nThe account that the liquidity tokens were minted to.\nThe route of asset IDs with amounts that the swap went …\nThe route of asset IDs with amounts that the swap went …\nThe account ID of the pool.\nThe pool id associated with the pool. Note that the order …\nThe pool id of the pool that the liquidity was added to.\nThe pool id that the liquidity was removed from.\nThe ID of the pool.\nThe account that the assets were transferred to.\nThe account that the liquidity was taken from.\nThe account that the liquidity tokens were burned from.\nWhich account was the instigator of the swap.\nThe account initiating the touch.\nThe account that the assets were transferred to.\nLiquidity withdrawal fee (%).\nProvided amount should be greater than or equal to the …\nDesired amount can’t be equal to the pool reserve.\nProvided amount should be greater than or equal to the …\nType of asset class, sourced from <code>Config::Assets</code>, utilized …\nThe minimal amount requirement for the first token in the …\nThe minimal amount requirement for the first token in the …\nThe minimal amount requirement for the second token in the …\nThe minimal amount requirement for the second token in the …\nRegistry of assets utilized for providing liquidity to …\nThe type in which the assets for swapping are measured.\nThe destination account cannot exist with the swapped …\nThe benchmarks need a way to create asset ids from u32s.\nPallet’s callable functions.\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nReturns the balance of each asset in the pool. The tuple …")