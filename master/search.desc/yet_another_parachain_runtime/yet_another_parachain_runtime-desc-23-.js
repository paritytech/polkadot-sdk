searchState.loadedDescShard("yet_another_parachain_runtime", 23, "Create a call with the variant <code>set_no_show_slots</code>.\nCreate a call with the variant <code>set_node_feature</code>.\nCreate a call with the variant <code>set_on_demand_base_fee</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>set_on_demand_queue_max_size</code>…\nCreate a call with the variant …\nCreate a call with the variant …\nCreate a call with the variant <code>set_pvf_voting_ttl</code>.\nCreate a call with the variant <code>set_relay_vrf_modulo_samples</code>…\nCreate a call with the variant <code>set_scheduler_params</code>.\nCreate a call with the variant <code>set_scheduling_lookahead</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>set_validation_upgrade_delay</code>…\nCreate a call with the variant …\nIf new configuration was applied during the session …\nThe amount of consensus slots that must pass between …\nNode features enablement.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nChecks that this instance is consistent with the …\nPreviously active configuration.\nIf an active PVF pre-checking vote observes this many …\nThe number of samples to do of the <code>RelayVRFModulo</code> approval …\nScheduler parameters\nSet approval-voting-params.\nSet approval-voting-params.\nSet the asynchronous backing parameters.\nSet the asynchronous backing parameters.\nSetting this to true will disable consistency checks for …\nSetting this to true will disable consistency checks for …\nSet the acceptance period for an included candidate.\nSet the acceptance period for an included candidate.\nSet the number of coretime execution cores.\nSet the number of coretime execution cores.\nSet coretime cores.\nSet the dispute period, in number of sessions to keep for …\nSet the dispute period, in number of sessions to keep for …\nSet the dispute post conclusion acceptance period.\nSet the dispute post conclusion acceptance period.\nSet PVF executor parameters.\nSet PVF executor parameters.\nSet the parachain validator-group rotation frequency\nSet the parachain validator-group rotation frequency\nSets the maximum number of messages allowed in an HRMP …\nSets the maximum number of messages allowed in an HRMP …\nSets the maximum size of a message that could ever be put …\nSets the maximum size of a message that could ever be put …\nSets the maximum total size of messages in bytes allowed …\nSets the maximum total size of messages in bytes allowed …\nSets the maximum number of outbound HRMP messages can be …\nSets the maximum number of outbound HRMP messages can be …\nSets the maximum number of inbound HRMP channels a …\nSets the maximum number of inbound HRMP channels a …\nSets the maximum number of outbound HRMP channels a …\nSets the maximum number of outbound HRMP channels a …\nSets the number of sessions after which an HRMP open …\nSets the number of sessions after which an HRMP open …\nSets the amount of funds that the recipient should provide …\nSets the amount of funds that the recipient should provide …\nSets the amount of funds that the sender should provide …\nSets the amount of funds that the sender should provide …\nSet the max validation code size for incoming upgrades.\nSet the max validation code size for incoming upgrades.\nSet the critical downward message size.\nSet the critical downward message size.\nSet the max head data size for paras.\nSet the max head data size for paras.\nSet the max POV block size for incoming upgrades.\nSet the max POV block size for incoming upgrades.\nSets the maximum number of messages that a candidate can …\nSets the maximum number of messages that a candidate can …\nSets the maximum size of an upward message that can be …\nSets the maximum size of an upward message that can be …\nSets the maximum items that can present in a upward …\nSets the maximum items that can present in a upward …\nSets the maximum total size of items that can present in a …\nSets the maximum total size of items that can present in a …\nSet the maximum number of validators to use in parachain …\nSet the maximum number of validators to use in parachain …\nSet the maximum number of validators to assign to any core.\nSet the maximum number of validators to assign to any core.\nSet the minimum backing votes threshold.\nSet the minimum backing votes threshold.\nSets the minimum delay between announcing the upgrade …\nSets the minimum delay between announcing the upgrade …\nSet the total number of delay tranches.\nSet the total number of delay tranches.\nSet the number of validators needed to approve a block.\nSet the number of validators needed to approve a block.\nSet the no show slots, in number of number of consensus …\nSet the no show slots, in number of number of consensus …\nSet/Unset a node feature.\nSet/Unset a node feature.\nSet the on demand (parathreads) base fee.\nSet the on demand (parathreads) base fee.\nSet the on demand (parathreads) fee variability.\nSet the on demand (parathreads) fee variability.\nSet the on demand (parathreads) queue max size.\nSet the on demand (parathreads) queue max size.\nSet the on demand (parathreads) fee variability.\nSet the on demand (parathreads) fee variability.\nSet the availability period for paras.\nSet the availability period for paras.\nSet the number of session changes after which a PVF …\nSet the number of session changes after which a PVF …\nSet the number of samples to do of the <code>RelayVRFModulo</code> …\nSet the number of samples to do of the <code>RelayVRFModulo</code> …\nSet scheduler-params.\nSet scheduler-params.\nSet the scheduling lookahead, in expected number of blocks …\nSet the scheduling lookahead, in expected number of blocks …\nSet the validation upgrade cooldown.\nSet the validation upgrade cooldown.\nSet the validation upgrade delay.\nSet the validation upgrade delay.\nSet the zeroth delay tranche width.\nSet the zeroth delay tranche width.\nThe minimum period, in blocks, between which parachains …\nThe delay, in blocks, after which an upgrade of the …\nThe width of the zeroth delay tranche for approval …\nA module that is responsible for migration of storage.\nA module that is responsible for migration of storage.\nA module that is responsible for migration of storage.\nContains the V6 storage definition of the host …\nA module that is responsible for migration of storage.\nA module that is responsible for migration of storage.\nA module that is responsible for migration of storage.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAll configuration of the runtime with respect to paras.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAll configuration of the runtime with respect to paras.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe active configuration for the current session.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nCan be used to configure the genesis state of this pallet.\nThe new value for a configuration parameter is invalid.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nPending configuration changes.\nWeight information for extrinsics in this pallet.\nSet approval-voting-params.\nSet the asynchronous backing parameters.\nSetting this to true will disable consistency checks for …\nSet the acceptance period for an included candidate.\nSet the number of coretime execution cores.\nSet the dispute period, in number of sessions to keep for …\nSet the dispute post conclusion acceptance period.\nSet PVF executor parameters.\nSet the parachain validator-group rotation frequency\nSets the maximum number of messages allowed in an HRMP …\nSets the maximum size of a message that could ever be put …\nSets the maximum total size of messages in bytes allowed …\nSets the maximum number of outbound HRMP messages can be …\nSets the maximum number of inbound HRMP channels a …\nSets the maximum number of outbound HRMP channels a …\nSets the number of sessions after which an HRMP open …\nSets the amount of funds that the recipient should provide …\nSets the amount of funds that the sender should provide …\nSet the max validation code size for incoming upgrades.\nSet the critical downward message size.\nSet the max head data size for paras.\nSet the max POV block size for incoming upgrades.\nSets the maximum number of messages that a candidate can …\nSets the maximum size of an upward message that can be …\nSets the maximum items that can present in a upward …\nSets the maximum total size of items that can present in a …\nSet the maximum number of validators to use in parachain …\nSet the maximum number of validators to assign to any core.\nSet the minimum backing votes threshold.\nSets the minimum delay between announcing the upgrade …\nSet the total number of delay tranches.\nSet the number of validators needed to approve a block.\nSet the no show slots, in number of number of consensus …\nSet/Unset a node feature.\nSet the on demand (parathreads) base fee.\nSet the on demand (parathreads) fee variability.\nSet the on demand (parathreads) queue max size.\nSet the on demand (parathreads) fee variability.\nSet the availability period for paras.\nSet the number of session changes after which a PVF …\nSet the number of samples to do of the <code>RelayVRFModulo</code> …\nSet scheduler-params.\nSet the scheduling lookahead, in expected number of blocks …\nSet the validation upgrade cooldown.\nSet the validation upgrade delay.\nSet the zeroth delay tranche width.\nAccountId to Location converter\nThe asset transactor.\nFailed to transfer assets to the coretime chain\nShorthand for the Balance type the runtime is using.\nThe ParaId of the coretime chain.\nThe coretime chain pot location.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nA core has received a new assignment from the broker chain.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nMaximum weight for any XCM transact call that should be …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe paraid making the call is not the coretime brokerage …\nThe <code>Pallet</code> struct, the main type that implements traits …\nRequested revenue information <code>when</code> parameter was in the …\nThe broker chain has asked for revenue information for a …\nThe XCM sender.\nA weight info that is only suitable for testing.\nSomething that provides the weight of this pallet.\nReceive instructions from the <code>ExternalBrokerOrigin</code>, …\nReceive instructions from the <code>ExternalBrokerOrigin</code>, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMigrations for the Coretime pallet.\nCreate a call with the variant <code>assign_core</code>.\nCreate a call with the variant <code>credit_account</code>.\nCreate a call with the variant <code>request_core_count</code>.\nCreate a call with the variant <code>request_revenue_at</code>.\nProvide the amount of revenue accumulated from …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nRequest the configuration to be updated with the specified …\nRequest the configuration to be updated with the specified …\nRequest to claim the instantaneous coretime sales revenue …\nRequest to claim the instantaneous coretime sales revenue …\nReturn information about a legacy lease of a parachain.\nMigrate a chain to use coretime.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nIf parachain is a lease holding parachain, return the …\nCalls <code>U::from(self)</code>.\nAccountId to Location converter\nThe asset transactor.\nFailed to transfer assets to the coretime chain\nThe ParaId of the coretime chain.\nThe coretime chain pot location.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nA core has received a new assignment from the broker chain.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nMaximum weight for any XCM transact call that should be …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe paraid making the call is not the coretime brokerage …\nThe <code>Pallet</code> struct, the main type that implements traits …\nRequested revenue information <code>when</code> parameter was in the …\nThe broker chain has asked for revenue information for a …\nThe XCM sender.\nSomething that provides the weight of this pallet.\nReceive instructions from the <code>ExternalBrokerOrigin</code>, …\nRequest the configuration to be updated with the specified …\nRequest to claim the instantaneous coretime sales revenue …\nAncient dispute statement provided.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nA dispute has concluded for or against a candidate. …\nA dispute has been initiated. [candidate hash, dispute …\nWhether the dispute is local or remote.\nThe result of a dispute, whether the candidate is deemed …\nHook into disputes handling.\nDuplicate dispute statement sets provided.\nValidator vote submitted more than once to dispute.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nWhether the chain is frozen. Starts as <code>None</code>. When this is …\nInvalid signature on statement.\nA dispute vote from a malicious backer.\nNo backing votes were provides along dispute statements.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nA dispute has concluded with supermajority against a …\nReward hooks for disputes.\nA dispute where there are only votes on one side.\nPunishment hooks for disputes.\nUnconfirmed dispute statement sets provided.\nValidator index on statement is out of bounds for session.\nWeight information for extrinsics in this pallet.\nWhether the given candidate concluded invalid in a dispute …\nRemove dispute statement duplicates and sort the …\nFilter a single dispute statement set.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRetrieve the included state of a given candidate in a …\nCalled by the initializer to finalize the slashing pallet.\nCalled by the initializer to finalize the disputes pallet.\nCalled by the initializer to initialize the slashing …\nCalled by the initializer to initialize the disputes …\nCalled by the initializer to note that a new session has …\nCalled by the initializer to note that a new session has …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the chain is frozen, if the chain is frozen it …\nStorage migration(s) related to disputes pallet\nCreate a call with the variant <code>force_unfreeze</code>.\nNote that the given candidate has been included.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nHandle sets of dispute statements corresponding to 0 or …\nPunish a series of validators who were against a valid …\nPunish a series of validators who were for an invalid …\nDispute slashing pallet.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nMigrates the pallet storage to the most recent version, …\nAncient dispute statement provided.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nA dispute has concluded for or against a candidate. …\nA dispute has been initiated. [candidate hash, dispute …\nDuplicate dispute statement sets provided.\nValidator vote submitted more than once to dispute.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nWhether the chain is frozen. Starts as <code>None</code>. When this is …\nInvalid signature on statement.\nA dispute vote from a malicious backer.\nNo backing votes were provides along dispute statements.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nA dispute has concluded with supermajority against a …\nA dispute where there are only votes on one side.\nUnconfirmed dispute statement sets provided.\nValidator index on statement is out of bounds for session.\nWeight information for extrinsics in this pallet.\nBenchmarking configuration.\nThe benchmarking configuration.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe given slashing report is valid but already previously …\nThe <code>Error</code> enum of this pallet.\nA trait that defines methods to report an offence (after …\nThe slashing report handling subsystem, defines methods to …\nThe candidate hash is invalid.\nThe key ownership proof is invalid.\nThe session index is too old or invalid.\nThere is no pending slash for the given validator index …\nThe identification of a key owner, used when reporting …\nThe proof of key ownership, used for validating slashing …\nA system for proving ownership of keys, i.e. that a given …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe longevity, in blocks, that the offence report is valid …\nThis type implements <code>SlashingHandler</code>.\nAn offence that is filed against the validators that lost …\nActual <code>HandleReports</code> implementation.\nThe validator index does not match the validator id.\nWeight information for extrinsics in this pallet.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the offenders at the given time slot has …\nThe type of slashing offence.\nCreate a call with the variant <code>report_dispute_lost_unsigned</code>…\nStaking information about the validators that lost the …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nReport an offence.\nWhat fraction of the total exposure that should be slashed …\nCreate and dispatch a slashing report extrinsic. This …\nShould be unique per dispute.\nThe size of the validator set in that session.\nBenchmarking configuration.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe given slashing report is valid but already previously …\nThe <code>Error</code> enum of this pallet.\nThe slashing report handling subsystem, defines methods to …\nThe candidate hash is invalid.\nThe key ownership proof is invalid.\nThe session index is too old or invalid.\nThere is no pending slash for the given validator index …\nThe identification of a key owner, used when reporting …\nThe proof of key ownership, used for validating slashing …\nA system for proving ownership of keys, i.e. that a given …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe validator index does not match the validator id.\nWeight information for extrinsics in this pallet.\nAggregate message origin for the <code>MessageQueue</code> pallet.\nContains a variant per dispatchable extrinsic that this …\nA candidate was backed. <code>[candidate, head_data]</code>\nA candidate was included. <code>[candidate, head_data]</code>\nA backed candidate pending availability.\nA candidate timed out. <code>[candidate, head_data]</code>\nConfiguration trait of this pallet.\nThe candidate’s relay-parent was not allowed. Either it …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nHead data exceeds the configured maximum.\nThe candidate didn’t follow the rules of HRMP watermark …\nThe downward message queue is not processed correctly.\nInsufficient (non-majority) backing.\nFailed to compute group index for the core: either it’s …\nInvalid (bad signature, unknown validator, etc.) backing.\nInvalid group index in core assignment.\nThe HRMP messages sent by the candidate is not valid.\nAt least one upward message sent does not pass the …\nThe validation code hash of the candidate is not valid.\nMaximum value that <code>config.max_upward_message_size</code> can be …\nThe maximal length of a UMP message.\nThe system message queue.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nOutput code is too large\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe message originated from this parachain.\nThe <code>para_head</code> hash in the candidate descriptor doesn’t …\nCode upgrade prematurely.\nReads the footprint of queues for a specific origin type.\nA hook for applying validator rewards\nInbound upward message.\nIdentifies a UMP queue inside the <code>MessageQueue</code> pallet.\nCandidate submitted but para not scheduled.\nSome upward messages have been received and will be …\nThe validation data hash does not match expected.\nValidator index out of bounds.\nWeight info for the calls of this pallet.\nWeight for <code>enact_candidate</code> extrinsic given the number of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nMigrate to v1 inclusion module storage.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nA candidate was backed. <code>[candidate, head_data]</code>\nA candidate was included. <code>[candidate, head_data]</code>\nA candidate timed out. <code>[candidate, head_data]</code>\nConfiguration trait of this pallet.\nThe candidate’s relay-parent was not allowed. Either it …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nHead data exceeds the configured maximum.\nThe candidate didn’t follow the rules of HRMP watermark …\nThe downward message queue is not processed correctly.\nInsufficient (non-majority) backing.\nFailed to compute group index for the core: either it’s …\nInvalid (bad signature, unknown validator, etc.) backing.\nInvalid group index in core assignment.\nThe HRMP messages sent by the candidate is not valid.\nAt least one upward message sent does not pass the …\nThe validation code hash of the candidate is not valid.\nThe system message queue.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nOutput code is too large\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe <code>para_head</code> hash in the candidate descriptor doesn’t …\nCode upgrade prematurely.\nCandidate submitted but para not scheduled.\nSome upward messages have been received and will be …\nThe validation data hash does not match expected.\nValidator index out of bounds.\nWeight info for the calls of this pallet.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nTemporary hack to call <code>Coretime::on_new_session</code> on chains …\nAn origin which is allowed to force updates to parachains.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nInform something about a new session.\nThe <code>Pallet</code> struct, the main type that implements traits …\nA randomness beacon.\nInformation about a session change that has just occurred.\nNumber of validators (not only parachain) in a session.\nWeight information for extrinsics in this pallet.\nIssue a signal to the consensus engine to forcibly act as …\nIssue a signal to the consensus engine to forcibly act as …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>force_approve</code>.\nThe configuration after handling the session change.\nA new session was started.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe configuration before handling the session change\nThe queued validators for the following session.\nA secure random seed for the session, gathered from BABE.\nNew session index.\nThe new validators in the session.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nTemporary hack to call <code>Coretime::on_new_session</code> on chains …\nAn origin which is allowed to force updates to parachains.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nA randomness beacon.\nWeight information for extrinsics in this pallet.\nIssue a signal to the consensus engine to forcibly act as …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSample the inherent data weight metric after filtering.\nSample the inherent data weight metric before filtering.\nIncrement the number of bitfields processed.\nIncrement the number of parachain candidates included.\nIncrement the total number of parachain candidates …\nIncrement the number of parachain candidates sanitized.\nIncrement the number of disputes that have concluded as …\nIncrement the number of disputes imported.\nSample the relay chain freeze events causing runtime to …\nAn account was given credits.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nKeeps track of credits owned by each account.\nThe runtime’s definition of a Currency.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe account doesn’t have enough credits to purchase …\nThe maximum number of blocks some historical revenue …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nAn order was placed at some spot price amount by orderer …\nThe <code>Pallet</code> struct, the main type that implements traits …\nIdentifier for the internal revenue balance.\nThe order queue is full, <code>place_order</code> will not continue.\nKeeps track of accumulated revenue from on demand order …\nThe runtime’s definition of an event.\nThe current spot price is higher than the max amount …\nThe value of the spot price has likely changed\nA weight info that is only suitable for testing.\nThe default value for the spot traffic multiplier.\nSomething that provides the weight of this pallet.\nAccount of the pallet pot, where the funds from …\nReport that an assignment was duplicated by the scheduler.\nCollect the revenue from the <code>when</code> blockheight\nAdds credits to the specified account.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA module that is responsible for migration of storage.\nCreate a call with the variant <code>place_order_allow_death</code>.\nCreate a call with the variant <code>place_order_keep_alive</code>.\nCreate a call with the variant <code>place_order_with_credits</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nCreate a single on demand core order. Will use the spot …\nCreate a single on demand core order. Will use the spot …\nSame as the <code>place_order_allow_death</code> call , but with a …\nSame as the <code>place_order_allow_death</code> call , but with a …\nCreate a single on demand core order with credits. Will …\nCreate a single on demand core order with credits. Will …\nTake the next queued entry that is available for a given …\nPush an assignment back to the front of the queue.\nReport that the <code>para_id</code> &amp; <code>core_index</code> combination was …\nMigrate <code>V0</code> to <code>V1</code> of the storage format.\nAn account was given credits.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nKeeps track of credits owned by each account.\nThe runtime’s definition of a Currency.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe account doesn’t have enough credits to purchase …\nThe maximum number of blocks some historical revenue …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nAn order was placed at some spot price amount by orderer …\nThe <code>Pallet</code> struct, the main type that implements traits …\nIdentifier for the internal revenue balance.\nThe order queue is full, <code>place_order</code> will not continue.\nKeeps track of accumulated revenue from on demand order …\nThe runtime’s definition of an event.\nThe current spot price is higher than the max amount …\nThe value of the spot price has likely changed\nThe default value for the spot traffic multiplier.\nSomething that provides the weight of this pallet.\nCreate a single on demand core order. Will use the spot …\nSame as the <code>place_order_allow_death</code> call , but with a …\nCreate a single on demand core order with credits. Will …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nOrigin for the parachains.\nThe <code>Pallet</code> struct, the main type that implements traits …\nIt comes from a parachain.\nEnsure that the origin <code>o</code> represents a parachain. Returns <code>Ok</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nOrigin for the parachains.\nThe <code>Pallet</code> struct, the main type that implements traits …\nIt comes from a parachain.\nA para has been queued to execute pending actions. <code>para_id</code>\nThe actions to perform during the start of a specific …\nApply the upgrade directly at the expected relay chain …\nAssign coretime to some parachain.\nRuntime hook for assigning coretime for a given parachain.\nThe origin that can authorize …\nThe code hash authorizations for a para which will expire …\nHolds an authorized validation code hash along with its …\nContains a variant per dispatchable extrinsic that this …\nPara cannot be downgraded to an on-demand parachain.\nPara cannot be offboarded at this time.\nPara cannot be onboarded because it is already tracked by …\nPara cannot be upgraded to a lease holding parachain.\nParachain cannot currently schedule a code upgrade.\nA new code hash has been authorized for a Para.\nValidation code stored by its hash.\nA code upgrade has been scheduled for a Para. <code>para_id</code>\nConfiguration trait of this pallet.\nMultiplier to determine the cost of removing upgrade …\nThe validation code hash of every live para.\nCurrent code has been updated for a Para. <code>para_id</code>\nCurrent head has been updated for a Para. <code>para_id</code>\nPara is a lease holding Parachain which is downgrading to …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe fungible instance used by the runtime.\nThe actual future code hash of a para.\nThe block number at which the planned code change is …\nCan be used to configure the genesis state of this pallet.\nThe head-data of every registered para.\nInvalid block number.\nInvalid validation code size.\nThis is intermediate “fix” for this issue: …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe context (relay-chain block number) of the most recent …\nA new head has been noted for a Para. <code>para_id</code>\nPara is not registered in our system.\nNo upgrade authorized.\nParachain is queued to be offboarded.\nParathread (on-demand parachain) is queued to be …\nRuntime hook for when a parachain head is updated.\nRuntime hook for when a parachain head is updated.\nPara is new and is onboarding as an on-demand or lease …\nThe <code>Pallet</code> struct, the main type that implements traits …\nArguments for initializing a para.\nDistinguishes between lease holding Parachain and …\nThe possible states of a para, to take into account …\nMetadata used to track previous parachain validation code …\nPara is a lease holding Parachain.\nIt comes from a parachain.\nOrigin for the parachains.\nAll lease holding parachains. Ordered ascending by <code>ParaId</code>. …\nPara is a Parathread (on-demand parachain).\nPast code of parachains. The parachains themselves may not …\nThe given validation code was accepted by the PVF …\nThe given validator already has cast a vote.\nThe signature for the PVF pre-checking is invalid.\nThe given validation code was rejected by the PVF …\nThe given para either initiated or subscribed to a PVF …\nThe statement for PVF pre-checking is for a future session.\nThe statement for PVF pre-checking is stale.\nThe given PVF does not exist at the moment of process a …\nClaimed validator index is out of bounds.\nRetrieve how many UMP messages are enqueued for this …\nReturns the cost for removing an upgrade cooldown for the …\nSet the <code>GoAhead</code> signal to inform the parachain that it is …\nThe submitted code is not authorized.\nThe upgrade cooldown was removed.\nThis is used by the relay-chain to communicate that there …\nThe strategy on how to handle a validation code upgrade.\nPara is a Parathread (on-demand parachain) which is …\nWeight information for extrinsics in this pallet.\nAdds the validation code to the storage.\nAdds the validation code to the storage.\nApplies the already authorized current code for the …\nApplies the already authorized current code for the …\nONLY USE FOR TESTING OR GENESIS.\nSets the storage for the authorized current code hash of …\nSets the storage for the authorized current code hash of …\nVerify that <code>schedule_para_initialize</code> can be called …\nNote a new block head for para within the context of the …\nNote a new block head for para within the context of the …\nPut a parachain directly into the next session’s action …\nPut a parachain directly into the next session’s action …\nSchedule an upgrade as if it was scheduled in the given …\nSchedule an upgrade as if it was scheduled in the given …\nSet the storage for the parachain validation code …\nSet the storage for the parachain validation code …\nSet the storage for the current parachain head data …\nSet the storage for the current parachain head data …\nSet the storage for the current parachain head data …\nSet the storage for the current parachain head data …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe initial head data to use.\nIncludes a statement for a PVF pre-checking vote. …\nIncludes a statement for a PVF pre-checking vote. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the given ID refers to a para that is …\nWhether a para ID corresponds to any live lease holding …\nWhether a para ID corresponds to any live parathread …\nReturns whether the given ID refers to a valid para.\nReturns the current lifecycle state of the para.\nCreate a new [<code>#view_function_struct_ident</code>] instance.\nCreate a call with the variant <code>add_trusted_validation_code</code>.\nCreate a call with the variant …\nCreate a call with the variant …\nCreate a call with the variant <code>force_note_new_head</code>.\nCreate a call with the variant <code>force_queue_action</code>.\nCreate a call with the variant <code>force_schedule_code_upgrade</code>.\nCreate a call with the variant <code>force_set_current_code</code>.\nCreate a call with the variant <code>force_set_current_head</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>include_pvf_check_statement</code>.\nCreate a call with the variant <code>poke_unused_validation_code</code>.\nCreate a call with the variant <code>remove_upgrade_cooldown</code>.\nCalled when a parachain head is updated. Returns the …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nLease holding or on-demand parachain.\nRemove the validation code from the storage iff the …\nRemove the validation code from the storage iff the …\nRemove an upgrade cooldown for a parachain.\nRemove an upgrade cooldown for a parachain.\nReturns the cost for removing an upgrade cooldown for the …\nGet a list of the first <code>MAX_PARA_HEADS</code> para heads sorted …\nTest function for triggering a new session in this pallet.\nThe initial validation code to use.\nAuthorized code hash.\nBlock at which authorization expires and will be removed.\nThe parachain for which the cooldown got removed.\nPara\nImplements benchmarking setup for the <code>merkle-mountain-range</code>…\nStruct to setup benchmarks for the <code>merkle-mountain-range</code> …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA para has been queued to execute pending actions. <code>para_id</code>\nThe actions to perform during the start of a specific …\nRuntime hook for assigning coretime for a given parachain.\nThe origin that can authorize …\nThe code hash authorizations for a para which will expire …\nContains a variant per dispatchable extrinsic that this …\nPara cannot be downgraded to an on-demand parachain.\nPara cannot be offboarded at this time.\nPara cannot be onboarded because it is already tracked by …\nPara cannot be upgraded to a lease holding parachain.\nParachain cannot currently schedule a code upgrade.\nA new code hash has been authorized for a Para.\nValidation code stored by its hash.\nA code upgrade has been scheduled for a Para. <code>para_id</code>\nConfiguration trait of this pallet.\nMultiplier to determine the cost of removing upgrade …\nThe validation code hash of every live para.\nCurrent code has been updated for a Para. <code>para_id</code>\nCurrent head has been updated for a Para. <code>para_id</code>\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe fungible instance used by the runtime.\nThe actual future code hash of a para.\nThe block number at which the planned code change is …\nCan be used to configure the genesis state of this pallet.\nThe head-data of every registered para.\nInvalid block number.\nInvalid validation code size.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe context (relay-chain block number) of the most recent …\nA new head has been noted for a Para. <code>para_id</code>\nPara is not registered in our system.\nNo upgrade authorized.\nRuntime hook for when a parachain head is updated.\nThe <code>Pallet</code> struct, the main type that implements traits …\nAll lease holding parachains. Ordered ascending by <code>ParaId</code>. …\nPast code of parachains. The parachains themselves may not …\nThe given validation code was accepted by the PVF …\nThe given validator already has cast a vote.\nThe signature for the PVF pre-checking is invalid.\nThe given validation code was rejected by the PVF …\nThe given para either initiated or subscribed to a PVF …\nThe statement for PVF pre-checking is for a future session.\nThe statement for PVF pre-checking is stale.\nThe given PVF does not exist at the moment of process a …\nClaimed validator index is out of bounds.\nRetrieve how many UMP messages are enqueued for this …\nReturns the cost for removing an upgrade cooldown for the …\nThe submitted code is not authorized.\nThe upgrade cooldown was removed.\nThis is used by the relay-chain to communicate that there …\nWeight information for extrinsics in this pallet.\nAdds the validation code to the storage.\nApplies the already authorized current code for the …\nSets the storage for the authorized current code hash of …\nNote a new block head for para within the context of the …\nPut a parachain directly into the next session’s action …\nSchedule an upgrade as if it was scheduled in the given …\nSet the storage for the parachain validation code …\nSet the storage for the current parachain head data …\nSet the storage for the current parachain head data …\nIncludes a statement for a PVF pre-checking vote. …\nRemove the validation code from the storage iff the …\nRemove an upgrade cooldown for a parachain.\nAuthorized code hash.\nBlock at which authorization expires and will be removed.\nThe parachain for which the cooldown got removed.\nPara\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nA helper trait to allow calling retain while getting access\nInherent data was filtered during execution. This should …\nThe hash of the submitted parent header doesn’t …\nHelper trait until <code>is_sorted_by</code> is stabilized. TODO: …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nScraped on chain data for extracting resolved disputes as …\nThe <code>Pallet</code> struct, the main type that implements traits …\nInclusion inherent called more than once per block.\nToo many candidates supplied.\nWeight information for extrinsics in this pallet.\nGet time weights from benchmarks and set proof size to tx …\nEnter the paras inherent. This will process bitfields and …\nEnter the paras inherent. This will process bitfields and …\nThe weight of a single backed candidate with a code …\nVariant over <code>v</code>, the count of validity votes for a backed …\nThe weight of one bitfield.\nThe weight of processing an empty parachain inherent.\nVariant over <code>v</code>, the count of dispute statements in a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRetains only the elements specified by the predicate.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>enter</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nInherent data was filtered during execution. This should …\nThe hash of the submitted parent header doesn’t …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nScraped on chain data for extracting resolved disputes as …\nThe <code>Pallet</code> struct, the main type that implements traits …\nInclusion inherent called more than once per block.\nToo many candidates supplied.\nWeight information for extrinsics in this pallet.\nEnter the paras inherent. This will process bitfields and …\nThe amount of era points given by backing a candidate that …\nThe amount of era points given by dispute voting on a …\nRewards validators for participating in parachains with …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA module exporting runtime API implementation functions …\nPut implementations of functions from staging APIs here.\nApproval voting subsystem configuration parameters\nImplementation for the <code>assumed_validation_data</code> function of …\nImplementation for <code>AsyncBackingParams</code> function from the …\nImplementation for the <code>availability_cores</code> function of the …\nImplementation for <code>ParaBackingState</code> function from the …\nImplementation for the <code>candidate_events</code> function of the …\nImplementation for the <code>candidate_pending_availability</code> …\nReturns all the candidates that are pending availability …\nImplementation for the <code>check_validation_outputs</code> function …\nReturns the claimqueue from the scheduler\nImplementation for <code>DisabledValidators</code>\nImplementation for the <code>dmq_contents</code> function of the …\nImplementation for <code>get_session_disputes</code> function from the …\nImplementation for the <code>inbound_hrmp_channels_contents</code> …\nReturn the min backing votes threshold from the …\nReturns the current state of the node features.\nDisputes imported via means of on-chain imports.\nImplementation for the <code>persisted_validation_data</code> function …\nReturns the list of all PVF code hashes that require …\nImplementation for the <code>AuthorityDiscoveryApi::authorities()</code>…\nImplementation for <code>scheduling_lookahead</code> function from the …\nGet session executor parameter set\nImplementation for the <code>session_index_for_child</code> function of …\nGet the session info for the given session, if stored.\nSubmits an PVF pre-checking vote.\nImplementation of <code>submit_report_dispute_lost</code> runtime API\nImplementation of <code>unapplied_slashes</code> runtime API\nImplementation for the <code>validation_code</code> function of the …\nImplementation for <code>validation_code_bomb_limit</code> function …\nImplementation for the <code>validation_code_by_hash</code> function of …\nReturns the validation code hash for the given parachain …\nImplementation for the <code>validator_groups</code> function of the …\nImplementation for the <code>validators</code> function of the runtime …\nThe block number type used by Polkadot. 32-bits will allow …\nContains a variant per dispatchable extrinsic that this …\nOne entry for each availability core. The <code>VecDeque</code> …\nConfiguration trait of this pallet.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe block number where the session start occurred. Used to …\nAll the validator groups. One for each core. Indices are …\nCommon traits and types used by the scheduler and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA module that is responsible for migration of storage.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAssignment (ParaId -&gt; CoreIndex).\nA bulk assignment.\nA pool assignment.\nReport that an assignment was duplicated by the scheduler.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nPush some assignment for mocking/benchmarks purposes.\nCalls <code>U::from(self)</code>.\nReturns the <code>ParaId</code> this assignment is associated to.\nPops an <code>Assignment</code> from the provider for a specified …\nPush back a previously popped assignment.\nA previously popped <code>Assignment</code> has been fully processed.\nThe core index the para got assigned to.\nThe assigned para id.\nMigrate <code>V0</code> to <code>V1</code> of the storage format.\nMigrate <code>V1</code> to <code>V2</code> of the storage format.\nMigrate <code>V2</code> to <code>V3</code> of the storage format.\nContains a variant per dispatchable extrinsic that this …\nOne entry for each availability core. The <code>VecDeque</code> …\nConfiguration trait of this pallet.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe block number where the session start occurred. Used to …\nAll the validator groups. One for each core. Indices are …\nA type for representing the validator account id in a …\nThe validator account keys of the validators actively …\nAn abstraction for the authority discovery pallet to help …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe earliest session for which previous session info is …\nA tuple of <code>(AccountId, Identification)</code> where <code>Identification</code>\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nExecutor parameter set for a given session index\nSession information in a rolling window. Should have an …\nA type for retrieving <code>AccountId</code>s of the validators in the …\nRetrieve authority identifiers of the current authority …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA module that is responsible for migration of storage.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe in-code storage version.\nThe validator account keys of the validators actively …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe earliest session for which previous session info is …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nExecutor parameter set for a given session index\nSession information in a rolling window. Should have an …\nA type for retrieving <code>AccountId</code>s of the validators in the …\nAll the validators actively participating in parachain …\nThe parachain attestation keys of the validators actively …\nKeeps tracks of information about all viable relay parents.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe current session index.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nInformation about a relay parent.\nFetches disabled validators list from session pallet. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nReturn the session index that should be used for any …\nTest function for setting the current session index.\nMigrate shared module storage to v1.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAll the validators actively participating in parachain …\nThe parachain attestation keys of the validators actively …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe current session index.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nAll account management related traits.\nThe arithmetic types used for safe math.\nPrelude to be included in the <code>benchmarking.rs</code> of a pallet.\nAccess to all of the dependencies of this crate. In case …\nAll derive macros used in frame.\nAll hashing related components.\n<strong>Rust-Analyzer users</strong>: See the documentation of the Rust …\nDocumentation for this macro can be found at …\nMacros used within the main <code>pallet</code> macro.\n<strong>Rust-Analyzer users</strong>: See the documentation of the Rust …\nThe main prelude of FRAME.\nAll of the types and tools needed to build FRAME-based …\nDocumentation for this macro can be found at …\nThe main testing prelude of FRAME.\nAll token related types and traits.\nAll traits often used in FRAME pallets.\nThis is already part of the <code>prelude</code>.\nPrelude to be included in the <code>weight.rs</code> of each pallet.\nThe account ID that this can be transformed into.\nTrait for type that can handle incremental changes to a …\n“OR gate” implementation of <code>EnsureOrigin</code> allowing for …\nSome type that is able to be collapsed into an account ID. …\nA lookup implementation returning the input value.\nTrait for type that can handle the initialization of …\nA number of members <code>_incoming</code> just joined the set and …\nInitialize the members to the given <code>members</code>.\nTransform into an account.\nThe accuracy of this type.\nArithmetic errors.\nA meta trait for arithmetic.\nA meta trait for arithmetic.  Same as <code>AtLeast16Bit</code>, but …\nA meta trait for arithmetic.\nA meta trait for arithmetic.  Same as <code>AtLeast32Bit</code>, but …\nA meta trait for arithmetic.\nA meta trait for arithmetic.  Same as <code>AtLeast8Bit</code>, but …\nA meta trait for arithmetic type operations, regardless of …\nNumbers which have upper and lower bounds\nPerforms addition that returns <code>None</code> instead of wrapping …\nPerforms division that returns <code>None</code> instead of panicking …\nPerforms multiplication that returns <code>None</code> instead of …\nPerforms negation that returns <code>None</code> if the result can’t …\nPerforms an integral remainder that returns <code>None</code> instead …\nPerforms a left shift that returns <code>None</code> on shifts larger …\nPerforms a right shift that returns <code>None</code> on shifts larger …\nPerforms subtraction that returns <code>None</code> instead of wrapping …\nPrecision of this fixed point implementation. It should be …\nDivision by zero.\nPerforms addition that returns <code>ArithmeticError</code> instead of …\nPerforms self addition that returns <code>ArithmeticError</code> …\nPerforms division that returns <code>ArithmeticError</code> instead of …\nPerforms self division that returns <code>ArithmeticError</code> …\nExtends <code>FixedPointNumber</code> with the Ensure family functions.\nSimilar to <code>TryFrom</code> but returning an <code>ArithmeticError</code> error.\nSimilar to <code>TryInto</code> but returning an <code>ArithmeticError</code> error.\nPerforms multiplication that returns <code>ArithmeticError</code> …\nPerforms self multiplication that returns <code>ArithmeticError</code> …\nMeta trait that supports all immutable arithmetic <code>Ensure*</code> …\nMeta trait that supports all assigned arithmetic <code>Ensure*</code> …\nPerforms subtraction that returns <code>ArithmeticError</code> instead …\nPerforms self subtraction that returns <code>ArithmeticError</code> …\nA fixed point number representation in the range. <em>Fixed </em>…\nA fixed point number representation in the range. <em>Fixed </em>…\nSomething that implements a decimal fixed point number.\nInteger types that can be used to interact with …\nA fixed point number representation in the range. <em>Fixed </em>…\nA fixed point number representation in the range. <em>Fixed </em>…\nThe underlying data type used for this fixed point number.\nThe data type used to build this per-thingy.\nGet the inner type of a <code>PerThing</code>.\nA trait implementing integer square root.\nA collection-like object that is made of values of type <code>T</code> …\nDefines a multiplicative identity element for <code>Self</code>.\nOverflow.\nSomething that implements a fixed point ration with an …\nA fixed point representation of a number in the range [0, 1…\nA fixed point representation of a number in the range [0, 1…\nA fixed point representation of a number in the range [0, 1…\nA fixed point representation of a number in the range [0, 1…\nA fixed point representation of a number in the range [0, 1…\nA wrapper for any rational number with a 128 bit numerator …\nA wrapper for any rational number with infinitely large …\nThe rounding method to use for unsigned quantities.\nIndicates if this fixed point implementation is signed or …\nConvenience type to work around the highly unergonomic …\nSaturating arithmetic operations, returning maximum or …\nUseful functions for signed numbers (i.e. numbers that can …\nThe rounding method to use.\nTrait for comparing two numbers with an threshold.\nUnderflow.\nJust like <code>From</code> except that if the source value is too big …\nJust like <code>Into</code> except that if the source value is too big …\nA trait for values which cannot be negative\nA data type larger than <code>Self::Inner</code>, used to avoid …\nGet the upper type of a <code>PerThing</code>.\nDefines an additive identity element for <code>Self</code>.\nComputes the absolute value.\nThe positive difference of two numbers.\nCopied from <code>sp-runtime</code> and documented there.\nAdds two numbers, checking for overflow. If overflow …\nDivides two numbers, checking for underflow, overflow and …\nMultiplies two numbers, checking for underflow or …\nNegates a number, returning <code>None</code> for results that can’t …\nRaises a value to the power of exp, returning <code>None</code> if an …\nFinds the remainder of dividing two numbers, checking for …\nChecked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …\nChecked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …\nCompute the square root. If it overflows or is negative, …\nSubtracts two numbers, checking for underflow. If …\nConsume self and return the number of parts per thing.\nRaises a value to the power of exp, returning …\nConverts a fraction into <code>Self</code>.\nBuilds this type from an integer number.\nBuild this type from a number of parts per thing.\nApproximate the fraction <code>p/q</code> into a per-thing fraction.\nFind the integer square root, returning <code>None</code> if the number …\nConsumes <code>self</code> and returns the inner raw value.\nReturns true if the number is negative and false if the …\nReturns true if the number is positive and false if the …\nReturns <code>true</code> if <code>self</code> is equal to the additive identity.\nReturns the largest finite number this type can represent\nReturns the smallest finite number this type can represent\nNormalize <code>input</code> so that the sum of all elements reaches …\nNormalize self around <code>targeted_sum</code>.\nReturns the multiplicative identity element of <code>Self</code>, <code>1</code>.\nSaturating addition. Compute <code>self + rhs</code>, saturating at the …\nSaturating multiply. Compute <code>self * rhs</code>, saturating at the …\nSaturating exponentiation. Compute <code>self.pow(exp)</code>, …\nSaturating subtraction. Compute <code>self - rhs</code>, saturating at …\nReturns the sign of the number.\nCompare if <code>self</code> is <code>threshold</code> greater or less than <code>other</code>.\nConvert from a value of <code>T</code> into an equivalent instance of …\nConsume self to return an equivalent value of <code>T</code>.\nReturns the additive identity element of <code>Self</code>, <code>0</code>.\nThe accuracy of this type.\nDetails of an account for which a private key is contained …\nThe account ID that this can be transformed into.\nThe AccountId used across the system.\nThis type can be converted into and possibly from an …\nType alias for the <code>AccountId</code> associated type of system …\nOperation may result in account going out of existence.\nThe transaction birth block is ancient.\nA type binding runtime-level <code>Public/Signature</code> pair with …\nAppend iterator for fast append operations.\nAn arithmetic error.\nArithmetic errors.\nInterface to differentiate between Runtime Origins …\nSimple amalgamation trait to collect together properties …\nThe type for the kinds of asset that are going to be paid.\nA meta trait for arithmetic.\nA meta trait for arithmetic.  Same as <code>AtLeast16Bit</code>, but …\nA meta trait for arithmetic.\nA meta trait for arithmetic.  Same as <code>AtLeast32Bit</code>, but …\nA meta trait for arithmetic.\nA meta trait for arithmetic.  Same as <code>AtLeast8Bit</code>, but …\nA trait to allow calls to authorize themselves from the …\nIt is signed by nobody, the extrinsic is authorized by the …\nAn extrinsic with a Mandatory dispatch resulted in Error. …\nA bad origin.\nGeneral error to do with the transaction’s proofs (e.g. …\nThe sending address is disabled or known to be invalid.\nThe type by which we measure units of the currency in …\nWithdraw could not happen since the amount to be withdrawn …\nStatus of funds.\nA meta trait for arithmetic type operations, regardless of …\nAccount cannot exist with the funds that would be given.\nDeposit couldn’t happen due to the amount being too low. …\nRuntime api for benchmarking a FRAME runtime.\nThe results of a single of benchmark.\nThe results of a single of benchmark, where time and db …\nConfiguration used to setup and run runtime benchmarks.\nPossible errors returned from the benchmarking pipeline.\nA list of benchmarks available for a particular pallet and …\nAn alphabet of possible parameters to use for benchmarking.\nRecords the time and proof size of a single benchmark …\nResult from running benchmarks on a FRAME pallet. Contains …\nThe pallet benchmarking trait.\nThe required setup for creating a benchmark.\nThe type by which we identify the beneficiaries to whom a …\nThe operation may be considered successful even if less …\nHash storage keys with blake2 128\nHash storage keys with <code>concat(blake2_128(key), key)</code>\nHash storage keys with blake2 256\nBlake2-256 Hash implementation.\nType of <code>BlockNumber</code> to provide.\nType alias for the <code>BlockNumber</code> associated type of system …\nGet current block number\nAccount cannot receive the assets.\nAccount cannot receive the assets.\nSomething that is bound to a fixed <code>RuntimeAppPublic</code>.\nNumbers which have upper and lower bounds\nA bounded map based on a B-Tree.\nA bounded set based on a B-Tree.\nA bounded slice.\nA bounded vector.\nA trait to define the build function of a genesis config …\nThe call of the transaction is not expected.\nThe call type of the pallet.\nThe call to validate\nRuntime call type, as in <code>frame_system::Config::Call</code>\nThe function and pallet name of the Call.\nAccount cannot be created.\nDeposit cannot happen since the account cannot be created …\nAccount cannot be created for a held balance.\nCould not lookup some information that is required to …\nFailed to lookup some data.\nTrait for type that can handle incremental changes to a …\nPerforms addition that returns <code>None</code> instead of wrapping …\nConvenience type to work around the highly unergonomic …\nPerforms division that returns <code>None</code> instead of panicking …\nPerforms multiplication that returns <code>None</code> instead of …\nPerforms negation that returns <code>None</code> if the result can’t …\nPerforms an integral remainder that returns <code>None</code> instead …\nPerforms a left shift that returns <code>None</code> on shifts larger …\nPerforms a right shift that returns <code>None</code> on shifts larger …\nPerforms subtraction that returns <code>None</code> instead of wrapping …\nDerive [<code>Clone</code>] but do not bound any generic.\n…\nConst getter for a basic type.\nConst getter for unsigned integers.\nAt least one consumer is remaining so the account cannot …\nA trait for querying whether a type can be said to “…\nInfallible conversion trait. Generic over both source and …\nReversing infallible conversion trait. Generic over both …\nThe state is corrupt; this is generally not going to fix …\nA wrapper around a <code>StorageMap</code> and a <code>StorageValue</code> (with the …\nA wrapper around a <code>StorageNMap</code> and a <code>StorageValue</code> (with …\nInterface for creating a transaction for a call that will …\nInterface for creating a bare extrinsic.\nInterface for creating a bare extrinsic.\nInterface for creating an old-school signed transaction.\nInterface for creating a transaction.\nCommon interface for the <code>CreateTransaction</code> trait family to …\nAny other custom invalid validity that is not covered by …\nAny other custom unknown validity that is not covered by …\nPrecision of this fixed point implementation. It should be …\n<code>?</code> formatting.\nDerive macro generating an impl of the trait <code>Debug</code>.\nDerive [<code>Debug</code>] but do not bound any generics.\nTrait that allows zero-copy read of value-references from …\nDerive <code>parity_scale_codec::Decode</code> for struct and enum.\nMarker trait used for identifying types that call the …\nDerive <code>parity_scale_codec::DecodeWithMemTracking</code> for …\nderive <code>Default</code> but do no bound any generic. Docs are at …\nA trait to handle errors and options when you are really …\nA variant of <code>Defensive</code> with the same rationale, for the …\nOne of a number of consequences of withdrawing a fungible …\nA <strong>data structure</strong> that can be deserialized from any data …\nA generalized group of dispatch types.\nReason why a dispatch call failed.\nResult of a <code>Dispatchable</code> which contains the <code>DispatchResult</code> …\nShortcut to reference the <code>Info</code> type of a <code>Dispatchable</code>.\nUn-augmented version of <code>DispatchResultWithPostInfo</code> that …\nReturn type of a <code>Dispatchable</code> which contains the …\nThe return type of a <code>Dispatchable</code> in frame. When returned …\nSingle-function utility trait with a blanket impl over …\nA lazy call (module function and argument values) that can …\nDivision by zero.\n“OR gate” implementation of <code>EnsureOrigin</code>, <code>Success</code> type …\n“OR gate” implementation of <code>EnsureOrigin</code> allowing for …\nTrait that allows zero-copy write of value-references to …\nDerive <code>parity_scale_codec::Encode</code> and …\nPerforms addition that returns <code>ArithmeticError</code> instead of …\nPerforms self addition that returns <code>ArithmeticError</code> …\nPerforms division that returns <code>ArithmeticError</code> instead of …\nPerforms self division that returns <code>ArithmeticError</code> …\nExtends <code>FixedPointNumber</code> with the Ensure family functions.\nSimilar to <code>TryFrom</code> but returning an <code>ArithmeticError</code> error.\nSimilar to <code>TryInto</code> but returning an <code>ArithmeticError</code> error.\nPerforms multiplication that returns <code>ArithmeticError</code> …\nPerforms self multiplication that returns <code>ArithmeticError</code> …\nMeta trait that supports all immutable arithmetic <code>Ensure*</code> …\nMeta trait that supports all assigned arithmetic <code>Ensure*</code> …\nSome sort of check on the origin is performed by this …\nPerforms subtraction that returns <code>ArithmeticError</code> instead …\nPerforms self subtraction that returns <code>ArithmeticError</code> …\nAn <code>Iterator</code> over tasks of this type used as the return …\nDeriveEq but do no bound any generic.\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nThe error returned by <code>check_inherent</code>.\nAn error which could be returned by the Pay type\nSomething that can estimate at which block the next …\nA <code>Contains</code> implementation that contains every value.\nThe operation should must either proceed either exactly …\nResources exhausted, e.g. attempt to read/write data which …\nThe transaction would exhaust the resources of current …\nSimple boolean for whether an account needs to be kept in …\nWe don’t care if the account gets killed by this …\nThe funds already exist in the system, therefore will not …\nThe extension.\nType to represent the version of the Extension used in …\nTransaction has been received externally.\nThe extrinsic.\nType alias for the <code>Extrinsic</code> associated type of system …\nA fixed point number representation in the range. <em>Fixed </em>…\nA fixed point number representation in the range. <em>Fixed </em>…\nSomething that implements a decimal fixed point number.\nInteger types that can be used to interact with …\nA fixed point number representation in the range. <em>Fixed </em>…\nA fixed point number representation in the range. <em>Fixed </em>…\nMarker struct used to flag using all supported keys to …\nMarker struct used to flag using any of the supported keys …\nThe operation should be forced to succeed if possible. …\nThe privilege with which a withdraw operation is conducted.\nFunds are free, as corresponding to <code>free</code> item in Balances.\nFunds exist but are frozen.\nNot enough of the funds in the account are available for …\nFunds are unavailable.\nGeneral error to do with the transaction not yet being …\nA raw crypto public key wrapped by <code>RuntimeAppPublic</code>.\nA matching raw crypto <code>Signature</code> type.\nA trait for querying a single value from a type.\nGets the metadata for the Call - function name and pallet …\nImplement Get by returning Default for any type that …\nA <code>Dispatchable</code> function (aka transaction) that can carry …\nProvides information about a pallet’s storage versions.\nFixed-size uninterpreted hash type with 20 bytes (160 …\nFixed-size uninterpreted hash type with 32 bytes (256 …\nFixed-size uninterpreted hash type with 64 bytes (512 …\nAbstraction around hashing\nType alias for the <code>Header</code>.\nThe pallet hooks trait. This is merely an umbrella trait …\nUnique identifier of this signed extension.\nThe inherent identifier used by this inherent.\nAn identifier given to an individual payment.\nSome type that is able to be collapsed into an account ID. …\nStore the key directly.\nThe type identifying for which type info is provided.\nA lookup implementation returning the input value.\nAny additional data which was known at the time of …\nTransaction is already included in block.\nThis type is generated by the <code>pallet</code> macro.\nThe implicit data was unable to be calculated.\nThe info type.\nAn opaque set of information attached to the transaction. …\nInherent data to include in a block.\nAn identifier for an inherent.\nTrait for type that can handle the initialization of …\nThe underlying data type used for this fixed point number.\nThe data type used to build this per-thingy.\nGet the inner type of a <code>PerThing</code>.\nA <code>Contains</code> implementation which contains all members of …\nSimple trait for providing a filter over a reference to …\nA trait implementing integer square root.\nThe transaction is invalid.\nAn invalid transaction validity.\nSomething that can be checked to be a of sub type <code>T</code>.\nTrait to be used when types are exactly same.\nIterator for normal and draining iteration.\nKeccak-256 Hash implementation.\nOperation must not result in the account going out of …\nThe key type expected.\nUsed by the new benchmarking code to specify that a …\nTransaction is coming from a local source.\nThe number of bytes of the module-specific <code>error</code> field …\nAuxiliary to make any given error resolve to …\nA mandatory dispatch. These kinds of dispatch are always …\nAn extrinsic with a mandatory dispatch tried to be …\nA derivative <code>EnsureOrigin</code> implementation. It mutates the …\nUse the maximum values among all other analysis functions …\nItems implementing <code>MaxEncodedLen</code> have a statically known …\nDerive <code>parity_scale_codec::MaxEncodedLen</code> for struct and …\nA type that implements Serialize, DeserializeOwned and …\nUse median slopes for analyzing the benchmarking results.\nA type that can be used in runtime structures.\nUse minimum squares regression for analyzing the …\nThe funds will be minted into the system, increasing total …\nA custom error in a module.\nA type used exclusively by storage maps as their key type.\nTransactor will NOT pay related fees.\nNoOp polling is required if pallet-referenda functionality …\nThere are no providers so the account cannot be created.\nNo validator found for the given unsigned transaction.\nIt is signed by nobody, can be either:\nA normal dispatch.\nA collection-like object that is made of values of type <code>T</code> …\nWithdrawal would cause unwanted loss of account.\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nSee <code>Hooks::on_runtime_upgrade</code>.\nHandler for when some currency “account” decreased in …\nDefines a multiplicative identity element for <code>Self</code>.\nA session handler for specific key type.\nSome part of the balance gives the only provider reference …\nAn operational dispatch.\nImplements <code>QueryKindTrait</code> with <code>Query</code> type being <code>Option&lt;_&gt;</code>.\nDerive [<code>Ord</code>] but do no bound any generic. Docs are at …\nThe origin type of the transaction.\nType alias for the <code>Origin</code> associated type of system config.\nMethods available on <code>frame_system::Config::RuntimeOrigin</code>.\nSome error occurred.\nThe hash type produced.\nOverflow.\nThere has been an overflow in the system. This is …\nAn overflow would occur. This is practically unexpected, …\nThe benchmarking pipeline is allowed to fail here, and we …\nA pallet identifier. These are per pallet and should be …\nProvides information about the pallet itself and its setup …\nThe caller origin, overarching type of all pallets origins.\nTrait that must be implemented by all structs that can be …\nA type that can be used as a parameter in a dispatchable …\nDerive [<code>PartialEq</code>] but do not bound any generic.\nDerive [<code>PartialOrd</code>] but do not bound any generic. Docs are …\nCan be implemented by <code>PayFromAccount</code> using a <code>fungible</code> …\nGeneral error to do with the inability to pay some fees …\nExplicit enum to denote if a transaction pays fee or not.\nSomething that implements a fixed point ration with an …\nA fixed point representation of a number in the range [0, 1…\nA fixed point representation of a number in the range [0, 1…\nA fixed point representation of a number in the range [0, 1…\nA fixed point representation of a number in the range [0, 1…\nA fixed point representation of a number in the range [0, 1…\nZero-sized type used to mark things that “act like” …\nThe operation should execute with regular privilege.\nWeight information that is only available post dispatch. …\nAdditional information that is returned by <code>dispatch</code>. Can …\nThe <code>Pre</code> of the extension.\nThe type that encodes information that can be passed from …\nThe precision required of an operation generally involving …\nThe mode by which we describe whether an operation should …\nThe account may not be killed and our provider reference …\nThe account may not be killed, but we don’t care if the …\nThe origin of funds to be used for a deposit operation.\nA pallet that provides or verifies an inherent extrinsic …\nA public key that is capable of identifying <code>AccountId</code>s.\nThe <code>RuntimeAppPublic</code> this type is bound to.\nRanked membership data structure.\nHandler that can deal with the swap of two members.\nA wrapper for any rational number with a 128 bit numerator …\nA wrapper for any rational number with infinitely large …\nOrigin for the System pallet.\nThe recording trait used to mark the start and end of a …\nMutator which reduces a scalar by a particular amount.\nAccount balance would reduce to zero, potentially …\nMorpher to disregard the source value and replace with the …\nFunds are reserved, as corresponding to <code>reserved</code> item in …\nA submission result.\nA submission result.\nThe resultant type.\nImplements <code>QueryKindTrait</code> with <code>Query</code> type being …\nThe system itself ordained this dispatch to happen: this …\nRoot origin is not allowed.\nThe rounding method to use for unsigned quantities.\nA application-specific crypto.\nThe runtime’s call type.\nType alias for the <code>RuntimeCall</code> associated type of system …\nDerive [<code>Debug</code>], if <code>std</code> is enabled it uses …\nEvery function call from your runtime has an origin, which …\nThe origin type of the runtime, (i.e. …\nIndicates if this fixed point implementation is signed or …\nConvenience type to work around the highly unergonomic …\nSaturating arithmetic operations, returning maximum or …\nSubmit a signed transaction to the transaction pool.\nSubmit an unsigned transaction onchain with a signed …\nA <strong>data structure</strong> that can be serialized into any data …\nA message signer.\nA matching <code>Signature</code> type.\nA signature data.\nUseful functions for signed numbers (i.e. numbers that can …\nIt is signed by some public key and we provide the …\nUtility trait to be implemented on payloads that can be …\nThe rounding method to use.\nProvides an implementation for signing transaction …\nA wrapper around the types which are used for signing.\nThe benchmarking pipeline is allowed to fail here, and we …\nType to lookup from.\nGeneral error to do with the transaction being outdated …\nMeans of changing one type into another in a manner …\nThe benchmarking pipeline should stop and return the inner …\nA type representing a <em>double map</em> in storage. This …\nA trait to give information about storage.\nA non-continuous container type.\nA type representing a <em>map</em> in storage. A <em>storage map</em> is a …\nA type representing an <em>NMap</em> in storage. This structure …\nA type representing a <em>value</em> in storage. A <em>storage value</em> is …\nThe storage version of a pallet.\nProvides the ability to directly submit signed and unsigned\nAccount continued in existence.\nAccount continued in existence.\nA return type.\nThe <code>Pallet</code> struct, the main type that implements traits …\nType to lookup into.\nA general-purpose trait which defines a type of service …\nTrait for comparing two numbers with an threshold.\nAn error to do with tokens.\nDescription of what went wrong when trying to complete an …\nThere are too many consumers so the account cannot be …\nInput that adds infinite number of zero after wrapped …\nMeans by which a transaction may be extended. This type …\nMinimum number of blocks a transaction will remain valid …\nPriority for a transaction. Additive. Higher is better.\nThe source of the transaction.\nTag for a transaction. No two transactions with the same …\nInformation on a transaction’s validity and, if valid, …\nErrors that can occur while checking the validity of a …\nInformation on a transaction’s validity and, if valid, …\nThe number of transactional layers has been reached, or we …\nAn error with tries.\nHash storage keys with twox 128\nHash storage keys with twox 256\nHash storage keys with <code>concat(twox64(key), key)</code>\nThe type which is returned.\nImplementors return their meta type information.\nA trait for querying a single value from a type defined in …\nLittle-endian large integer type 256-bit unsigned integer.\nLittle-endian large integer type 512-bits unsigned integer.\nSome resource (e.g. a preimage) is unavailable right now. …\nUnderflow.\nThere has been an underflow in the system. This is …\nType that can be dispatched with an origin but without …\nJust like <code>From</code> except that if the source value is too big …\nJust like <code>Into</code> except that if the source value is too big …\nTransaction validity can’t be determined.\nThe asset in question is unknown.\nThe asset is unknown. Usually because an <code>AssetId</code> has been …\nThe asset is unknown. Usually because an <code>AssetId</code> has been …\nThe transaction extension did not authorize any origin.\nAn unknown transaction validity.\nA trait for values which cannot be negative\nOperation is not supported by the asset.\nA data type larger than <code>Self::Inner</code>, used to avoid …\nGet the upper type of a <code>PerThing</code>.\nGet the number of variants.\nThe <code>Val</code> of the extension.\nThe type that encodes information that can be passed from …\nInformation concerning a valid transaction.\nShortcut for the result value of the <code>validate</code> function.\nProvide validation for unsigned extrinsics.\nImplements <code>QueryKindTrait</code> with <code>Query</code> type being <code>Value</code>.\nTrait to get the number of variants in any enum.\nAdapter for <code>Get&lt;u32&gt;</code> to access <code>VARIANT_COUNT</code> from …\nA weakly bounded vector.\nNo weight can be determined; set the weight of this call …\nOne of a number of consequences of withdrawing a fungible …\nReasons for moving funds out of an account.\nThe withdraw would mean the account dying when it needs to …\nTransactor will pay related fees.\nDefines an additive identity element for <code>Self</code>.\nComputes the absolute value.\nThe positive difference of two numbers.\nGrab an account, seeded by a name and index.\nActual weight consumed by a call or <code>None</code> which stands for …\nThis macro adds pallet benchmarks to a <code>Vec&lt;BenchmarkBatch&gt;</code> …\nAdd a filter to the origin.\nA fast append iterator.\nCopied from <code>sp-runtime</code> and documented there.\nAsserts that the type implements <em>all</em> of the given traits.\nAsserts that <em>all</em> types in a list are equal to each other.\nThe authorize function.\nAllows to authorize some general transactions with …\nReturn the average length of a session.\nThe extrinsic (or benchmark name) of this benchmark.\nThe extrinsic (or benchmark name) of this benchmark.\nThe encoded name of the benchmark/extrinsic to run.\nAn attribute macro used to declare a benchmark within a …\nGet the benchmarks available for this pallet. Generally …\nAn attribute macro that can be attached to a (non-empty) …\nSame as <code>benchmarks</code> but for instantiable module.\nSame as <code>benchmarks</code> but for instantiable pallet declared …\nDo a Blake2 128-bit hash and return result.\nDo a Blake2 256-bit hash and return result.\nDo a Blake2 512-bit hash and return result.\nDo a Blake2 512-bit hash and place result in <code>dest</code>.\nDo a Blake2 64-bit hash and return result.\nAn attribute macro used to specify that a block should be …\nThe build function puts initial <code>GenesisConfig</code> keys/values …\nDocumentation for this macro can be found at …\nEach dispatchable may also be annotated with the …\nGet a reference to the caller (<code>CallerTrait</code> impl).\nA number of members <code>_incoming</code> just joined the set and …\nCheck how a payment has proceeded. <code>id</code> must have been …\nAdds two numbers, checking for overflow. If overflow …\nDivides two numbers, checking for underflow, overflow and …\nMultiplies two numbers, checking for underflow or …\nNegates a number, returning <code>None</code> for results that can’t …\nRaises a value to the power of exp, returning <code>None</code> if an …\nFinds the remainder of dividing two numbers, checking for …\nChecked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …\nChecked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …\nCompute the square root. If it overflows or is negative, …\nSubtracts two numbers, checking for underflow. If …\nDocumentation for this macro can be found at …\nReturn the components and their ranges which should be …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nReturn <code>true</code> if this “contains” the given value <code>t</code>.\nMake conversion.\nMake conversion back.\nVersion of the crate containing the pallet.\nCreate a bare extrinsic.\nCreate a bare extrinsic.\nCreate the transaction extension to be used alongside an …\nCreate an inherent out of the given <code>InherentData</code>.\nAttempt to create signed extrinsic data that encodes call …\nCreate a transaction using the call and the desired …\nReturns the current block number.\nGet the number of nanoseconds passed since the UNIX epoch\nThe db tracking results from this benchmark.\nAttempt to deserialise the value from input.\nConsume self and return the number of parts per thing.\nDoes not alter the inner value at all, but it will log …\nGeneric function to mark an execution path as ONLY …\nTrigger a defensive failure if a condition is not met.\nSame as <code>Defensive::defensive</code>, but it takes a proof as …\nIncrease <code>self</code> by <code>other</code> defensively.\nReturn <code>self</code> plus <code>other</code> defensively.\nDecrement <code>self</code> by one defensively.\nIncrement <code>self</code> by one defensively.\nReturn the product of <code>self</code> and <code>other</code> defensively.\nReduce <code>self</code> by <code>other</code> defensively.\nReturn <code>self</code> minus <code>other</code> defensively.\nExactly the same as <code>unwrap_or</code>, but it does the defensive …\nExactly the same as <code>unwrap_or_default</code>, but it does the …\nExactly the same as <code>unwrap_or_else</code>, but it does the …\nDefines pallet configs that <code>add_benchmarks</code> and …\nDemote a member to the next lower rank; demoting beyond …\nDeserialize this value from the given Serde deserializer.\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nActually dispatch this call and return the result of it.\nDispatch this call but do not check the filter in origin.\nDispatch a transaction with the given base origin and call.\nDrain the elements in append order.\nRepresents the (inclusive) ending number of this <code>ParamRange</code>…\nEvaluate <code>$x:expr</code> and if not true return <code>Err($y:expr)</code>.\nEnsure that the origin <code>o</code> represents an extrinsic with …\nEnsure that a call to <code>check_payment</code> with the given …\nEnsure that the origin <code>o</code> represents an unsigned extrinsic. …\nRaises a value to the power of exp, returning …\nEnsure that the origin <code>o</code> represents the root. Returns <code>Ok</code> …\nEnsure that the origin <code>o</code> represents a signed extrinsic …\nEnsure that the origin <code>o</code> represents either a signed …\nEnsure that a call to pay with the given parameters will …\nThe actual <code>DispatchResult</code> indicating whether the dispatch …\nDocumentation for this macro can be found at …\nReturn an estimate of the current session progress.\nReturn the block number at which the next session rotation …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nAn attribute macro used to specify the extrinsic call …\nDocumentation for this macro can be found at …\nDetermine if a given value should be allowed through the …\nFilter the call if caller is not root, if false is …\nFormats the value using the given formatter.\nConverts a fraction into <code>Self</code>.\nBuilds this type from an integer number.\nCast mutable reference.\nBuild this type from a number of parts per thing.\nApproximate the fraction <code>p/q</code> into a per-thing fraction.\nCast reference.\nName of the function.\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nReturn the current value.\nReturn the current value.\nReturn a <code>CallMetadata</code>, containing function and pallet name …\nReturn all function names for the given <code>module</code>.\nReturn a <code>DispatchInfo</code>, containing relevant information of …\nReturn all module names.\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nRuntime-specific <code>AccountId</code>.\nThis creates a test suite which runs the module’s …\nHelper macro to be used in a <code>impl TransactionExtension</code> …\n<strong>Rust-Analyzer users</strong>: See the documentation of the Rust …\nReturns the in-code storage version as specified in the …\nDocumentation for this macro can be found at …\nIndex of the pallet as configured in the runtime.\nIndex on the provided list of accounts or list of all …\nAdd a member to the group at the <code>min_rank()</code>.\nDocumentation for this macro can be found at …\nInitialize the members to the given <code>members</code>.\nThe optional attribute <code>#[inject_runtime_type]</code> can be …\nSet up the storage, and prepare a closure to run the …\nThe instance of this pallet being benchmarked.\nThe instance of this pallet being benchmarked.\nThe encoded name of the pallet instance to benchmark.\nAn attribute macro that can be attached to a (non-empty) …\nFind the integer square root, returning <code>None</code> if the number …\nNumber of times to repeat benchmark within the Wasm …\nTransform into an account.\nConsume <code>self</code> and return the caller.\nConsumes <code>self</code> and returns the inner raw value.\nCast mutable reference.\nCast reference.\nConvert this value amalgamated with a secondary “sub” …\nReturn whether the call is an inherent call.\nReturns true if the number is negative and false if the …\nReturns true if the number is positive and false if the …\nReturns <code>Some(_)</code> if <code>self</code> is an instance of sub type <code>T</code>.\nWhether the origin is authorized to include a transaction …\nChecks if a particular instance of this <code>Task</code> variant is a …\nReturns <code>true</code> if <code>self</code> is equal to the additive identity.\nList the elements in append order.\nInspects the pallet’s state and enumerates tasks of this …\nDo a keccak 256-bit hash and return result.\nDo a keccak 512-bit hash and return result.\nThis macro allows users to easily generate a list of …\nTransaction longevity\nAttempt a lookup.\nUpper bound, in bytes, of the maximum encoded size of this …\nReturns the largest finite number this type can represent\nThe lowest rank possible in this membership organisation.\nReturns the smallest finite number this type can represent\nName of the Rust module containing the pallet.\nName of the pallet as configured in the runtime.\nTwo128 hash of name.\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nCreate with system none origin and …\nNormalize <code>input</code> so that the sum of all elements reaches …\nNormalize self around <code>targeted_sum</code>.\nReturns the storage version of the pallet as last set in …\nA validator got disabled. Act accordingly until a new …\nThe given validator set will be used for the genesis …\nSession set has changed; act appropriately. Note that this …\nReturns the multiplicative identity element of <code>Self</code>, <code>1</code>.\nThe ordered Patricia tree root of the given <code>input</code>.\nDocumentation for this macro can be found at …\nThe pallet containing this benchmark.\nThe pallet containing this benchmark.\nThe encoded name of the pallet to benchmark.\nName of the pallet to which the function belongs.\n<strong>Rust-Analyzer users</strong>: See the documentation of the Rust …\nMake a payment and return an identifier for later …\nWhether this transaction should pay fees when all is said …\nAdditional information about the <code>Dispatchable</code> which is …\nDo any pre-flight stuff for a transaction after validation.\nPriority of the transaction.\nPromote a member to the next higher rank.\nA flag indicating if the transaction should be propagated …\nProvided tags\nReturn a public key that is expected to have a matching …\nA runtime-specific <code>Public</code> key for that key pair.\nReturn the rank of the given ID, or <code>None</code> if they are not a …\nAttach this attribute to an impl statement that you want …\nTransaction dependencies\nReset origin filters to default one, i.e …\nThe results from this benchmark.\nCreate with system root origin and …\nPerforms the work for this particular <code>Task</code> variant.\nRun the benchmarks for this pallet.\nSaturating addition. Compute <code>self + rhs</code>, saturating at the …\nSaturating multiply. Compute <code>self * rhs</code>, saturating at the …\nSaturating exponentiation. Compute <code>self.pow(exp)</code>, …\nSaturating subtraction. Compute <code>self - rhs</code>, saturating at …\nThe selected component values to use when running the …\nSubmit a signed transaction to the local pool.\nSend an unsigned transaction with a signed payload.\nSerialize this value into the given Serde serializer.\nReplace the caller with caller from the other origin\nReplace the caller with caller from the other origin\nDo a sha2 256-bit hash and return result.\nshow error message and debugging info for the case of an …\nConstruct and sign given payload.\nSign a message.\nCreate with system signed origin and …\nReturns the sign of the number.\nRepresents the (inclusive) starting number of this …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nMember <code>old</code> was swapped with <code>new</code> at <code>rank</code>.\nAllows defining conditions for a task to run.\nA unique value representing this <code>Task</code> within the current …\nAllows defining an index for a task.\nAllows defining an iterator over available work items for …\nAllows defining the weight of a task.\nAllows you to define some service work that can be …\nCompare if <code>self</code> is <code>threshold</code> greater or less than <code>other</code>.\nDo everything which would be done in a dispatch_transaction…\nThe extrinsic timing results from this benchmark.\nThe Patricia tree root of the given mapping.\nTry to convert an account ID into this type. Might not …\nSame as <code>into_sub_account_truncating</code>, but ensuring that all …\nPerform the origin check.\nAttempt to get an outer origin capable of passing …\nDo something with the caller, consuming self but returning …\nDo a XX 128-bit hash and return result.\nDo a XX 128-bit hash and place result in <code>dest</code>.\nDo a XX 256-bit hash and return result.\nDo a XX 256-bit hash and place result in <code>dest</code>.\nDo a XX 64-bit hash and return result.\nDo a XX 64-bit hash and place result in <code>dest</code>.\nReturns the static type identifier for <code>Self</code>.\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nConvert from a value of <code>T</code> into an equivalent instance of …\nConsume self to return an equivalent value of <code>T</code>.\nConvert from Target back to Source.\nValidate a transaction for the transaction queue.\nValidate and prepare a transaction, ready for dispatch.\nJust validate a transaction.\nValidates the passed <code>pov_mode</code>s.\nReturn the validity of the call\nDocumentation for this macro can be found at …\nEnable an extra benchmark iteration which runs the …\nDocumentation for this macro can be found at …\nThe weight consumed by executing this extension instance …\nReturns the weight of executing this <code>Task</code>.\nDocumentation for this macro can be found at …\nThe weight of the authorization function.\nAllows to define the weight of the authorize function.\nWhitelist the given account.\nDocumentation for this macro can be found at …\nThis caller account is automatically whitelisted for DB …\nReturns the additive identity element of <code>Self</code>, <code>0</code>.\nIt is signed by nobody, the extrinsic is authorized by the …\nProvides implementations for the extern host functions.\nIt is signed by nobody, can be either:\nOrigin for the System pallet.\nThe system itself ordained this dispatch to happen: this …\nIt is signed by some public key and we provide the …\nThe <code>Pallet</code> struct, the main type that implements traits …\nGrab an account, seeded by a name and index.\nThis macro adds pallet benchmarks to a <code>Vec&lt;BenchmarkBatch&gt;</code> …\nConstruct pallet benchmarks for weighing dispatchables.\nCommit pending storage changes to the trie database and …\nGet the number of nanoseconds passed since the UNIX epoch, …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet the DB whitelist.\nCalls <code>U::from(self)</code>.\nGet current estimated proof size.\nGet the read/write count.\nReset the read/write count.\nSet the DB whitelist.\nWhitelist the given account.\nThis caller account is automatically whitelisted for DB …\nReset the trie database to the genesis state.\nThe <code>BlockBuilder</code> api trait that provides the required …\nCheck inherents error\nErrors that occur when creating and checking on the client …\nUnknown inherent error for identifier\nClient Error\nCreate inherents error.\nCreate inherent data and check that the inherents are …\nCheck that the inherents are valid.\nThe <code>ConsensusEngineId</code> of AuRa.\nAPI necessary for block authorship with aura.\nThe authorities have changed.\nThe index of an authority.\nAn consensus log item for Aura.\nDisable the authority with given index.\nUnit type wrapper that represents a slot.\nA slot duration defined in milliseconds.\nThe default <code>development</code> preset used to communicate with …\nContains the error value\nAPI to interact with <code>RuntimeGenesisConfig</code> for the runtime\nThe default <code>local_testnet</code> preset used to communicate with …\nContains the success value\nThe type representing preset ID.\nThe result type alias, used in build methods. <code>Err</code> contains …\nSet of test accounts.\nSet of test accounts.\nRepresents an error that occurs when parsing a string into …\nSet of test accounts.\nTest account crypto for bandersnatch. A set of well-known …\nTest account crypto for ed25519. Support code for the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over all test accounts.\nReturns an iterator over all test accounts.\nCreate a crypto <code>Pair</code> from a numeric value.\nTest account crypto for sr25519. Support code for the …\nSet of test accounts.\nAn iterator over the variants of Keyring\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSet of test accounts.\nAn iterator over the variants of Keyring\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSet of test accounts.\nAn iterator over the variants of Keyring\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe offchain worker api.\nPersistent storage prefix used by the Offchain Worker API …\nThe identity of a particular API interface that the …\nA vector of pairs of <code>ApiId</code> and a <code>u32</code> for version.\nBorrowed data.\nBorrowed data.\nA clone-on-write smart pointer.\nReturns the version of the native runtime.\nSomething that can provide the runtime version at a given …\nThe version of the native runtime.\nOwned data.\nOwned data.\nRuntime version. This should not be thought of as classic …\nDifferent possible state version.\nOld state version, no value nodes.\nNew state version can use value nodes.\nList of supported API “features” along with their …\n<code>authoring_version</code> is the version of the authorship …\nAuthoring runtimes (<code>spec_version</code>s) that this native …\nReturns the version of the <code>Core</code> runtime api.\nCreate a vector of Api declarations.\nDeprecated <code>Cow::Borrowed()</code> wrapper.\nProvides functionality to embed a <code>RuntimeVersion</code> as custom …\nName of the implementation of the spec. This is of little …\nVersion of the implementation of the specification.\nReturns the version of the native runtime.\nReturns the version of runtime at the given block.\nBasic runtime version info.\nIdentifies the different Substrate runtimes. There’ll be …\nVersion of the runtime specification.\nVersion of the system implementation used by this runtime. …\nAll existing calls (dispatchables) are fully compatible …\nEmbed the given <code>version</code> to the given <code>wasm</code> blob.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nDerive [<code>Clone</code>] but do not bound any generic.\n<code>?</code> formatting.\nDerive macro generating an impl of the trait <code>Debug</code>.\nDerive [<code>Debug</code>] but do not bound any generics.\nTrait that allows zero-copy read of value-references from …\nDerive <code>parity_scale_codec::Decode</code> for struct and enum.\nderive <code>Default</code> but do no bound any generic. Docs are at …\nA <strong>data structure</strong> that can be deserialized from any data …\nTrait that allows zero-copy write of value-references to …\nDerive <code>parity_scale_codec::Encode</code> and …\nDeriveEq but do no bound any generic.\nThe type identifying for which type info is provided.\nDerive [<code>Ord</code>] but do no bound any generic. Docs are at …\nDerive [<code>PartialEq</code>] but do not bound any generic.\nDerive [<code>PartialOrd</code>] but do not bound any generic. Docs are …\nDerive [<code>Debug</code>], if <code>std</code> is enabled it uses …\nA <strong>data structure</strong> that can be serialized into any data …\nImplementors return their meta type information.\nAttempt to deserialise the value from input.\nDeserialize this value from the given Serde deserializer.\nFormats the value using the given formatter.\nSerialize this value into the given Serde serializer.\nReturns the static type identifier for <code>Self</code>.\nBlake2-256 Hash implementation.\nFixed-size uninterpreted hash type with 20 bytes (160 …\nFixed-size uninterpreted hash type with 32 bytes (256 …\nFixed-size uninterpreted hash type with 64 bytes (512 …\nAbstraction around hashing\nKeccak-256 Hash implementation.\nThe hash type produced.\nLittle-endian large integer type 256-bit unsigned integer.\nLittle-endian large integer type 512-bits unsigned integer.\nDo a Blake2 128-bit hash and return result.\nDo a Blake2 256-bit hash and return result.\nDo a Blake2 512-bit hash and return result.\nDo a Blake2 512-bit hash and place result in <code>dest</code>.\nDo a Blake2 64-bit hash and return result.\nDo a keccak 256-bit hash and return result.\nDo a keccak 512-bit hash and return result.\nThe ordered Patricia tree root of the given <code>input</code>.\nDo a sha2 256-bit hash and return result.\nThe Patricia tree root of the given mapping.\nDo a XX 128-bit hash and return result.\nDo a XX 128-bit hash and place result in <code>dest</code>.\nDo a XX 256-bit hash and return result.\nDo a XX 256-bit hash and place result in <code>dest</code>.\nDo a XX 64-bit hash and return result.\nDo a XX 64-bit hash and place result in <code>dest</code>.\nAllows to authorize some general transactions with …\nDocumentation for this macro can be found at …\nEach dispatchable may also be annotated with the …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nThis attribute can be used to derive a full implementation …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\n<strong>Rust-Analyzer users</strong>: See the documentation of the Rust …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\n<strong>Rust-Analyzer users</strong>: See the documentation of the Rust …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nAllows defining conditions for a task to run.\nAllows defining an index for a task.\nAllows defining an iterator over available work items for …\nAllows defining the weight of a task.\nAllows you to define some service work that can be …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nAllows to define the weight of the authorize function.\nDocumentation for this macro can be found at …\nThe accuracy of this type.\nDetails of an account for which a private key is contained …\nThe account ID that this can be transformed into.\nThe AccountId used across the system.\nThis type can be converted into and possibly from an …\nType alias for the <code>AccountId</code> associated type of system …\nOperation may result in account going out of existence.\nThe transaction birth block is ancient.\nA type binding runtime-level <code>Public/Signature</code> pair with …\nAppend iterator for fast append operations.\nAn arithmetic error.\nArithmetic errors.\nInterface to differentiate between Runtime Origins …\nSimple amalgamation trait to collect together properties …\nThe type for the kinds of asset that are going to be paid.\nA meta trait for arithmetic.\nA meta trait for arithmetic.  Same as <code>AtLeast16Bit</code>, but …\nA meta trait for arithmetic.\nA meta trait for arithmetic.  Same as <code>AtLeast32Bit</code>, but …\nA meta trait for arithmetic.\nA meta trait for arithmetic.  Same as <code>AtLeast8Bit</code>, but …\nA trait to allow calls to authorize themselves from the …\nAn extrinsic with a Mandatory dispatch resulted in Error. …\nA bad origin.\nGeneral error to do with the transaction’s proofs (e.g. …\nThe sending address is disabled or known to be invalid.\nThe type by which we measure units of the currency in …\nWithdraw could not happen since the amount to be withdrawn …\nStatus of funds.\nA meta trait for arithmetic type operations, regardless of …\nAccount cannot exist with the funds that would be given.\nDeposit couldn’t happen due to the amount being too low. …\nThe type by which we identify the beneficiaries to whom a …\nThe operation may be considered successful even if less …\nHash storage keys with blake2 128\nHash storage keys with <code>concat(blake2_128(key), key)</code>\nHash storage keys with blake2 256\nBlake2-256 Hash implementation.\nType of <code>BlockNumber</code> to provide.\nType alias for the <code>BlockNumber</code> associated type of system …\nGet current block number\nAccount cannot receive the assets.\nAccount cannot receive the assets.\nSomething that is bound to a fixed <code>RuntimeAppPublic</code>.\nNumbers which have upper and lower bounds\nA bounded map based on a B-Tree.\nA bounded set based on a B-Tree.\nA bounded slice.\nA bounded vector.\nA trait to define the build function of a genesis config …\nThe call of the transaction is not expected.\nThe call type of the pallet.\nThe call to validate\nRuntime call type, as in <code>frame_system::Config::Call</code>\nThe function and pallet name of the Call.\nAccount cannot be created.\nDeposit cannot happen since the account cannot be created …\nAccount cannot be created for a held balance.\nCould not lookup some information that is required to …\nFailed to lookup some data.\nTrait for type that can handle incremental changes to a …\nPerforms addition that returns <code>None</code> instead of wrapping …\nConvenience type to work around the highly unergonomic …\nPerforms division that returns <code>None</code> instead of panicking …\nPerforms multiplication that returns <code>None</code> instead of …\nPerforms negation that returns <code>None</code> if the result can’t …\nPerforms an integral remainder that returns <code>None</code> instead …\nPerforms a left shift that returns <code>None</code> on shifts larger …\nPerforms a right shift that returns <code>None</code> on shifts larger …\nPerforms subtraction that returns <code>None</code> instead of wrapping …\nDerive [<code>Clone</code>] but do not bound any generic.\n…\nConst getter for a basic type.\nConst getter for unsigned integers.\nAt least one consumer is remaining so the account cannot …\nA trait for querying whether a type can be said to “…\nInfallible conversion trait. Generic over both source and …\nReversing infallible conversion trait. Generic over both …\nThe state is corrupt; this is generally not going to fix …\nA wrapper around a <code>StorageMap</code> and a <code>StorageValue</code> (with the …\nA wrapper around a <code>StorageNMap</code> and a <code>StorageValue</code> (with …\nInterface for creating a transaction for a call that will …\nInterface for creating a bare extrinsic.\nInterface for creating a bare extrinsic.\nInterface for creating an old-school signed transaction.\nInterface for creating a transaction.\nCommon interface for the <code>CreateTransaction</code> trait family to …\nAny other custom invalid validity that is not covered by …\nAny other custom unknown validity that is not covered by …\nPrecision of this fixed point implementation. It should be …\n<code>?</code> formatting.\nDerive macro generating an impl of the trait <code>Debug</code>.\nDerive [<code>Debug</code>] but do not bound any generics.\nTrait that allows zero-copy read of value-references from …\nDerive <code>parity_scale_codec::Decode</code> for struct and enum.\nMarker trait used for identifying types that call the …\nDerive <code>parity_scale_codec::DecodeWithMemTracking</code> for …\nderive <code>Default</code> but do no bound any generic. Docs are at …\nA trait to handle errors and options when you are really …\nA variant of <code>Defensive</code> with the same rationale, for the …\nOne of a number of consequences of withdrawing a fungible …\nA <strong>data structure</strong> that can be deserialized from any data …\nA generalized group of dispatch types.\nReason why a dispatch call failed.\nResult of a <code>Dispatchable</code> which contains the <code>DispatchResult</code> …\nShortcut to reference the <code>Info</code> type of a <code>Dispatchable</code>.\nUn-augmented version of <code>DispatchResultWithPostInfo</code> that …\nReturn type of a <code>Dispatchable</code> which contains the …\nThe return type of a <code>Dispatchable</code> in frame. When returned …\nSingle-function utility trait with a blanket impl over …\nA lazy call (module function and argument values) that can …\nDivision by zero.\n“OR gate” implementation of <code>EnsureOrigin</code>, <code>Success</code> type …\n“OR gate” implementation of <code>EnsureOrigin</code> allowing for …\nTrait that allows zero-copy write of value-references to …\nDerive <code>parity_scale_codec::Encode</code> and …\nPerforms addition that returns <code>ArithmeticError</code> instead of …\nPerforms self addition that returns <code>ArithmeticError</code> …\nPerforms division that returns <code>ArithmeticError</code> instead of …\nPerforms self division that returns <code>ArithmeticError</code> …\nExtends <code>FixedPointNumber</code> with the Ensure family functions.\nSimilar to <code>TryFrom</code> but returning an <code>ArithmeticError</code> error.\nSimilar to <code>TryInto</code> but returning an <code>ArithmeticError</code> error.\nPerforms multiplication that returns <code>ArithmeticError</code> …\nPerforms self multiplication that returns <code>ArithmeticError</code> …\nMeta trait that supports all immutable arithmetic <code>Ensure*</code> …\nMeta trait that supports all assigned arithmetic <code>Ensure*</code> …\nSome sort of check on the origin is performed by this …\nPerforms subtraction that returns <code>ArithmeticError</code> instead …\nPerforms self subtraction that returns <code>ArithmeticError</code> …\nAn <code>Iterator</code> over tasks of this type used as the return …\nDeriveEq but do no bound any generic.\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nThe error returned by <code>check_inherent</code>.\nAn error which could be returned by the Pay type\nSomething that can estimate at which block the next …\nA <code>Contains</code> implementation that contains every value.\nThe operation should must either proceed either exactly …\nResources exhausted, e.g. attempt to read/write data which …\nThe transaction would exhaust the resources of current …\nSimple boolean for whether an account needs to be kept in …\nWe don’t care if the account gets killed by this …\nThe funds already exist in the system, therefore will not …\nThe extension.\nType to represent the version of the Extension used in …\nTransaction has been received externally.\nThe extrinsic.\nType alias for the <code>Extrinsic</code> associated type of system …\nIn order to pay some other (higher-level) fees.\nA fixed point number representation in the range. <em>Fixed </em>…\nA fixed point number representation in the range. <em>Fixed </em>…\nSomething that implements a decimal fixed point number.\nInteger types that can be used to interact with …\nA fixed point number representation in the range. <em>Fixed </em>…\nA fixed point number representation in the range. <em>Fixed </em>…\nMarker struct used to flag using all supported keys to …\nMarker struct used to flag using any of the supported keys …\nThe operation should be forced to succeed if possible. …\nThe privilege with which a withdraw operation is conducted.\nFunds are free, as corresponding to <code>free</code> item in Balances.\nFunds exist but are frozen.\nNot enough of the funds in the account are available for …\nFunds are unavailable.\nGeneral error to do with the transaction not yet being …\nA raw crypto public key wrapped by <code>RuntimeAppPublic</code>.\nA matching raw crypto <code>Signature</code> type.\nA trait for querying a single value from a type.\nGets the metadata for the Call - function name and pallet …\nImplement Get by returning Default for any type that …\nA <code>Dispatchable</code> function (aka transaction) that can carry …\nProvides information about a pallet’s storage versions.\nFixed-size uninterpreted hash type with 20 bytes (160 …\nFixed-size uninterpreted hash type with 32 bytes (256 …\nFixed-size uninterpreted hash type with 64 bytes (512 …\nAbstraction around hashing\nType alias for the <code>Header</code>.\nThe pallet hooks trait. This is merely an umbrella trait …\nUnique identifier of this signed extension.\nThe inherent identifier used by this inherent.\nAn identifier given to an individual payment.\nSome type that is able to be collapsed into an account ID. …\nStore the key directly.\nThe type identifying for which type info is provided.\nA lookup implementation returning the input value.\nAny additional data which was known at the time of …\nTransaction is already included in block.\nThis type is generated by the <code>pallet</code> macro.\nThe implicit data was unable to be calculated.\nThe info type.\nAn opaque set of information attached to the transaction. …\nInherent data to include in a block.\nAn identifier for an inherent.\nTrait for type that can handle the initialization of …\nThe underlying data type used for this fixed point number.\nThe data type used to build this per-thingy.\nGet the inner type of a <code>PerThing</code>.\nA <code>Contains</code> implementation which contains all members of …\nSimple trait for providing a filter over a reference to …\nA trait implementing integer square root.\nThe transaction is invalid.\nAn invalid transaction validity.\nSomething that can be checked to be a of sub type <code>T</code>.\nTrait to be used when types are exactly same.\nIterator for normal and draining iteration.\nKeccak-256 Hash implementation.\nOperation must not result in the account going out of …\nThe key type expected.\nTransaction is coming from a local source.\nThe number of bytes of the module-specific <code>error</code> field …\nAuxiliary to make any given error resolve to …\nA mandatory dispatch. These kinds of dispatch are always …\nAn extrinsic with a mandatory dispatch tried to be …\nA derivative <code>EnsureOrigin</code> implementation. It mutates the …\nItems implementing <code>MaxEncodedLen</code> have a statically known …\nDerive <code>parity_scale_codec::MaxEncodedLen</code> for struct and …\nA type that implements Serialize, DeserializeOwned and …\nA type that can be used in runtime structures.\nThe funds will be minted into the system, increasing total …\nA custom error in a module.\nA type used exclusively by storage maps as their key type.\nTransactor will NOT pay related fees.\nNoOp polling is required if pallet-referenda functionality …\nThere are no providers so the account cannot be created.\nNo validator found for the given unsigned transaction.\nA normal dispatch.\nA collection-like object that is made of values of type <code>T</code> …\nWithdrawal would cause unwanted loss of account.\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nSee <code>Hooks::on_runtime_upgrade</code>.\nHandler for when some currency “account” decreased in …\nDefines a multiplicative identity element for <code>Self</code>.\nA session handler for specific key type.\nSome part of the balance gives the only provider reference …\nAn operational dispatch.\nImplements <code>QueryKindTrait</code> with <code>Query</code> type being <code>Option&lt;_&gt;</code>.\nDerive [<code>Ord</code>] but do no bound any generic. Docs are at …\nThe origin type of the transaction.\nType alias for the <code>Origin</code> associated type of system config.\nMethods available on <code>frame_system::Config::RuntimeOrigin</code>.\nSome error occurred.\nThe hash type produced.\nOverflow.\nThere has been an overflow in the system. This is …\nAn overflow would occur. This is practically unexpected, …\nA pallet identifier. These are per pallet and should be …\nProvides information about the pallet itself and its setup …\nThe caller origin, overarching type of all pallets origins.\nA type that can be used as a parameter in a dispatchable …\nDerive [<code>PartialEq</code>] but do not bound any generic.\nDerive [<code>PartialOrd</code>] but do not bound any generic. Docs are …\nCan be implemented by <code>PayFromAccount</code> using a <code>fungible</code> …\nGeneral error to do with the inability to pay some fees …\nExplicit enum to denote if a transaction pays fee or not.\nSomething that implements a fixed point ration with an …\nA fixed point representation of a number in the range [0, 1…\nA fixed point representation of a number in the range [0, 1…\nA fixed point representation of a number in the range [0, 1…\nA fixed point representation of a number in the range [0, 1…\nA fixed point representation of a number in the range [0, 1…\nZero-sized type used to mark things that “act like” …\nThe operation should execute with regular privilege.\nWeight information that is only available post dispatch. …\nAdditional information that is returned by <code>dispatch</code>. Can …\nThe <code>Pre</code> of the extension.\nThe type that encodes information that can be passed from …")