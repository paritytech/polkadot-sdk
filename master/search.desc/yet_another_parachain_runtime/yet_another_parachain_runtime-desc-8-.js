searchState.loadedDescShard("yet_another_parachain_runtime", 8, "Automata ContextFree - https://ata.network\nCORD Network - https://cord.network/\nCrust Network - https://crust.network\nGeneric byte array holding some crypto-related raw data.\nType which has a particular kind of crypto associated with …\nAn identifier for a specific cryptographic algorithm used …\nThe address of the associated root phrase for our publicly …\nThe root phrase for our publicly known keys.\nDark Mainnet\nDarwinia Network - https://darwinia.network\nDataHighway\nDENTNet - https://www.dentnet.io\nUsed for immutable dereferencing operations, like <code>*v</code>.\nDerivable key trait.\nAn error when deriving a key.\nA since derivation junction description. It is the single …\nDICO - https://dico.io\nDock Mainnet - https://dock.io\nDorafactory Polkadot Network - https://dorafactory.org\nDummy cryptography. Doesn’t do anything.\nEdgeware - https://edgewa.re\nEfinity - https://efinity.io/\nEquilibrium Network - https://equilibrium.io\nEnergy Web X - https://www.energyweb.org\nExpose a reference to an inner secret\nFragnova Network - https://fragnova.com\nFrequency - https://www.frequency.xyz\nCreate random values of <code>Self</code> given a stream of entropy.\nĞ1 - https://duniter.org\nGEEK Network - https://geek.gl\nGenshiro Network - https://genshiro.equilibrium.io\nGM - https://gmordie.com\nGolden Gate - https://ggxchain.io/\nGolden Gate Sydney - https://ggxchain.io/\nGORO Network - https://goro.network\nHard (“hardened”) derivation. Public keys do not have …\nHashed Network - https://hashed.network\nHeiko - https://parallel.fi/\nHumanode Network - https://humanode.io\nHydraDX - https://hydradx.io\nAnmol Network Ibtida Canary network - …\nICE Network - https://icenetwork.io\nImpact Protocol Network - https://impactprotocol.network/\nThe inner type it is wrapping.\nIntegritee - https://integritee.network\nIntegritee Incognito - https://integritee.network\nInterlay - https://interlay.io/\nThe overall format was invalid (e.g. the seed phrase …\nThe supplied password was invalid.\nThe derivation path was invalid (e.g. contains soft …\nThe seed phrase provided is not a valid BIP39 phrase.\nThe seed is invalid (bad content).\nThe seed has an invalid length.\nOne type is wrapped by another.\nThe length of the junction identifier. Note that this is …\nJoystream - https://www.joystream.org\nJupiter - https://jupiter.patract.io\nKabocha - https://kabocha.network\nKapex - https://totemaccounting.com\nKarmacoin - https://karmaco.in\nKarura - https://karura.network/\nKatal Chain\nAn identifier for a type of cryptographic key.\nKICO - https://dico.io\nKILT Spiritnet - https://kilt.io/\nKintsugi - https://interlay.io/\nKrest Network - https://www.peaq.network/\nKrigan Network - https://krigan.network\nKulupu - https://kulupu.network/\nKusama Relay Chain - https://kusama.network\nThe “length” of the values of this type, which is …\nLaminar - http://laminar.network/\nLitentry Network - https://litentry.com/\nLitmus Network - https://litentry.com/\nlogion network - https://logion.network\nLuhn Network - https://luhn.network\nManta network - https://manta.network\nMathChain mainnet - https://mathwallet.org\nMathChain testnet - https://mathwallet.org\nMetaquity Network - https://metaquity.xyz/\nMoonbeam - https://moonbeam.network\nMoonriver - https://moonbeam.network\nMoonsama - https://moonsama.com\nNeatcoin Mainnet - https://neatcoin.org\nNFTMart - https://nftmart.io\nNodle Chain - https://nodle.io/\nOAK Network - https://oak.tech\nOriginTrail Parachain - https://parachain.origintrail.io/\n3DP network - https://3dpass.org\n3DP test network - https://3dpass.org\nTrait suitable for typical cryptographic PKI key pair type.\nThe pair key type of this crypto.\nParallel - https://parallel.fi/\nPeaq Network - https://www.peaq.network/\nPeerplays - https://www.peerplays.com/\nPendulum chain - https://pendulumchain.org/\nPhala Network - https://phala.network\nPicasso - https://picasso.composable.finance\nPioneer Network by Bit.Country - https://bit.country\nPolimec Chain - https://polimec.io/\nPolkadex Mainnet - https://polkadex.trade\nPolkadex Parachain - https://polkadex.trade\nPolkadot Relay Chain - https://polkadot.network\nPolkaFoundry Network - https://polkafoundry.com\nPolkaSmith Canary Network - https://polkafoundry.com\nPolymesh - https://polymath.network/\nPontem Network - https://pontem.network\nThe type used to represent proof of possession and …\nTrait suitable for cryptographic public keys.\nThe type which is used to encode a public key.\nGeneric encoded public key.\nAn error type for SS58 decoding.\nQUARTZ by UNIQUE - https://unique.network\nThis prefix is reserved.\nThis prefix is reserved.\nLaminar Reynolds Canary - http://laminar.network/\nRobonomics - https://robonomics.network\nSapphire by Unique - https://unique.network\nSeals Network - https://seals.app\nSecret strings\nAn error with the interpretation of a secret.\nA secret uri (<code>SURI</code>) that can be used to generate a key …\nThe type used to (minimally) encode the data required to …\nShiftNrg\nTrait suitable for cryptographic signatures.\nThe type used to represent a signature. Can be created …\nGeneric encoded signature.\nSNOW: ICE Canary Network - https://icenetwork.io\nSocial Network - https://social.network\nSocietal - https://www.sctl.xyz\nSoft (vanilla) derivation. Public keys have a …\nA soft key was found in the path (and is unsupported).\nSORA Network - https://sora.org\nSORA Polkadot Parachain - https://sora.org\nSORA Kusama Parachain - https://sora.org\nA custom address format. See also <code>Ss58AddressFormatRegistry</code>\nA known address (sub)format/network ID for SS58.\nKey that can be encoded to/from SS58.\nStafi - https://stafi.io\nSubsocial\nSubspace - https://subspace.network\nSubspace testnet - https://subspace.network\nSubstrate - https://substrate.io/\nSynesthesia - https://synesthesia.network/\nt3rn - https://t3rn.io/\nTangle Network - https://www.webb.tools/\nThe resulting type after dereferencing.\nTernoa - https://www.ternoa.network\nTidefi - https://tidefi.com\nTinker - https://invarch.network\nTotem - https://totemaccounting.com\nSimilar to <code>From</code>, except that the onus is on the part of …\nThe counterpart to <code>UncheckedFrom</code>.\nUniArts Network - https://uniarts.me\nUnique Network - https://unique.network\nVara Network - https://vara-network.io/\nValiu Liquidity Network - https://valiu.com/\nTrait grouping types shared by a VRF signer and verifiers.\nVRF input.\nVRF pre-output.\nVRF Public Key.\nVRF Secret Key.\nVRF signing data.\nVRF signature.\nWatr Protocol - https://www.watr.org\nOpposite of <code>IsWrappedBy</code> - denotes a type which is a simple …\nxx network - https://xx.network\nZeitgeist - https://zeitgeist.pm\nZERO - https://zero.io\nZERO Alphaville - https://zero.io\nTrait for securely erasing values from memory.\nDerive the <code>Zeroize</code> trait.\nAll known address formats.\nnames of all address formats\nGet a reference to the inner type that is wrapped.\nReturn a slice filled with raw data.\nCustom constructor\nReturns default SS58 format used by the current active …\nDereferences the value.\nDerive a child key from a series of given junctions.\nDerive a child key from a series of given junctions.\nExpose secret: this is the only method providing access to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a random value of <code>Self</code> given a stream of random …\nconst function to convert <code>Ss58AddressFormat</code> to u16\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nMake a new key pair from secret seed material. The slice …\nA new instance from the given slice that should be …\nInterprets the string <code>s</code> in order to generate a public key …\nCreates an instance of <code>Error::MissingCharacterInHardPath</code> …\nCreates an instance of <code>Error::InvalidCharacterInPass</code> using …\nCreates an instance of <code>Error::InvalidCharacterInPhrase</code> …\nCreates an instance of <code>Error::MissingCharacterInSoftPath</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA custom format is one that is not already known.\nNetwork/AddressType is reserved for future use.\nThe junctions as part of the uri.\nParses the given string.\nPassword.\nOptional password as given as part of the uri.\nKey derivation paths, ordered as in input string,\nThe phrase to derive the private key.\nPhrase, hexadecimal string, or ss58-compatible string.\nAddress prefix used on the network\nGet the public key.\nSet the default SS58 “version”.\nSign a message.\nReturn a vec filled with raw data.\nReturn a <code>Vec&lt;u8&gt;</code> filled with raw data.\nTokens used on the given network.\nConvert from an instance of <code>T</code> to Self. This is not …\nThe counterpart to <code>unchecked_from</code>.\nReturns either the input address format or the default.\nVerify a signature on a message. Returns true if the …\nGet VRF-specific pre-output.\nSign VRF-specific data.\nVerify input data signature.\nZero out this object from memory using Rust intrinsics …\nGeneric byte array holding some crypto-related raw data.\nGeneric encoded public key.\nTag used for generic public key bytes.\nGeneric encoded signature.\nTag used for generic signature bytes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn identifier used to match public keys against ecdsa keys\nAn ecdsa key pair using the keccak algorithm for hashing …\nProof of Possession is the same as Signature.\nThe ECDSA compressed public key.\nA signature (a 512-bit value, plus 8 bits for recovery ID).\nThe byte length of public key\nAn ecdsa key pair using the blake2 algorithm for hashing …\nProof of Possession is the same as Signature.\nThe ECDSA compressed public key.\nThe public key that will be recovered from the signature.\nA signature that allows recovering the public key from a …\nThe byte length of signature\nA signature (a 512-bit value, plus 8 bits for recovery ID).\nRecover the public key from this signature and a message.\nRecover the public key from this signature and a …\nAn identifier used to match public keys against ed25519 …\nThe byte length of public key\nA key pair.\nProof of Possession is the same as Signature for ed25519\nA public key.\nThe byte length of signature\nA signature.\nFixed-size uninterpreted hash type with 20 bytes (160 …\nFixed-size uninterpreted hash type with 32 bytes (256 …\nFixed-size uninterpreted hash type with 64 bytes (512 …\nHash conversion. Used to convert between unbound …\nDo a Blake2 128-bit hash and return result.\nDo a Blake2 256-bit hash and return result.\nDo a Blake2 512-bit hash and return result.\nDo a Blake2 512-bit hash and place result in <code>dest</code>.\nDo a Blake2 64-bit hash and return result.\nDo a keccak 256-bit hash and return result.\nDo a keccak 512-bit hash and return result.\nDo a sha2 256-bit hash and return result.\nDo a XX 128-bit hash and return result.\nDo a XX 128-bit hash and place result in <code>dest</code>.\nDo a XX 256-bit hash and return result.\nDo a XX 256-bit hash and place result in <code>dest</code>.\nDo a XX 64-bit hash and return result.\nDo a XX 64-bit hash and place result in <code>dest</code>.\nSimple trait to transform various types to <code>&amp;[u8]</code>\nSimple wrapper to display hex representation of bytes.\nTransform <code>self</code> into <code>&amp;[u8]</code>.\nFormat into ASCII + # + hex, suitable for storage key …\nReturns the argument unchanged.\nCreate new instance that will display <code>d</code> as a hex string …\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nExecution context extra capabilities.\nA externalities extension for accessing the Offchain DB.\nThe requested action couldn’t been completed within a …\nDeadline was reached while we waited for this request to …\nDuration type\nAn extended externalities for offchain workers.\nThe request has finished with given status code.\nAn error enum returned by some http methods.\nOpaque type for offchain http requests.\nStatus of the HTTP request\nThe ID of the request is invalid in this context.\nThe passed ID is invalid in this context.\nThere was an IO Error while processing the request.\nAn error has occurred during the request, for example a …\nAn identifier for a type of cryptographic key.\nLocal storage is revertible and fork-aware. It means that …\nAn <code>*Externalities</code> implementation with limited capabilities.\nThe offchain database extension that will be registered at …\nChange to be applied to the offchain worker db in regards …\nOffchain DB persistent (non-fork-aware) storage.\nThe offchain worker extension that will be registered at …\nSimple blob to hold a <code>Multiaddr</code> without committing to its …\nA blob to hold information about the local node’s …\nPersistent storage is non-revertible and not fork-aware. …\nRemove the data associated with the key\nPersistent storage prefix used by the Offchain Worker API …\nOverwrite the value of an associated key\nA type of supported crypto.\nOpaque timestamp type\nAbstraction over transaction pool.\nAn externalities extension to submit transactions to the …\nReplace the value in storage if given old_value matches …\nList of addresses the node knows it can be reached as.\nRetrieve a value from storage under given key and prefix.\nAppend header to the request.\nInitiates a http request given HTTP verb and the URL.\nWrite a chunk of request body.\nRead all response headers.\nRead a chunk of body response to given buffer.\nBlock and wait for the responses for given requests.\nReturns if the local node is a potential validator.\nRemoves a value in the local storage.\nSets a value in the local storage if it matches current …\nGets a value from the local storage.\nSets a value in the local storage.\nReturns information about the local node’s network state.\nPeerId of the local node in SCALE encoded.\nReturns a random seed.\nClear a storage entry under given key and prefix.\nPersist a value in storage under given key and prefix.\nSet the authorized nodes from runtime.\nPause the execution until <code>deadline</code> is reached.\nIn-memory implementation of offchain workers database.\nSubmit transaction.\nReturns current UNIX timestamp (in millis)\nIn-memory storage for offchain workers.\nOffchain DB that implements <code>DbExternalities</code> for …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nConsume the offchain storage and iterate over all key …\nIterate over all key value pairs by reference.\nRemove a key and its associated value from the offchain …\nA key pair.\nA pair of proof of possession of different types\nA public key.\nA pair of signatures of different types\nDerive a child key from a series of given junctions.\nECDSA and BLS12-377 paired crypto scheme\nECDSA and BLS12-381 paired crypto scheme\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nGet the seed/secret key for each key and then concatenate …\nAn identifier used to match public keys against BLS12-377 …\n(ECDSA,BLS12-377) key-pair pair.\n(ECDSA, (BLS12-377, BLS12-377))\n(ECDSA,BLS12-377) public key pair.\n(ECDSA,BLS12-377) signature pair.\nAn identifier used to match public keys against BLS12-381 …\nSize of Proof Of Possession for (ECDSA, BLS12-381) type …\nAggregate public key size.\n(ECDSA,BLS12-381) key-pair pair.\n(ECDSA, (BLS12-381, BLS12-381))\n(ECDSA,BLS12-381) public key pair.\nAggregate signature serialized size.\n(ECDSA,BLS12-381) signature pair.\nMarker trait to identify whether the scheme is not …\nPair which is able to generate proof of possession.\nPair which is able to verify proof of possession.\nGenerate proof of possession.\nDefault proof_of_possession statement.\nSimply returns the owner prefixed with proof of possession …\nVerify proof of possession.\nInformation related to a child state.\nA child trie of default type.\nType of child. It does not strictly define different child …\nMap of storage children.\nThis is the one used by default.\nIf runtime module ensures that the child key is a unique …\nStorage key of a child trie, it contains the prefix to the …\nDifferent possible state version.\nStruct containing data needed for a storage.\nStorage change set\nChild trie storage data.\nStorage data associated to a <code>StorageKey</code>.\nStorage key.\nMap of data to use in a storage, it is a collection of …\nThreshold size to start using trie value nodes in state.\nStorage key with read/write tracking information.\nOld state version, no value nodes.\nNew state version can use value nodes.\nBlock hash\nA list of changes\nAssociated child info for a child trie.\nChildren trie storage data. Key does not include prefix, …\nChild data for storage.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nTransform a prefixed key into a tuple of the child type …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTry to get a child type from its <code>u32</code> representation.\nReturns the location reserved for this child trie in their …\nTop trie storage data.\nKey type for generic Bandersnatch key.\nKey type for generic BLS12-377 key.\nKey type for generic BLS12-381 key.\nKey type for generic ECDSA key.\nKey type for (ECDSA,BLS12-377) key pair\nKey type for (ECDSA,BLS12-381) key pair\nKey type for generic Ed25519 key.\nKey type for generic Sr25519 key.\nA task executor that can be used in tests.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate a new instance of <code>Self</code>.\nThe context in which a call is done.\nCode execution engine.\nCould not find the <code>:code</code> in the externalities while …\nExternalities error type.\nThe Substrate externalities.\nExtension for the <code>Externalities</code> trait.\nSomething that can fetch the runtime <code>:code</code>.\nType that implements <code>FetchRuntimeCode</code> and always returns …\nThe call is happening in some offchain context.\nThe call is happening in some on-chain context like …\nA trait that allows reading version information from the …\nAn extension that provides functionality to read version …\nThe Wasm code of a Substrate runtime.\nSomething that can spawn essential tasks (blocking and …\nSomething that can spawn tasks (blocking and non-blocking) …\nWrapper to use a <code>u8</code> slice or <code>Vec</code> as <code>FetchRuntimeCode</code>.\nCall a given method in the runtime.\nRead child runtime storage.\nGet child storage value hash.\nGet the trie root of a child storage map.\nClear child storage entries which keys are start with the …\nClear a child storage entry (<code>key</code>) of current contract …\nClear storage entries which keys are start with the given …\nClear a storage entry (<code>key</code>) of current contract being …\nThe code fetcher that can be used to lazily fetch the code.\n…\nDeregister and drop extension of <code>T</code> type.\nCreate an empty instance.\nWhether a child storage entry exists.\nWhether a storage entry exists.\nTries to find a registered extension and returns a mutable …\nFetch the runtime <code>:code</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\n…\n…\nThe hash of <code>code</code>.\nThe optional heap pages this <code>code</code> should be executed with.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClear an entire child storage.\nCreates a new instance of the extension given a version …\nReturns the key immediately following the given key, if it …\nReturns the key immediately following the given key, if it …\nSet or clear a child storage entry.\nSet or clear a storage entry (<code>key</code>) of current contract …\n…\nReads the runtime version information from the given wasm …\n…\nRegister extension <code>ext</code>.\n…\nSet child storage entry <code>key</code> of current contract being …\nWrite a key value pair to the offchain storage database.\nSet storage entry <code>key</code> of current contract being called …\n…\nSpawn the given non-blocking future.\nSpawn the given blocking future.\nSpawn the given non-blocking future.\nSpawn the given blocking future.\nRead runtime storage.\nAppend storage item.\nCommit the last transaction started by …\nGet storage value hash.\nIndex specified transaction slice and store it.\nRenew existing piece of transaction storage.\nRollback the last transaction started by …\nGet the trie root of the current storage map.\nStart a new nested transaction.\n…\nLittle-endian large integer type 256-bit unsigned integer.\nLittle-endian large integer type 512-bits unsigned integer.\nA generic <code>AppPublic</code> wrapper type over $pair crypto; this …\nA generic <code>AppPublic</code> wrapper type over $public crypto; this …\nA generic <code>AppPublic</code> wrapper type over $public crypto; this …\nA generic <code>AppPublic</code> wrapper type over $public crypto; this …\nAn identifier used to match public keys against sr25519 …\nThe byte length of public key\nAn Schnorrkel/Ristretto x25519 (“sr25519”) key pair.\nProof of Possession is the same as Signature for sr25519\nAn Schnorrkel/Ristretto x25519 (“sr25519”) public key.\nThe byte length of signature\nAn Schnorrkel/Ristretto x25519 (“sr25519”) signature.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into wrapped generic public key type.\nConvert into wrapped generic signature type.\nConvert into wrapped generic signature type.\nConvert into wrapped generic key pair type.\nPiecewise Linear function in [0, 1] -&gt; [0, 1].\nCompute <code>f(n/d)*d</code> with <code>n &lt;= d</code>. This is useful to avoid loss …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe maximum value that can be returned.\nArray of points. Must be in order from the lowest …\nExtrinsic is bare; it must pass either the bare forms of …\nAn extrinsic without a signature or any extension. This …\nAbstraction over a substrate block.\nSomething to identify a block.\nDefinition of something that the external world might want …\nA message from the runtime to the consensus engine. This …\nA message from the runtime to the consensus engine. This …\nType corresponding to DigestItem::Consensus.\nGeneric header digest.\nDigest item that is able to encode/decode ‘system’ …\nA ‘referencing view’ for digest item. Does not own its …\nCurrent version of the <code>UncheckedExtrinsic</code> encoded format.\nAn era to describe the longevity of a transaction.\nType to represent the version of the Extension used in …\nThe kind of extrinsic this is, including any fields …\nExtrinsic has a default <code>Origin</code> of <code>None</code> and must pass all …\nA new-school transaction extrinsic which does not include …\nIdentify by block header hash.\nAbstraction over a block header for a substrate chain.\nThe transaction is valid forever. The genesis hash must be …\nPeriod and phase are encoded:\nIdentify by block number.\nType of a digest item that contains raw data; this also …\nSome other thing. Unsupported and experimental.\nAny ‘non-system’ digest item, opaque to the native …\nSome other (non-prescribed) type.\nEra phase\nA pre-runtime digest.\nA pre-runtime digest.\nType corresponding to DigestItem::PreRuntime.\nA “header” for extrinsics leading up to the call …\nAn indication for the light clients that the runtime …\nRuntime code or heap pages updated.\nPut a Seal on it. This is only used by native code, and is …\nPut a Seal on it. This is only used by native code, and is …\nType corresponding to DigestItem::Seal.\nExtrinsic has a default <code>Origin</code> of <code>Signed(AccountId)</code> and …\nAn old-school transaction extrinsic which includes a …\nAbstraction over a substrate block and justification.\nA payload that has been signed for an unchecked extrinsics.\nAn extrinsic right from the external world. This is …\nThe <code>SignaturePayload</code> of <code>UncheckedExtrinsic</code>.\nCast this digest item into <code>Consensus</code>\nCast this digest item into <code>PreRuntime</code>\nCast this digest item into <code>PreRuntime</code>\nCast this digest item into <code>Seal</code>\nGet the block number of the start of the era whose …\nFull block.\nTry to match this to a <code>Self::Consensus</code>, check <code>id</code> matches …\nGet the block number of the first block at which the era …\nDeconstruct the payload into it’s components.\nA chain-specific digest of data useful for light clients …\nReturns the weight of the extension of this transaction, …\nReturns the weight of the extension of this transaction, …\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nWho this purports to be from and the number of extrinsics …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nCreate an <code>UncheckedExtrinsic</code> from a <code>Preamble</code> and the …\nCreate new <code>SignedPayload</code> from raw components.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe function that should be called.\nThe function that should be called.\nCreate a block ID from a hash.\nConvenience helper for computing the hash of the header …\nThe block header.\nCreate an “immortal” transaction.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>true</code> if this is an immortal transaction.\nReturns <code>true</code> if this extrinsic instance is an inherent, `…\nCheck if this block ID refers to the pre-genesis state.\nReturns <code>true</code> if this extrinsic instance is an old-school …\nBlock justification.\nA list of logs in the digest.\nCreate a new era based on a period (which should be a …\nCreate new <code>SignedPayload</code> for extrinsic format version 4.\nNew instance of a bare (ne unsigned) extrinsic.\nNew instance of a bare (ne unsigned) extrinsic on …\nA new header with the given number and default hash for …\nNew instance of an old-school signed transaction on …\nNew instance of an new-school unsigned transaction.\nNew instance of a bare (ne unsigned) extrinsic. This could …\nCreate a block ID from a number.\nThe block number.\nThe parent hash.\nCreate a block ID for a pre-genesis state.\nTry to match this to a <code>Self::PreRuntime</code>, check <code>id</code> matches …\nInformation regarding the type of extrinsic this is …\nTry to match this to a <code>Self::Seal</code>, check <code>id</code> matches and …\nThe state trie merkle root\nReturns <code>Some</code> if this is a signed extrinsic, together with …\nTry to match this digest item to the given opaque item …\nTry to match this digest item to the given opaque item …\nGet an encoded version of this <code>blake2_256</code>-hashed payload.\nRuntime types that existed prior to BlockBuilder API …\n<code>ApplyExtrinsicResult</code> type definition before BlockBuilder …\nAn arithmetic error.\nA bad origin.\nFailed to lookup some data.\nAt least one consumer is remaining so the account cannot …\n<code>DispatchError</code> type definition before BlockBuilder API …\n<code>DispatchOutcome</code> type definition before BlockBuilder API …\nContains the error value\nContains the error value\nA custom error in a module.\n<code>ModuleError</code> type definition before BlockBuilder API …\nThere are no providers so the account cannot be created.\nContains the success value\nContains the success value\nSome error occurred.\nAn error to do with tokens.\nThere are too many consumers so the account cannot be …\nConvert the legacy <code>ApplyExtrinsicResult</code> type to the latest …\nModule specific error value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nModule index, matching the metadata module index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOptional error message.\nExecution context extra capabilities.\nA externalities extension for accessing the Offchain DB.\nThe requested action couldn’t been completed within a …\nDeadline was reached while we waited for this request to …\nDuration type\nAn extended externalities for offchain workers.\nThe request has finished with given status code.\nExternal http calls.\nAn error enum returned by some http methods.\nOpaque type for offchain http requests.\nStatus of the HTTP request\nThe ID of the request is invalid in this context.\nThe passed ID is invalid in this context.\nThere was an IO Error while processing the request.\nAn error has occurred during the request, for example a …\nKeystore access.\nAn identifier for a type of cryptographic key.\nLocal storage is revertible and fork-aware. It means that …\nAn <code>*Externalities</code> implementation with limited capabilities.\nAccess to opaque network state.\nManage the authorized nodes\nAccess to offchain worker DB (read only).\nAccess to offchain worker DB (writes).\nThe offchain database extension that will be registered at …\nChange to be applied to the offchain worker db in regards …\nOffchain DB persistent (non-fork-aware) storage.\nThe offchain worker extension that will be registered at …\nSimple blob to hold a <code>Multiaddr</code> without committing to its …\nA blob to hold information about the local node’s …\nPersistent storage is non-revertible and not fork-aware. …\nRandomness source.\nRemove the data associated with the key\nPersistent storage prefix used by the Offchain Worker API …\nOverwrite the value of an associated key\nA type of supported crypto.\nAccess time related functionality\nOpaque timestamp type\nAbstraction over transaction pool.\nAn externalities extension to submit transactions to the …\nIncrease the timestamp by given <code>Duration</code>.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReplace the value in storage if given old_value matches …\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns a saturated difference (Duration) between two …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nList of addresses the node knows it can be reached as.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nCreate new duration representing given number of …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreates new <code>Timestamp</code> given unix timestamp in milliseconds.\nRetrieve a value from storage under given key and prefix.\nA high-level helpers for making HTTP requests from …\nAppend header to the request.\nInitiates a http request given HTTP verb and the URL.\nWrite a chunk of request body.\nRead all response headers.\nRead a chunk of body response to given buffer.\nBlock and wait for the responses for given requests.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns if the local node is a potential validator.\nRemoves a value in the local storage.\nSets a value in the local storage if it matches current …\nGets a value from the local storage.\nSets a value in the local storage.\nReturns number of milliseconds this Duration represents.\nReturns information about the local node’s network state.\nCreate new externalities limited to given <code>capabilities</code>.\nCreate new <code>OpaqueMultiaddr</code>\nCreate a new instance of <code>Self</code>.\nCreate a new instance of <code>OffchainDbExt</code>.\nCreate a new instance of <code>TransactionPoolExt</code>.\nReturns the complement of this set of flags.\nPeerId of the local node in SCALE encoded.\nReturns a random seed.\nClear a storage entry under given key and prefix.\nRemoves the specified flags in-place.\nPersist a value in storage under given key and prefix.\nInserts or removes the specified flags depending on the …\nSet the authorized nodes from runtime.\nPause the execution until <code>deadline</code> is reached.\nA set of storage helpers for offchain workers.\nOff-chain Storage Lock\nDecrease the timestamp by given <code>Duration</code>\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nSubmit transaction.\nReturns the symmetric difference between the flags in <code>self</code> …\nUtilities for offchain calls testing.\nReturns current UNIX timestamp (in millis)\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturn number of milliseconds since UNIX epoch.\nDeadline has been reached.\nDELETE request\nContains the error value\nA request error\nGET request\nA collection of Headers in the response.\nA custom iterator traversing all the headers.\nA result of waiting for a pending request.\nRequest had timed out.\nRequest method (HTTP verb)\nContains the success value\nCustom verb\nPATCH request\nA struct representing an uncompleted http request.\nPOST request\nPUT request\nAn HTTP request builder.\nA HTTP response.\nA buffered byte iterator over response body.\nUnknown error has been encountered.\nAdd a header.\nSet the body of the request.\nRetrieve the body of this response.\nBody of the request\nResponse status code\nReturns current element (if any).\nSet the deadline of the request.\nSet the deadline for reading the body.\nDeadline to finish sending the request\nReturn an error that caused the iterator to return <code>None</code>.\nRetrieve a single header from the list of headers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nStart a simple GET request\nRetrieve the headers for this response.\nRequest ID\nRequest id\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this headers into an iterator.\nChange the method of the request\nRequest method\nCreate a new Request builder with the given URL.\nMove the iterator to the next position.\nCreate new POST request with given body.\nRaw headers\nSend the request and return a handle.\nAttempts to wait for the request to finish, but will …\nAttempt to wait for all provided requests, but up to given …\nChange the URL of the request.\nRequest URL\nWait for the request to complete.\nWait for all provided requests.\nThe underlying db failed to update due to a concurrent …\nPossible errors when mutating a storage value.\nReason for not being able to provide the stored value\nA storage value with a static key.\nAn abstraction over local storage value.\nValue found but undecodable\nThe function given to us to create the value to be stored …\nRemove the associated value from the storage.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRetrieve &amp; decode the value from storage.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new reference to a value in the fork-aware local …\nRetrieve &amp; decode the current value and set it to a new …\nCreate a new reference to a value in the persistent local …\nSet the value of the storage to encoding of given …\nLockable based on block number and timestamp.\nA deadline based on block number and time.\nAn instant type specifying i.e. a point in time.\nLockable item for use with a persisted storage lock.\nStorage based lock.\nRAII style guard for a lock.\nLockable based on the current timestamp with a …\nThe block number until which the lock is still valid <em>at </em>…\nCalculate the deadline based on a current state such as …\nProvide the current state of block number and time.\nExtend the lock by guard deadline if it already exists.\nConsume the guard but <strong>do not</strong> unlock the underlying lock.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nVerify the deadline has not expired compared to the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepeated lock attempts until the lock is successfully …\nCreate a new storage lock with a <code>default()</code> instance of …\nSnooze at least until <code>deadline</code> is reached.\nThe timestamp until which the lock is still valid <em>at least</em>.\nA single attempt to lock using the storage entry.\nExplicitly create a time and block number based storage …\nExplicitly create a time and block number based storage …\nExplicitly create a time based storage lock with a …\nCreate a new storage lock with an explicit instance of a …\nInternal state of the externalities.\nPending request.\nThe internal state of the fake transaction pool.\nImplementation of offchain externalities used for tests.\nSharable “persistent” offchain storage for test.\nImplementation of transaction pool used for test.\nApply a set of off-chain changes directly to the test …\nRequest body\nAdd expected HTTP request.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAsserts that pending request has been submitted and fills …\nRetrieve a key from the test backend.\nRequest headers\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocal storage\nEncoded Metadata\nHTTP method\nCreate a new and empty offchain storage db for persistent …\nCreate new <code>TestOffchainExt</code> and a reference to the internal …\nCreate new <code>TestTransactionPoolExt</code> and a reference to the …\nPersistent local storage\nNumber of bytes already read from the response body.\nA list of pending requests.\nResponse body\nResponse headers\nA supposedly random seed.\nHas the request been sent already.\nA timestamp simulating the current time.\nA vector of transactions submitted from the runtime.\nURI\nCreate new <code>TestOffchainExt</code> and a reference to the internal …\nOne of the proof nodes could not be decoded.\nCorrupt Trie item.\nThe statement being verified contains multiple key-value …\nThe proof contains at least one extraneous hash reference …\nThe proof contains at least one extraneous node.\nThe proof contains at least one extraneous value which …\nTrie item not found in the database,\nThe proof is missing trie nodes required to verify.\nThe proof contains an invalid child reference that exceeds …\nHash is not value.\nAttempted to create a trie with a state root not in the DB.\nThe Proof type we will use to determine the number of …\nThis trait is one strategy that can be used to benchmark a …\nAn interface for creating, interacting with, and creating …\nThe root hash computed from the proof is incorrect.\nA runtime friendly error type for tries.\nA value was found in the trie with a nibble key that was …\nThe proof indicates that an expected value was not found …\nCreate a proof that can be used to verify a key and its …\nCreate a new instance of a <code>ProvingTrie</code> using an iterator …\nThis function returns the number of hashes we expect to …\nQuery a value contained within the current trie. Returns …\nAccess the underlying trie root.\nVerify the existence of <code>key</code> and <code>value</code> in a given trie root …\nRuntime logger implementation - <code>log</code> crate backend.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nInitialize the logger.\nCalls <code>U::from(self)</code>.\nTesting block\nA message from the runtime to the consensus engine. This …\nHeader Digest\nDigest item\nFixed-size uninterpreted hash type with 32 bytes (256 …\nBlock Header\nWrapper over a <code>u64</code> that can be used as a <code>RuntimeCall</code>.\nSome other thing. Unsupported and experimental.\nA pre-runtime digest.\nAn indication for the light clients that the runtime …\nPut a Seal on it. This is only used by native code, and is …\nA dummy signature type, to match <code>UintAuthorityId</code>.\nExtrinsic type with <code>u64</code> accounts and mocked signatures, …\nA dummy type which can be used instead of regular …\nA chain-specific digest of data useful for light clients …\nList of extrinsics\nThe merkle root of the extrinsics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe function that should be called.\nBlock header\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA list of logs in the digest.\nThe block number.\nThe parent hash.\nInformation regarding the type of extrinsic this is …\nSet the list of keys returned by the runtime call for all …\nThe state trie merkle root\nConvert this authority ID into a public key.\nThe account ID that this can be transformed into.\nType of the signer.\nThe type which encodes the sender identity.\nThis type can be converted into and possibly from an …\nA lookup implementation returning the <code>AccountId</code> from a …\nAny additional data that will go into the signed payload. …\nMeans of signature verification of an application key.\nInput that adds infinite number of zero after wrapped …\nAn “executable” piece of information, used by the …\nRuntime Origin which includes a System Origin variant …\nInterface to differentiate between Runtime Origins …\nA meta trait for arithmetic.\nA meta trait for arithmetic.  Same as <code>AtLeast32Bit</code>, but …\nAn error type that indicates that the origin is invalid.\nBlake2-256 Hash implementation.\nA “checkable” piece of information, used by the …\nSomething which fulfills the abstract idea of a Substrate …\nSomething that can convert a <code>BlockId</code> to a number or a hash.\nSuper trait with all the attributes for a block number.\nType of <code>BlockNumber</code> to provide.\nGet current block number\nNumbers which have upper and lower bounds\nThe function call.\nThe type of the call.\nThe type which encodes the call to be dispatched.\nType by which we can dispatch. Restricts the …\nThe call to validate\nSomething that can be checked for equality and printed out …\nExtract the digest type for a block. A “checkable” …\nReturned if <code>check</code> succeeds.\nReturned if <code>check</code> succeeds.\nPerforms addition that returns <code>None</code> instead of wrapping …\nConvenience type to work around the highly unergonomic …\nPerforms division that returns <code>None</code> instead of panicking …\nPerforms multiplication that returns <code>None</code> instead of …\nA <code>TryMorph</code> implementation to reduce a scalar by a …\nPerforms a left shift that returns <code>None</code> on shifts larger …\nPerforms a right shift that returns <code>None</code> on shifts larger …\nPerforms subtraction that returns <code>None</code> instead of wrapping …\nTrait for things that can be clear (have no bits set). For …\n…\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for signed integers.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for unsigned integers.\nInfallible conversion trait. Generic over both source and …\nReversing infallible conversion trait. Generic over both …\nA structure that performs standard conversion using the …\nAdapter which turns a Get implementation into a Convert …\n<code>?</code> formatting.\nDerive macro generating an impl of the trait <code>Debug</code>.\nShortcut to reference the <code>Info</code> type of a <code>Dispatchable</code>.\nShortcut to reference the <code>RuntimeOrigin</code> type of a …\nSingle-function utility trait with a blanket impl over …\nA lazy call (module function and argument values) that can …\nPerforms addition that returns <code>ArithmeticError</code> instead of …\nPerforms self addition that returns <code>ArithmeticError</code> …\nPerforms division that returns <code>ArithmeticError</code> instead of …\nPerforms self division that returns <code>ArithmeticError</code> …\nExtends <code>FixedPointNumber</code> with the Ensure family functions.\nSimilar to <code>TryFrom</code> but returning an <code>ArithmeticError</code> error.\nSimilar to <code>TryInto</code> but returning an <code>ArithmeticError</code> error.\nPerforms multiplication that returns <code>ArithmeticError</code> …\nPerforms self multiplication that returns <code>ArithmeticError</code> …\nMeta trait that supports all immutable arithmetic <code>Ensure*</code> …\nMeta trait that supports all assigned arithmetic <code>Ensure*</code> …\nPerforms subtraction that returns <code>ArithmeticError</code> instead …\nPerforms self subtraction that returns <code>ArithmeticError</code> …\nContains the error value\nThe error type that gets returned when a collection can’…\nThe error type that will be returned by the functions.\nA type that can handle weight refunds and incorporate …\nSomething that acts like an <code>Extrinsic</code>.\nType for extrinsics.\nAn extrinsic on which we can get access to call.\nSomething that acts like an <code>Extrinsic</code>.\nImplementor is an <code>Extrinsic</code> and provides metadata about …\nDispatchable impl containing an arbitrary value which …\nA trait for querying a single value from a type.\nImplement Get by returning Default for any type that …\nA marker trait for something that knows the type of the …\nA marker trait for something that knows the type of the …\nAbstraction around hashing\nHeader hash type\nBlock hash type.\nSuper trait with all the attributes for a hashing output.\nHashing algorithm\nExtract the hashing type for a block.\nSomething which fulfills the abstract idea of a Substrate …\nHeader type.\nUnique identifier of this signed extension.\nUnique identifier of this signed extension.\nSome type that is able to be collapsed into an account ID. …\nA structure that performs identity conversion.\nA lookup implementation returning the input value.\nInterface of implications in the transaction extension …\nThe implication in a transaction.\nAny additional data which was known at the time of …\nThe info type.\nAn opaque set of information attached to the transaction. …\nA trait implementing integer square root.\nDetermine if a <code>MemberId</code> is a valid member.\nKeccak-256 Hash implementation.\nTypes bound to this opaque keys that provide the key type …\nA lazy value.\nMeans of changing one type into another in a manner …\nAn error that indicates that a lookup failed.\nFallible conversion trait returning an Option. Generic …\nReversing fallible conversion trait returning an Option. …\nA type that implements Display when in std environment.\nDefinition for a bi-directional, fallible conversion …\nA type that implements FromStr when in std environment.\nA type that implements Hash when in std environment.\nA type that implements Serialize when in std environment …\nA type that implements Serialize, DeserializeOwned and …\nA type that can be used in runtime structures.\nExtensible conversion trait. Generic over only source …\nImplementation of <code>Morph</code> which converts between types using …\nA <code>TryMorph</code> implementation to enforce an upper limit for a …\nThe <code>NodeBlock</code> type.\nHeader number.\nExtract the number type for a block.\nContains the success value\nDefines a multiplicative identity element for <code>Self</code>.\nOpaque data type that may be destructured into a series of …\nThe origin type of the transaction.\nThe type into which <code>A</code> is mutated.\nThe type into which <code>A</code> is mutated.\nThe output type of the product of <code>self</code> and <code>Other</code>.\nThe hash type produced.\nZero-sized type used to mark things that “act like” …\nShortcut to reference the <code>PostInfo</code> type of a <code>Dispatchable</code>.\nAdditional information that is returned by <code>dispatch</code>. Can …\nThe <code>Pre</code> of the extension.\nThe type that encodes information that can be passed from …\nThe type that encodes information that can be passed from …\nTrait for things which can be printed from the runtime.\nMutator which reduces a scalar by a particular amount.\nA type that can handle weight refunds.\nMorpher to disregard the source value and replace with …\nMorpher to disregard the source value and replace with the …\nThe resultant type.\nThe <code>RuntimeBlock</code> type.\nEvery function call from your runtime has an origin, which …\nConvenience type to work around the highly unergonomic …\nSaturating arithmetic operations, returning maximum or …\nMultiply and divide by a number that isn’t necessarily …\nThe signature type of the extrinsic.\nThe type of the address that signed the extrinsic.\nThe additional data that is specific to the signed …\nSomething that acts like a <code>SignaturePayload</code> of an <code>Extrinsic</code>…\nThe payload we carry for signed extrinsics.\nMeans by which a transaction may be extended. This type …\nType of the signer.\nA meta trait for all bit ops.\nType to lookup from.\nType to lookup from.\nMeans of changing one type into another in a manner …\nImplementation of <code>Morph</code> to retrieve just the first element …\nType to lookup into.\nType to lookup into.\nInput that adds infinite number of zero after wrapped …\nMeans by which a transaction may be extended. This type …\nInformation about a <code>TransactionExtension</code> for the runtime …\nTransaction extensions attached to this <code>Extrinsic</code>.\nTry and collect into a collection <code>C</code>.\nFallible conversion trait which returns the argument in …\nReversing fallible conversion trait which returns the …\nA structure that performs standard conversion using the …\nExtensible conversion trait. Generic over only source …\nImplementation of <code>TryMorph</code> which attempts to convert …\nThe base implication in a transaction.\nThe type which is returned.\nA trait for querying a single value from a type defined in …\nJust like <code>From</code> except that if the source value is too big …\nJust like <code>Into</code> except that if the source value is too big …\nThe format versions of the <code>Extrinsic</code>.\nThe <code>Val</code> of the extension.\nThe type that encodes information that can be passed from …\nShortcut for the result value of the <code>validate</code> function.\nProvide validation for unsigned extrinsics.\nMeans of signature verification.\nDefines an additive identity element for <code>Self</code>.\nConstruct any additional data that should be in the signed …\nExecutes all necessary logic needed prior to dispatch and …\nExtract a reference of the inner value of the System …\nPost dispatch logic run after dispatching bare extrinsics.\nValidation logic for bare extrinsics.\nAll pre-flight logic run before dispatching bare …\nThe base implication, that is implication not part of any …\nGet the call of the extrinsic.\nCheck self, given an instance of Context.\nCheck self.\nPerform the equality check.\nAdds two numbers, checking for overflow. If overflow …\nDivides two numbers, checking for underflow, overflow and …\nMultiplies two numbers, checking for underflow or …\nRaises a value to the power of exp, returning <code>None</code> if an …\nChecked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …\nChecked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …\nSubtracts two numbers, checking for underflow. If …\nReturn the value of Self that is clear.\nMake conversion.\nAttempt to convert reference of <code>A</code> into value of <code>B</code>, …\nMake conversion back.\nAttempt to convert reference of <code>B</code> into value of <code>A</code>, …\nReturns the current block number.\nSplit the block into header and list of extrinsics.\nReturns a reference to the digest.\nGet a mutable reference to the digest.\nActually dispatch this call and return the result of it.\nDispatch a transaction with the given base origin and call.\n@return the integer division of <code>self</code> and <code>other</code>.\nCreates an encoded block from the given <code>header</code> and …\nAdds two numbers, checking for overflow.\nAdds two numbers overwriting the left hand one, checking …\nDivides two numbers, checking for overflow.\nDivides two numbers overwriting the left hand one, …\nEnsure division for integer type <code>N</code>. Equal to <code>self / d</code>.\nPerforms the conversion returning an <code>ArithmeticError</code> if …\nCreates <code>self</code> from a rational number. Equal to <code>n / d</code>.\nPerforms the conversion returning an <code>ArithmeticError</code> if …\nMultiplies two numbers, checking for overflow.\nMultiplies two numbers overwriting the left hand one, …\nEnsure multiplication for integer type <code>N</code>. Equal to <code>self * n</code>…\nRaises a value to the power of exp, returning …\nSubtracts two numbers, checking for overflow.\nSubtracts two numbers overwriting the left hand one, …\nThe explicit implication in transaction extensions.\nReturns a reference to the list of extrinsics.\nReturns a reference to the extrinsics root.\nFormats the value using the given formatter.\nReturn the current value.\nReturn the current value.\nGet a reference to the underlying value.\nGet the decoded key with key-type ID <code>i</code>.\nGet the raw bytes of key with key-type ID <code>i</code>.\nReturns a reference to the header.\nThe unique identifier of the <code>TransactionExtension</code>.\nDetermine any additional data which was known at the time …\nThe type of the <code>TransactionExtension</code> additional signed …\nThe implicit implication in transaction extensions.\nFind the integer square root.\nFind the integer square root, returning <code>None</code> if the number …\nTransform into an account.\nConvert into an account ID. This is infallible, and may …\nConvert this value amalgamated with a secondary “sub” …\nReturns <code>true</code> if this <code>Extrinsic</code> is bare.\nReturns <code>true</code> if this <code>Extrinsic</code> is bare.\nTrue iff no bits are set.\nIs the given <code>MemberId</code> a valid member?\nIs this <code>Extrinsic</code> signed? If no information are available …\nIs this <code>Extrinsic</code> signed? If no information are available …\nWhether the origin is authorized to include a transaction …\nReturns <code>true</code> if <code>self</code> is equal to the additive identity.\nReturn the key-type IDs supported by this set.\nAttempt a lookup.\nAttempt a lookup.\nReturns the largest finite number this type can represent\nAttempt to make conversion.\nAttempt to make conversion back.\nReturns the metadata for this extension.\nReturns the metadata for this signed extension.\nReturns the smallest finite number this type can represent\nMake conversion.\n@return the product of <code>self</code> and <code>other</code>.\nCreates new header.\nCreates new block from header and extrinsics.\nCreate a new old-school extrinsic, either a bare extrinsic …\nReturns a reference to the header number.\nReturns the multiplicative identity element of <code>Self</code>, <code>1</code>.\nThe ordered Patricia tree root of the given <code>input</code>.\nVerify a proof of ownership for the keys.\nCreate new implementations of the <code>Get</code> trait.\nReturns a reference to the parent hash.\nDestructure the implication into its parts.\nA wrapper for <code>post_dispatch_details</code> that refunds the …\nDo any post-flight stuff for an extrinsic.\nDo any post-flight stuff for an extrinsic.\nDo any pre-flight stuff for a signed transaction.\nDo any pre-flight stuff for an unsigned transaction.\nDo any pre-flight stuff for a transaction after validation.\nPrint the object.\nRefund some unspent weight.\n@return the modulo remainder of <code>self</code> and <code>other</code>.\nConvert from a value of <code>T</code> into an equivalent instance of …\nConsume self to return an equivalent value of <code>T</code>.\nIncrement self by some <code>amount</code>, saturating.\nSaturating addition. Compute <code>self + rhs</code>, saturating at the …\nDecrement self by one, saturating at zero.\nIncrement self by one, saturating.\nDecrement self by one, saturating at zero.\nSaturating multiply. Compute <code>self * rhs</code>, saturating at the …\nIncrement self by one, saturating at the numeric bounds …\nSaturating exponentiation. Compute <code>self.pow(exp)</code>, …\nDecrement self by some <code>amount</code>, saturating at zero.\nSaturating subtraction. Compute <code>self - rhs</code>, saturating at …\nUtility function only to be used in benchmarking scenarios …\nAccrue some weight pertaining to the extension.\nSets the extrinsic root.\nSets the header number.\nSets the parent hash.\nSets the state root.\nReturns a reference to the state root.\nDo everything which would be done in a dispatch_transaction…\nConvert the given <code>block_id</code> to the corresponding block hash.\nConvert the given <code>block_id</code> to the corresponding block …\nThe transaction extension trait.\nThe Patricia tree root of the given mapping.\nConsume self and try to collect the results into <code>C</code>.\nAttempt to make conversion. If returning Result::Err, the …\nAttempt to make conversion back. If returning Result::Err, …\nTry to convert an account ID into this type. Might not …\nTry to convert an account ID into this type. Might not …\nConvert into an account ID, checking that all bytes of the …\nSame as <code>into_sub_account_truncating</code>, but ensuring that all …\nMake conversion.\nThe type of the <code>TransactionExtension</code>.\nBlindly check self.\nConvert from a value of <code>T</code> into an equivalent instance of …\nConsume self to return an equivalent value of <code>T</code>.\nConvert from Target back to Source.\nValidate a transaction for the transaction queue.\nChecks to see if this is a valid <em>transaction</em>. It returns …\nValidate a signed transaction for the transaction queue.\nValidate and prepare a transaction, ready for dispatch.\nJust validate a transaction.\nReturn the validity of the call\nValidate an unsigned transaction for the transaction queue.\nVerify a signature.\nVerify a signature. Return <code>true</code> if signature is valid for …\nThe weight consumed by executing this extension instance …\nReturns the additive identity element of <code>Self</code>, <code>0</code>.\nAdapter to use a <code>SignedExtension</code> in the place of a …\nSingle-function utility trait with a blanket impl over …\nContains the error value\nUnique identifier of this signed extension.\nInterface of implications in the transaction extension …\nThe implication in a transaction.\nAny additional data which was known at the time of …\nThe info type.\nContains the success value\nThe origin type of the transaction.\nZero-sized type used to mark things that “act like” …\nThe <code>Pre</code> of the extension.\nThe type that encodes information that can be passed from …\nThe resultant type.\nMeans by which a transaction may be extended. This type …\nInformation about a <code>TransactionExtension</code> for the runtime …\nThe base implication in a transaction.\nThe <code>Val</code> of the extension.\nThe type that encodes information that can be passed from …\nShortcut for the result value of the <code>validate</code> function.\nPost dispatch logic run after dispatching bare extrinsics.\nValidation logic for bare extrinsics.\nAll pre-flight logic run before dispatching bare …\nThe base implication, that is implication not part of any …\nDispatch a transaction with the given base origin and call.\nThe explicit implication in transaction extensions.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe unique identifier of the <code>TransactionExtension</code>.\nDetermine any additional data which was known at the time …\nThe type of the <code>TransactionExtension</code> additional signed …\nThe implicit implication in transaction extensions.\nCalls <code>U::from(self)</code>.\nReturns the metadata for this extension.\nDestructure the implication into its parts.\nA wrapper for <code>post_dispatch_details</code> that refunds the …\nDo any post-flight stuff for an extrinsic.\nDo any pre-flight stuff for a transaction after validation.\nDo everything which would be done in a dispatch_transaction…\nThe type of the <code>TransactionExtension</code>.\nValidate a transaction for the transaction queue.\nValidate and prepare a transaction, ready for dispatch.\nJust validate a transaction.\nThe weight consumed by executing this extension instance …\nThe transaction birth block is ancient.\nAn extrinsic with a Mandatory dispatch resulted in Error. …\nGeneral error to do with the transaction’s proofs (e.g. …\nThe sending address is disabled or known to be invalid.\nThe call of the transaction is not expected.\nCould not lookup some information that is required to …\nAny other custom invalid validity that is not covered by …\nAny other custom unknown validity that is not covered by …\nContains the error value\nContains the error value\nThe transaction would exhaust the resources of current …\nTransaction has been received externally.\nGeneral error to do with the transaction not yet being …\nTransaction is already included in block.\nThe implicit data was unable to be calculated.\nThe transaction is invalid.\nAn invalid transaction validity.\nTransaction is coming from a local source.\nAn extrinsic with a mandatory dispatch tried to be …\nNo validator found for the given unsigned transaction.\nContains the success value\nContains the success value\nGeneral error to do with the inability to pay some fees …\nGeneral error to do with the transaction being outdated …\nMinimum number of blocks a transaction will remain valid …\nPriority for a transaction. Additive. Higher is better.\nThe source of the transaction.\nTag for a transaction. No two transactions with the same …\nInformation on a transaction’s validity and, if valid, …\nErrors that can occur while checking the validity of a …\nInformation on a transaction’s validity and, if valid, …\nTransaction validity can’t be determined.\nThe transaction extension did not authorize any origin.\nAn unknown transaction validity.\nInformation concerning a valid transaction.\n<code>ValidTransaction</code> builder.\nAdd a <code>TransactionTag</code> to the set of provided tags.\nAdd a <code>TransactionTag</code> to the set of required tags.\nFinalize the builder and produce <code>TransactionValidity</code>.\nAugment the builder with existing <code>ValidTransaction</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSet the longevity of a transaction.\nTransaction longevity\nSet the priority of a transaction.\nPriority of the transaction.\nSet the propagate flag.\nA flag indicating if the transaction should be propagated …\nProvided tags\nTransaction dependencies\nA type that wraps another type and provides a default …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA trait for querying a single value from a type.\nCopied from <code>sp-runtime</code> and documented there.\nAssert an expression returns an error specified.\nAssert an expression returns an error specified.\nAssert an expression returns error with the given weight.\nEvaluate an expression, assert it returns an expected <code>Err</code> …\nPanic if an expression doesn’t evaluate to <code>Ok</code>.\nEvaluate any expression and assert that runtime storage …\nBuild a bounded btree-map from the given literals.\nBuild a bounded vec from the given literals.\nReturn the current value.\nCreate new implementations of the <code>Get</code> trait.\nFailed to decode the view function input.\nImplemented by both pallets and the runtime. The runtime …\nA view function with the given <code>ViewFunctionId</code> was not found\nView functions are not implemented for this runtime.\nAutomatically implemented for each pallet view function …\nError type for view function dispatching.\nThe unique identifier for a view function.\nAutomatically implemented for each pallet by the macro …\nAutomatically implemented for each pallet view function …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe part of the id for dispatching view functions from the …\nThe part of the id for dispatching to a view function …\nRuntime API for executing view functions\nExecute a view function query.\nThe type that is returned as result from calculation.\nThe type that is returned as result from polynomial …\nImplementor of <code>WeightToFee</code> that uses a constant multiplier.\nA list of coefficients that represent a polynomial.\nImplementor of <code>WeightToFee</code> such that it maps any unit of …\nImplementor of <code>WeightToFee</code> that maps one unit of weight to …\nAn implementation of <code>WeightToFee</code> that collects no fee.\nThe weight of database operations that the runtime can …\nMeters consumed weight and a hard limit for the maximal …\nA trait that describes the weight to fee calculation.\nOne coefficient and its position in the <code>WeightToFee</code>.\nA list of coefficients that represent a polynomial.\nA trait that describes the weight to fee calculation as …\nThe fractional part of the coefficient.\nThe integral part of the coefficient.\nThese constants are specific to FRAME, and the current …\nDegree/exponent of the term.\nTrue iff the coefficient should be interpreted as negative.\nReturns a polynomial that describes the weight to fee …\nCalculates the fee from the passed <code>weight</code>.\nWeight of executing an empty block. Calculated by …\nWeight of executing a NO-OP extrinsic, for example …\nParityDB can be enabled with a feature flag, but is still …\nBy default, Substrate uses RocksDB, so this will be the …\nDerive [<code>Clone</code>] but do not bound any generic.\nDerive [<code>Debug</code>] but do not bound any generics.\nderive <code>Default</code> but do no bound any generic. Docs are at …\nDeriveEq but do no bound any generic.\nDerive [<code>Ord</code>] but do no bound any generic. Docs are at …\nDerive [<code>PartialEq</code>] but do not bound any generic.\nDerive [<code>PartialOrd</code>] but do not bound any generic. Docs are …\nDerive [<code>Debug</code>], if <code>std</code> is enabled it uses …\nInternal macro used by <code>frame_support</code> to create …\nInternal macro use by frame_support to generate dummy part …\nAllows to authorize some general transactions with …\nAn attribute macro used to declare a benchmark within a …\nAn attribute macro that can be attached to a (non-empty) …\nAn attribute macro used to specify that a block should be …\nDocumentation for this macro can be found at …\nEach dispatchable may also be annotated with the …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nConstruct a runtime, with the given name and the given …\nMacro used internally in FRAME to generate the crate …\nThis attribute can be used to derive a full implementation …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDefine a module inside a <code>dynamic_params</code> module that …\nMark a module that contains dynamic parameters.\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nAn attribute macro used to specify the extrinsic call …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nThis macro is meant to be used by frame-support only. It …\n<strong>Rust-Analyzer users</strong>: See the documentation of the Rust …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nThe optional attribute <code>#[inject_runtime_type]</code> can be …\nAn attribute macro that can be attached to a (non-empty) …\nMacro that inserts some tokens after the first match of …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\n<strong>Rust-Analyzer users</strong>: See the documentation of the Rust …\nAttach this attribute to an impl statement that you want …\nDocumentation for this macro can be found at …\nConstruct a runtime, with the given name and the given …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nAllows defining conditions for a task to run.\nAllows defining an index for a task.\nAllows defining an iterator over available work items for …\nAllows defining the weight of a task.\nAllows you to define some service work that can be …\nExecute the annotated function in a new storage …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nDocumentation for this macro can be found at …\nAllows to define the weight of the authorize function.\nDocumentation for this macro can be found at …\nself defined parsing struct. not meant for any struct, …\nself defined parsing struct or enum. not meant for any …\nGenerate the crate access for the crate using 2018 syntax.\nGenerates the access to the <code>frame-support</code> crate.\nGenerates the hidden includes that are required to make …\nReturn all cfg attributes literals found.\nReturn all doc attributes literals found.\nCheck if a path is using the <code>frame</code> crate or not.\nExtension to syn types, mainly for parsing\nNote that syn Meta is almost fine for use case (lacks only …\nstop parsing here getting remaining token as content Warn …\nCheck if a <code>Expr</code> contains the given <code>Ident</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if a <code>Type</code> contains the given <code>Ident</code>.\nself defined parsing struct. not meant for any struct, …\nself defined parsing struct or enum. not meant for any …\nThe full account information for a particular account ID.\nData to be associated with an account (other than …\nData to be associated with an account (other than …\nThe user account identifier type for the runtime.\nThe user account identifier type for the runtime.\nInformation of an account.\nTotal length (in bytes) for all extrinsics put together, …\nApplying an extrinsic.\nA transaction extension that authorizes some calls (i.e. …\nIt is signed by nobody, the extrinsic is authorized by the …\nIt is signed by nobody, the extrinsic is authorized by the …\nThe basic call filter to use in Origin. All origins are …\nThe basic call filter to use in Origin. All origins are …\nThe Block type used by the runtime. This is used by …\nMap of block numbers to block hashes.\nMaximum number of block number to block hash mappings to …\nMaximum number of block number to block hash mappings to …\nThe maximum length of a block (in bytes).\nThe maximum length of a block (in bytes).\nThe current weight for the block.\nBlock &amp; extrinsics weights: base values and limits.\nBlock &amp; extrinsics weights: base values and limits.\nContains a variant per dispatchable extrinsic that this …\nThe origin filter prevent the call to be dispatched.\nResult of <code>Pallet::can_set_code</code>.\nCheck for transaction mortality.\nGenesis hash check to provide replay protection between …\nCheck for transaction mortality.\nCheck to ensure that the sender is not the zero address.\nNonce check and increment to give replay protection for …\nEnsure the runtime version registered in the transaction …\nEnsure the transaction version registered in the …\nBlock resource (weight) limit check.\n<code>:code</code> was updated.\nInformation needed when a new runtime binary is submitted …\nConfiguration trait of this pallet.\nAn object to track the currently used extrinsic weight in …\nEvent handler which registers a consumer when created.\nNumeric limits over the ability to add a consumer ref …\nAccount was created.\nThe weight of runtime database operations the runtime can …\nThe weight of runtime database operations the runtime can …\nSome resultant status relevant to decrementing a …\nBased on <code>Config</code>. Auto-generated by …\nInformation about the dispatch of a call, to be displayed …\nAlways fail.\nEnsure the origin is <code>None</code>. i.e. unsigned transaction.\nEnsure the origin is Root.\nEnsure the origin is Root and return the provided <code>Success</code> …\nEnsure the origin is any <code>Signed</code> origin.\nEnsure the origin is <code>Signed</code> origin from the given <code>AccountId</code>…\nEnsure the origin is provided <code>Ensure</code> origin and return the …\nError for the System pallet\nEvent for the System pallet.\nRecord of an event happening.\nAccount already existed.\nAccount still exists.\nWeight functions needed for <code>frame_system_extensions</code>.\nWeight information for the transaction extensions of this …\nWeight information for the transaction extensions of this …\nAn extrinsic failed.\nAn extrinsic completed successfully.\nThe weight reclaimed for the extrinsic.\nThe specified <code>Task</code> failed during execution.\nFailed to extract the runtime version from the new runtime.\nFinalizing the block.\nCan be used to configure the genesis state of this pallet.\nThe output of the <code>Hashing</code> function.\nThe output of the <code>Hashing</code> function.\nThe hashing system (algorithm) being used in the runtime …\nThe hashing system (algorithm) being used in the runtime …\nSome resultant status relevant to incrementing a …\nWhether all inherents have been applied.\nInitializing the block.\nThe name of specification does not match between the …\nThe specified <code>Task</code> is not valid.\nThe runtime version is invalid or could not be fetched.\nAn account was reaped.\nStores the <code>spec_version</code> and <code>spec_name</code> of when the last …\nStores the <code>spec_version</code> and <code>spec_name</code> of when the last …\nConverting trait to take a source type and convert to …\nConverting trait to take a source type and convert to …\nThe maximum number of consumers allowed on a single …\nThe maximum number of consumers allowed on a single …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nMulti-block migrations are on-going.\nA multi-block migration is ongoing and prevents the …\nThe migrator that is used to run Multi-Block-Migrations.\nThe migrator that is used to run Multi-Block-Migrations.\nA new account was created.\nSuicide called when the account has non-default composite …\nThere is a non-zero reference count preventing the account …\nThis stores the number of previous transactions associated …\nThis stores the number of previous transactions associated …\nIt is signed by nobody, can be either:\nIt is signed by nobody, can be either:\nNo upgrade authorized.\nEverything is fine.\nA function that is invoked when an account has been …\nA function that is invoked when an account has been …\nHandler for when a new account has just been created.\nHandler for when a new account has just been created.\nWhat to do if the runtime wants to change the code to …\nWhat to do if the runtime wants to change the code to …\nExposed trait-generic origin type.\nThe <code>Pallet</code> struct, the main type that implements traits …\nProvides information about the pallet setup in the runtime.\nProvides information about the pallet setup in the runtime.\nA phase of a block’s execution.\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly before …\nA callback that executes in <em>every block</em> directly before …\nEvent handler which registers a provider when created.\nOrigin for the System pallet.\nAccount was destroyed.\nType used to encode the number of references an account …\nReference status; can be either referenced or unreferenced.\nAn invalid authorized upgrade was rejected while trying to …\nOn on-chain remark happened.\nThe system itself ordained this dispatch to happen: this …\nThe system itself ordained this dispatch to happen: this …\nHooks for the <code>Pallet::run_to_block_with</code> function.\nThe aggregated <code>RuntimeCall</code> type.\nThe aggregated <code>RuntimeCall</code> type.\nThe aggregated event type of the runtime.\nThe aggregated event type of the runtime.\nThe <code>RuntimeOrigin</code> type used by dispatchable calls.\nThe <code>RuntimeOrigin</code> type used by dispatchable calls.\nThe aggregated <code>RuntimeTask</code> type.\nThe aggregated <code>RuntimeTask</code> type.\nThe designated SS58 prefix of this chain.\nThe designated SS58 prefix of this chain.\nEvent handler which registers a self-sufficient when …\nDo something when we should be setting the code.\nIt is signed by some public key and we provide the …\nIt is signed by some public key and we provide the …\nAll migrations that should run in the next runtime upgrade.\nAll migrations that should run in the next runtime upgrade.\nThe specification version is not allowed to decrease …\nWeights for <code>frame_system_extensions</code> using the Substrate …\nWeight information for the extrinsics of this pallet.\nWeight information for the extrinsics of this pallet.\nA <code>Task</code> has finished executing.\nA <code>Task</code> failed during execution.\nA <code>Task</code> has started executing\nThe submitted code is not authorized.\nAn upgrade was authorized.\nFor a valid transaction the provides and requires …\nGet the chain’s in-code version.\nGet the chain’s in-code version.\nWeight functions needed for <code>frame_system</code>.\nReclaim the unused weight using the post dispatch …\nAn auto-generated getter for <code>Account</code>.\nReturns true if the given account exists.\nRetrieve the account transaction counter from storage.\nSet the hook function logic after the finalization of the …\nSet the hook function logic after the initialization of …\nTrue if the account has no outstanding references.\nProvide the preimage (runtime binary) <code>code</code> for an upgrade …\nProvide the preimage (runtime binary) <code>code</code> for an upgrade …\nReturns <code>Some</code> with a reference to the <code>AccountId</code> if <code>self</code> is …\nAssert the given <code>event</code> exists.\nAssert the last event equal to the given <code>event</code>.\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nAn auto-generated getter for <code>AuthorizedUpgrade</code>.\nSet the hook function logic before the finalization of the …\nSet the hook function logic before the initialization of …\nAn auto-generated getter for <code>BlockHash</code>.\nAn auto-generated getter for <code>Number</code>.\nAn auto-generated getter for <code>BlockWeight</code>.\nTrue if the account has at least one provider reference …\nTrue if the account has no outstanding consumer references …\nTrue if the account has at least one provider reference …\nDetermine whether or not it is possible to update the code.\nStorage: <code>System::BlockHash</code> (r:1 w:0) Proof: …\nStorage: <code>System::BlockHash</code> (r:1 w:0) Proof: …\nStorage: <code>System::BlockHash</code> (r:1 w:0) Proof: …\nStorage: <code>System::Account</code> (r:1 w:1) Proof: <code>System::Account</code> (…\nClass of this transaction.\nThe number of outstanding references for the account <code>who</code>.\nThe number of other modules that currently depend on this …\nThe additional data that belongs to this account. Used to …\nDecrement the reference counter on an account. This <em>MUST</em> …\nDecrement the provider reference counter on an account.\nDecrement the reference counter on an account. This <em>MUST</em> …\nDecrement the sufficients reference counter on an account.\nDeposits an event into this block’s event record.\nDeposits an event into this block’s event record adding …\nDeposits a log and ensures it matches the block’s log …\nAn auto-generated getter for <code>Digest</code>.\nAuthorize the given <code>code_hash</code> as upgrade.\nDo the pre-dispatch checks. This can be applied to both …\nDo the validate checks. This can be applied to both signed …\nEnsure that the origin <code>o</code> represents an extrinsic with …\nEnsure that the origin <code>o</code> represents an unsigned extrinsic. …\nEnsure that the origin <code>o</code> represents the root. Returns <code>Ok</code> …\nEnsure that the origin <code>o</code> represents a signed extrinsic …\nEnsure that the origin <code>o</code> represents either a signed …\nThe event itself.\nAn auto-generated getter for <code>EventCount</code>.\nGet a single event at specified index.\nAn auto-generated getter for <code>EventTopics</code>.\nGet the current events deposited by the runtime.\nGet the basic externalities for this pallet, useful for …\nGets extrinsics count.\nAn auto-generated getter for <code>ExtrinsicData</code>.\nGets the index of extrinsic that is currently executing.\nCompute the trie root of a list of extrinsics.\nCompute the trie root of a list of extrinsics.\nRemove temporary “environment” entries in storage, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nutility constructor. Used only in client/factory code.\nReturns the argument unchanged.\nReturns the argument unchanged.\nutility constructor. Used only in client/factory code.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nIncrement a particular account’s nonce by 1.\nIncrement the reference counter on an account.\nIncrement the reference counter on an account, ignoring …\nIncrement the provider reference counter on an account.\nIncrement the reference counter on an account.\nIncrement the self-sufficient reference counter on an …\nWhether all inherents have been applied.\nStart the execution of a particular block.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert <code>Self</code> into a result.\nReturns <code>true</code> if <code>self</code> is <code>None</code>, <code>None</code> otherwise.\nIs this <code>Ok</code>?\nTrue if the account has some outstanding consumer …\nReturns <code>true</code> if <code>self</code> is <code>Root</code>, <code>None</code> otherwise.\nKill all storage items with a key that starts with the …\nKill all storage items with a key that starts with the …\nKill some items from storage.\nKill some items from storage.\nReturns the <code>spec_version</code> of the last runtime upgrade.\nBlock resource limits configuration structures.\nThe number of consumers over which <code>inc_consumers</code> will …\nThe maximum number of additional consumers expected to be …\nMigrate the reference counting state.\nProvide types to help defining a mock environment when …\nCreates new <code>TransactionExtension</code> to check genesis hash.\nCreate new <code>TransactionExtension</code> to check runtime version.\nCreate new <code>TransactionExtension</code> to check runtime version.\nCreate new <code>TransactionExtension</code> to check transaction …\nCreates new <code>TransactionExtension</code> to check weight of the …\nCreates new <code>TransactionExtension</code> to recalculate the …\nCreate a call with the variant <code>apply_authorized_upgrade</code>.\nCreate a call with the variant <code>authorize_upgrade</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>do_task</code>.\nCreate a call with the variant <code>kill_prefix</code>.\nCreate a call with the variant <code>kill_storage</code>.\nCreate a call with the variant <code>remark</code>.\nCreate a call with the variant <code>remark_with_event</code>.\nCreate a call with the variant <code>set_code</code>.\nCreate a call with the variant <code>set_code_without_checks</code>.\nCreate a call with the variant <code>set_heap_pages</code>.\nCreate a call with the variant <code>set_storage</code>.\nThe number of transactions this account has sent.\nTo be called immediately after an extrinsic has been …\nNote what the extrinsic data of the current extrinsic …\nTo be called immediately after <code>note_applied_extrinsic</code> of …\nTo be called immediately after finishing the …\nNote that all inherents have been applied.\nModule helpers for off-chain calls.\nAn account is being created.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nPrelude to be used alongside pallet macro, for ease of use.\nAn auto-generated getter for <code>ParentHash</code>.\nDoes this transaction pay fees.\nThe phase of the block it happened in.\nIn transaction extension, prepare nonce for account.\nThe number of outstanding provider references for the …\nThe number of other modules that allow this account to …\nThe encoded <code>provides</code> used for this transaction.\nRead and return the events of a specific pallet, as …\nGet the current events deposited by the runtime.\nReclaim the weight for the extrinsic given info and post …\nThe number of outstanding provider and sufficient …\nThe number of outstanding references for the account <code>who</code>.\nInform the system pallet of some additional weight that …\nReturns the remaining weight of the block.\nMake some on-chain remark.\nMake some on-chain remark.\nMake some on-chain remark and emit event.\nMake some on-chain remark and emit event.\nThe encoded <code>requires</code> used for this transaction.\nReset events.\nLog the entire resouce usage report up until this point.\nSimulate the execution of a block sequence up to a …\nSimulate the execution of a block sequence up to a …\nReturn the chain’s current runtime version.\nSet the current block weight. This should only be used in …\nSet the block number to something in particular. Can be …\nSet the code to the given blob.\nSet the new runtime code.\nSet the new runtime code.\nSet the new runtime code without doing any checks of the …\nSet the new runtime code without doing any checks of the …\nSets the index of extrinsic that is currently executing.\nSet the number of pages in the WebAssembly environment’s …\nSet the number of pages in the WebAssembly environment’s …\nSet the parent hash number to something in particular. Can …\nSet some items of storage.\nSet some items of storage.\nSplit an <code>option</code> into two constituent options, as defined …\nThe number of outstanding sufficient references for the …\nThe number of modules that allow this account to exist for …\nThe list of the topics this event has.\nReturns a 32 byte datum which is guaranteed to be …\nWrite code to the storage and emit related events and …\nIn transaction extension, validate nonce for account, on …\nReturns if the runtime was upgraded in comparison of <code>self</code> …\nWeight of this transaction.\nStorage: <code>System::AllExtrinsicsLen</code> (r:1 w:1) Proof: …\nAutogenerated weights for <code>frame_system</code>\nBlock length limit configuration.\nBlock weight limits &amp; base values configuration.\nAn opinionated builder for <code>Weights</code> object.\nContains the error value\nContains the success value\nA result of validating <code>BlockWeights</code> correctness.\n<code>DispatchClass</code>-specific weight configuration.\nAverage block initialization weight cost.\nSet base block weight.\nBase weight of block execution.\nBase weight of single extrinsic of given class.\nConstruct the <code>BlockWeights</code> object.\nConstruct the <code>BlockWeights</code> object or panic if it’s …\nSet parameters for particular class.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate new <code>BlockLength</code> with <code>max</code> for every class.\nMaximal total length in bytes for each extrinsic class.\nMaximal total weight consumed by all kinds of extrinsics …\nMaximal weight of single extrinsic. Should NOT include …\nBlock maximal total weight for all extrinsics of given …\nCreate new <code>BlockLength</code> with <code>max</code> for <code>Operational</code> &amp; <code>Mandatory</code>\nWeight limits for extrinsics of given dispatch class.\nBlock reserved allowance for all extrinsics of a …\nSystem config account data\nSystem config account id\nSystem config nonce\nThe system pallet.\nTrait to implement to give information about types used …\nMigrate from dual <code>u32</code> reference counting to triple <code>u32</code> …\nMigrate from unique <code>u32</code> reference counting to triple <code>u32</code> …\nMigrate from unique <code>u8</code> reference counting to triple <code>u32</code> …\nAn implementation of <code>sp_runtime::traits::Block</code> to be used …\nAn implementation of <code>sp_runtime::traits::Block</code> to be used …\nAn implementation of <code>sp_runtime::traits::Block</code> to be used …\nAn unchecked extrinsic type to be used in tests.\nThe accompanying extrinsics.\nThe accompanying extrinsics.\nThe accompanying extrinsics.\nThe function that should be called.\nThe block header.\nThe block header.\nThe block header.\nInformation regarding the type of extrinsic this is …\nDetails of an account for which a private key is contained …\nA type binding runtime-level <code>Public/Signature</code> pair with …\nInterface for creating a transaction for a call that will …\nInterface for creating a bare extrinsic.\nInterface for creating a bare extrinsic.\nInterface for creating an old-school signed transaction.\nInterface for creating a transaction.\nCommon interface for the <code>CreateTransaction</code> trait family to …\nThe extension.\nThe extrinsic.\nMarker struct used to flag using all supported keys to …\nMarker struct used to flag using any of the supported keys …\nA raw crypto public key wrapped by <code>RuntimeAppPublic</code>.\nA matching raw crypto <code>Signature</code> type.\nA public key that is capable of identifying <code>AccountId</code>s.\nA submission result.\nA submission result.\nA application-specific crypto.\nThe runtime’s call type.\nSubmit a signed transaction to the transaction pool.\nSubmit an unsigned transaction onchain with a signed …\nA message signer.\nA matching <code>Signature</code> type.\nA signature data.\nUtility trait to be implemented on payloads that can be …\nProvides an implementation for signing transaction …\nA wrapper around the types which are used for signing.\nProvides the ability to directly submit signed and unsigned\nReturn a vector of the intersection between all available …\nUse all available keys for signing.\nUse any of the available keys for signing.\nCheck if there are any keys that could be used for signing.\nCreate a new transaction for an authorized call.\nCreate a new transaction for an authorized call.\nCreate a new transaction for an authorized call.\nCreate a new transaction for an authorized call.\nCreate a new transaction for an authorized call.\nCreate a bare extrinsic.\nCreate a bare extrinsic.\nCreate the transaction extension to be used alongside an …\nCreate an inherent.\nCreate an inherent.\nCreate an inherent.\nCreate an inherent.\nCreate an inherent.\nCreate an inherent.\nCreate an inherent.\nCreate an inherent.\nCreate an inherent.\nCreate an inherent.\nAttempt to create signed extrinsic data that encodes call …\nCreate a transaction using the call and the desired …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRuntime-specific <code>AccountId</code>.\nIndex on the provided list of accounts or list of all …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn all available accounts in keystore.\nCreate a new Account instance\nReturn a public key that is expected to have a matching …\nA runtime-specific <code>Public</code> key for that key pair.\nSubmit a signed transaction to the local pool.\nWraps the call into transaction, signs using given account …\nWraps the call into transaction, signs using given account …\nWraps the call into transaction, signs using given account …\nWraps the call into transaction, signs using given account …\nWraps the call into transaction, signs using given account …\nSend an unsigned transaction with a signed payload.\nConstruct and sign given payload.\nSign payload with the private key to maps to the provided …\nSign payload with the private key to maps to the provided …\nSign payload with the private key to maps to the provided …\nSign payload with the private key to maps to the provided …\nSign payload with the private key to maps to the provided …\nSign the payload using the implementor’s provided public …\nSign the payload using the implementor’s provided public …\nSign the payload using the implementor’s provided public …\nSign the payload using the implementor’s provided public …\nSign the payload using the implementor’s provided public …\nSign a message.\nA convenience method to submit an extrinsic onchain.\nSubmits an unsigned call to the transaction pool.\nSubmits an unsigned call to the transaction pool.\nSubmits an unsigned call to the transaction pool.\nSubmits an unsigned call to the transaction pool.\nSubmits an unsigned call to the transaction pool.\nVerify signature against the provided public key.\nVerify signature against the provided public key.\nVerify signature against the provided public key.\nVerify signature against the provided public key.\nVerify signature against the provided public key.\nVerify signature against payload.\nVerify signature against payload.\nVerify signature against payload.\nVerify signature against payload.\nVerify signature against payload.\nUse provided <code>accounts</code> for signing.\nThe full account information for a particular account ID.\nData to be associated with an account (other than …\nData to be associated with an account (other than …\nThe user account identifier type for the runtime.\nThe user account identifier type for the runtime.\nTotal length (in bytes) for all extrinsics put together, …\nIt is signed by nobody, the extrinsic is authorized by the …\nThe basic call filter to use in Origin. All origins are …\nThe basic call filter to use in Origin. All origins are …\nThe Block type used by the runtime. This is used by …\nMap of block numbers to block hashes.\nMaximum number of block number to block hash mappings to …\nMaximum number of block number to block hash mappings to …\nThe maximum length of a block (in bytes).\nThe maximum length of a block (in bytes).\nThe current weight for the block.\nBlock &amp; extrinsics weights: base values and limits.\nBlock &amp; extrinsics weights: base values and limits.\nContains a variant per dispatchable extrinsic that this …\nThe origin filter prevent the call to be dispatched.\n<code>:code</code> was updated.\nConfiguration trait of this pallet.\nThe weight of runtime database operations the runtime can …\nThe weight of runtime database operations the runtime can …\nBased on <code>Config</code>. Auto-generated by …\nError for the System pallet\nEvent for the System pallet.\nWeight information for the transaction extensions of this …\nWeight information for the transaction extensions of this …\nAn extrinsic failed.\nAn extrinsic completed successfully.\nThe weight reclaimed for the extrinsic.\nThe specified <code>Task</code> failed during execution.\nFailed to extract the runtime version from the new runtime.\nCan be used to configure the genesis state of this pallet.\nThe output of the <code>Hashing</code> function.\nThe output of the <code>Hashing</code> function.\nThe hashing system (algorithm) being used in the runtime …\nThe hashing system (algorithm) being used in the runtime …\nWhether all inherents have been applied.\nThe name of specification does not match between the …\nThe specified <code>Task</code> is not valid.\nAn account was reaped.\nStores the <code>spec_version</code> and <code>spec_name</code> of when the last …\nConverting trait to take a source type and convert to …\nConverting trait to take a source type and convert to …\nThe maximum number of consumers allowed on a single …\nThe maximum number of consumers allowed on a single …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nA multi-block migration is ongoing and prevents the …\nThe migrator that is used to run Multi-Block-Migrations.\nThe migrator that is used to run Multi-Block-Migrations.\nA new account was created.\nSuicide called when the account has non-default composite …\nThere is a non-zero reference count preventing the account …\nThis stores the number of previous transactions associated …\nThis stores the number of previous transactions associated …\nIt is signed by nobody, can be either:\nNo upgrade authorized.\nA function that is invoked when an account has been …\nA function that is invoked when an account has been …\nHandler for when a new account has just been created.\nHandler for when a new account has just been created.\nWhat to do if the runtime wants to change the code to …\nWhat to do if the runtime wants to change the code to …\nExposed trait-generic origin type.\nThe <code>Pallet</code> struct, the main type that implements traits …\nProvides information about the pallet setup in the runtime.\nProvides information about the pallet setup in the runtime.\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly before …\nA callback that executes in <em>every block</em> directly before …\nAn invalid authorized upgrade was rejected while trying to …\nOn on-chain remark happened.\nThe system itself ordained this dispatch to happen: this …\nThe aggregated <code>RuntimeCall</code> type.\nThe aggregated <code>RuntimeCall</code> type.\nThe aggregated event type of the runtime.\nThe aggregated event type of the runtime.\nThe <code>RuntimeOrigin</code> type used by dispatchable calls.\nThe <code>RuntimeOrigin</code> type used by dispatchable calls.\nThe aggregated <code>RuntimeTask</code> type.\nThe aggregated <code>RuntimeTask</code> type.\nThe designated SS58 prefix of this chain.\nThe designated SS58 prefix of this chain.\nIt is signed by some public key and we provide the …\nAll migrations that should run in the next runtime upgrade.\nAll migrations that should run in the next runtime upgrade.\nThe specification version is not allowed to decrease …\nWeight information for the extrinsics of this pallet.\nWeight information for the extrinsics of this pallet.\nA <code>Task</code> has finished executing.\nA <code>Task</code> failed during execution.\nA <code>Task</code> has started executing\nThe submitted code is not authorized.\nAn upgrade was authorized.\nGet the chain’s in-code version.\nGet the chain’s in-code version.\nProvide the preimage (runtime binary) <code>code</code> for an upgrade …\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nDefault implementations of <code>DefaultConfig</code>, which can be …\nKill all storage items with a key that starts with the …\nKill some items from storage.\nMake some on-chain remark.\nMake some on-chain remark and emit event.\nSet the new runtime code.\nSet the new runtime code without doing any checks of the …\nSet the number of pages in the WebAssembly environment’s …\nSet some items of storage.\nDefault configurations of this pallet in a parachain …\nDefault configurations of this pallet in a relay-chain …\nDefault configurations of this pallet in a solochain …\nA predefined adapter that covers <code>BlockNumberFor&lt;T&gt;</code> for …\nProvides a viable default config that can be used with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nType alias for the <code>AccountId</code> associated type of system …\nType alias for the <code>BlockNumber</code> associated type of system …\nType alias for the <code>Extrinsic</code> associated type of system …\nType alias for the <code>Header</code>.\nType alias for the <code>Origin</code> associated type of system config.\nType alias for the <code>RuntimeCall</code> associated type of system …\nEnsure that the origin <code>o</code> represents an extrinsic with …\nEnsure that the origin <code>o</code> represents an unsigned extrinsic. …\nEnsure that the origin <code>o</code> represents the root. Returns <code>Ok</code> …\nEnsure that the origin <code>o</code> represents a signed extrinsic …\nEnsure that the origin <code>o</code> represents either a signed …\nWeights for <code>frame_system</code> using the Substrate node and …\nWeight functions needed for <code>frame_system</code>.\nStorage: <code>System::AuthorizedUpgrade</code> (r:1 w:1) Proof: …\nStorage: <code>System::AuthorizedUpgrade</code> (r:0 w:1) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>b</code> is <code>[0, 3932160]</code>.\nThe range of component <code>b</code> is <code>[0, 3932160]</code>.\nStorage: <code>MultiBlockMigrations::Cursor</code> (r:1 w:0) Proof: …\nStorage: UNKNOWN KEY <code>0x3a686561707061676573</code> (r:0 w:1) …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nFrame System benchmarks.\nCalls <code>U::from(self)</code>.\nAdds ability to the Runtime to test against their sample …\nAdds ability to the Runtime to prepare/initialize before …\nAdds ability to the Runtime to do custom validation after …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAdds ability to the Runtime to test against their sample …\nAdds ability to the Runtime to prepare/initialize before …\nAdds ability to the Runtime to do custom validation after …\nThe API to query account nonce.\nGet current account nonce of given <code>AccountId</code>.\nGet current account nonce of given <code>AccountId</code>.\nGet current account nonce of given <code>AccountId</code>.\nAll of them.\nRun the <code>try_state</code>, <code>pre_upgrade</code> and <code>post_upgrade</code> checks.\nNone of them.\nRun no checks.\nRun only pallets who’s name matches the given list.\nRun the <code>pre_upgrade</code> and <code>post_upgrade</code> checks.\nRun a fixed number of them in a round robin manner.\nRuntime api for testing the execution of a runtime upgrade.\nRun the <code>try_state</code> checks.\nWhich state tests to execute.\nSelect which checks should be run when trying a runtime …\nWhether to run any checks at all.\nWhether to run any checks at all.\nExecute the given block, but optionally disable state-root …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSupporting types for try-runtime, testing and dry-running …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ndry-run runtime upgrades, returning the total weight …\nWhether the pre- and post-upgrade checks are selected.\nWhether the try-state checks are selected.\nAll of them.\nRun the <code>try_state</code>, <code>pre_upgrade</code> and <code>post_upgrade</code> checks.\nNone of them.\nRun no checks.\nRun only pallets who’s name matches the given list.\nRun the <code>pre_upgrade</code> and <code>post_upgrade</code> checks.\nRun a fixed number of them in a round robin manner.\nRuntime api for testing the execution of a runtime upgrade.\nRun the <code>try_state</code> checks.\nWhich state tests to execute.\nSelect which checks should be run when trying a runtime …\nExecute the given block, but optionally disable state-root …\ndry-run runtime upgrades, returning the total weight …\nCompute the constant ratio for the thresholds.\nWrite a thresholds module to the path specified.\nCompute the list of bag thresholds.\nLogging target for the mmr gadget.\nA convenience MMR client trait that defines all the type …\nA MMR Gadget.\nGet the block number where the mmr pallet was added to the …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate and run the MMR gadget.\nRetrieved MMR leaves and their proof.\nMMR RPC methods.\nClient implementation for the <code>MmrApi</code> RPC API.\nServer trait implementation for the <code>MmrApi</code> RPC API.\nAPI to interact with MMR pallet.\nBlock hash the proof was generated for.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate an MMR ancestry proof for the given …\nGenerate an MMR ancestry proof for the given …\nGenerates a proof that the <code>prev_block_number</code> is part of …\nGenerates a proof that the <code>prev_block_number</code> is part of …\nGenerate an MMR proof for the given <code>block_numbers</code>.\nGenerate an MMR proof for the given <code>block_numbers</code>.\nGenerate MMR proof for a series of block numbers. If …\nGenerate MMR proof for a series of block numbers. If …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCollects all the methods and subscriptions defined in the …\nSCALE-encoded vector of <code>LeafData</code>.\nReturn the number of MMR blocks in the chain.\nReturn the number of MMR blocks in the chain.\nGet the MMR root hash for the current best block.\nGet the MMR root hash for the current best block.\nReturn the on-chain MMR root hash.\nReturn the on-chain MMR root hash.\nCreate new <code>Mmr</code> with the given reference to the client.\nCreate new <code>LeavesProof</code> from a given vector of <code>Leaf</code> and a …\nSCALE-encoded proof data. See sp_mmr_primitives::LeafProof.\nVerify an MMR <code>proof</code>.\nVerify an MMR <code>proof</code>.\nVerify MMR proof against on-chain MMR for a batch of …\nVerify MMR proof against on-chain MMR for a batch of …\nVerify an MMR <code>proof</code> statelessly given an <code>mmr_root</code>.\nVerify an MMR <code>proof</code> statelessly given an <code>mmr_root</code>.\nVerify MMR proof against given root hash for a batch of …\nVerify MMR proof against given root hash for a batch of …\nAccount has been deemed unscrupulous by the Alliance and …\nOrigin for admin-level operations, like setting the …\nThe Alliance has been initialized, therefore cannot be …\nAlliance disbanded. Includes number deleted members and …\nThe Alliance has not been initialized yet, therefore …\nThe deposit required for submitting candidacy.\nAn ally has been elevated to Fellow.\nAccount is already an elevated (fellow) member.\nAccount is already a member.\nAccount already gave retirement notice\nItem is already listed as unscrupulous.\nA new announcement has been proposed.\nOrigin for making announcements and adding/removing …\nAn on-chain announcement has been removed.\nThe current IPFS CIDs of any announcements.\nInvalid witness data given.\nContains a variant per dispatchable extrinsic that this …\nRepresentation of a CID.\nConfiguration trait of this pallet.\nThe currency used for deposits.\nMaps members to their candidacy deposit.\nWitness data for the <code>disband</code> call.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA Fellow abdicated their voting rights. They are now an …\nFellows must be provided to initialize the Alliance.\nCan be used to configure the genesis state of this pallet.\nInterface required for identity verification.\nThe identity verifier of an Alliance member.\nWhat to do with initial voting members of the Alliance.\n<code>Instance1</code> to be used for instantiable pallets defined with …\nBalance is insufficient for the required deposit.\nThe log target of this pallet.\nThe maximum number of Allies supported by the pallet. Used …\nThe maximum number of announcements.\nThe maximum number of Fellows supported by the pallet. …\nThe maximum number of members per member role.\nMaximum number of proposals allowed to be active in …\nThe maximum number of the unscrupulous items supported by …\nThe maximum length of a website URL.\nA member has been kicked out with its deposit slashed.\nA member has retired with its deposit unreserved.\nA member gave retirement notice and their retirement …\nThe various roles that a member can hold.\nMaps member type to members of each type.\nSome accounts have been initialized as members …\nWhat to do when a member has been added or removed.\nOrigin that manages entry and forcible discharge from the …\nThe announcement is not found.\nThe proposal hash is not found.")