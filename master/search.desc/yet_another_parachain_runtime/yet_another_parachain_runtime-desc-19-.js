searchState.loadedDescShard("yet_another_parachain_runtime", 19, "Returns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nNew governance configurations for the Kusama runtime.\nTrigger the governance fallback.\nThe block header.\nImplements the weight types for the elections module and a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.\nBlock justification.\nThe <code>AccountId</code> of the sudo key.\nInitial list of validator at genesis representing by their …\nKill all storage items with a key that starts with the …\nKill some items from storage.\nCalls <code>list_benchmark</code> with all configs from …\nThe runtime migrations per release.\nNative version.\nList of (AccountId, ValidatorId, Keys) that will be …\nCreate with system none origin and …\nThe block number.\nThe initial operating mode of the pallet.\nThe parent hash.\nInformation regarding the type of extrinsic this is …\nMake some on-chain remark.\nMake some on-chain remark and emit event.\nCreate with system root origin and …\nThe default version to encode outgoing XCM messages with.\nSet the current time.\nSet the new runtime code.\nSet the new runtime code without doing any checks of the …\nSet a solution in the queue, to be handed out to the …\nSet the number of pages in the WebAssembly environment’s …\nSet a new value for <code>MinimumUntrustedScore</code>.\nSet some items of storage.\nCreate with system signed origin and …\nThe state trie merkle root\nSubmit a solution for the signed phase.\nSubmit a solution for the unsigned phase.\nThe default versioned locations to support at genesis.\nTransfer the entire transferable balance from the caller …\nTransfer some liquid free balance to another account.\nSame as the <code>transfer_allow_death</code> call, but with a check …\nUpgrade a specified account.\nXCM configurations for Westend.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nOrigin for starting auctions.\nOrigin able to spend up to 5,000 KSM from the treasury at …\nOrigin able to spend up to 5 KSM from the treasury at once.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nOrigin commanded by Polkadot Fellows (3rd Dan fellows or …\nOrigin commanded by rank 1 of the Polkadot Fellowship and …\nOrigin commanded by rank 2 of the Polkadot Fellowship and …\nOrigin commanded by rank 3 of the Polkadot Fellowship and …\nOrigin commanded by rank 4 of the Polkadot Fellowship and …\nOrigin commanded by rank 5 of the Polkadot Fellowship and …\nOrigin commanded by rank 6 of the Polkadot Fellowship and …\nOrigin commanded by rank 7 of the Polkadot Fellowship and …\nOrigin commanded by rank 8 of the Polkadot Fellowship and …\nOrigin commanded by rank 9 of the Polkadot Fellowship and …\nOrigin for managing the composition of the fellowship.\nOrigin commanded by Polkadot Experts (5th Dan fellows or …\nOrigin commanded by any members of the Polkadot Fellowship …\nOrigin commanded by Polkadot Masters (7th Dan fellows of …\nOrigin for managing the registrar.\nOrigin able to force slot leases.\nOrigin able to spend up to 500 KSM from the treasury at …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nOrigin able to cancel referenda.\nOrigin able to kill referenda.\nOrigin able to spend up to 50 KSM from the treasury at …\nOrigin able to spend up to 1 KSM from the treasury at once.\nOrigin for cancelling slashes.\nOrigin for spending (any amount of) funds.\nOrigin able to dispatch a whitelisted call.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnreleased migrations. Add new ones here:\nWe let locations alias into child locations of their own. …\nThe barriers one of which must be passed for an XCM …\nThe base fee for the message delivery fees.\nThe asset ID for the asset that we use to pay for message …\nType to convert the <code>FellowshipAdmin</code> origin to a Plurality …\nType to convert the <code>GeneralAdmin</code> origin to a Plurality …\nConverts a local signed origin into an XCM location. Forms …\nType to convert a pallet <code>Origin</code> type value into a <code>Location</code> …\nType to convert the <code>StakingAdmin</code> origin to a Plurality …\nWestend does not have mint authority anymore after the …\nType to convert the <code>Treasurer</code> origin to a Plurality …\nLocations that will not be charged fees in the executor, …\nThe XCM router. When we want to send an XCM message, we …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWestend Treasury pallet instance.\nMoney matters.\nFee-related.\nSystem Parachains.\nTime and blocks.\nExpose the auto generated weight files.\nXCM protocol related constants.\nThe existential deposit.\nA fixed point representation of a number in the range [0, 1…\nThe block saturation level. Fees will be updates based on …\nHandles converting a weight scalar to a fee value, based …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalculates the fee from the passed <code>weight</code> according to the …\nNetwork’s Asset Hub parachain ID.\nAH-next - temporary AH clone.\nBridgeHub parachain ID.\nBrokerage parachain ID.\nCollectives parachain ID.\nEncointer parachain ID.\nPeople Chain parachain ID.\nAll system parachains of Westend.\nCoretime constants\nCoretime timeslice period in blocks WARNING: This constant …\nTime to execute an empty block. Calculated by multiplying …\nTime to execute a NO-OP extrinsic, for example …\n<code>ParityDB</code> can be enabled with a feature flag, but is still …\nBy default, Substrate uses <code>RocksDB</code>, so this will be the …\nTHIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK …\nTHIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK …\nTime to execute an empty block. Calculated by multiplying …\nTime to execute a NO-OP extrinsic, for example …\n<code>ParityDB</code> can be enabled with a feature flag, but is still …\nBy default, Substrate uses <code>RocksDB</code>, so this will be the …\nPluralistic bodies existing within the consensus.\nDetermines the final set of paths to use for the PVF …\nCollators operate on a parachain.\nA collator eviction policy - how fast to evict collators …\nThe collator protocol subsystem.\nNo protocol side, just disable it.\nWhat side of the collator protocol is being engaged\nValidators operate on the relay chain.\nExperimental variant of the validator side. Do not use in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nHow fast to evict collators who are inactive.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStart the collator protocol. If <code>id</code> is <code>Some</code> this is a …\nHow fast to evict peers which don’t declare their para.\nParachain collator pair.\nOverride for <code>HOLD_OFF_DURATION</code> constant .\nAn eviction policy for inactive peers or validators.\nList of invulnerable collators which is handled with a …\nThe keystore holding validator keys.\nThe keystore holding validator keys.\nPrometheus metrics for validators.\nPrometheus metrics for validators.\nMetrics.\nLocal peer id.\nReceiver for v2 collation fetching requests.\nAlias to the opaque account ID type for this chain, …\nThe type for looking up accounts. We don’t expect more …\nAlias to the public key used for this chain, actually a …\nThe balance of an account. 128-bits (or 38 significant …\nBlake2-256 Hash implementation.\nBlock type.\nBlock ID.\nThe block number type used by Polkadot. 32-bits will allow …\nUnit type wrapper around <code>Hash</code> that represents a candidate …\nIdentifier for a chain. 32-bit should be plenty.\nA message sent from the relay-chain down to a parachain.\nAn ECDSA/SECP256k1 signature.\nAn Ed25519 signature.\nAn ECDSA/SECP256k1 signature but with a different address …\nA hash of some data used by the relay chain.\nIdentify by block header hash.\nAbstraction around hashing\nHeader type.\nA wrapped version of <code>DownwardMessage</code>. The difference is …\nAn HRMP message seen from the perspective of a recipient.\nAn instant or duration in time.\nIndex of a transaction in the relay chain. 32-bit should …\nIdentify by block number.\nAn HRMP message seen from the perspective of a sender.\nThe hash type produced.\nThe information that goes alongside a …\nAlias to type for a signature for a transaction on the …\nAn Sr25519 signature.\nSimple blob to hold an extrinsic without committing to its …\nThe message payload.\nThe message payload.\nA chain-specific digest of data useful for light clients …\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nProduce the hash of some byte-slice.\nProduce the hash of some byte-slice.\nProduce the hash of some byte-slice.\nProduce the hash of some byte-slice.\nProduce the hash of some byte-slice.\nProduce the hash of some byte-slice.\nProduce the hash of some byte-slice.\nProduce the hash of some codec-encodable value.\nProduce the hash of some codec-encodable value.\nProduce the hash of some codec-encodable value.\nProduce the hash of some codec-encodable value.\nProduce the hash of some codec-encodable value.\nProduce the hash of some codec-encodable value.\nProduce the hash of some codec-encodable value.\nThe block header.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe actual downward message to processes.\nThe block number.\nThe ordered Patricia tree root of the given <code>input</code>.\nThe parent hash.\nThe para that will get this message in its downward …\nThe block number at which these messages were put into the …\nThe block number at which this message was sent. …\nThe state trie merkle root\nThe Patricia tree root of the given mapping.\nThe dispute distribution subsystem.\nDispute Distribution metrics.\nRate limit on the <code>receiver</code> side.\nRate limit on the <code>sender</code> side.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance of the dispute distribution.\nCreate new dummy metrics, not reporting anything.\nStatements have been imported.\nIncrement counter on served disputes.\nIncrement counter on finished request sending.\nGet a timer to time request/response duration.\nBad payload in reconstructed bytes.\nBranch out of bounds.\nAn iterator that yields merkle branches and chunk data for …\nChunk index out of bounds.\nUnable to decode reconstructed bytes.\nErrors in erasure coding.\nInvalid branch proof.\nChunks not of uniform length or the chunks are empty.\nNot enough chunks present.\nCannot encode something for zero or one validator\nToo many chunks present.\nReturned when there are too many validators.\nAn uneven byte-length of a shard is not valid for <code>GF(2^16)</code> …\nUnknown error\nUnknown error\nCannot reconstruct: wrong number of validators.\nVerify a merkle branch, yielding the chunk hash meant to …\nConstruct a trie from chunks of an erasure-coded value. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nObtain erasure-coded chunks, one for each validator.\nObtain erasure-coded chunks for v1 <code>AvailableData</code>, one for …\nReconstruct decodable data from a set of chunks.\nReconstruct the available data from the set of systematic …\nReconstruct the v1 available data from the set of …\nReconstruct the v1 available data from a set of chunks.\nObtain a threshold of chunks that should be enough to …\nGet the trie root.\nObtain the threshold of systematic chunks that should be …\nThe Gossip Support subsystem.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate a new instance of the <code>GossipSupport</code> subsystem.\nWhether a node is an authority or not.\nMetrics for the network bridge.\nThe network bridge subsystem - network receiving side.\nThe network bridge subsystem.\nNode is not an authority.\nNode is authority.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new network bridge subsystem with underlying …\nCreate a new network bridge subsystem with underlying …\nGet <code>NonDefaultSetConfig</code>s for all available peer sets, at …\nCollation Generation Subsystem\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate a new instance of the <code>CollationGenerationSubsystem</code>.\nThe approval voting subsystem.\nTrait for providing approval voting subsystem with work.\nInformation about the world assignments are being produced …\nA trait for producing and checking assignments.\nConfiguration for the approval voting subsystem\nApproval Voting metrics.\nApproval DB accessors and writers for on-disk persisted …\nThe assignment public keys for validators.\nCheck the assignment cert for the given relay VRF story …\nThe column family in the DB where approval-voting data is …\nCompute the assignments for the given relay VRF story.\nAssignment criteria VRF generation and checking.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe number of availability cores used by the protocol …\nThe number of delay tranches in total.\nThe number of samples we do of <code>relay_vrf_modulo</code>.\nRevert to the block corresponding to the specified <code>hash</code>. …\nThe slot duration of the consensus algorithm, in …\nThe groups of validators assigned to each core.\nCreate a new approval voting subsystem with the given …\nCreate a new approval voting subsystem with the given …\nThe zeroth delay tranche width.\nCommon helper functions for all versions of …\nVersion 1 of the DB schema.\nVersion 2 of the DB schema.\nVersion 3 of the DB schema.\nThe database config.\n<code>DbBackend</code> is a concrete implementation of the higher-level …\nContains the error value\nErrors while accessing things from the DB.\nContains the success value\nResult alias for DB errors.\nA range from earliest..last block number stored within the …\nThe column family in the database where data is stored.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn all blocks which have entries in the DB, ascending, …\nLoad a block entry from the aux store.\nLoad a blocks-at-height entry for a given block number.\nLoad a candidate entry from the aux store in current …\nLoad the stored-blocks key from the state.\nCreate a new <code>DbBackend</code> with the supplied key-value store …\nMetadata regarding approval of a particular candidate …\nMetadata regarding approval of a particular block, by way …\nMetadata regarding approval of a particular candidate.\nDetails pertaining to our assignment on a block.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRandom bytes derived from the VRF submitted within the …\nMetadata regarding approval of a particular candidate …\nConvenience type definition\nMetadata regarding approval of a particular block, by way …\nMetadata regarding approval of a particular candidate.\nDetails pertaining to our assignment on a block.\nMetadata regarding a specific tranche of assignments for a …\nOur assignment certificate.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad a block entry from the aux store in v1 format.\nLoad a candidate entry from the aux store in v1 format.\nApproval DB migration helpers.\nRandom bytes derived from the VRF submitted within the …\nThe tranche for which the assignment refers to.\nWhether the assignment has been triggered already.\nOur validator index for the session in which the …\nMigrates <code>OurAssignment</code>, <code>CandidateEntry</code> and <code>ApprovalEntry</code> …\nMetadata regarding approval of a particular candidate …\nConvenience type definition\nMetadata regarding approval of a particular block, by way …\nMetadata regarding approval of a particular candidate.\nContext needed for creating an approval signature for a …\nMetadata about our approval signature\nDetails pertaining to our assignment on a block.\nMetadata regarding a specific tranche of assignments for a …\nThe candidate hash, to be included in the signature.\nOur assignment certificate.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad a block entry from the aux store in v2 format.\nLoad a candidate entry from the aux store in v2 format.\nApproval DB migration helpers.\nRandom bytes derived from the VRF submitted within the …\nThe latest tick we have to create and send the approval.\nThe signature for the candidates hashes pointed by indices.\nThe indices of the candidates signed in this approval.\nThe tranche for which the assignment refers to.\nWhether the assignment has been triggered already.\nOur validator index for the session in which the …\nMigrates <code>BlockEntry</code>, <code>CandidateEntry</code>, <code>ApprovalEntry</code> and …\nA trait for producing and checking assignments.\nInformation about the world assignments are being produced …\nCore index is out of bounds.\nInvalid arguments\nAssignment invalid.\nInvalid assignment key.\nFailure conditions when checking an assignment cert.\nNode is in backing group.\nAssignment vrf check resulted in 0 assigned cores.\nDetails pertaining to our assignment on a block.\nSample index is out of bounds.\nDelay core index mismatch.\nDelay output mismatch.\nModulo core index mismatch.\nModulo output mismatch.\nThe validator index is out of bounds.\nThe assignment public keys for validators.\nReturns a reference to the assignment cert.\nCheck the assignment cert for the given relay VRF story …\nCompute the assignments for a given block. Returns a map …\nCompute the assignments for the given relay VRF story.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the assignment cert.\nMarks the assignment as triggered.\nThe number of availability cores used by the protocol …\nThe number of delay tranches in total.\nCreate a new <code>OurAssignment</code>.\nThe number of samples we do of <code>relay_vrf_modulo</code>.\nReturns the delay tranche of the assignment.\nReturns whether the assignment has been triggered.\nThe groups of validators assigned to each core.\nReturns the validator index of the assignment.\nThe zeroth delay tranche width.\nThe number of workers used for running the …\nThe approval voting parallel subsystem.\nJust a wrapper for implementing …\nThe default channel size for the workers, can be …\nHandles that are used by an worker to receive work.\nJust a wrapper for implementing …\nGet the approval distribution metrics.\nGet the approval voting metrics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe Metrics for Approval Voting Parallel Subsystem.\nTry to register the metrics.\nCreate a new approval voting subsystem with the given …\nCreate a new approval voting subsystem with the given …\nThe meters to watch.\nApproval Voting parallel metrics.\nA metrics watcher that watches the meters and updates the …\nCollect all the metrics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new metrics watcher.\nWatch the meters of a worker with this name.\nAn implementation of the Availability Store subsystem.\nConfiguration for the availability store.\nAvailability metrics.\nThe column family for availability data and chunks.\nThe column family for availability store meta information.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHow long finalized data should be kept (in hours).\nCreate a new <code>AvailabilityStoreSubsystem</code> with a given …\nThe candidate backing subsystem.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate a new instance of the <code>CandidateBackingSubsystem</code>.\nThe bitfield signing subsystem.\nErrors we may encounter in the course of executing the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance of the <code>BitfieldSigningSubsystem</code>.\nThe candidate validation subsystem.\nConfiguration for the candidate validation subsystem\nThe path where candidate validation can store compiled …\nPath to the execution worker binary\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe version of the node. <code>None</code> can be passed to skip the …\nPath to the preparation worker binary\nThe maximum number of pvf execution workers.\nThe absolute number of pvf workers that can be spawned in …\nThe maximum number of pvf workers that can be spawned in …\nWhether the node is attempting to run as a secure …\nCreate a new <code>CandidateValidationSubsystem</code>.\nThe Chain API Subsystem implementation.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate a new Chain API subsystem with the given client.\nThe chain selection subsystem.\nA clock used for fetching the current timestamp.\nConfiguration for the chain selection subsystem.\nThe interval, in seconds to check for stagnant blocks.\nMode of the stagnant check operations: check and prune or …\nThe column in the database that the storage should use.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a <code>StagnantCheckInterval</code> which never triggers.\nCreate a new instance of the subsystem with the given …\nCreate a new stagnant-check interval wrapping the given …\nRevert to the block corresponding to the specified <code>hash</code>. …\nHow often to check for stagnant blocks.\nMode of stagnant checks\nGet the current timestamp.\nConfiguration for the dispute coordinator subsystem.\nAn implementation of the dispute coordinator subsystem.\nThe data column in the store to use for dispute data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck whether a dispute for the given candidate could be …\nCreate a <code>DisputeMessage</code> to be sent to <code>DisputeDistribution</code>.\nCreate a new instance of the subsystem.\nProvides the parachains inherent data.\nCreate a new instance of the <code>ParachainsInherentDataProvider</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>Self</code>.\nThe prospective parachains subsystem.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate a new instance of the <code>ProspectiveParachainsSubsystem</code>…\nProvisioner metrics.\nA per-relay-parent state for the provisioning subsystem.\nThe provisioner subsystem.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance of the <code>ProvisionerSubsystem</code>.\nThe job process (not the worker) has died for one of the …\nThe worker process (not the job) has died during …\nThe response from the worker is received, but the worker …\nCompilation triggered by a candidate validation request.\nConfiguration for the validation host.\nThe artifact is corrupted, re-prepare the artifact and try …\nHost could not clear the worker cache after a job.\nHost could not create a hard link to the artifact path.\nCould not create a pipe between the worker and a child …\nCode blob failed to decompress\nCould not find or open compiled artifact file.\nThe temporary file for the artifact could not be created …\nThis priority is used for requests that are required to be …\nThe name of binary spawned to execute a PVF\nThe execution deadline of allowed_ancestry_len + 1 has …\nThe size of incoming message queue\nPVF execution (compilation is not included) took more time …\nSome communication error occurred with the host.\nPreparation or execution issue caused by an internal …\nSome internal error occurred.\nThe error was raised because the candidate is invalid. …\nA description of an error raised during executing a PVF …\nAn IO error occurred. This state is reported by either the …\nA multiple of the job timeout (in CPU time) for which we …\nThe preparation job process died, due to OOM, a seccomp …\nAn unexpected error has occurred in the preparation job.\nAn unexpected error occurred in the job process and we can…\nSome error occurred when interfacing with the kernel.\nSome error occurred when interfacing with the kernel.\nThe log target for this crate.\nValidation host metrics.\nSome non-deterministic preparation error occurred.\nNormal priority for things that do not require immediate …\nMemory limit reached\nThe name of binary spawned to prepare a PVF artifact\nProof-of-validity failed to decompress correctly\nPossibly transient issue that may resolve after retries. …\nPossibly transient issue that may resolve after retries.\nA prechecking job.\nCompilation failed for the given PVF.\nDeterministic preparation issue. In practice, most of the …\nAn error that occurred during the prepare part of the PVF …\nThe kind of prepare job.\nPreparation statistics, including the CPU time and memory …\nDuring the prevalidation stage of preparation an issue was …\nA priority assigned to preparation of a PVF.\nA struct that carries the exhaustive set of data to …\nThe response from the worker is received, but the file …\nInstantiation of the WASM module instance failed.\nInstantiation of the WASM module instance failed during an …\nStatus of security features on the current system.\nFailed to prepare the PVF due to the time limit.\nA error raised during validation of the candidate.\nA handle to the async process serving the validation host …\nThe candidate is reported to be invalid by the execution …\nThe root directory where the prepared artifacts can be …\nWhether we are able to call <code>clone</code> with all sandboxing …\nWhether the landlock features we use are fully available …\nWhether the seccomp features we use are fully available on …\nWhether we are able to unshare the user namespace and …\nReturns validation code hash\nThe CPU time that elapsed for the preparation job.\nExecute PVF with the given code, execution timeout, …\nThe path to the program that can be used to spawn the …\nThe time allotted for an execute worker to spawn and …\nThe maximum number of execute workers that can run at the …\nReturns executor params\nRead some data prefixed by its length from <code>r</code>.\nWrite some data prefixed by its length into <code>w</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns an instance of the PVF out of the given PVF code …\nCreates a structure for tests.\nCreates a structure for tests.\nCreates a structure for tests.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nUtility to get the version of a worker, used for version …\nSends a signal to the validation host requesting to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>self</code> is <code>Critical</code>\nReturns whether this is a deterministic error, i.e. one …\nReturns PVF code blob\nThe observed memory statistics for the preparation job.\nCreate a new instance of the configuration.\nThe version of the node. <code>None</code> can be passed to skip the …\nThe decompressed Wasm code length observed during the …\nPrecheck PVF with the given code, i.e. verify that it …\nReturns preparation kind.\nReturns preparation timeout.\nThe path to the program that can be used to spawn the …\nThe time allotted for a prepare worker to spawn and report …\nThe absolute number of workers that can be spawned in the …\nThe maximum number of workers that can be spawned in the …\nReplace the artifact checksum with a new one.\nWhether Secure Validator Mode is enabled. This mode …\nWhether the node is attempting to run as a secure …\nAvailable security features, detected by the host during …\nStart the validation host.\nVarious utilities for testing.\nSends a signal to the validation host requesting to update …\nReturns validation code bomb limit.\nThe name of binary spawned to execute a PVF\nThe name of binary spawned to prepare a PVF artifact\nCreates a new PVF which artifact id can be uniquely …\nRetrieves the worker paths and builds workers as needed.\nA function that emulates the stitches together behaviors …\nPVF pre-checking subsystem.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCPU Time Used by The Whole Process\nStatus of security features on the current system.\nA handshake with information for the worker.\nReturns the total amount of CPU time used from the program …\nWhether we are able to call <code>clone</code> with all sandboxing …\nWhether the landlock features we use are fully available …\nWhether the seccomp features we use are fully available on …\nWhether we are able to unshare the user namespace and …\nCompute the checksum of the given artifact.\nUse this macro to declare a <code>fn main() {}</code> that will create …\nReturns the amount of CPU time used from the previous …\nReturns the amount of CPU time used from the previous …\nInterface to the Substrate Executor\nRead some data prefixed by its length from <code>r</code>. Sync version …\nWrite some data prefixed by its length into <code>w</code>. Sync …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet current CPU time used by a process\nWhether Secure Validator Mode is enabled. This mode …\nReturns the amount of CPU time used from the previous …\nGet current CPU time used by a process process\nFunctionality common to both prepare and execute workers.\nShared functions for getting the known worker files.\nThe response from the worker is received, but the worker …\nHost could not clear the worker cache after a job.\nHost could not create a hard link to the artifact path.\nCould not create a pipe between the worker and a child …\nCode blob failed to decompress\nCould not find or open compiled artifact file.\nThe temporary file for the artifact could not be created …\nContains the error value\nContains the error value\nContains the error value\nError type.\nSome communication error occurred with the host.\nSome internal error occurred.\nAn IO error occurred. This state is reported by either the …\nThe preparation job process died, due to OOM, a seccomp …\nAn unexpected error has occurred in the preparation job.\nSome error occurred when interfacing with the kernel.\nSome error occurred when interfacing with the kernel.\nSome non-deterministic preparation error occurred.\nContains the success value\nContains the success value\nContains the success value\nMemory limit reached\nResult of prechecking PVF performed by the validation …\nCompilation failed for the given PVF.\nAn error that occurred during the prepare part of the PVF …\nResult of PVF preparation propagated all the way back to …\nResult of PVF preparation from a worker, with checksum of …\nDuring the prevalidation stage of preparation an issue was …\nThe response from the worker is received, but the file …\nInstantiation of the WASM module instance failed.\nFailed to prepare the PVF due to the time limit.\nThe artifact is corrupted, re-prepare the artifact and try …\nContains the error value\nA request to execute a PVF\nThe payload of the one-time handshake that is done when a …\nSome internal error occurred.\nThe candidate is invalid.\nThe job process has died. We must kill the worker just in …\nAn unexpected error occurred in the execution job process. …\nAn unexpected error occurred in the job process, e.g. …\nThe successful response from a job on the execution worker.\nThe result of a job on the execution worker.\nThe job timed out.\nSome error occurred when interfacing with the kernel.\nContains the success value\nPoV decompression failed\nA possibly transient runtime instantiation error happened …\nSince the job can return any exit status it wants, we have …\nAn error occurred in the worker process.\nThe response from the execution worker.\nChecksum of the artifact to execute.\nThe amount of CPU time taken by the job.\nExecution timeout.\nThe executor parameters.\nCreates an invalid response from a context <code>ctx</code> and a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe response from the execute job process.\nProof-of-validity.\nThe uncompressed PoV size.\nPersisted validation data.\nCreates a may retry response from a context <code>ctx</code> and a …\nThe result of parachain validation.\nConstructs the runtime for the given PVF, given the …\nExecutes the given PVF in the form of a compiled artifact …\nTakes the default config and overwrites any settings with …\nRuns preparation on the given runtime blob. If successful, …\nRuns the prevalidation on the given code. Returns a …\nCompilation triggered by a candidate validation request.\nStatistics of collected memory metrics.\nHelper struct to contain all the memory stats, including …\nA prechecking job.\nThe kind of prepare job.\nPreparation statistics, including the CPU time and memory …\nResult of PVF preparation if successful.\nResult from prepare worker if successful.\nTotal allocated memory, in bytes.\nChecksum of the compiled PVF.\nChecksum of the compiled PVF.\nThe CPU time that elapsed for the preparation job.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ru_maxrss</code> from <code>getrusage</code>. <code>None</code> if an error occurred.\nThe observed memory statistics for the preparation job.\nMemory stats from <code>tikv_jemalloc_ctl</code>, polling-based and not …\nThe decompressed Wasm code length observed during the …\nCanonical path to the compiled artifact.\nPeak allocation in bytes measured by tracking allocator\nTotal resident memory, in bytes.\nSize in bytes\nStats of the current preparation run.\nStats of the current preparation run.\nA struct that carries the exhaustive set of data to …\nSome allowed overhead that we account for in the “CPU …\nA wrapper around a file descriptor used to encapsulate and …\nReturns the raw file descriptor associated with this <code>PipeFd</code>\nLoop that runs in the CPU time monitor thread on prepare …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nCreates a new <code>PipeFd</code> instance from a raw file descriptor.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalculate the total CPU time from the given <code>usage</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet a job response.\nInitializes the worker process, then runs the given event …\nFunctionality for securing workers.\nAttempt to convert an opaque panic payload to a string.\nFunctionality related to threads spawned by the workers.\nFunctionality for securing workers by unsharing some …\nRequire env vars to have been removed when spawning the …\nFunctionality for securing the job processes spawned by …\nThe landlock docs say it best:\nFunctionality for sandboxing workers by restricting their …\nContains the error value\nContains the success value\nRuns a check for unshare-and-change-root and returns an …\nTry to enable for the given kind of worker.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nRuns a check for clone(2) with all sandboxing flags and …\nTry to run clone(2) on the current worker.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nContains the error value\nAll requested restrictions are enforced.\nLandlock ABI version. We use ABI V1 because:\nThe running system doesn’t support Landlock or a subset …\nContains the success value\nSome requested restrictions are enforced, following a …\nEnforcement status of a ruleset.\nRuns a check for landlock in its own thread, and returns …\nTry to enable landlock for the given kind of worker.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nRuns a check for seccomp in its own thread, and returns an …\nTry to enable seccomp for the given kind of worker.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nHelper type.\nContains the outcome of waiting on threads, or <code>Pending</code> if …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGets a condvar initialized to <code>Pending</code>.\nCalls <code>U::from(self)</code>.\nRuns a worker thread. Will run the requested function, and …\nRuns a worker thread with the given stack size. See …\nBlock the thread while it waits on the condvar.\nBlock the thread while it waits on the condvar or on a …\nThe number of threads for the child process: 1 - Main …\nError type.\nExecutes the given PVF in the form of a compiled artifact …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe entrypoint that the spawned execute worker should …\nContains the bytes for a successfully compiled artifact.\nThe number of threads for the child process: 1 - Main …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a <code>CompiledArtifact</code>.\nThe entrypoint that the spawned prepare worker should …\nThe <code>RuntimeApiSubsystem</code>. See module docs for more details.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate a new Runtime API subsystem wrapping the given …\nCreate a stream of ticks with a defined cycle duration.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the custom profiling closure that we’ll apply to …\nThis module reexports Prometheus types and defines the …\nCyclic metric collection support.\nCreate a new metronome source with a defined cycle …\nRuntime Metrics helpers.\nA duration type to represent an approximate span of time\nMeasure the time of flight between insertion and removal …\nA peek into the inner state of a meter.\nA receiver tracking the messages consumed by itself.\nThe sender component, tracking the number of items sent …\nA readout of sizes from the meter. Note that it is …\nError when receiving from a closed bounded channel\nA bounded channel error\nA bounded channel error when trying to send a message …\nA receiver tracking the messages consumed by itself.\nThe sender component, tracking the number of items sent …\nReturns the absolute difference between two <code>Duration</code>s\nReturns the number of days represented by this duration\nReturns the duration as a floating point number, …\nReturns the number of minutes represented by this duration\nReturns the number of whole microseconds represented by …\nReturns the number of whole milliseconds represented by …\nReturns the number of minutes represented by this duration\nReturns the number of whole nanoseconds represented by …\nReturns the number of whole seconds represented by this …\nReturn this duration as a number of “ticks”.\nHow many times the caller blocked when sending messages.\nCreate a pair of <code>MeteredSender</code> and <code>MeteredReceiver</code>. No …\nAn approximation of the queue size.\nCreate a pair of <code>MeteredSender</code> and <code>MeteredReceiver</code>. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new Duration from the specified number of days\nCreates a new Duration from the specified number of hours\nCreates a new Duration from the specified number of …\nCreates a new Duration from the specified number of minutes\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreates a new Duration from the specified number of seconds\nCreates a new Duration from the specified number of “…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExtract the inner <code>T</code> value.\nCalls <code>U::from(self)</code>.\nReturns the inner value.\nReturns the current number of messages in the channel …\nReturns the current number of messages in the channel …\nGet an updated accessor object for all metrics collected.\nGet an updated accessor object for all metrics collected.\nGet an updated accessor object for all metrics collected.\nGet an updated accessor object for all metrics collected.\nCreates a new <code>Duration</code> from the specified number of …\nMetered variant of oneshot channels to be able to extract …\nSend message in priority channel (if configured), wait …\nCount the number of items queued up inside the channel.\nThe amount of messages received on the channel, in …\nSend message in bulk channel, wait until capacity is …\nThe amount of messages sent on the channel, in aggregate.\nDon’t rely on the unreliable size hint.\nDon’t rely on the unreliable size hint.\nReturns the nanosecond precision represented by this …\nTime of flight in micro seconds (us)\nAttempt to receive the next item. This function returns:\nAttempt to receive the next item.\nAttempt to send message or fail immediately.\nAttempt to send message or fail immediately.\nCreate a wrapped <code>mpsc::channel</code> pair of <code>MeteredSender</code> and …\nAttempt to send message or fail immediately.\nA dummy trait that allows implementing <code>measurements</code> for …\nObtained measurements by the <code>Receiver</code> side of the …\nOneshot receiver, created by <code>channel</code>.\nOneshot sender, created by <code>channel</code>.\nA wrapping type for the actual type <code>T</code> that is sent with the\nProvides the reason for termination.\nAccess the cancellation object.\nCreate a new pair of <code>OneshotMetered{Sender,Receiver}</code>.\nObtain the duration of a finished or canceled <code>oneshot</code> …\nObtain the duration of a finished or canceled <code>oneshot</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the wrapper type into it’s inner value.\nCalls <code>U::from(self)</code>.\nCheck the cancellation state.\nVerify if the <code>receiver</code> is connected to the <code>sender</code> <code>Self</code>.\nObtain a set of measurements represented by the …\nPoll if the thing is already canceled.\nObtain the reason to the channel termination.\nSend a value.\nAttempts to receive a message outside of the context of a …\nSubsystem- or job-specific Prometheus metrics.\nConvenience method to register metrics in the optional …\nConvenience method to register metrics in the optional …\nConvenience method to register metrics in the optional …\nTry to register metrics in the Prometheus registry.\nA duplicate metric collector has already been registered.\nThe underlying implementation for <code>Counter</code> and <code>IntCounter</code>.\nThe underlying implementation for <code>CounterVec</code> and …\nA atomic float.\nThe underlying implementation for <code>Gauge</code> and <code>IntGauge</code>.\nThe underlying implementation for <code>GaugeVec</code> and <code>IntGaugeVec</code>.\nA <code>Metric</code> counts individual observations from an event or …\nA struct that bundles the options for creating a <code>Histogram</code> …\nA <code>Collector</code> that bundles a set of Histograms that all …\nHttp request error.\nHyper internal error.\nA atomic signed integer.\nThe label cardinality was inconsistent.\ni/o error.\nAn error containing a <code>std::io::Error</code>.\nA source of values for a <code>SourcedMetric</code>.\nAn error message which is only a string.\nThe type of the collected values.\nA struct that bundles the options for creating most <code>Metric</code> …\nThe error types for prometheus.\nA struct for registering Prometheus collectors, collecting …\nA counter whose values are obtained from an existing …\nA gauge whose values are obtained from an existing source.\nA metric whose values are obtained from an existing source,\nA atomic unsigned integer.\nAdd the given value to the gauge. (The value can be …\n<code>buckets</code> set the buckets.\nDefines the buckets into which observations are counted. …\nCollects the current values of the metrics from the source.\nA container holding various options.\n<code>const_label</code> adds a const label.\n<code>const_label</code> adds a const label.\n<code>const_labels</code> sets the const labels.\n<code>const_labels</code> sets the const labels.\nconst_labels are used to attach fixed labels to this …\nDecrease the gauge by 1.\nCreate <code>count</code> buckets, where the lowest bucket has an upper …\n<code>fq_name</code> returns the fq_name.\n<code>fq_name</code> returns the fq_name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\n<code>gather</code> calls the Collect method of the registered …\nReturn the counter value.\nReturn the gauge value.\nReturn count of all samples.\nReturn accumulated sum of all samples.\nhelp provides information about this metric. Mandatory!\nCreate a <code>HistogramOpts</code>.\nIncrease the counter by 1.\nIncrease the gauge by 1.\nIncrease the given value to the counter.\nIncrement the value by a given amount with the provided …\nInitializes the metrics context, and starts an HTTP server …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate <code>count</code> buckets, each <code>width</code> wide, where the lowest …\nReturn a <code>GenericLocalCounter</code> for single thread usage.\nReturn a <code>LocalHistogram</code> for single thread usage.\nnamespace, subsystem, and name are components of the …\n<code>namespace</code> sets the namespace.\n<code>namespace</code> sets the namespace.\nnamespace, subsystem, and name are components of the …\nCreates a new metric that obtains its values from the …\nCreate a <code>GenericCounter</code> with the <code>name</code> and <code>help</code> arguments.\nCreate a <code>GenericGauge</code> with the <code>name</code> and <code>help</code> arguments.\nCreate a <code>HistogramOpts</code> with the <code>name</code> and <code>help</code> arguments.\n<code>new</code> creates the Opts with the <code>name</code> and <code>help</code> arguments.\n<code>new</code> creates a Registry.\nCreate a new registry, with optional custom prefix and …\nAdd a single observation to the <code>Histogram</code>.\nObserve execution time of a closure, in second.\n<code>register</code> registers a new <code>Collector</code> to be included in …\nRestart the counter, resetting its value back to 0.\nSet the gauge to an arbitrary value.\nReturn a <code>HistogramTimer</code> to track a duration.\nSubtract the given value from the gauge. (The value can be …\n<code>subsystem</code> sets the sub system.\n<code>subsystem</code> sets the sub system.\nnamespace, subsystem, and name are components of the …\nStore the value, returning the previous value.\nStores a value into the atomic integer, returning the …\n<code>unregister</code> unregisters the <code>Collector</code> that equals the …\n<code>variable_label</code> adds a variable label.\n<code>variable_label</code> adds a variable label.\n<code>variable_labels</code> sets the variable labels.\n<code>variable_labels</code> sets the variable labels.\nvariable_labels contains names of labels for which the …\nCreate a <code>GenericCounter</code> with the <code>opts</code> options.\nCreate a <code>GenericGauge</code> with the <code>opts</code> options.\n<code>with_opts</code> creates a <code>Histogram</code> with the <code>opts</code> options.\nThe expected number of labels.\nThe actual number of labels.\nA duplicate metric collector has already been registered.\nA <code>Metric</code> represents a single numerical value that only …\nA <code>Collector</code> that bundles a set of <code>Counter</code>s that all share …\nThe default <code>Histogram</code> buckets. The default buckets are …\nAn interface for encoding metric families into an …\nContains the error value\nThe error types for prometheus.\nA <code>Metric</code> represents a single numerical value that can …\nA <code>Collector</code> that bundles a set of <code>Gauge</code>s that all share …\nA <code>Metric</code> counts individual observations from an event or …\nA struct that bundles the options for creating a <code>Histogram</code> …\nTimer to measure and record the duration of an event.\nA <code>Collector</code> that bundles a set of Histograms that all …\nThe label cardinality was inconsistent.\nThe integer version of <code>Counter</code>. Provides better …\nThe integer version of <code>CounterVec</code>. Provides better …\nThe integer version of <code>Gauge</code>. Provides better performance …\nThe integer version of <code>GaugeVec</code>. Provides better …\nAn error containing a <code>std::io::Error</code>.\nAn error message which is only a string.\nContains the success value\nA struct that bundles the options for creating most <code>Metric</code> …\nA struct for registering Prometheus collectors, collecting …\nA specialized Result type for prometheus.\nThe text format of metric family.\nAn implementation of an <code>Encoder</code> that converts a …\nDefines the buckets into which observations are counted. …\nA container holding various options.\nconst_labels are used to attach fixed labels to this …\nCore traits and types.\nDefault registry (global static).\n<code>encode</code> converts a slice of MetricFamily proto messages …\nConverts metrics to <code>String</code>.\nAppends metrics to a given <code>String</code> buffer.\nCreate <code>count</code> buckets, where the lowest bucket has an upper …\n<code>format_type</code> returns target format.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn all <code>MetricFamily</code> of <code>DEFAULT_REGISTRY</code>.\nhelp provides information about this metric. Mandatory!\nCreate a <code>HistogramOpts</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate labels with specified name-value pairs.\nCreate <code>count</code> buckets, each <code>width</code> wide, where the lowest …\nUnsync local metrics, provides better performance.\nnamespace, subsystem, and name are components of the …\nnamespace, subsystem, and name are components of the …\nCreate a new text encoder.\nObserve and record timer duration (in seconds).\nCreate an <code>Opts</code>.\nNon-generated version of required structures provided by …\nRegisters a new <code>Collector</code> to be included in metrics …\nCreate a <code>Counter</code> and registers to default registry.\nCreate a <code>CounterVec</code> and registers to default registry.\nCreate a <code>CounterVec</code> and registers to a custom registry.\nCreate a <code>Counter</code> and registers to a custom registry.\nCreate a <code>Gauge</code> and registers to default registry.\nCreate a <code>GaugeVec</code> and registers to default registry.\nCreate a <code>GaugeVec</code> and registers to a custom registry.\nCreate a <code>Gauge</code> and registers to a custom registry.\nCreate a <code>Histogram</code> and registers to default registry.\nCreate a <code>HistogramVec</code> and registers to default registry.\nCreate a <code>HistogramVec</code> and registers to default registry.\nCreate a <code>Histogram</code> and registers to a custom registry.\nCreate an <code>IntCounter</code> and registers to default registry.\nCreate an <code>IntCounterVec</code> and registers to default registry.\nCreate an <code>IntCounterVec</code> and registers to a custom registry.\nCreate an <code>IntCounter</code> and registers to a custom registry.\nCreate an <code>IntGauge</code> and registers to default registry.\nCreate an <code>IntGaugeVec</code> and registers to default registry.\nCreate an <code>IntGaugeVec</code> and registers to a custom registry.\nCreate an <code>IntGauge</code> and registers to a custom registry.\nObserve and return timer duration (in seconds).\nObserve, record and return timer duration (in seconds).\nnamespace, subsystem, and name are components of the …\nUnregisters the <code>Collector</code> that equals the <code>Collector</code> passed …\nvariable_labels contains names of labels for which the …\nThe expected number of labels.\nThe actual number of labels.\nAn interface for atomics. Used to generically model float …\nA atomic float.\nA atomic signed integer.\nA atomic unsigned integer.\nAn interface for collecting metrics.\nThe descriptor used by every Prometheus <code>Metric</code>. It is …\nAn interface for describing the immutable meta-data of a …\nThe underlying implementation for <code>Counter</code> and <code>IntCounter</code>.\nThe underlying implementation for <code>CounterVec</code> and …\nThe underlying implementation for <code>Gauge</code> and <code>IntGauge</code>.\nThe underlying implementation for <code>GaugeVec</code> and <code>IntGaugeVec</code>.\nThe underlying implementation for <code>LocalCounter</code> and …\nThe underlying implementation for <code>LocalCounterVec</code> and …\nThe associated Metric collected.\nAn interface models a single sample value with its meta …\nA <code>Collector</code> to bundle metrics of the same name that differ …\nAn interface for building a metric vector.\nAn interface for numbers. Used to generically model float …\nA struct that bundles the options for creating most <code>Metric</code> …\nThe associated describer.\nThe numeric type associated with this atomic.\n<code>build</code> builds a <code>Metric</code> with option and corresponding label …\nCollect metrics.\nconst_label_pairs contains precalculated DTO label pairs …\nconst_labels are used to attach fixed labels to this …\n<code>create</code> creates a MetricVec with description <code>desc</code>, a metric …\nDecrement the value by a given amount.\nReturn descriptors for metrics.\n<code>describe</code> returns a <code>Desc</code>.\ndim_hash is a hash of the label names (preset and …\nFlush the local metrics to the <code>CounterVec</code> metric.\nFlush the local metrics to the <code>CounterVec</code> metric.\nFlush the local metrics to the <code>Counter</code>.\nFlush the local metrics to the <code>Counter</code>.\nfq_name has been built from Namespace, Subsystem, and Name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n<code>std::convert::From&lt;i64&gt; for f64</code> is not implemented, so …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet the value.\nReturn the local counter value.\n<code>get_metric_with</code> returns the <code>Metric</code> for the given Labels …\n<code>get_metric_with_label_values</code> returns the <code>Metric</code> for the …\nhelp provides some helpful information about this metric.\nhelp provides information about this metric. Mandatory!\nid is a hash of the values of the ConstLabels and fqName. …\nIncrease the local counter by 1.\nIncrement the value by a given amount.\nIncrease the given value to the local counter.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert to a f64.\nReturn a <code>GenericLocalCounterVec</code> for single thread usage.\nReturn a <code>LocalHistogramVec</code> for single thread usage.\nReturn the protocol Metric.\nnamespace, subsystem, and name are components of the …\nnamespace, subsystem, and name are components of the …\nCreate a new atomic value.\nInitializes a new <code>Desc</code>. Errors are recorded in the Desc …\nCreate a new <code>GenericCounterVec</code> based on the provided <code>Opts</code> …\nCreate a new <code>GenericGaugeVec</code> based on the provided <code>Opts</code> …\nCreate a new <code>HistogramVec</code> based on the provided …\n<code>remove</code> removes the metric where the variable labels are …\nRemove a <code>GenericLocalCounter</code> by label values. See more …\n<code>remove_label_values</code> removes the metric where the variable …\nRestart the counter, resetting its value back to 0.\n<code>reset</code> deletes all metrics in this vector.\nSet the value to the provided value.\nnamespace, subsystem, and name are components of the …\nvariable_labels contains names of labels for which the …\nvariable_labels contains names of labels for which the …\n<code>with</code> works as <code>get_metric_with</code>, but panics if an error …\nGet a <code>GenericLocalCounter</code> by label values. See more …\n<code>with_label_values</code> works as <code>get_metric_with_label_values</code>, …\nAuto flush-able local counter\nAuto flush-able local counter\nDelegator for auto flush-able local counter\nFor auto_flush::AFLocalCounter to use to make type …\nDelegator for auto flush-able local counter\nAn unsync <code>Counter</code>.\nAn unsync <code>CounterVec</code>.\nAn unsync <code>Histogram</code>.\nAn unsync <code>HistogramTimer</code>.\nAn unsync <code>HistogramVec</code>.\nThe integer version of <code>LocalCounter</code>. Provides better …\nThe integer version of <code>LocalCounterVec</code>. Provides better …\nAn interface models a Metric only usable in single thread …\nAn interface models a LocalMetric with try to flush …\nthe exact type which implements Atomic\nClear the local metric.\nClear the local metric.\nFlush the local metrics to the global one.\ntrigger flush of LocalKey\nFlush the local metrics to the <code>Histogram</code> metric.\nFlush the local metrics to the <code>Histogram</code> metric.\nFlush the local metrics to the <code>Histogram</code> metric.\nFlush the local metrics to the <code>HistogramVec</code> metric.\nFlush the local metrics to the <code>HistogramVec</code> metric.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn the local counter value.\nGet the final counter for delegate\nGet the final counter for delegate\nGet the root local metric for delegate\nGet the root local metric for delegate\nReturn count of local samples.\nReturn count of local samples.\nReturn accumulated sum of local samples.\nReturn accumulated sum of local samples.\nIncrease the local counter by 1, and try to flush to …\nIncrease the given value to the local counter, and try to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOpen to implementation to fill try_flush parameters\nConstruct a new AFLocalCounter from delegator.\nConstruct a new AFLocalHistogram from delegator\nAdd a single observation to the <code>Histogram</code>.\nAdd a single observation to the <code>Histogram</code>.\nObserve execution time of a closure, in second.\nObserve execution time of a closure, in second.\nObserve and record timer duration (in seconds).\nRemove a <code>LocalHistogram</code> by label values. See more …\nRestart the counter, resetting its value back to 0.\nReturn a <code>LocalHistogramTimer</code> to track a duration.\nObserve and return timer duration (in seconds).\nObserve, record and return timer duration (in seconds).\nIf the LocalMetric is already flushed in last …\nGet a <code>LocalHistogram</code> by label values. See more …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a stream of ticks with a defined cycle duration.\nHolds the registered Prometheus metric collections.\nRuntime metrics wrapper.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nIncrement a counter by a value.\nIncrement a counter with labels by a value\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the custom profiling closure that we’ll apply to …\nCreates new instance.\nObserve a histogram. <code>value</code> should be in <code>ns</code>.\nRegister a counter metric.\nRegister a counter vec metric.\nRegister a histogram metric\nVersion-annotated messages used by the approval …\nA thread-safe reference-counting pointer. ‘Arc’ stands …\nA node claiming to be an authority (unauthenticated)\nVersion-annotated messages used by the bitfield …\nA protocol-versioned type for collation.\nVersion-annotated messages used by the collator protocol …\nA full node.\nVersion-annotated messages used by the gossip-support …\nWhen sending a request, what to do on a disconnected …\nJust fail if the destination is not yet connected.\nA light node.\nThe minimum amount of peers to send gossip messages to.\nThe advertised role of a node.\nSpecialized wrapper around <code>View</code>.\nIdentifier of a peer of the network.\nDescription of a reputation adjustment for a node.\nVersion-annotated messages used by the statement …\nTry to connect to the peer.\nUnified annoyance cost and good behavior benefits.\nV1 type.\nV1 type.\nV1 type.\nV2 type.\nV2 type.\nV2 type.\nV3 type.\nV3 type.\nV3 type.\nV3 type.\nV3 type.\nV3 type.\nA protocol-versioned type for validation.\nAll supported versions of the collation protocol message.\nAll supported versions of the validation protocol message.\nA succinct representation of a peer’s view. This …\nAn error indicating that this the over-arching message …\nReturns a reference to the underlying allocator.\nProvides a raw pointer to the data.\nConverts to <code>Arc&lt;T&gt;</code>.\nConverts to <code>Arc&lt;[T]&gt;</code>.\nAccessing authority discovery service Authority discovery …\nCheck if two views have the same heads.\nMakes a clone of the <code>Arc</code> pointer.\nConvert to a fully-owned version of the message.\nConvert to a fully-owned version of the message.\nComparison for two <code>Arc</code>s.\nWhether the view contains a given hash.\nObtain the cost or benefit associated with the enum …\nDecrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nDecrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nCreates an empty <code>[T]</code> inside an Arc\nCreates an empty CStr inside an Arc\nCreates an empty str inside an Arc\nCreates a new <code>Arc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.\nExtract the static description.\nReturns an iterator of the hashes present in <code>Self</code> but not …\nAttempts to downcast the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a …\nDowncasts the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a concrete …\nCreates a new <code>Weak</code> pointer to this allocation.\nDrops the <code>Arc</code>.\nSCALE encode this type to bytes, possibly with the help of …\nEquality for two <code>Arc</code>s.\nReturns the subset of <code>peers</code> with the specified <code>version</code>.\nThe highest known finalized block number.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAllocates a reference-counted slice and moves <code>v</code>’s items …\nAllocates a reference-counted slice and fills it by …\nConverts an atomically reference-counted string slice into …\nCreates an atomically reference-counted pointer from a …\nMove a boxed object to a new, reference-counted allocation.\nReturns the argument unchanged.\nConverts a <code>CString</code> into an Arc&lt;CStr&gt; by moving the <code>CString</code> …\nConverts an <code>OsString</code> into an Arc&lt;OsStr&gt; by moving the …\nCopies the string into a newly allocated Arc&lt;OsStr&gt;.\nCopies the string into a newly allocated Arc&lt;OsStr&gt;.\nAllocates a reference-counted <code>str</code> and copies <code>v</code> into it.\nConverts a <code>Path</code> into an <code>Arc</code> by copying the <code>Path</code> data into …\nConverts a <code>Path</code> into an <code>Arc</code> by copying the <code>Path</code> data into …\nConverts a <code>&amp;CStr</code> into a <code>Arc&lt;CStr&gt;</code>, by copying the contents …\nConverts a <code>&amp;mut CStr</code> into a <code>Arc&lt;CStr&gt;</code>, by copying the …\nConverts a <code>T</code> into an <code>Arc&lt;T&gt;</code>\nAllocates a reference-counted slice and fills it by …\nConverts a <code>[T; N]</code> into an <code>Arc&lt;[T]&gt;</code>.\nAllocates a reference-counted <code>str</code> and copies <code>v</code> into it.\nAllocates a reference-counted <code>str</code> and copies <code>v</code> into it.\nConverts a <code>PathBuf</code> into an Arc&lt;Path&gt; by moving the <code>PathBuf</code> …\nParses a <code>PeerId</code> from bytes.\nGet <code>PeerId</code> from ed25519 public key bytes.\nTakes each element in the <code>Iterator</code> and collects it into an …\nTries to turn a <code>Multihash</code> into a <code>PeerId</code>.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nConstructs an <code>Arc&lt;T&gt;</code> from a raw pointer.\nConstructs an <code>Arc&lt;T, A&gt;</code> from a raw pointer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\n‘Greater than or equal to’ comparison for two <code>Arc</code>s.\nReturns a mutable reference into the given <code>Arc</code>, if there …\nReturns a mutable reference into the given <code>Arc</code>, without …\nGrid topology support module Grid topology support …\nGreater-than comparison for two <code>Arc</code>s.\nIncrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nIncrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nAn iterator containing hashes present in both <code>Self</code> and in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the reference-counted slice into a …\nConvert <code>PeerId</code> into ed25519 public key bytes.\nReturns the inner value, if the <code>Arc</code> has exactly one strong …\nObtain an iterator over all heads.\nConsumes the <code>Arc</code>, returning the wrapped pointer.\nConsumes the <code>Arc</code>, returning the wrapped pointer and …\nWhether the reputation change is for good behavior.\nCheck if the number of heads contained, is null.\nDetermine whether this is the unique reference to the …\nObtain an iterator over all heads.\n‘Less than or equal to’ comparison for two <code>Arc</code>s.\nObtain the number of heads that are in view.\nLess-than comparison for two <code>Arc</code>s.\nMakes a mutable reference into the given <code>Arc</code>.\nInequality for two <code>Arc</code>s.\nNew reputation change with given delta and reason.\nCreates a new instance.\nConstruct a new view based on heads and a finalized block …\nConstructs a new <code>Arc&lt;T&gt;</code>.\nConstructs a new <code>Arc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the …\nConstructs a new <code>Arc&lt;T, A&gt;</code> in the given allocator while …\nNew reputation change that forces minimum possible …\nConstructs a new <code>Arc&lt;T&gt;</code> in the provided allocator.\nConstructs a new <code>Arc</code> with uninitialized contents.\nConstructs a new <code>Arc</code> with uninitialized contents in the …\nConstructs a new atomically reference-counted slice with …\nConstructs a new atomically reference-counted slice with …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nConstructs a new atomically reference-counted slice with …\nConstructs a new atomically reference-counted slice with …\nConstruct a new <code>OurView</code> with the given chain heads, …\nPartial comparison for two <code>Arc</code>s.\nPeer-sets and protocols used for parachains. All peersets …\nConstructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…\nConstructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator. …\nReturns <code>true</code> if the two <code>Arc</code>s point to the same allocation …\nGenerate random peer ID.\nReason for reputation change.\nReplace <code>self</code> with <code>new</code>.\nRequest/response protocols used in Polkadot. Overview over …\nSend an asynchronous <code>notification</code> to the peer associated …\nSend synchronous <code>notification</code> to the peer associated with …\nShall we connect to a disconnected peer?\nGets the number of strong (<code>Arc</code>) pointers to this …\nReturns a base-58 encoded string of this <code>PeerId</code>.\nReturns a raw bytes representation of this <code>PeerId</code>.\nTry to extract <code>PeerId</code> from <code>Multiaddr</code>.\nConstructs a new <code>Arc&lt;T&gt;</code>, returning an error if allocation …\nConstructs a new <code>Arc&lt;T, A&gt;</code> in the provided allocator, …\nConstructs a new <code>Arc</code> with uninitialized contents, …\nConstructs a new <code>Arc</code> with uninitialized contents, in the …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nConstructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>, return an error if …\nConstructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator, …\nReturns the inner value, if the <code>Arc</code> has exactly one strong …\nIf we have the only reference to <code>T</code> then unwrap it. …\nv1 notification protocol types.\nv2 network protocol types.\nv3 network protocol types. Purpose is for changing …\nReputation delta.\nConstruct a new view with the given chain heads and …\nGets the number of <code>Weak</code> pointers to this allocation.\nStart with no heads, but only a finalized block number.\nAn abstraction over the authority discovery service.\nGet the addresses for the given <code>AuthorityDiscoveryId</code> from …\nGet the <code>AuthorityDiscoveryId</code> for the given <code>PeerId</code> from the …\nPropagate to all peers of any kind.\nThe number of peers to randomly propagate messages to.\nThe sample rate for randomly propagating messages. This …\nInformation about the grid neighbors for a particular node …\nPropagate to all peers sharing the X dimension of the grid.\nPropagate to all peers sharing either the X or Y dimension …\nPropagate to all peers sharing the Y dimension of the grid.\nNo required propagation.\nWe don’t know yet, because we’re waiting for topology …\nA representation of routing based on sample\nRouting mode\nA storage for the current and maybe previous topology\nA set of topologies indexed by session\nTopology representation for a session.\nAn entry tracking a session grid topology and some cached …\nInformation about a peer in the gossip topology for a …\nCombine two required routing sets into one that would …\nProduces the outgoing routing logic for a particular peer.\nDecrease references counter for a specific topology\nThe authority discovery public key of the validator in the …\nUtility function for creating an empty set of grid …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAccess the underlying topology.\nReturns the current session index.\nReturns a current grid topology\nAccess the current grid topology mutably. Dangerous and …\nReturns a topology for the specific session index\nReturn the grid topology for the specific session index, …\nReturn a grid topology based on the session index: If we …\nIncrease number of messages being sent\nIncrease references counter for a specific topology\nInsert a new topology, no-op if already present.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if we already took all the necessary samples.\nWhether the required routing set is definitely empty.\nTells if a given peer id is validator in a session\nTells if a given peer id is validator in a session\nA convenience method that returns total number of peers in …\nAccess the local grid neighbors.\nAccess the local grid neighbors mutably.\nCreate a new session grid topology.\nThe validator’s known peer IDs.\nReturns the difference between this and the <code>other</code> topology …\nReturns the list of peers to route based on the required …\nRepresent peers in the X axis\nRepresent peers in the Y axis\nGiven the originator of a message as a validator index, …\nGiven the originator of a message as a peer index, …\nGet a filter function based on this topology and the …\nPerform random sampling for a specific peer Returns <code>true</code> …\nUpdates the known peer ids for the passed authorities ids.\nUpdates the known peer ids for the passed authorities ids.\nUpdates the known peer ids for the passed authorities ids.\nUpdate the current topology preserving the previous one\nThe index of the validator in the discovery keys of the …\nRepresent validators in the X axis\nRepresent validators in the Y axis\nThe collation peer-set is used for validator&lt;&gt;collator …\nSupported collation protocol versions. Only versions …\nAn iterator over the variants of CollationVersion\nWhether a node is an authority or not.\nMaximum allowed incoming connection streams for validator …\nMax notification size is currently constant.\nNode is not an authority.\nThe peer-sets and thus the protocols which are used for …\nAn iterator over the variants of PeerSet\nOn the wire protocol name to <code>PeerSet</code> mapping.\nA small and nifty collection that allows to store data …\nA generic version of the protocol. This struct must not be …\nMarker indicating the version is unknown.\nThe first version.\nThe second version.\nThe third version.\nThe validation peer-set is responsible for all messages …\nSupported validation protocol versions. Only versions …\nAn iterator over the variants of ValidationVersion\nNode is authority.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet <code>sc_network</code> peer set configurations for each peerset on …\nGet the peer set label for metrics reporting.\nGet the main protocol name. It’s used by the networking …\nGet the main protocol version for this peer set.\nGet the max notification size for this peer set.\nGet the protocol name for specific version.\nGet the protocol label for metrics reporting.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct <code>PeerSetProtocolNames</code> using <code>genesis_hash</code> and …\nGet <code>NonDefaultSetConfig</code>s for all available peer sets, at …\nLookup the protocol using its on the wire name.\nRequest a candidate and attestations.\nProtocol for requesting candidates with attestations in …\nRecipient is a validator, we address it via this …\nRequest full available data from a node.\nProtocol for fetching available data.\nTimeout for requesting availability chunks.\nRequest an availability chunk from a node.\nProtocol for chunk fetching, used by availability …\nProtocol for chunk fetching version 2, used by …\nFetch a collation from a collator which previously …\nProtocol for fetching collations from collators.\nFetch a collation from a collator which previously …\nProtocol for fetching collations from collators when async …\nWe can have relative large timeouts here, there is no …\nRequests for notifying about an ongoing dispute.\nSending of dispute statements with application level …\nContains the error value\nA request coming in, including a sender for sending …\nReceiver for incoming requests.\nCommon properties of any <code>Request</code>.\nWe don’t want a slow peer to slow down all the others, …\nContains the success value\nThe protocol name as a dynamically allocated string.\nA request to be sent to the network bridge, including a …\nResponses received for an <code>OutgoingRequest</code>.\nWhat protocol this <code>Request</code> implements.\nRecipient is a regular peer and we know its peer id.\nFetch a PoV from a validator which previously sent out a …\nProtocol for fetching seconded PoVs from validators of the …\nA protocol per subsystem seems to make the most sense, …\nAn iterator over the variants of Protocol\nThe protocol name transmitted on the wire.\nPotential recipients of an outgoing request.\nType for getting on the wire <code>Protocol</code> names using genesis …\nConfiguration for a single request-response protocol.\nAll requests that can be sent to the network bridge via …\nEach request has a corresponding <code>Response</code>.\nUsed by the network to send us a response to a request.\nThe protocol name as a static string.\nEncode the request.\nEncode a request into a <code>Vec&lt;u8&gt;</code>.\nFallback on the wire protocol names to support.\nOptional fallback request and protocol.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a configuration for a given Request response protocol.\nCreate configuration for …\nGet on the wire <code>Protocol</code> name.\nGet a configuration for a given Request response protocol.\nChannel on which the networking service will send incoming …\nEverything related to handling of incoming requests.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into raw untyped substrate <code>IncomingRequest</code>.\nMaximum allowed size, in bytes, of a request.\nMaximum allowed size, in bytes, of a response.\nName of the protocol on the wire. Should be something like …\nConfiguration of the networking layer.\nCreate new <code>IncomingRequest</code>.\nCreate a new <code>OutgoingRequest</code>.\nConstruct <code>ReqProtocolNames</code> from <code>genesis_hash</code> and <code>fork_id</code>.\nCreate a new <code>OutgoingRequest</code> with a fallback in case the …\nEverything related to handling of outgoing requests.\nThe sent request.\nThe actual request to send over the wire.\n<code>PeerId</code> of sending peer.\nIntended recipient of this request.\nSender for sending response back.\nSender which is used by networking to get us back a …\nTry to receive the next incoming request.\nDuration after which emitted requests are considered timed …\nSend response with additional options.\nSend the response back.\nActual versioned requests and responses that are sent over …\nActual versioned requests and responses that are sent over …\nDecoding failed, we were able to change the peer’s …\nDecoding failed, we were able to change the peer’s …\nDecoding failed, but sending reputation change failed.\nDecoding failed, but sending reputation change failed.\nContains the error value\nA request coming in, including a sender for sending …\nReceiver for incoming requests.\nContains the success value\nTyped variant of <code>netconfig::OutgoingResponse</code>.\nSender for sending back responses on an <code>IncomingRequest</code>.\nGeneral result based on above <code>Error</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe sent request.\n<code>PeerId</code> of sending peer.\nSender for sending response back.\nReputation changes accrued while handling the request. To …\nThe payload of the response.\nSend response with additional options.\nSend the response back.\nIf provided, the <code>oneshot::Sender</code> will be notified when the …\nAccept them. This is the default.\nActual authority.\nDefault timeout for idle connections of 10 seconds is good …\nDefault value for Kademlia replication factor which  …\nDeny them.\nA Ed25519 secret key configuration.\nThe options for obtaining a Ed25519 secret key.\nMinimum Requirements for a Hash within Networking\nRead the secret key from a file. If the file does not …\nRead the secret key from a file. If the file does not …\nRegular full node.\nFull block download and verification.\nFull network configuration.\nA single request received by a peer on a request-response …\nUse the given secret key <code>K</code>.\nUse the given secret key <code>K</code>.\nMultihash of the peer ID is invalid.\nMaximum number of locally kept Kademlia provider keys.\nTime to keep Kademlia content provider records.\nInterval of republishing Kademlia provider records.\nUse libp2p for P2P networking.\nDownload blocks and the latest state.\nUse litep2p for P2P networking.\nOnly allow connections within the same process. Only …\nError while parsing the multiaddress.\nAddress of a node, including its identity.\nNetwork backend type.\nNetwork service configuration.\nAlways generate a new secret key <code>K</code>.\nAlways generate a new secret key <code>K</code>.\nThe configuration of a node’s secret key, describing the …\nExtension to <code>SetConfig</code> for sets that aren’t the default …\nThe policy for connections to non-reserved peers.\nNormal transport mode.\nTrait defining the required functionality from a …\nCustom handshake for the notification protocol\nNotification metrics.\nNotification service\nSink connected directly to the node background task. …\nThe protocol name as a dynamically allocated string.\nResponse for an incoming request to be send by a request …\nNetwork initialization parameters.\nError that can be generated by <code>parse_str_addr</code>.\nThe peer ID is missing from the address.\nTrait defining required functionality from <code>PeerStore</code>.\nTrait providing peer reputation management and connection …\nChannel pair which allows <code>Notifications</code> to interact with a …\nProtocol name prefix, transmitted on the wire for legacy …\nThe protocol name transmitted on the wire.\nConfiguration for a single request-response protocol.\nRole of the local node.\nBitmask of the roles that a node fulfills.\nThe configuration options for obtaining a secret key <code>K</code>.\nConfiguration for a set of nodes.\nThe protocol name as a static string.\nSync operation mode.\nConfiguration for the transport layer.\nWarp sync - verify authority set transitions and the …\nAdd known peer.\nAdd a notification protocol.\nAdd a request-response protocol.\nShould we insert non-global addresses into the DHT?\nBitswap configuration, if the server has been enabled.\nBlock announce protocol configuration\nList of initial node addresses\nEasy way for a user to create a <code>Multiaddr</code>.\nClient identifier. Sent over the wire for debugging …\nMake a copy of the object so it can be shared between …\nInstruct <code>Notifications</code> to close substream for <code>peer</code>.\nConfiguration for the default set of nodes used for block …\nNumber of substreams to reserve for full nodes for block …\nEd25519 keys.\nTrue if Kademlia random discovery should be enabled.\nHow to spawn background tasks.\nFallback on the wire protocol names to support.\nFork ID to distinguish protocols of different hard forks. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate new <code>NotificationHandshake</code> from raw bytes\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenesis hash of the chain\nGet handle to <code>PeerStore</code>.\nIdle connection timeout.\nMaximum allowed number of incoming substreams related to …\nChannel on which the networking service will send incoming …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEnable serving block data over IPFS bitswap.\nCheck whether the peer is banned.\nIf we are in “reserved-only” peer mode.\nRequire iterative Kademlia DHT queries to use disjoint …\nKademlia replication factor determines to how many closest …\nCollect all reserved nodes and bootnodes addresses.\nMultiaddresses to listen for incoming connections.\nMaximum number of blocks per request.\nMaximum number of peers to ask the same blocks in parallel.\nMaximum allowed size, in bytes, of a request.\nMaximum allowed size, in bytes, of a response.\nGet message sink of the peer.\nRegistry for recording prometheus metrics to.\nRegistry for recording prometheus metrics to.\nNumber of peers that need to be connected before warp sync …\nAddress of the node.\nName of the protocol on the wire. Should be something like …\nDirectory path to store network-specific configuration. …")