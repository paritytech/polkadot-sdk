searchState.loadedDescShard("yet_another_parachain_runtime", 31, "Ensure that <code>check_out</code> will do as expected.\nDeduct some <code>fees</code> to the sovereign account of the given …\nAn asset has been teleported in from the given origin. …\nAn asset has been teleported in from the given origin. …\nAn asset has been teleported in from the given origin. …\nAn asset has been teleported out to the given destination. …\nAn asset has been teleported out to the given destination. …\nAn asset has been teleported out to the given destination. …\nAttempt to convert <code>origin</code> to the generic <code>Origin</code> whilst …\nActually carry out the delivery operation for a previously …\nDeposit the <code>what</code> asset into the account of <code>who</code>.\nDeposit the <code>what</code> asset into the account of <code>who</code>.\nDeposit the <code>what</code> asset into the account of <code>who</code>.\nIdentical to <code>deposit_asset</code> but returning the surplus, if …\nIdentical to <code>deposit_asset</code> but returning the surplus, if …\nIdentical to <code>deposit_asset</code> but returning the surplus, if …\nThe destination to which the query response message should …\nEnact a lock. This should generally be infallible if …\nThe XCM error itself.\nHandler for exchanging an asset.\nReturns <code>true</code> if we are expecting a response from <code>origin</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe fungibility of the asset, which contains either the …\nThe fungible assets.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nThe overall asset identity (aka <em>class</em>, in the case of a …\nThe index of the intruction that caused the error.\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nMove an <code>asset</code> <code>from</code> one location in <code>to</code> another location.\nMove an <code>asset</code> <code>from</code> one location in <code>to</code> another location.\nMove an <code>asset</code> <code>from</code> one location in <code>to</code> another location.\nIdentical to <code>internal_transfer_asset</code> but returning the …\nIdentical to <code>internal_transfer_asset</code> but returning the …\nIdentical to <code>internal_transfer_asset</code> but returning the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>max_weight</code> field of the <code>QueryResponse</code> message.\nThe identity of the XCM; this may be a hash of its …\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nThe non-fungible assets.\nHandler for when a location reports to us that an asset …\nHandler for receiving a <code>response</code> from <code>origin</code> relating to …\nThe current value of the Origin register of the <code>XCVM</code>.\nThe number of parent junctions at the beginning of this …\nIf it fails, returns the index of the problematic …\nPrepare to lock an asset. On success, a <code>Self::LockTicket</code> …\nHandler for when an owner wishes to unlock an asset on a …\nPrepare to unlock an asset. On success, a …\nThe <code>query_id</code> field of the <code>QueryResponse</code> message.\nHandler for quoting the exchange price of two asset …\nMutate <code>self</code> so that it represents the same location from …\nConsume <code>self</code> and return a new value representing the same …\nKill/reset the value to whatever was set at first.\nKill/reset the value to whatever was set at first.\nKill/reset the value to whatever was set at first.\nKill/reset the value to whatever was set at first.\nConvenience function for using a <code>SendXcm</code> implementation. …\nSet the internal value.\nSet the internal value.\nSet the internal value.\nSet the internal value.\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nThe current value of the Topic register of the <code>XCVM</code>.\nMove an <code>asset</code> <code>from</code> one location in <code>to</code> another location.\nMove an <code>asset</code> <code>from</code> one location in <code>to</code> another location.\nMove an <code>asset</code> <code>from</code> one location in <code>to</code> another location.\nIdentical to <code>transfer_asset</code> but returning the surplus, if …\nIdentical to <code>transfer_asset</code> but returning the surplus, if …\nIdentical to <code>transfer_asset</code> but returning the surplus, if …\nCheck whether the given <code>_message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nWithdraw the given asset from the consensus system.\nWithdraw the given asset from the consensus system.\nWithdraw the given asset from the consensus system.\nWithdraw assets returning surplus.\nWithdraw assets returning surplus.\nWithdraw assets returning surplus.\nThe EIP-155 chain ID.\nGets the XCM AssetId (i.e., extracts the NFT collection …\nAn XCM ID for unique instances (non-fungible assets).\nThe <code>UniqueInstancesAdapter</code> implements the <code>TransactAsset</code> …\nThe <code>UniqueInstancesDepositAdapter</code> implements the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>UniqueInstancesAdapter</code> implements the <code>TransactAsset</code> …\nThe <code>UniqueInstancesDepositAdapter</code> implements the …\nA list of (Origin, Target) pairs allowing a given Origin …\nThe handler for when there is an instruction to claim …\nHandler for exchanging assets.\nHandler for asset locking.\nHow to withdraw and deposit an asset.\nThe general asset trap - handler for when assets are left …\nMap of non-wildcard fungible and non-fungible assets held …\nWhether we should execute the given XCM at all.\nThe call dispatcher used by XCM.\nThe trait to parameterize the <code>XcmExecutor</code>.\nConfigure the fees.\nA struct to specify how fees are being paid.\nAllows optional logic execution for the <code>HrmpChannelAccepted</code>…\nAllows optional logic execution for the <code>HrmpChannelClosing</code> …\nAllows optional logic execution for the …\nCombinations of (Asset, Location) pairs which we trust as …\nCombinations of (Asset, Location) pairs which we trust as …\nThe maximum number of assets we target to have in the …\nThe method of exporting a message.\nHow to get a call origin from a <code>OriginKind</code> value.\nInformation on all pallets.\nThe maximum recursion depth allowed when executing nested …\nTrait for recording XCMs.\nWhat to do when a response of a query is found.\nThe outer call dispatch type.\nThe safe call filter for <code>Transact</code>.\nHow we handle version subscription requests.\nThe means of purchasing weight credit for XCM execution.\nTransactional processor for XCM instructions.\nThe origin locations and specific universal junctions to …\nThis chain’s Universal Location.\nThe means of determining an XCM message’s weight.\nHow to emit XCM events.\nThe XCM executor.\nAllows recording the last executed XCM (used by dry-run …\nHow to send an onward XCM message.\nA borrowing iterator over all assets.\nConsumes <code>self</code> and returns its original value excluding …\nReturns <code>true</code> if all <code>assets</code> are contained within <code>self</code>.\nReturns <code>true</code> if <code>asset</code> is contained within <code>self</code>.\nReturns <code>true</code> if all <code>assets</code> are contained within <code>self</code>.\nReturns an error unless all <code>assets</code> are contained in <code>self</code>. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe fungible assets.\nA borrowing iterator over the fungible assets.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA consuming iterator over all assets.\nReturns <code>true</code> if <code>self</code> contains no assets.\nIf true, then the fee assets are taken directly from the …\nTotal number of distinct assets.\nReturn the assets in <code>self</code>, but (asset-wise) of no greater …\nNew value, containing no assets.\nThe non-fungible assets.\nA borrowing iterator over the non-fungible assets.\nExecute any final operations after having executed the XCM …\nAlter any concretely identified assets by prepending the …\nMutate the assets to be interpreted as the same assets …\nRecord <code>xcm</code>.\nGet recorded XCM. Returns <code>None</code> if no message was sent, or …\nMutates <code>self</code> to its original value less <code>mask</code> and returns …\nEnable or disable recording.\nWhether or not we should record incoming XCMs.\nMutate <code>self</code> to contain the given <code>asset</code>, saturating if …\nMutate <code>self</code> to contain all given <code>assets</code>, saturating if …\nSwaps two mutable AssetsInHolding, without deinitializing …\nVarious traits used in configuring the executor.\nMutates <code>self</code> to its original value less <code>mask</code> and returns …\n<code>Location</code> to <code>AccountId</code> conversion failed.\n<code>u128</code> amount to currency <code>Balance</code> conversion failed.\nA service for exchanging assets.\n<code>Location</code> to <code>AssetId</code>/<code>ClassId</code> conversion failed.\nDefine a handler for notification of an asset being locked …\nThe given asset is not handled. (According to …\nHow to withdraw and deposit an asset.\nErrors related to determining asset transfer support.\nDefines how a call is dispatched with given origin. Allows …\nThe <code>charge_fees</code> API.\nTrait to determine whether the execution engine is …\nDefine any handlers for the <code>AssetClaim</code> instruction.\nMeans of converting a location into an account identifier.\nA converter <code>trait</code> for origin types.\nTrait to determine whether the execution engine should not …\nWhen the <code>DepositReserveAsset</code> instruction is called.\nshould reserve-transfer <code>asset</code> to <code>dest</code>, using <code>dest</code> as …\nDefine a handler for when some non-empty <code>AssetsInHolding</code> …\nErrors associated with <code>MatchesFungibles</code> operation.\nDefines the event emitter for the XCM executor. This trait …\nWhen the <code>ExportMessage</code> instruction is called (and includes …\nUtility for delivering a message to a system under a …\nHandle stuff to do with taking fees in certain XCM …\nContext under which a fee is paid.\nFilters assets/location pairs.\nExecutes optional logic when a <code>HrmpChannelAccepted</code> XCM …\nExecutes optional logic when a <code>HrmpChannelClosing</code> XCM …\nExecutes logic when a <code>HrmpNewChannelOpenRequest</code> XCM …\nWhether or not the implementor of the this trait is …\nA structure that performs identity conversion.\nWhen the <code>InitiateReserveWithdraw</code> instruction is called.\nWhen the <code>InitiateTeleport</code> instruction is called.\nWhen the <code>InitiateTransfer</code> instruction is called.\n<code>AssetInstance</code> to non-fungibles instance ID conversion …\nCombinations of (Asset, Location) pairs which we trust as …\nCombinations of (Asset, Location) pairs which we trust as …\nA structure that performs standard conversion using the …\nshould reserve-transfer <code>asset</code> to <code>dest</code>, using local chain …\nWhen the <code>LockAsset</code> instruction is called.\n<code>Enact</code> implementer for <code>prepare_lock</code>. This type may be …\nUnique instances matcher trait.\nNo response with the given <code>QueryId</code> was found, or the …\nDefine what needs to be done upon receiving a query …\nThe response has not yet arrived, the XCM might still be …\nProvides mechanisms for transactional processing of XCM …\nProperties of an XCM message and its imminent execution.\nProvides methods to expect responses from XCMs and query …\nWhen the <code>QueryPallet</code> instruction is called.\nThe possible state of an XCM query response.\nThe response has arrived, and includes the inner Response …\nTrait for recording XCMs.\n<code>Enact</code> implementer for <code>prepare_reduce_unlockable</code>. This type …\nshould reserve-transfer <code>asset</code> to <code>dest</code>, using remote chain …\nWhen a reporting instruction is called.\nWhen the <code>RequestUnlock</code> instruction is called.\nTrait to determine whether the execution engine should …\nshould teleport <code>asset</code> to <code>dest</code>\nIntermediate value which connects the two phases of the …\nFacility for asset transacting.\nWhen the <code>TransferReserveAsset</code> instruction is called.\nSpecify which type of asset transfer is required for a …\nGot an unexpected XCM version.\nReserve chain could not be determined for assets.\n<code>Enact</code> implementer for <code>prepare_unlock</code>. This type may be …\nTrait for a type which handles notifying a destination of …\nDetermine the weight of an XCM message.\nCharge for weight in order to execute XCM.\nA trait for identifying asset transfer type based on …\nPurchase execution weight credit in return for up to a …\nClaim any assets available to <code>origin</code> and return them in a …\nA filter to distinguish between asset/location pairs.\nConvert the <code>location</code> into <code>Some</code> account ID, or <code>None</code> if not …\nAttempt to convert <code>origin</code> to the generic <code>Origin</code> whilst …\nActually carry out the delivery operation for a previously …\nReturns <code>Ok(())</code> if there is no reason to deny execution, …\nDetermine transfer type to be used for transferring <code>asset</code> …\nHandler for receiving dropped assets. Returns the weight …\nEmits an event when an XCM fails to process.\nEmits an event when an XCM fails to send.\nEmits an event when an XCM is successfully sent.\nEnact a lock. This should generally be infallible if …\nHandler for exchanging an asset.\nMakes sure to expect a response with the given id.\nReturns <code>true</code> if we are expecting a response from <code>origin</code> …\nConvenience function for using a <code>SendXcm</code> implementation. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nDo something with the fee which has been paid. Doing …\nReturn the maximum amount of weight that an attempted …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn true if a location is subscribed to XCM version …\nDetermine if a fee should be waived.\nThe identity of the message, if one is known. If left as …\nCreate a new trader instance.\nAttempt to create a new query ID and register it as a …\nHandler for when a location reports to us that an asset …\nHandler for receiving a <code>response</code> from <code>origin</code> relating to …\nPrepare to lock an asset. On success, a <code>Self::LockTicket</code> …\nHandler for when an owner wishes to unlock an asset on a …\nPrepare to unlock an asset. On success, a …\nProcesses an XCM instruction encapsulated within the …\nHandler for quoting the exchange price of two asset …\nRecord <code>xcm</code>.\nGet recorded XCM. Returns <code>None</code> if no message was sent, or …\nAttempt a refund of <code>weight</code> into some asset. The caller …\nConsume <code>message</code> and return another which is equivalent to …\nEnable or disable recording.\nReturns <code>Ok(())</code> if the given <code>message</code> may be executed.\nWhether or not we should record incoming XCMs.\nStart notifying <code>location</code> should the XCM version of this …\nStop notifying <code>location</code> should the XCM change. Returns an …\nAttempt to remove and return the response of query with ID …\nCheck whether the given <code>message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nReturn the maximum amount of weight that an attempted …\nThe amount of weight that the system has determined this …\n<code>Location</code> to <code>AccountId</code> conversion failed.\n<code>u128</code> amount to currency <code>Balance</code> conversion failed.\nA service for exchanging assets.\n<code>Location</code> to <code>AssetId</code>/<code>ClassId</code> conversion failed.\nDefine a handler for notification of an asset being locked …\nThe given asset is not handled. (According to …\nThe <code>charge_fees</code> API.\nDefine any handlers for the <code>AssetClaim</code> instruction.\nA converter <code>trait</code> for origin types.\nWhen the <code>DepositReserveAsset</code> instruction is called.\nDefine a handler for when some non-empty <code>AssetsInHolding</code> …\nErrors associated with <code>MatchesFungibles</code> operation.\nDefines the event emitter for the XCM executor. This trait …\nWhen the <code>ExportMessage</code> instruction is called (and includes …\nUtility for delivering a message to a system under a …\nHandle stuff to do with taking fees in certain XCM …\nContext under which a fee is paid.\nWhether or not the implementor of the this trait is …\nA structure that performs identity conversion.\nWhen the <code>InitiateReserveWithdraw</code> instruction is called.\nWhen the <code>InitiateTeleport</code> instruction is called.\nWhen the <code>InitiateTransfer</code> instruction is called.\n<code>AssetInstance</code> to non-fungibles instance ID conversion …\nA structure that performs standard conversion using the …\nWhen the <code>LockAsset</code> instruction is called.\n<code>Enact</code> implementer for <code>prepare_lock</code>. This type may be …\nUnique instances matcher trait.\nDefine what needs to be done upon receiving a query …\nProvides mechanisms for transactional processing of XCM …\nWhen the <code>QueryPallet</code> instruction is called.\n<code>Enact</code> implementer for <code>prepare_reduce_unlockable</code>. This type …\nWhen a reporting instruction is called.\nWhen the <code>RequestUnlock</code> instruction is called.\nTrait to determine whether the execution engine should …\nIntermediate value which connects the two phases of the …\nFacility for asset transacting.\nWhen the <code>TransferReserveAsset</code> instruction is called.\n<code>Enact</code> implementer for <code>prepare_unlock</code>. This type may be …\nTrait for a type which handles notifying a destination of …\nDetermine the weight of an XCM message.\nCharge for weight in order to execute XCM.\nPurchase execution weight credit in return for up to a …\nClaim any assets available to <code>origin</code> and return them in a …\nAttempt to convert <code>origin</code> to the generic <code>Origin</code> whilst …\nActually carry out the delivery operation for a previously …\nHandler for receiving dropped assets. Returns the weight …\nEmits an event when an XCM fails to process.\nEmits an event when an XCM fails to send.\nEmits an event when an XCM is successfully sent.\nEnact a lock. This should generally be infallible if …\nHandler for exchanging an asset.\nReturns <code>true</code> if we are expecting a response from <code>origin</code> …\nConvenience function for using a <code>SendXcm</code> implementation. …\nDo something with the fee which has been paid. Doing …\nReturn the maximum amount of weight that an attempted …\nReturn true if a location is subscribed to XCM version …\nDetermine if a fee should be waived.\nCreate a new trader instance.\nHandler for when a location reports to us that an asset …\nHandler for receiving a <code>response</code> from <code>origin</code> relating to …\nPrepare to lock an asset. On success, a <code>Self::LockTicket</code> …\nHandler for when an owner wishes to unlock an asset on a …\nPrepare to unlock an asset. On success, a …\nProcesses an XCM instruction encapsulated within the …\nHandler for quoting the exchange price of two asset …\nAttempt a refund of <code>weight</code> into some asset. The caller …\nReturns <code>Ok(())</code> if the given <code>message</code> may be executed.\nStart notifying <code>location</code> should the XCM version of this …\nStop notifying <code>location</code> should the XCM change. Returns an …\nCheck whether the given <code>message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nReturn the maximum amount of weight that an attempted …\nGenerate a random account\nGenerate a random node key, write it to a file or stdout …\nGets a public key and a SS58 address from the provided …\nLoad a node key from a file or stdin and print the …\nSign a message, with a given (secret) key.\nGenerate a seed that provides a vanity address.\nVerify a signature for a message, provided on STDIN, with …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nRun the subkey command, given the appropriate runtime.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\n<code>entropy</code> should be a byte array from a correctly recovered …\nSimilar to <code>mini_secret_from_entropy</code>, except that it …\nGenerate the <code>cargo:</code> key output\nMake sure the calling <code>build.rs</code> script is rerun when …\nA typed query on chain state usable from an RPC client.\nCreate a storage query for a value in a StorageDoubleMap.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSend this query over RPC, await the typed result.\nCalls <code>U::from(self)</code>.\nCreate a storage query for a value in a StorageMap.\nCreate a storage query for a StorageValue.\nThe API to query account nonce.\nThe transaction was not decodable.\nError type of this RPC api.\nThe call to runtime failed.\nAn implementation of System-specific RPC methods on full …\nClient implementation for the <code>SystemApi</code> RPC API.\nServer trait implementation for the <code>SystemApi</code> RPC API.\nDry run an extrinsic at a given block. Return SCALE …\nDry run an extrinsic at a given block. Return SCALE …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCollects all the methods and subscriptions defined in the …\nCreate new <code>FullSystem</code> given client and transaction pool.\nReturns the next valid index (aka nonce) for given account.\nReturns the next valid index (aka nonce) for given account.\nClient implementation for the <code>AuthorApi</code> RPC API.\nRequest builder that serializes RPC parameters to …\nJSON-RPC error which can occur when a JSON-RPC call fails.\nClient implementation for the <code>ChainApi</code> RPC API.\nClient implementation for the <code>ChildStateApi</code> RPC API.\nJSON-RPC client interface that can make requests and …\nCustom error.\nClient implementation for the <code>DevApi</code> RPC API.\nEmpty batch request.\nContains the error value\nError type.\nStream of all finalized headers.\nAbstraction over RPC calling for headers.\nAbstraction over RPC subscription for finalized headers.\nNot implemented for HTTP clients.\nInvalid request ID.\nInvalid subscription ID.\nClient implementation for the <code>OffchainApi</code> RPC API.\nContains the success value\nFailed to parse the data.\nThe error returned when registering a method or …\nRequest timeout\nThe background task has been terminated.\nJSON-RPC result.\nClient implementation for the <code>StateApi</code> RPC API.\nRepresent a client-side subscription which is implemented …\nJSON-RPC client interface that can make requests, …\nClient implementation for the <code>SystemApi</code> RPC API.\nNetworking error or error on the low-level protocol layer.\nGeneric asynchronous client.\nBuilder for <code>WsClient</code>.\nSend a batch request.\nGet header and body of a block.\nGet hash of the n-th block in the canon chain.\nReexecute the specified <code>block_hash</code> and gather statistics …\nBuild the <code>WsClient</code> with specified URL to connect to, using …\nFinish the building process and return a valid batch …\nBuild the <code>WsClient</code> with specified data stream, using …\nBuild the <code>WsClient</code> with specified <code>TransportSenderT</code> …\nCreate a builder for the server.\nCall a method from the runtime API at a block’s state.\nClear offchain local storage under given key and prefix.\nThe reason why the subscription was closed.\nSee documentation …\nSee documentation <code>ClientBuilder::disable_ws_ping</code>\nThis is similar to <code>Client::on_disconnect</code> but it can be …\nSee documentation <code>ClientBuilder::enable_ws_ping</code> (disabled …\nGet hash of the last finalized block in the canon chain.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAwaits for the header of the block with hash <code>hash</code>.\nGet offchain local storage under given key and prefix.\nChecks if the keystore has private keys for the given …\nChecks if the keystore has private keys for the given …\nGet header.\nSee documentation for <code>ClientBuilder::id_format</code> (default is …\nInserts the RPC method with provided parameters into the …\nInsert a key into the keystore.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the client is connected to the target.\nGet an iterator over the batch request.\nReturn the subscription type and, if applicable, ID.\nSee documentation …\nSee documentation <code>ClientBuilder::max_concurrent_requests</code> …\nSee documentation …\nSee documentation …\nSee documentation …\nReturns the runtime metadata as an opaque blob.\nCreate a new WebSocket client builder.\nConstruct a new <code>BatchRequestBuilder</code>.\nGet the next finalized header.\nReturns the next notification from the stream. This may …\nAwait for the next finalized header from the subscription.\nSend a notification request\nCompletes when the client is disconnected or the client’…\nReturns all pending extrinsics, potentially grouped by …\nQuery historical storage entries (by key) starting from a …\nQuery storage entries (by key) at a block hash given as …\nReturns proof of storage for child key entries at a …\nReturns proof of storage entries at a specific block’s …\nRemove given extrinsic from the pool and temporarily ban …\nSend a method call request.\nSee documentation <code>ClientBuilder::request_timeout</code> (default …\nGenerate new session keys and returns the corresponding …\nConvert the given values to a <code>crate::params::ArrayParams</code> …\nGet the runtime version.\nSee documentation <code>WsTransportClientBuilder::set_headers</code> …\nSet offchain local storage under given key and prefix.\nSet maximum length for logging calls and responses.\nSee documentation <code>ClientBuilder::set_tcp_no_delay</code> (default …\nReturns a child storage entry at a specific block’s …\nReturns a storage entry at a specific block’s state.\nReturns child storage entries for multiple keys at a …\nReturns the hash of a child storage entry at a block’s …\nReturns the hash of a storage entry at a block’s state.\nReturns the keys with prefix from a child storage, leave …\nReturns the keys with prefix, leave empty to get all the …\nReturns the keys with prefix from a child storage with …\nReturns the keys with prefix with pagination support. Up …\nReturns the keys with prefix, leave empty to get all the …\nReturns the size of a child storage entry at a block’s …\nReturns the size of a storage entry at a block’s state.\nSubmit hex-encoded extrinsic for inclusion in block.\nInitiate a subscription by performing a JSON-RPC method …\nSend a subscription request to the server.\nAll head subscription.\nFinalized head subscription.\nNew head subscription.\nNew runtime version subscription\nNew storage subscription\nRegister a method subscription, this is used to filter …\nSubscribe to a specific method.\nAdds the supplied directives to the current log filter\nAdds a reserved peer. Returns the empty string or an …\nGet the chain’s name. Given as a string identifier.\nReturn health status of the node.\nReturns the multi-addresses that the local node is …\nReturns the base58-encoded PeerId of the node.\nGet the node’s implementation name. Plain old string.\nReturns current state of the network.\nReturns the roles the node is running as.\nReturns currently connected peers\nGet a custom set of properties as a JSON object, defined …\nRemove a reserved peer. Returns the empty string or an …\nReturns the list of reserved peers\nResets the log filter to Substrate defaults\nReturns the state of the syncing of the node: starting …\nGet the chain’s type.\nGet the node implementation’s version. Should be a …\nThe <code>traceBlock</code> RPC provides a way to trace the …\nUnsubscribe and consume the subscription.\nSubmit an extrinsic to watch.\nForce to use a custom certificate store.\nCreate a new <code>WebSocket</code> connection with shared settings.\nCurrent state migration status.\nAn implementation of state migration specific RPC methods.\nServer trait implementation for the <code>StateMigrationApi</code> RPC …\nCheck current migration state.\nNumber of child items that should migrate.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCollects all the methods and subscriptions defined in the …\nCheck trie migration status.\nCreate new state migration rpc for the given reference to …\nNumber of top items that should migrate.\nNumber of child items that we will iterate on.\nNumber of top items that we will iterate on.\nThe builder for building a wasm binary.\nFirst step of the <code>WasmBuilder</code> to select the project to …\nAppend the given <code>flag</code> to <code>RUST_FLAGS</code>.\nBuild the WASM binary.\nBuild the WASM binary using the recommended default values.\nDisable the check for the <code>runtime_version</code> wasm section.\nEnable the given feature when building the wasm binary.\nEnable generation of the metadata hash.\nEnable exporting <code>__heap_base</code> as global variable in the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nInstruct the linker to import the memory into the WASM …\nInit the wasm builder with the recommended default values.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance of the builder.\nSet the name of the file that will be generated in <code>OUT_DIR</code>.\nUse the current project as project for building the WASM …\nUse the given <code>path</code> as project for building the WASM binary.\nConsensus-related.\nTime-related\nHow many parachain blocks are processed by the relay chain …\nWe allow for 2 seconds of compute with a 6 second average …\nThis determines the average expected block time that we …\nRelay chain slot duration, in milliseconds.\nMaximum number of blocks simultaneously accepted by the …\nThe existential deposit. Set to 1/10 of its parent Relay …\nA fixed point representation of a number in the range [0, 1…\nMaps the proof size component of <code>Weight</code> to a fee.\nMaps the reference time component of <code>Weight</code> to a fee.\nThe block saturation level. Fees will be updates based on …\nHandles converting a weight scalar to a fee value, based …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalculates the fee from the passed <code>weight</code> according to the …\nCalculates the fee from the passed <code>weight</code> according to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNetwork and location for the Ethereum chain. On Rococo, …\nThe pallet index of the Ethereum inbound queue pallet in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe default XCM version to set in genesis config.\nUniversally recognized accounts.\nConsensus-related.\nFee-related.\nTime-related\nAlliance pallet ID - used as a temporary place to deposit …\nAmbassador Referenda pallet ID - used as a temporary place …\nFellowship treasury pallet ID.\nReferenda pallet ID - used as a temporary place to deposit …\nWestend treasury pallet id, used to convert into AccountId …\nHow many parachain blocks are processed by the relay chain …\nWe allow for 2 seconds of compute with a 6 second average …\nThis determines the average expected block time that we …\nRelay chain slot duration, in milliseconds.\nMaximum number of blocks simultaneously accepted by the …\nThe existential deposit. Set to 1/10 of its parent Relay …\nA fixed point representation of a number in the range [0, 1…\nMaps the proof size component of <code>Weight</code> to a fee.\nMaps the reference time component of <code>Weight</code> to a fee.\nThe block saturation level. Fees will be updated based on …\nHandles converting a weight scalar to a fee value, based …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalculates the fee from the passed <code>weight</code> according to the …\nCalculates the fee from the passed <code>weight</code> according to the …\nThe governance on the AssetHub.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNetwork and location for the Ethereum chain. On Westend, …\nThe pallet index of the Ethereum inbound queue pallet in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe default XCM version to set in genesis config.\nUnit type wrapper around <code>Hash</code> that represents a candidate …\nThe “debug” level.\nThe “error” level.\nUtility struct to compare the rate of its own calls.\nA hash of some data used by the relay chain.\nThe “info” level.\nDescribes the level of verbosity of a span or event.\nPer day\nPer hour\nPer minute\nPer second\nThe “trace” level.\nRepresents frequency per second, minute, hour and day\nThe “warn” level.\nReturns the string representation of the <code>Level</code>.\nPrint a debug level message.\nChecks whether a span or event is enabled based on the …\nPrint an error message.\nConstructs a new <code>Event</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nA helper to convert the hash to the fixed size …\nPrint a info level message.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompares the rate of its own calls with the passed one.\nInitiates a new instance\nPrint a trace level message.\nPrint a warning level message.\nPrint a warning or debug level message depending on their …\nPrint a debug level message.\nPrint an error message.\nPrint a info level message.\nPrint a trace level message.\nPrint a warning level message.\nPrint a warning or debug level message depending on their …\nThis is called on the <code>Instruction</code> enum, not on the <code>Xcm</code> …\nRuntime APIs for querying XCM authorized aliases. Contains …\nExposes runtime APIs for various XCM-related conversions. …\nDry-run API. Given an extrinsic or an XCM program, it …\nFee estimation API. Given an XCM program, it will return …\nExposes runtime API for querying whether a Location is …\nAPI for querying XCM authorized aliases\n<code>AuthorizedAliasersApi</code> Runtime APIs errors.\nConverting a location from one version to another failed.\nEntry of an authorized aliaser for a local origin. The …\nReturns locations allowed to alias into and act as <code>target</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether <code>origin</code> is allowed to alias into and act as …\nAPI for useful conversions between XCM <code>Location</code> and …\nA helper implementation that can be used for …\nRequested <code>Location</code> is not supported by the local …\nConverting a versioned data structure from one version to …\nConverts <code>Location</code> to <code>AccountId</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEffects of dry-running an extrinsic.\nAPI for dry-running extrinsics and XCM programs to get the …\nAn API call is unsupported.\nConverting a versioned data structure from one version to …\nEffects of dry-running an XCM program.\nDry run call V2.\nDry run call V1.\nDry run XCM program\nThe list of events fired by the extrinsic.\nList of events fired by the XCM program execution.\nThe result of executing the extrinsic.\nThe outcome of the XCM program execution.\nThe list of XCMs that were queued for sending.\nList of queued messages for sending.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe local XCM that was attempted to be executed, if any.\nThe given asset is not handled as a fee asset.\nXCM version not able to be handled.\nAn API part is unsupported.\nDestination is known to be unroutable.\nConverting a versioned data structure from one version to …\nXCM message weight calculation failed.\nA trait of XCM payment API.\nReturns a list of acceptable payment assets.\nGet delivery fees for sending a specific <code>message</code> to a …\nConverts a weight into a fee for the specified <code>AssetId</code>.\nReturns a weight needed to execute a XCM.\nContains the error value\nContains the success value\nAPI for querying trusted reserves and trusted teleporters.\nConverting a versioned Asset structure from one version to …\nConverting a versioned Location structure from one version …\nResult of <code>TrustedQueryApi</code> functions.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns if the location is a trusted reserve for the asset.\nReturns if the asset can be teleported to the location.")