searchState.loadedDescShard("yet_another_parachain_runtime", 27, "Prepare a new <code>Grandpa</code> Rpc handler.\nProve finality for the given block number by returning the …\nProve finality for the given block number by returning the …\nReturns the state of the current best round state as well …\nReturns the state of the current best round state as well …\nReturns the block most recently finalized by Grandpa, …\nReturns the block most recently finalized by Grandpa, …\nAn error occurred while importing the block\nSupplied parent_hash doesn’t exist in chain\nerror encountered during finalization\nsend error\nConsensus data provider, manual seal uses this trait …\nencountered during creation of Proposer.\nreturn type of <code>engine_createBlock</code>\nParams required to start the delayed finalization task.\nTransaction pool is empty, cannot create a block\nMessage sent to the background authorship task, usually by …\nerrors encountered by background block authorship task\nTells the engine to finalize the block with the supplied …\nparams for block finalization.\nFailed to create Inherents data\nParams required to start the instant sealing authorship …\nThe <code>ConsensusEngineId</code> of Manual Seal.\nmax duration for creating a proposal in secs\nParams required to start the manual sealing authorship …\nSome other error.\nThe proof type.\nparams for sealing a new block\nTells the engine to propose a new block\nsend error\nSome string error\nphantom type to pin the Backend type\nSet up the necessary import params.\nsome extra details about the import operation\nblock import object\nBlock import instance.\nBlock import instance for well. importing blocks.\nheader backend\nClient instance\nClient instance\nBlock import instance.\nStream&lt;Item = EngineCommands&gt;, Basically the receiving end …\nExtensions for manual seal to produce blocks valid for any …\nDigest provider for inclusion in blocks.\nDigest provider for inclusion in blocks.\nDigest provider for inclusion in blocks.\nAttempt to create a consensus digest.\nif true, empty blocks(without extrinsics) will be created. …\nSomething that can create the inherent data providers.\nSomething that can create the inherent data providers.\nSomething that can create the inherent data providers.\nThe delay in seconds before a block is finalized.\nEnvironment trait object for creating a proposer\nThe environment we are producing blocks for.\nThe environment we are producing blocks for.\ninstantly finalize this block?\nfinalizes a block in the backend with the given params.\nFinalizer trait object.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nhash of the block\nhash of the created block.\nInstantiate the import queue for the manual seal consensus …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nfinalization justification\nspecify the parent hash of the about-to-created block\ntransaction pool\nShared reference to the transaction pool.\nShared reference to the transaction pool.\nuncompacted storage proof size (zero mean that there is no …\nRPC interface for the <code>ManualSeal</code> Engine.\nCreates a future for delayed finalization of manual sealed …\nruns the background authorship task for the instant seal …\nRuns the background authorship task for the instant seal …\nCreates the background authorship task for the manually …\nseals a new block with the given params\nSelectChain object\nSelectChain strategy.\nSelectChain strategy.\nsender to report errors/success to the rpc.\nsender to report errors/success to the rpc.\nHandle for spawning delayed finalization tasks.\nif true, empty blocks(without extrinsics) will be created. …\ninstantly finalize this block?\nhash of the block\nfinalization justification\nspecify the parent hash of the about-to-created block\nsender to report errors/success to the rpc.\nsender to report errors/success to the rpc.\nConsensus data provider, manual seal uses this trait …\nThe proof type.\nSet up the necessary import params.\nAura consensus data provider, This allows manual seal …\nBABE consensus data provider, This allows manual seal …\nAttempt to create a consensus digest.\nMocked timestamp inherent, allows for manual seal to …\nConsensus data provider for Aura. This allows to use …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreates a new instance of the <code>AuraConsensusDataProvider</code>, …\nCreates a new instance of the <code>AuraConsensusDataProvider</code>\nProvides BABE-compatible predigests and BlockImportParams. …\nVerifier to be used for babe chains\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ncreate a new verifier\nProvide duration since unix epoch in millisecond for …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate a new mocked time stamp provider, for aura\nCreate a new mocked time stamp provider, for babe.\nGet the current slot number\nGets the current time stamp.\nreturn type of <code>engine_createBlock</code>\nMessage sent to the background authorship task, usually by …\nTells the engine to finalize the block with the supplied …\nA struct that implements the <code>ManualSealApiServer</code>.\nClient implementation for the <code>ManualSealApi</code> RPC API.\nServer trait implementation for the <code>ManualSealApi</code> RPC API.\nNo value.\nTells the engine to propose a new block\nSender passed to the authorship task to report errors or …\nSome value of type <code>T</code>.\nsome extra details about the import operation\nInstructs the manual-seal authorship task to create a new …\nInstructs the manual-seal authorship task to create a new …\nInstructs the manual-seal authorship task to finalize a …\nInstructs the manual-seal authorship task to finalize a …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nhash of the created block.\nCalls <code>U::from(self)</code>.\nCollects all the methods and subscriptions defined in the …\nCreate new <code>ManualSeal</code> with the given reference to the …\nuncompacted storage proof size (zero mean that there is no …\nreport any errors or successes encountered by the …\nif true, empty blocks(without extrinsics) will be created. …\ninstantly finalize this block?\nhash of the block\nfinalization justification\nspecify the parent hash of the about-to-created block\nsender to report errors/success to the rpc.\nsender to report errors/success to the rpc.\nDifficulty for the algorithm.\nIntermediate key for PoW engine.\nA build of mining, containing the metadata and the block …\nMining worker that exposes structs to query the current …\nMining metadata. This is the information needed to start …\nAuxiliary storage prefix for PoW engine.\nAlgorithm used for proof of work.\nAuxiliary storage data for PoW.\nA block importer for PoW.\nThe PoW import queue type.\nIntermediate value passed to block importer.\nA verifier for PoW blocks.\nGet the current best hash. <code>None</code> if the worker has just …\nCurrently known best hash which the pre-hash is built on.\nBreak a fork choice tie.\nGet the next block’s difficulty.\nMining target difficulty.\nDifficulty of the block, if known.\nDifficulty of the current block.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nImport queue for PoW engine.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet a copy of the current mining metadata, if available.\nMining metadata.\nCreate a new block import suitable to be used in PoW\nMining pre-hash.\nPre-runtime digest item.\nVerify that the seal is valid against given pre hash when …\nMining proposal.\nRead the auxiliary from client.\nStart the mining worker for PoW. This function provides …\nSubmit a mined seal. The seal will be validated again. …\nTotal difficulty up to current block.\nVerify that the difficulty is valid against given seal.\nGet the version of the mining worker.\nAuxiliary data necessary for authoring.\nTrait for providing the strategy for when to backoff block …\nA simple default strategy for how to decide backing off …\nA handle to a <code>BlockImport</code>.\nA header which is fully checked, including signature. This …\nA header which has been checked\nData associated with a slot claim.\nThe type of future resolving to the proposer.\nA header which has slot in the future. this is the full …\nIncrease the lenience exponentially with the number of …\nSlot specific extension that the inherent data provider …\nA handle to a <code>JustificationSyncLink</code>, allows hooking into …\nIncrease the lenience linearly with the number of skipped …\nWe keep at least this number of slots in database.\nWe prune slots when they reach this number.\nThe type of proposer to use to build blocks.\nA skeleton implementation for <code>SlotWorker</code> which tries to …\nA type that implements <code>SlotWorker</code> for a type that …\nInformation about a slot.\nThe strategy used to calculate the slot lenience used to …\nA unit type wrapper to express the proportion of a slot.\nThe result of <code>SlotWorker::on_slot</code>.\nA worker that should be invoked at every new slot.\nThe changes that need to applied to the storage to create …\nA handle to a <code>SyncOracle</code>.\nScales the backoff rate. A higher value effectively means …\nReturns the number of authorities. None indicate that the …\nReturns the auxiliary data necessary for authoring.\nThe block that was built.\nA handle to a <code>BlockImport</code>.\nReturns a function which produces a <code>BlockImportParams</code>.\nSome potential block size limit for the block to be …\nThe chain header this slot is based on.\nChecks if the header is an equivocation and returns the …\nAll changes to the child storages.\nTries to claim the given slot, returning an object with …\nCalls <code>create_inherent_data</code> and handles errors.\nThe inherent data provider.\nSlot duration.\nThe instant at which the slot ends.\nWhether to force authoring if offline.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a handle to a <code>JustificationSyncLink</code>.\nThe logging target to use when logging messages.\nAll changes to the main storage.\nThe max interval to backoff when authoring blocks, …\nCreate a new <code>SlotInfo</code>.\nNotifies the given slot. Similar to <code>claim_slot</code>, but will …\nOffchain state changes to write to the offchain database.\nCalled when a new slot is triggered.\nImplements <code>SlotWorker::on_slot</code>.\nReturn the pre digest data to include in a block authored …\nPropose a block by <code>Proposer</code>.\nReturns a <code>Proposer</code> to author on top of the given block.\nCalculate the remaining duration for block proposal taking …\nRemaining duration for proposing.\nReturns true if we should backoff authoring new blocks.\nReturns whether the block production should back off.\nThe current slot that will be found in the <code>InherentData</code>.\nThe slot number as found in the inherent data.\nCalculate a slot duration lenience based on the number of …\nCalculate a slot duration lenience based on the number of …\nStart a new slot worker.\nThe storage proof that was recorded while building the …\nReturns a handle to a <code>SyncOracle</code>.\nReturns a <code>TelemetryHandle</code> if any.\nReturns the duration until the next slot from now.\nA transaction for the backend that contains all changes …\nChanges to the transaction index,\nThe storage root after applying the transaction.\nThe number of unfinalized blocks allowed before starting …\nTrait that allows zero-copy read/write of value-references …\nUses the Wasmtime compiled runtime.\nDefault heap allocation pages.\nDefault heap allocation strategy.\nAllocate the initial heap pages as requested by the wasm …\nHost functions for custom runtime interfaces that should …\nThe Substrate externalities.\nDefines the heap pages allocation strategy the wasm …\nSomething that provides implementations for host functions.\nA generic <code>CodeExecutor</code> implementation that uses a delegate …\nDelegate for dispatching a CodeExecutor call.\nThe version of the native runtime.\nPool the instances to avoid initializing everything from …\nPool the instances to avoid initializing everything from …\nRecreate the instance from scratch on every instantiation. …\nRecreate the instance from scratch on every instantiation. …\nRuntime version. This should not be thought of as classic …\nExtracts the runtime version of a given runtime code.\nAllocate a static number of heap pages.\nSpecification of different methods of executing the …\nAn abstraction over Wasm code executor. Supports selecting …\nThe instantiation strategy to use for the WASM executor.\nIgnore missing function imports if set true.\nIgnore missing function imports if set true.\nList of supported API “features” along with their …\n<code>authoring_version</code> is the version of the authorship …\nInstantiate a builder for creating an instance of <code>Self</code>.\nCheck if this version matches other version for authoring …\nAuthoring runtimes (<code>spec_version</code>s) that this native …\nRead child runtime storage.\nGet child storage value hash.\nGet the trie root of a child storage map.\nClear child storage entries which keys are start with the …\nClear a child storage entry (<code>key</code>) of current contract …\nClear a child storage entry (<code>key</code>) of current contract …\nClear a child storage entry (<code>key</code>) of current contract …\nClear storage entries which keys are start with the given …\nClear a storage entry (<code>key</code>) of current contract being …\nClear a storage entry (<code>key</code>) of current contract being …\nClear a storage entry (<code>key</code>) of current contract being …\n…\nDisable to use native runtime when possible just behave …\nDispatch a method in the runtime.\nRust executor possible errors.\nWhether a child storage entry exists.\nWhether a child storage entry exists.\nWhether a child storage entry exists.\nWhether a storage entry exists.\nWhether a storage entry exists.\nWhether a storage entry exists.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\n…\n…\nReturns the host functions <code>Self</code> provides.\nName of the implementation of the spec. This is of little …\nVersion of the implementation of the specification.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClear an entire child storage.\nProvide native runtime version.\nCreate new instance.\nCreate new instance.\nCreate a new instance using the given <code>WasmExecutor</code>.\nReturns the key immediately following the given key, if it …\nReturns the key immediately following the given key, if it …\nSet or clear a child storage entry.\nSet or clear a storage entry (<code>key</code>) of current contract …\n…\n…\n…\nTake the runtime blob and scan it for the custom wasm …\n…\nStatically registers the host functions.\n…\nExtract <code>RuntimeVersion</code> of the given <code>runtime_code</code>.\nBasic runtime version info.\nSet child storage entry <code>key</code> of current contract being …\nSet child storage entry <code>key</code> of current contract being …\nSet child storage entry <code>key</code> of current contract being …\nWrite a key value pair to the offchain storage database.\nSet storage entry <code>key</code> of current contract being called …\nSet storage entry <code>key</code> of current contract being called …\nSet storage entry <code>key</code> of current contract being called …\n…\nIdentifies the different Substrate runtimes. There’ll be …\nVersion of the runtime specification.\nRead runtime storage.\nAppend storage item.\nCommit the last transaction started by …\nGet storage value hash.\nIndex specified transaction slice and store it.\nIndex specified transaction slice and store it.\nIndex specified transaction slice and store it.\nRenew existing piece of transaction storage.\nRenew existing piece of transaction storage.\nRenew existing piece of transaction storage.\nRollback the last transaction started by …\nGet the trie root of the current storage map.\nStart a new nested transaction.\nVersion of the system implementation used by this runtime. …\nAll existing calls (dispatchables) are fully compatible …\n…\nSet up the externalities and safe calling environment to …\nExecute the given closure <code>f</code> with the latest runtime (based …\nThe number of pages that will be added on top of the …\nThe absolute maximum size of the linear memory (in pages).\nThe instantiation strategy to use.\nA WASM backtrace.\nFailure to erase the wasm memory.\nContains the error value\nError type.\nInstantiation error.\nAn error message with an attached backtrace.\nContains the success value\nOther error happened.\nResult type alias.\nType for errors occurring during Wasm runtime construction.\nThe backtrace associated with the error message.\nThe string containing the backtrace.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe error message.\nMaximum number of bytes <code>ReturnValue</code> might occupy when …\nContains the error value\nA wrapper which merges two sets of host functions, and …\nAn <code>f32</code> value type.\nA 32-bit floating-point number stored as raw bit pattern.\nAn <code>f64</code> value type.\nA 64-bit floating-point number stored as raw bit pattern.\nSomething that provides a function implementation on the …\nContext used by <code>Function</code> to interact with the allocator …\nA trait used to statically register host callbacks with …\nSomething that provides implementations for host functions.\nAn <code>i32</code> value type.\nA 32-bit integer.\nAn <code>i64</code> value type.\nA 64-bit integer.\nSomething that can be converted into a wasm compatible …\nA trait that requires <code>RefUnwindSafe</code> when <code>feature = std</code>.\nContains the success value\nType to represent a pointer in wasm at the host.\nSomething that can be wrapped in a wasm <code>Pointer</code>.\nResult type used by traits in this crate.\nTyped value that can be returned from a function.\nThe size of the type in wasm.\nThe Signature of a function\nSomething that can may be created from a wasm <code>Value</code>.\nFor returning nothing.\nThe type of the value in wasm.\nValues supported by Substrate on the boundary between …\nFor returning some concrete value.\nValue types supported by Substrate on the boundary between …\nA trait for types directly usable at the WASM FFI boundary …\nThe word size used in wasm. Normally known as <code>usize</code> in …\nAllocate a memory instance of <code>size</code> bytes.\nThe arguments of a function.\nReturn <code>Self</code> as <code>i32</code>.\nCast this pointer of type <code>T</code> to a pointer of type <code>R</code>.\nDeallocate a given memory instance.\nExecute this function with the given arguments.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the host functions <code>Self</code> provides.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert <code>self</code> into a wasm <code>Value</code>.\nReturns the name of this function.\nCreate a new instance of <code>Self</code>.\nCreate a new instance of <code>Signature</code>.\nCreate a new instance of <code>Signature</code> with the given <code>args</code> and …\nCreate a null pointer.\nCalculate the offset from this pointer.\nRead memory from <code>address</code> into a vector.\nRead memory into the given <code>dest</code> buffer from <code>address</code>.\nRegisters a panic error message within the executor.\nStatically registers the host functions.\nRegisters a given host function with the WASM executor.\nThe optional return value of a function.\nReturns the signature of this function.\nTry to convert the given <code>Value</code> into <code>Self</code>.\nReturns the type of this value.\nWraps the given <code>caller</code> in a type which implements …\nWrite the given data at <code>address</code> into the memory.\nIterator of a chain of source errors.\nProvides the <code>context</code> method for <code>Result</code>.\nContains the error value\nThe <code>Error</code> type, a wrapper around a dynamic error type.\nEquivalent to <code>Ok::&lt;_, anyhow::Error&gt;(value)</code>.\nContains the success value\n<code>Result&lt;T, Error&gt;</code>\nConstruct an ad-hoc error from a string or existing non-…\nReturn early with an error.\nWrap the error value with additional context.\nReturn early with an error if a condition is not satisfied.\nConstruct an ad-hoc error from a string or existing non-…\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nWrap the error value with additional context that is …\nThe <code>anyref</code> type, aka <code>(ref null any)</code>.\nThe <code>anyref</code> type, aka <code>(ref null any)</code>.\nThe <code>arrayref</code> type, aka <code>(ref null array)</code>.\nThe <code>arrayref</code> type, aka <code>(ref null array)</code>.\nAttempted an allocation that was too large to succeed.\nWhen the <code>component-model</code> feature is enabled this trap …\nThe abstract <code>any</code> heap type represents all internal Wasm …\nAn internal reference.\nAn <code>anyref</code> GC reference.\nAn internal reference.\nThe abstract <code>array</code> heap type represents a reference to any …\nAttempt to access beyond the bounds of an array.\nA reference to a GC-managed <code>array</code> instance.\nAn allocator for a particular Wasm GC array type.\nThe type of a WebAssembly array.\nA trait used to get shared access to a <code>Store</code> in Wasmtime.\nA trait used to get exclusive mutable access to a <code>Store</code> in …\nAsync event loop deadlocked; i.e. it cannot make further …\nUsed to indicate that a trap was raised by atomic wait …\nAn indicator that the compilation strategy should be …\nAn indicator that the garbage collector should be …\nUse MPK if supported by the current system; fall back to …\nGenerates the fastest possible code, but may take longer.\nFailed float-to-int conversion.\nSignature mismatch on indirect call.\nThe <code>contref</code> type, aka <code>(ref null cont)</code>.\nThe <code>contref</code> type, aka <code>(ref null cont)</code>.\nGlobal configuration for how the cache is managed\nGlobal configuration for how the cache is managed\nPassed to the argument of [<code>Store::call_hook</code>] to indicate a …\nA structure representing the caller’s context when …\nIndicates the VM is calling a host function, from …\nIndicates the VM is calling a WebAssembly function, from …\nWhen the <code>component-model</code> feature is enabled this trap …\nAttempted to cast a reference to a type that it is not an …\nBuilder-style structure used to create a <code>Module</code> or …\nReturn value of <code>CodeBuilder::hint</code>\nManagement of executable memory within a <code>MmapVec</code>\nPossible garbage collector implementations for Wasm.\nA compiled wasm module, ready to be instantiated.\nHint that the code being compiled is a component.\nThe input bytes look like a precompiled wasm component.\nA reference to an array of a specific, concrete type.\nA reference to a continuation of a specific, concrete type.\nA reference to a function of a specific, concrete type.\nA reference to an struct of a specific, concrete type.\nGlobal configuration options used to create an <code>Engine</code> and …\nThe global value, struct field, or array elements are …\nThe <code>cont</code> heap type represents a reference to any kind of …\nA WebAssembly continuation descriptor.\nAttempt to resume a continuation twice.\nExtend the deadline by the specified number of ticks.\nCurrently the default backend, Cranelift aims to be a …\nUse a custom version string. Must be at most 255 bytes.\nInterface implemented by an embedder to provide custom …\nValue returned by <code>ResourceLimiter::instances</code> default method\nValue returned by <code>ResourceLimiter::memories</code> default method\nValue returned by <code>ResourceLimiter::tables</code> default method\nThe host information associated with the <code>Store</code>, aka the <code>T</code> …\nThe deferred reference-counting collector.\nSupport is disabled, and wasmtime will not parse debug …\nDo not use MPK.\nA Pulley opcode was executed at runtime when the opcode …\nThe <code>eqref</code> type, aka <code>(ref null eq)</code>.\nThe <code>eqref</code> type, aka <code>(ref null eq)</code>.\nThe <code>externref</code> type, aka <code>(ref null extern)</code>.\nThe <code>externref</code> type, aka <code>(ref null extern)</code>.\nSupport is unconditionally enabled and wasmtime will parse …\nUse MPK or fail if not supported.\nAn <code>Engine</code> which is a global context for compilation and …\nA weak reference to an <code>Engine</code>.\nSupport for backtrace details is conditional on the …\nThe abstract <code>eq</code> heap type represenets all internal Wasm …\nA reference to a GC-managed object that can be tested for …\nContains the error value\nThe <code>Error</code> type, a wrapper around a dynamic error type.\nAn exported WebAssembly value.\nA descriptor for an exported WebAssembly value.\nAn external item to a WebAssembly module, or a list of …\nThe abstract <code>extern</code> heap type represents external host …\nA reference to an value outside of the Wasm heap.\nAn opaque, GC-managed reference to some host data that can …\nAn external reference.\nA list of all possible types which can be externally …\nFloating point 32 bit integer.\nA 32-bit float.\nFloating point 64 bit integer.\nA 64-bit float.\nThe <code>funcref</code> type, aka <code>(ref null func)</code>.\nThe <code>funcref</code> type, aka <code>(ref null func)</code>.\nThe type of a <code>struct</code> field or an <code>array</code>’s elements.\nThe associated type is final.\nIndicator of whether a type is final or not.\nDescription of a frame in a backtrace for a <code>WasmBacktrace</code>.\nDebug information for a symbol that is attached to a …\nA WebAssembly function which can be called.\nA WebAssembly <code>func</code> which can be called.\nThe abstract <code>func</code> heap type represents a reference to any …\nThis external type is the type of a WebAssembly function.\nA first-class reference to a WebAssembly function.\nA function reference.\nThe type of a WebAssembly function.\nAn error returned when attempting to allocate a GC-managed …\nA common trait implemented by all garbage-collected …\nA WebAssembly <code>global</code> value which can be read and written …\nA WebAssembly <code>global</code> which acts like a <code>Cell&lt;T&gt;</code> of sorts, …\nThis external type is the type of a WebAssembly global.\nA WebAssembly global descriptor.\nCollects basic profiling data for a single WebAssembly …\nA wasm atomic operation was presented with a …\nThe heap types that can Wasm can have references to.\n<code>i16</code>, a 16-bit integer.\nA 31-bit integer.\nThe <code>i31</code> heap type represents unboxed 31-bit integers.\nThe <code>i31ref</code> type, aka <code>(ref null i31)</code>.\nThe <code>i31ref</code> type, aka <code>(ref null i31)</code>.\nSigned 32 bit integer.\nA 32-bit integer.\nSigned 64 bit integer.\nA 64-bit integer.\n<code>i8</code>, an 8-bit integer.\nA descriptor for an imported value into a wasm module.\nIndirect call to a null table entry.\nAn instantiated WebAssembly module.\nRepresents the module instance allocation strategy to use.\nAn instance, pre-instantiation, that is ready to be …\nAn integer division by zero.\nAn integer arithmetic operation caused an overflow.\nExecution has potentially run too long and may be …\nInternal trait implemented for all arguments that can be …\nCollect profiling info for “jitdump” file format, used …\nA linear memory. This trait provides an interface for raw …\nStructure used to link wasm modules/instances together.\nA rooted reference to a garbage-collected <code>T</code> with arbitrary …\nA WebAssembly linear memory.\nA WebAssembly linear memory.\nThis external type is the type of a WebAssembly memory.\nError for out of bounds <code>Memory</code> access.\nA memory creator. Can be used to provide a memory creator …\nAn out-of-bounds memory access.\nA descriptor for a WebAssembly memory type.\nA builder for <code>MemoryType</code>s.\nIndicates that <code>wait</code> did not complete and instead returned …\nA compiled WebAssembly module, ready to be instantiated.\nHint that the code being compiled is a module.\nThe input bytes look like a precompiled core wasm module.\nDescribes the location of an export in a module.\nConfigure the strategy used for versioning in serializing …\nDescribe the tri-state configuration of memory protection …\nIndicator of whether a global value, struct’s field, or …\nThe <code>nullcontref</code> type, aka. <code>(ref null nocont)</code>.\nThe <code>nullcontref</code> type, aka <code>(ref null nocont)</code>.\nThe <code>nullexternref</code> type, aka <code>(ref null noextern)</code>.\nThe <code>nullexternref</code> type, aka <code>(ref null noextern)</code>.\nThe <code>nullfuncref</code> type, aka <code>(ref null nofunc)</code>.\nThe <code>nullfuncref</code> type, aka <code>(ref null nofunc)</code>.\nThe <code>nullref</code> type, aka <code>(ref null none)</code>.\nThe <code>nullref</code> type, aka <code>(ref null none)</code>.\nAsync-lifted export failed to produce a result by calling …\nThe <code>nocont</code> heap type represents the null continuation …\nA reference to the abstract <code>noextern</code> heap value.\nThe abstract <code>noextern</code> heap type represents the null …\nA reference to the abstract <code>nofunc</code> heap value.\nThe abstract <code>nofunc</code> heap type represents the null function …\nThe associated type is not final.\nThe abstract <code>none</code> heap type represents the null internal …\nEmit no version string in serialization, and accept all …\nNo optimizations performed, minimizes compilation time by …\nNo profiler support.\nA reference to the abstract <code>none</code> heap value.\nThe null collector.\nCall to a null reference.\nContains the success value\nIndicates that a <code>wait</code> completed by being awoken by a …\nThe on-demand instance allocation strategy.\nPossible optimization levels for the Cranelift codegen …\nWhen wasm code is configured to consume fuel and it runs …\nCollect function name information as the “perf map” …\nAn error returned when the pooling allocator cannot …\nThe pooling instance allocation strategy.\nConfiguration options used with …\nReturn value from the <code>Engine::detect_precompiled</code> API.\nSelect which profiling technique to support.\nSupport for profiling Pulley, Wasmtime’s interpreter. …\nA reference.\nAn opaque reference to some type on the heap.\nOpaque references to data in the Wasm heap or to host data.\nPossible register allocator algorithms for the Cranelift …\nUsed by hosts to limit resource consumption of instances.\nA summary of the amount of resources required to …\n<code>Result&lt;T, Error&gt;</code>\nIndicates the VM is returning from a host function, to …\nIndicates the VM is returning from a WebAssembly function, …\nNested rooting scopes.\nA scoped, rooted reference to a garbage-collected <code>T</code>.\nA trait implemented for GC references that are guaranteed …\nThe <code>structref</code> type, aka <code>(ref null struct)</code>.\nThe <code>structref</code> type, aka <code>(ref null struct)</code>.\nA constructor for externally-created shared memory.\nA WebAssembly shared memory; these are handled separately …\nGenerates the fastest possible code, but may take longer.\nSimilar to <code>speed</code>, but also performs transformations aimed …\nThe current stack space was exhausted.\nThe storage type of a <code>struct</code> field or <code>array</code> element.\nA <code>Store</code> is a collection of WebAssembly instances and …\nA temporary handle to a <code>&amp;Store&lt;T&gt;</code>.\nA temporary handle to a <code>&amp;mut Store&lt;T&gt;</code>.\nProvides limits for a <code>Store</code>.\nUsed to build <code>StoreLimits</code>.\nPossible Compilation strategies for a wasm module.\nThe abstract <code>struct</code> heap type represents a reference to …\nA reference to a GC-managed <code>struct</code> instance.\nAn allocator for a particular Wasm GC struct type.\nThe type of a WebAssembly struct.\nA WebAssembly <code>table</code>, or an array of values.\nA WebAssembly <code>table</code> which is an array of <code>Val</code> reference …\nThis external type is the type of a WebAssembly table.\nAn out-of-bounds access to a table.\nA descriptor for a table in a WebAssembly module.\nA WebAssembly <code>tag</code>.\nA WebAssembly exception or control tag which can be …\nThis external type is the type of a WebAssembly tag.\nA descriptor for a tag in a WebAssembly module.\nIndicates that <code>wait</code> completed with a timeout, meaning that …\nA statically typed WebAssembly function.\nWe are suspending to a tag for which there is no active …\nError for an unresolvable import.\nCode that was supposed to have been unreachable was …\nWhat to do after returning from a callback when the engine …\nRepresentation of a 128-bit vector type, <code>v128</code>, for …\nA 128 bit number.\nA 128-bit number.\nCollect profiling info using the “ittapi”, used with …\nPossible runtime values that a WebAssembly module can …\nA “raw” and unsafe representation of a WebAssembly …\nA list of all possible value types in WebAssembly.\nA value type.\nThe value of the global, struct field, or array elements …\nResult of <code>Memory::atomic_wait32</code> and <code>Memory::atomic_wait64</code>\nRepresentation of a backtrace of function frames in a …\nSelect how wasm backtrace detailed information is handled.\nA trait used for <code>Func::typed</code> and with <code>TypedFunc</code> to …\nA trait used for <code>Func::typed</code> and with <code>TypedFunc</code> to …\nA trait implemented for types which can be returned from …\nA trait implemented for types which can be arguments and …\nTrait implemented for various tuples made up of types …\nUse the wasmtime crate’s Cargo package version.\nA baseline compiler for WebAssembly, currently under …\nGet the map from <code>.text</code> section offsets to Wasm binary …\nReturns the encoded address map section used to pass to …\nAliases one item’s name as another.\nAliases one module’s name as another.\nSets the instance allocation strategy to use.\nConfigures whether this <code>Linker</code> will shadow previous …\nConfigures whether this <code>Linker</code> will allow unknown exports …\nReturns <code>allowed_clock_drift_for_files_from_future</code>.\nReturns <code>allowed_clock_drift_for_files_from_future</code>.\nAttempt to access the underlying value of this <code>Val</code>, …\nAttempt to access the underlying <code>anyref</code> value of this <code>Val</code>.\nCreates a WebAssembly <code>anyref</code> value\nGet the array-to-Wasm trampoline for the function <code>index</code> …\nGet the underlying <code>any</code> reference, if any.\nDowncast this <code>anyref</code> to an <code>arrayref</code>.\nDowncast this <code>eqref</code> to an <code>arrayref</code>.\nGet the underlying concrete, user-defined array type, if …\nGet the underlying concrete, user-defined continuation …\nGet the underlying concrete, user-defined function type, …\nGet the underlying concrete, user-defined struct type, if …\nReturns the store context that this type provides access …\nReturns the store context that this type provides access …\nDowncast this <code>anyref</code> to an <code>eqref</code>.\nGet the underlying <code>extern</code> reference, if any.\nGet the underlying <code>func</code> reference, if any.\nDowncast this <code>anyref</code> to an <code>i31</code>.\nDowncast this <code>eqref</code> to an <code>i31</code>.\nReturn the allocated memory as a mutable pointer to u8.\nGet the underlying reference type, if this value type is a …\nDowncast this <code>anyref</code> to a <code>structref</code>.\nDowncast this <code>eqref</code> to a <code>structref</code>.\nReturns the representation of this <code>v128</code> as a 128-bit …\nGet this storage type’s underlying value type, if any.\nEquivalent of the WebAssembly <code>memory.atomic.notify</code> …\nEquivalent of the WebAssembly <code>memory.atomic.wait32</code> …\nEquivalent of the WebAssembly <code>memory.atomic.wait64</code> …\nGet the backtrace for this Error.\nReturns <code>baseline_compression_level</code>.\nReturns <code>baseline_compression_level</code>.\nGet the bottom type of this heap type’s type hierarchy.\nConsumes this builder and returns the <code>StoreLimits</code>.\nGet the underlying memory type that this builder has been …\nCreates a new <code>MemoryTypeBuilder</code> to configure all the …\nReturns byte capacity of this linear memory’s current …\nReturns the number of allocated bytes which are accessible …\nSet a custom <code>Cache</code>.\nReturns the number of cache hits seen so far\nReturns the number of cache misses seen so far\nInvokes this WebAssembly function with the specified …\nInvokes this function with the <code>params</code> given and writes …\nAdd a marker for transitions between guest and host to the …\nInvokes this function in an “unchecked” fashion, …\nCaptures a trace of the WebAssembly frames on the stack …\nAn iterator of the chain of source errors contained by …\nReturns <code>cleanup_interval</code>.\nReturns <code>cleanup_interval</code>.\nClone this <code>ManuallyRooted</code>.\nReturns the underlying owned mmap of this compiled image.\nConfigures which garbage collector will be used for Wasm …\nReturns the 1-indexed source code column number this …\nSame as <code>CodeBuilder::compile_module_serialized</code> except that …\nFinishes this compilation and produces a serialized list …\nReturns the configuration settings that this engine is …\nConfigures whether execution of WebAssembly will “…\nReturns the value type of this global descriptor.\nWrap the error value with additional context.\nConvert an <code>anyref</code> into an <code>externref</code>.\nConvert an <code>externref</code> into an <code>anyref</code>.\nCopy <code>len</code> elements from <code>src_table[src_index..]</code> into …\nConfigures whether the debug verifier of Cranelift is …\nAllows setting a Cranelift boolean flag or preset. This …\nAllows settings another Cranelift flag defined by a flag …\nConfigures whether Cranelift should perform a …\nConfigures the Cranelift code generator optimization level.\nControls whether proof-carrying code (PCC) is used to …\nConfigures the regalloc algorithm used by the Cranelift …\nAccess the underlying data owned by this <code>Store</code>.\nAccess the underlying data owned by this <code>Store</code>.\nAccess the underlying data owned by this <code>Store</code>.\nAccess the underlying data owned by this <code>Store</code>.\nGet a shared borrow of the underlying data for this …\nReturns this memory as a native Rust slice.\nReturn access to the available portion of the shared …\nSame as <code>Memory::data_mut</code>, but also returns the <code>T</code> from the …\nAccess the underlying data owned by this <code>Store</code>.\nAccess the underlying data owned by this <code>Store</code>.\nAccess the underlying data owned by this <code>Store</code>.\nGet an exclusive borrow of the underlying data for this …\nReturns this memory as a native Rust mutable slice.\nReturns the base pointer, in the host’s address space, …\nReturns the byte length of this memory.\nReturns the byte length of this memory.\nConfigures whether DWARF debug information will be emitted …\nThe target number of decommits to do per batch.\nReturns the default value for the given type, if any …\nConstruct a default value. Returns None for non-nullable …\nConstruct a default value, if possible for the underlying …\nConstruct a func which returns results of default value, …\nDefines a new item in this <code>Linker</code>.\nSame as <code>Linker::define</code>, except only the name of the import …\nImplement any function imports of the <code>Module</code> with a …\nImplement any imports of the given <code>Module</code> with a function …\nDeserializes an in-memory compiled module previously …\nSame as <code>deserialize</code>, except that the contents of <code>path</code> are …\nSame as <code>deserialize_file</code>, except that it takes an open <code>File</code>\nIn-place deserialization of an in-memory compiled module …\nConfigures an embedder-provided function, <code>detect</code>, which is …\nDetects whether the bytes provided are a precompiled …\nLike <code>Engine::detect_precompiled</code>, but performs the …\nReturns path to the cache directory.\nReturns path to the cache directory.\nAttempt to downcast the error object to a concrete type.\nDowncast this error object by mutable reference.\nDowncast this error object by reference.\nSet the DWARF package binary.\nExplicitly specify DWARF <code>.dwp</code> path.\nReturns the element value type of this table.\nGet this field type’s storage type.\nGet the storage type used for this array type’s elements.\nGet the values of this array’s elements.\nEnables clif output when compiling a WebAssembly module.\nReturns the underlying <code>Engine</code> this store is connected to.\nReturns the <code>Engine</code> this is connected to.\nReturns the underlying <code>Engine</code> this store is connected to.\nReturns the underlying <code>Engine</code> this store is connected to.\nReturns the <code>Engine</code> that this store is associated with.\nReturns the <code>Engine</code> that this <code>Module</code> was compiled by.\nGet the engine that this struct type is associated with.\nGet the engine that this array type is associated with.\nGet the engine that this function type is associated with.\nGet the engine that this function type is associated with.\nIndicates the VM is entering host code (exiting …\nConfigures epoch-deadline expiration to invoke a custom …\nConfigures epoch-deadline expiration to trap.\nConfigures epoch-deadline expiration to trap.\nEnables epoch-based interruption.\nDetermines whether this tag is reference equal to the other\nIs value type <code>a</code> precisely equal to value type <code>b</code>?\nIs reference type <code>a</code> precisely equal to reference type <code>b</code>?\nIs heap type <code>a</code> precisely equal to heap type <code>b</code>?\nIs field type <code>a</code> precisely equal to field type <code>b</code>?\nIs field type <code>a</code> precisely equal to field type <code>b</code>?\nIs struct type <code>a</code> precisely equal to struct type <code>b</code>?\nIs array type <code>a</code> precisely equal to array type <code>b</code>?\nIs function type <code>a</code> precisely equal to function type <code>b</code>?\nIndicates the VM is exiting host code (entering …\nReturns the list of exported items from this <code>Instance</code>.\nReturns the list of exports that this <code>Module</code> has and will …\nAttempt to access the underlying value of this <code>Val</code>, …\nAttempt to access the underlying <code>externref</code> value of this …\nCreates a WebAssembly <code>externref</code> value\nAttempt to access the underlying value of this <code>Val</code>, …\nCreates a WebAssembly <code>f32</code> value\nAttempt to access the underlying value of this <code>Val</code>, …\nCreates a WebAssembly <code>f64</code> value\nGet this struct’s <code>index</code>th field.\nGet the <code>i</code>th field type.\nGet this array’s underlying field type.\nGet the values of this struct’s fields.\nReturns the list of field types for this function.\nReturns the source code filename this symbol was defined …\nReturns <code>file_count_limit_percent_if_deleting</code>.\nReturns <code>file_count_limit_percent_if_deleting</code>.\nReturns <code>file_count_soft_limit</code>.\nReturns <code>file_count_soft_limit</code>.\nReturns <code>files_total_size_limit_percent_if_deleting</code>.\nReturns <code>files_total_size_limit_percent_if_deleting</code>.\nReturns <code>files_total_size_soft_limit</code>.\nReturns <code>files_total_size_soft_limit</code>.\nFill <code>table[dst..(dst + len)]</code> with the given value.\nGet the finality of this struct type.\nGet the finality of this array type.\nGet the finality of this function type.\nWhen the guest finishes running, call this function to …\nReturns the body of the function that <code>index</code> points to.\nReturns an iterator over all functions defined within this …\nUnconditionally captures a trace of the WebAssembly frames …\nA configuration option to force the usage of <code>memfd_create</code> …\nReturns a list of function frames in WebAssembly this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>CompiledModule</code> directly from a precompiled …\nCreates a new WebAssembly <code>Module</code> from the given in-memory …\nConstruct an error object from a type-erased standard …\nLoads cache configuration specified at <code>path</code>.\nLoads cache configuration specified at <code>path</code>.\nCreates a new WebAssembly <code>Module</code> from the contents of the …\nConstruct an <code>anyref</code> from an <code>i31</code>.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nConverts the raw representation of a <code>funcref</code> into an …\nCreates a new strongly-owned <code>AnyRef</code> from the raw value …\nCreates a new strongly-owned <code>ExternRef</code> from the raw value …\nConvenience method to convert a <code>ValRaw</code> into a <code>Val</code>.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreates a new WebAssembly <code>Module</code> from the contents of the …\nConverts a byte back into a <code>Trap</code> if its in-bounds\nConfigures this <code>Store</code> to yield while executing futures …\nConfigures this <code>Store</code> to periodically yield while …\nConfigures a <code>Store</code> to yield execution of async WebAssembly …\nReturns the underlying <code>Func</code> that this is wrapping, losing …\nAttempt to return the underlying type of this external …\nLookups a defined function by a program counter value.\nReturns the WebAssembly function index for this frame.\nGets the function location information for a given …\nLooks up the <code>name</code> section name for the function index <code>idx</code>, …\nReturns a descriptive name of the function for this frame, …\nReturns the data in the <code>ELF_NAME_DATA</code> section.\nCreates a <code>Func::new</code>-style function named in this linker.\nCreates a <code>Func::new_unchecked</code>-style function named in this …\nReturns the offset from the original wasm module’s …\nAttempt to access the underlying value of this <code>Val</code>, …\nReturns the original binary offset in the file that <code>index</code> …\nDefine a host function within this linker.\nAttempt to access the underlying <code>funcref</code> value of this <code>Val</code>.\nCreates a WebAssembly <code>funcref</code> value\nGet information about functions in this module’s <code>.text</code> …\nPerform garbage collection.\nPerform garbage collection of <code>ExternRef</code>s.\nPerform garbage collection.\nConfigures whether compiled artifacts will contain …\nLooks up a previously defined value in this <code>Linker</code>, …\nReturns the current <code>Val</code> of this global.\nReturns the table element value at <code>index</code>.\nGet this array’s <code>index</code>th element.\nGets the WebAssembly <code>anyref</code> value\nLooks up a value in this <code>Linker</code> which matches the <code>import</code> …\nReturns the “default export” of a module.\nLooks up an export from the caller’s module by the <code>name</code> …\nLooks up an exported <code>Extern</code> value by name.\nLooks up an export in this <code>Module</code> by name.\nLooks up an export in this <code>Module</code> by name to get its index.\nGets the WebAssembly <code>externref</code> value\nGets the WebAssembly <code>f32</code> value\nGets the WebAssembly <code>f64</code> value\nReturns the remaining fuel in the store.\nReturns the remaining fuel in this store.\nReturns remaining fuel in this store.\nReturns the amount fuel in this <code>Store</code>. When fuel is …\nLooks up an exported <code>Func</code> value by name.\nGets the WebAssembly <code>funcref</code> value\nLooks up an exported <code>Global</code> value by name.\nGet this <code>I31</code>’s value as a signed integer.\nGets the WebAssembly <code>i32</code> value\nGets the WebAssembly <code>i64</code> value\nLooks up an exported <code>Memory</code> value by name.\nLooks up an exported <code>Extern</code> value by a <code>ModuleExport</code> value.\nLooks up an exported <code>Extern</code> value by a <code>ModuleExport</code> value.\nLooks up an exported <code>SharedMemory</code> value by name.\nLooks up an exported <code>Table</code> value by name.\nLooks up a tag <code>Tag</code> by name.\nLooks up an exported <code>Func</code> value by name and with its type.\nGet this <code>I31</code>’s value as an unsigned integer.\nGets the WebAssembly <code>i32</code> value\nGets the WebAssembly <code>i64</code> value\nGets the WebAssembly <code>v128</code> value\nAttempt to return the underlying type of this external …\nGrows the size of this table by <code>delta</code> more elements, …\nGrows this WebAssembly memory by <code>delta</code> pages.\nGrows this WebAssembly memory by <code>delta</code> pages.\nGrows this memory to have the <code>new_size</code>, in bytes, …\nIndicates whether a guard region is present before …\nIndicates whether this module came with n address map such …\nReturns whether the original wasm module had unparsed …\nThe heap type that this is a reference to.\nReturns a hint, if possible, of what the provided bytes …\nAttempt to access the underlying value of this <code>Val</code>, …\nCreates a WebAssembly <code>i32</code> value\nAttempt to access the underlying value of this <code>Val</code>, …\nCreates a WebAssembly <code>i64</code> value\nReturns the range of bytes in memory where this module’s …\nReturns the list of imports that this <code>Module</code> has and must …\nIncrements the epoch.\nForce initialization of copy-on-write images to happen …\nConvenience wrapper to define an entire <code>Instance</code> in this …\nThe maximum number of instances that can be created for a …\nThe maximum number of instances that can be created for a …\nInstantiates this instance, creating a new instance within …\nAttempts to instantiate the <code>module</code> provided.\nPerforms all checks necessary for instantiating <code>module</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert to a standard library error trait object.\nConsumes this <code>Store</code>, destroying it, and returns the …\nConsume this <code>Export</code> and return the contained <code>Extern</code>.\nReturns the underlying <code>Func</code>, if this external is a …\nConsume this <code>Export</code> and return the contained <code>Func</code>, if it’…\nReturns the underlying <code>Global</code>, if this external is a …\nConsume this <code>Export</code> and return the contained <code>Global</code>, if it…\nRecover this error’s inner host value.\nReturns the underlying <code>Memory</code>, if this external is a …\nConsume this <code>Export</code> and return the contained <code>Memory</code>, if it…\nConvert this <code>ManuallyRooted&lt;T&gt;</code> into a <code>Rooted&lt;T&gt;</code>.\nReturns the underlying <code>SharedMemory</code>, if this external is a …\nReturns the underlying <code>Table</code>, if this external is a table.\nConsume this <code>Export</code> and return the contained <code>Table</code>, if it…\nReturns the underlying <code>Tag</code>, if this external is a tag.\nConsume this <code>Export</code> and return the contained <code>Tag</code>, if it’…\nReturns true if <code>E</code> is the type held by this error object.\nReturns whether or not this table is a 64-bit table.\nReturns whether this is a 64-bit memory or not.\nIs this an abstract type?\nIs this the abstract <code>any</code> heap type?\nIs this an <code>any</code> reference?\nIs this the <code>anyref</code> (aka <code>(ref null any)</code>) type?\nIs this <code>anyref</code> an <code>arrayref</code>?\nIs this <code>eqref</code> an <code>arrayref</code>?\nIs this the bottom type within its type hierarchy?\nIs this a concrete, user-defined heap type?\nIs this a concrete, user-defined array type?\nIs this a concrete, user-defined continuation type?\nIs this a concrete, user-defined function type?\nIs this a concrete, user-defined struct type?\nIs this constant?\nIs this the abstract <code>cont</code> heap type?\nIs this the <code>contref</code> (aka <code>(ref null cont)</code>) type?\nIs this <code>anyref</code> an <code>eqref</code>?\nIs this the abstract <code>extern</code> heap type?\nIs this an <code>extern</code> reference?\nIs this the <code>externref</code> (aka <code>(ref null extern)</code>) type?\nIs this the <code>f32</code> type?\nIs this the <code>f64</code> type?\nIs this final?\nIs this the abstract <code>func</code> heap type?\nIs this a <code>func</code> reference?\nIs this the <code>funcref</code> (aka <code>(ref null func)</code>) type?\nIs this an <code>i16</code>?\nIs this <code>anyref</code> an <code>i31</code>?\nIs this <code>eqref</code> an <code>i31</code>?\nIs this the abstract <code>i31</code> heap type?\nIs this the <code>i32</code> type?\nIs this the <code>i64</code> type?\nIs this an <code>i8</code>?\nIs this the abstract <code>nofunc</code> heap type?\nIs this non-final?\nIs this a non-null reference?\nIs this the abstract <code>none</code> heap type?\nIs this a null reference?\nCan this type of reference be null?\nReturns true if <code>ValType</code> matches any of the numeric types. …\nReturns whether this <code>Engine</code> is configured to execute with …\nReturns true if <code>ValType</code> is any kind of reference type.\nReturns whether this is a shared memory or not.\nIs this <code>anyref</code> a <code>structref</code>?\nIs this <code>eqref</code> a <code>structref</code>?\nIs this the top type within its type hierarchy?\nIs this the <code>v128</code> type?\nIs this a Wasm value type?\nIs this variable?\nReturns an iterator over all items defined in this <code>Linker</code>, …\nGet the length of this array.\nConfigures the <code>ResourceLimiter</code> used to limit resource …\nReturns the 1-indexed source code line number this symbol …\nHow much memory, in bytes, to keep resident for each …\nLooks up the given offset within this module’s text …\nConfigures whether, when on macOS, Mach ports are used for …\nDoes this value type match the other type?\nDoes this reference type match the other?\nDoes this heap type match the other heap type?\nDoes this field type match the other field type?\nDoes this field type match the other field type?\nDoes this struct type match the other struct type?\nDoes this array type match the other array type?\nDoes this function type match the other function type?\nDoes this continuation type match the other continuation …\nDoes this function match the given type?\nDoes this <code>anyref</code> match the given type?\nDoes this <code>arrayref</code> match the given type?\nDoes this <code>eqref</code> match the given type?\nDoes this <code>structref</code> match the given type?\nDoes this value match the given type?\nDoes this reference value match the given type?\nSet the maximum size, in units of pages, for the memory …\nThe maximum size, in bytes, allocated for a component …\nThe maximum size, in bytes, allocated for a core instance…\nThe maximum number of core instances a single component …\nThe maximum initial size required by any memory, in units …\nThe maximum initial size required by any table.\nThe maximum number of Wasm linear memories that a single …\nThe maximum number of defined linear memories for a module …\nThe maximum byte size that any WebAssembly linear memory …\nThe maximum number of tables that a single component may …\nThe maximum number of defined tables for a core module …\nConfigures the maximum number of “unused warm slots” …\nConfigures the maximum amount of stack space available for …\nReturns the optionally-specified maximum number of …\nReturns the optionally-specified maximum number of pages …\nThe maximum number of linear memories that can be created …\nThe maximum number of linear memories that can be created …\nAttempt to return the underlying type of this external …\nSet whether this is a 64-bit memory or not.\nNotifies the resource limiter that growing a linear …\nNotifies the resource limiter that an instance’s linear …\nConfigures the “guaranteed dense image size” for …\nConfigures the size, in bytes, of the guard region used at …\nConfigures whether copy-on-write memory-mapped data is …\nIndicates whether linear memories may relocate their base …\nSpecifies the capacity of linear memories, in bytes, in …\nConfigures the size, in bytes, of the extra virtual memory …\nThe maximum number of bytes a linear memory can grow to.\nSet the minimum size, in units of pages, for the memory …\nReturns minimum number of elements this table must have\nReturns minimum number of WebAssembly pages this memory …\nReturns a reference to the underlying <code>MmapVec</code> this memory …\nReturns the underlying memory which contains the compiled …\nReturns a reference to the module that this <code>InstancePre</code> …\nReturn a reference-counting pointer to a module.\nDefine automatic instantiations of a <code>Module</code> in this linker.\nGet this instance’s module.\nReturns the module name that the unknown import was …\nReturns the module for this frame.\nReturns the module name that this import is expected to …\nReturn a reference to a mutable module (if possible).\nReturns the offset within the original wasm module this …\nConfigure the version information used in serialized and …\nCreate a new error object from a printable error message.\nGet whether or not this field type is mutable.\nGet this array type’s mutability and whether its …\nReturns whether or not this global is mutable.\nReturns the name by which this export is known.\nReturns the field name of the module that the unknown …\nReturns identifier/name that this <code>Module</code> has. This name is …\nReturns the function name associated with this symbol.\nReturns the field name of the module that this import is …\nReturns the name by which this export is known.\nConfigures whether to generate native unwind information …\nCreates a new <code>CodeMemory</code> by taking ownership of the …\nCreate a new error object from any error type.\nCreates a new set of configuration which represents a …\nBuilds a <code>Cache</code> from the configuration and spawns the cache …\nCreate a new <code>ArrayRefPre</code> that is associated with the given …\nConstruct a new scope for rooting GC objects.\nCreate a new <code>StructRefPre</code> that is associated with the …\nCreates a new <code>StoreLimitsBuilder</code>.\nCreates a new <code>Linker</code>.\nCreates a new <code>Store</code> to be associated with the given <code>Engine</code> …\nCreate a new builder for a <code>MemoryType</code> with the default …\nCreates a new builder which will insert modules into the …\nCreates a new <code>Func</code> with the given arguments, typically to …\nCreates a new WebAssembly <code>global</code> value with the provide …\nCreates a new <code>Table</code> with the given parameters.\nAllocate a new <code>array</code> of the given length, with every …\nSynchronously allocates a new <code>ExternRef</code> wrapping the given …\nSynchronously allocate a new <code>struct</code> and get a reference to …\nCreates a new <code>Instance</code> from the previously compiled <code>Module</code> …\nCreates a new WebAssembly memory given the configuration …\nConstruct a <code>SharedMemory</code> by providing both the <code>minimum</code> and …\nCreates a new WebAssembly <code>Module</code> from the given in-memory …\nConstruct a new reference type.\nConstruct a new field type from the given parts.\nConstruct a new <code>StructType</code> with the given field types.\nConstruct a new <code>ArrayType</code> with the given field type’s …\nCreates a new function type from the given parameters and …\nCreates a new global descriptor of the specified <code>content</code> …\nCreates a new global descriptor of the specified type.\nCreates a new table descriptor which will contain the …\nCreates a new descriptor for a 32-bit WebAssembly memory …\nBegin profiling a new guest. When this function is called, …\nCreates a new configuration object with the default …\nReturns a new configuration builder with all default …\nCreates a new <code>Engine</code> with the specified compilation and …\nCrates a new descriptor for a 64-bit table.\nCreates a new descriptor for a 64-bit WebAssembly memory …\nSynchronously allocate a new <code>array</code> containing the given …\nConstruct a new <code>I31</code> from the given signed value.\nCreate a new <code>LinearMemory</code> object from the specified …\nConstruct a new <code>I31</code> from the given unsigned value.\nAn unchecked version of <code>Func::typed</code> which does not perform …\nCreates a new <code>Func</code> with the given arguments, although has …\nGet the null <code>(ref null nofunc)</code> (aka <code>nullfuncref</code>) reference.\nGet the null <code>(ref null noextern)</code> (aka <code>nullexternref</code>) …\nGet the null <code>(ref null none)</code> (aka <code>nullexternref</code>) reference.\nCreate a null reference to the given heap type.\nCreate a null reference that is compatible with any of …\nReturns the null function reference value.\nReturns the null function reference value.\nReturns the null function reference value.\nGet the null <code>(ref null nofunc)</code> (aka <code>nullfuncref</code>) reference …\nGet the null <code>(ref null noextern)</code> (aka <code>nullexternref</code>) …\nGet the null <code>(ref null none)</code> (aka <code>nullexternref</code>) reference …\nReturns the null reference for the given heap type.\nGet the null <code>(ref null nofunc)</code> (aka <code>nullfuncref</code>) reference …\nGet the null <code>(ref null noextern)</code> (aka <code>nullexternref</code>) …\nGet the null <code>(ref null none)</code> (aka <code>nullexternref</code>) reference …\nThe number of memories that are required.\nThe number of tables that are required.\nReturns <code>optimized_compression_level</code>.\nReturns <code>optimized_compression_level</code>.\nReturns <code>optimized_compression_usage_counter_threshold</code>.\nReturns <code>optimized_compression_usage_counter_threshold</code>.\nReturns <code>optimizing_compression_task_timeout</code>.\nReturns <code>optimizing_compression_task_timeout</code>.\nReturns the size of a page, in bytes, for this memory.\nReturns the size of a page, in bytes, for this memory.\nThis memory’s page size, in bytes.\nSet the log base 2 of the page size, in bytes, for the …\nReturns the log2 of this memory’s page size, in bytes.\nThe log2 of this memory’s page size, in bytes.\nConfigure whether wasmtime should compile a module using …\nGet the <code>i</code>th parameter type.\nReturns the list of parameter types for this function.\nThe default pooling instance allocation strategy.\nReturns a <code>std::hash::Hash</code> that can be used to check …\nAhead-of-time (AOT) compiles a WebAssembly module.\nCreates a default profiler based on the profiling strategy …\nPublishes the internal ELF image to be ready for execution.\nPublish a region of memory as executable.\nSafely reads memory contents at the given offset into a …\nConvert to a standard library error trait object.\nGet this value’s underlying reference, if any.\nAre these two GC roots referencing the same underlying GC …\nAre these two GC roots referencing the same underlying GC …\nHash the underlying rooted object reference.\nHash the underlying rooted object reference.\nThis option can be used to control the behavior of the …\nThe minimal alignment granularity for an address region …\nReserve enough capacity for <code>additional</code> GC roots in this …\nReturns a summary of the resources required to instantiate …\nGet the <code>i</code>th result type.\nReturns the list of result types for this function.\nThe lowest level cause of this error — this error’s …\nAre these two <code>Rooted&lt;T&gt;</code>s the same GC root?\nHash this root.\nHash this root.\nReturns whether the engine <code>a</code> and <code>b</code> refer to the same …\nAdd a sample to the profile. This function collects a …\nSerializes this module to a vector of bytes.\nAttempts to set the current value of this global to <code>Val</code>.\nWrites the <code>val</code> provided into <code>index</code> within this table.\nSet this array’s <code>index</code>th element.\nSets the epoch deadline to a certain number of ticks in …\nSets the epoch deadline to a certain number of ticks in …\nSet this struct’s <code>index</code>th field.\nSet the amount of fuel in this store to be consumed when …\nSet the amount of fuel in this store.\nSet the fuel to this <code>Store</code> for wasm to consume while …\nSet the sharedness for the memory type being built.\nCreates a new descriptor for shared WebAssembly memory …\nConfigures Wasmtime to not use signals-based trap …\nReturns the current size of this table.\nReturns the size, in units of pages, of this Wasm memory.\nReturns the size, in WebAssembly pages, of this wasm …\nReturns the encoded stack map section used to pass to …\nConfigures which compilation strategy will be used for …\nGet the supertype of this struct type, if any.\nGet the supertype of this array type, if any.\nGet the supertype of this function type, if any.\nCreates a new symbolication context which can be used to …\nReturns the debug symbols found, if any, for this function …\nAttempt to return the underlying type of this external …\nThe maximum number of elements in a table.\nThe maximum table elements for any table defined in a …\nNotifies the resource limiter that growing a linear …\nNotifies the resource limiter that an instance’s table …\nHow much memory, in bytes, to keep resident for each table …\nIndicates whether to initialize tables lazily, so that …\nThe maximum number of tables that can be created for a …\nThe maximum number of tables that can be created for a …\nAttempt to return the underlying type of this external …\nTake this error’s inner host value, but also retain this …\nConfigures the target platform of this <code>Config</code>.\nReturns the contents of the text section of the ELF …\nReturns the text section of the ELF image for this …\nGet this module’s code object’s <code>.text</code> section, …\nEagerly initialize thread-local functionality shared by …\nUpcast this <code>structref</code> into an <code>anyref</code>.\nUpcast this <code>eqref</code> into an <code>anyref</code>.\nUpcast this <code>arrayref</code> into an <code>anyref</code>.\nUpcast this <code>structref</code> into an <code>anyref</code>.\nUpcast this <code>eqref</code> into an <code>anyref</code>.\nUpcast this <code>arrayref</code> into an <code>anyref</code>.\nUpcast this <code>structref</code> into an <code>eqref</code>.\nUpcast this <code>arrayref</code> into an <code>eqref</code>.\nUpcast this <code>structref</code> into an <code>eqref</code>.\nUpcast this <code>arrayref</code> into an <code>eqref</code>.\nCreate a <code>ManuallyRooted&lt;T&gt;</code> holding onto the same GC object …\nExtracts the raw value of this <code>Func</code>, which is owned by …\nConverts this <code>AnyRef</code> to a raw value suitable to store …\nConverts this <code>ExternRef</code> to a raw value suitable to store …\nConvenience method to convert this <code>Val</code> into a <code>ValRaw</code>.\nClone this <code>ManuallyRooted&lt;T&gt;</code> into a <code>Rooted&lt;T&gt;</code>.\nGet the top type of this heap type’s type hierarchy.\nThe maximum number of concurrent component instances …\nThe maximum number of concurrent core instances supported …\nThe maximum number of concurrent GC heaps supported …\nThe maximum number of concurrent Wasm linear memories …\nThe maximum number of concurrent tables supported (default …\nReturns the contents of the <code>ELF_WASMTIME_TRAPS</code> section, or …\nIndicates that a trap should be raised whenever a growth …\nReturns the underlying wasm type that this <code>Func</code> has.\nReturns the underlying type of this <code>global</code>.\nReturns the underlying type of this table, including its …\nReturns the underlying type of this <code>tag</code>.\nReturns the type associated with this <code>Extern</code>.\nReturn the <code>ExternType</code> of this export.\nGet the type of this reference.\nGet this <code>arrayref</code>’s type.\nGet the type of this reference.\nGet this <code>structref</code>’s type.\nReturns the type of the unknown import.\nReturns the underlying type of this memory.\nReturn the type of the shared memory.\nReturns the underlying function type of this tag …\nReturns the expected type of this import.\nReturns the type of this export.\nReturns the corresponding <code>ValType</code> for this <code>Val</code>.\nGet the type of this reference.\nAttempts to extract a typed object from this <code>Func</code> through …\nCreates a WebAssembly <code>i32</code> value\nCreates a WebAssembly <code>i64</code> value\nGet this module’s unique ID. It is unique with respect …\nUnix-specific extension for the <code>wasmtime</code> crate.\nUnload process-related trap/signal handlers and destroy …\nUnpack this (possibly packed) storage type into a full …\nUnpublish a region of memory.\nUnroot this GC object.\nGet the underlying <code>any</code> reference, panicking if this is a …\nReturns the underlying value of this <code>Val</code>, panicking if it…\nReturns the underlying <code>anyref</code> value of this <code>Val</code>, panicking …\nDowncast this <code>anyref</code> to an <code>arrayref</code>, panicking if this …\nDowncast this <code>eqref</code> to an <code>arrayref</code>, panicking if this <code>eqref</code>…\nGet the underlying concrete, user-defined type, panicking …\nGet the underlying concrete, user-defined type, panicking …\nGet the underlying concrete, user-defined type, panicking …\nGet the underlying concrete, user-defined type, panicking …\nDowncast this <code>anyref</code> to an <code>eqref</code>, panicking if this <code>anyref</code> …\nGet the underlying <code>extern</code> reference, panicking if this is …\nReturns the underlying value of this <code>Val</code>, panicking if it…\nReturns the underlying <code>externref</code> value of this <code>Val</code>, …\nReturns the underlying value of this <code>Val</code>, panicking if it…\nReturns the underlying value of this <code>Val</code>, panicking if it…\nReturns the underlying descriptor of this <code>ExternType</code>, …\nGet the underlying <code>func</code> reference, panicking if this is a …\nReturns the underlying value of this <code>Val</code>, panicking if it…\nReturns the underlying <code>funcref</code> value of this <code>Val</code>, …\nReturns the underlying descriptor of this <code>ExternType</code>, …\nDowncast this <code>anyref</code> to an <code>i31</code>, panicking if this <code>anyref</code> …\nDowncast this <code>eqref</code> to an <code>i31</code>, panicking if this <code>eqref</code> is …\nReturns the underlying value of this <code>Val</code>, panicking if it…\nReturns the underlying value of this <code>Val</code>, panicking if it…\nReturns the underlying descriptor of this <code>ExternType</code>, …\nGet the underlying reference type, panicking if this value …\nDowncast this <code>anyref</code> to a <code>structref</code>, panicking if this …\nDowncast this <code>eqref</code> to a <code>structref</code>, panicking if this <code>eqref</code>…\nReturns the underlying descriptor of this <code>ExternType</code>, …\nReturns the underlying descriptor of this <code>ExternType</code>, …\nReturns the underlying value of this <code>Val</code>, panicking if it…\nGet this storage type’s underlying value type, panicking …\nUpgrade this weak reference into an <code>Engine</code>. Returns <code>None</code> if\nAttempt to access the underlying value of this <code>Val</code>, …\nCreates a WebAssembly <code>v128</code> value\nValidates <code>binary</code> input data as a WebAssembly binary given …\nGet the value type that each Type in the list represents.\nConfigures whether <code>WasmBacktrace</code> will be present in the …\nConfigures whether backtraces in <code>Trap</code> will parse debug …\nConfigures the WebAssembly binary that is being compiled.\nReads the <code>file</code> specified for the WebAssembly bytes that …\nEquivalent of <code>CodeBuilder::wasm_binary</code> that also accepts …\nEquivalent of <code>CodeBuilder::wasm_binary_file</code> that also …\nConfigures whether the WebAssembly bulk memory operations …\nConfigures whether the WebAssembly custom-page-sizes …\nReturns the concatenated list of all data associated with …\nReturns the contents of the <code>ELF_WASMTIME_DWARF</code> section.\nConfigures whether the WebAssembly extended-const proposal …\nConfigures whether the WebAssembly function references …\nConfigures whether the WebAssembly Garbage Collection …\nConfigures whether the WebAssembly memory64 proposal will …\nConfigures whether the WebAssembly multi-memory proposal …\nConfigures whether the WebAssembly multi-value proposal …\nConfigures whether the WebAssembly reference types proposal\nConfigures whether the WebAssembly Relaxed SIMD proposal …\nConfigures whether the WebAssembly …\nConfigures whether the WebAssembly SIMD proposal will be …\nConfigures whether the WebAssembly stack switching proposal…\nConfigures whether the WebAssembly tail calls proposal …\nConfigures whether the WebAssembly threads proposal will …\nGet the Wasm-to-array trampoline for the given signature.\nConfigures whether the WebAssembly wide-arithmetic will be …\nReturns the contents of the <code>ELF_WASMTIME_INFO</code> section, or …\nTake a weak reference to this engine.\nLocks\nCompression level used when a new cache file is being …\nWhen the cache worker is notified about a cache file being …\nSets a custom executable-memory publisher.\nSpecify where the cache directory is. Must be an absolute …\nIf file-count-soft-limit is exceeded and the cache worker …\nSoft limit for the file count in the cache directory.\nIf files-total-size-soft-limit is exceeded and cache …\nSoft limit for the total size* of files in the cache …\nConstruct a new <code>StructType</code> with the given finality, …\nConstruct a new <code>StructType</code> with the given finality, …\nCreate a new function type with the given finality, …\nSets a custom memory creator.\nCompression level used when the cache worker decides to …\nOne of the conditions for the cache worker to recompress a …\nWhen the cache worker decides to recompress a cache file, …\nSize of cache worker event queue. If the queue is full, …\nEnables memory error checking for wasm programs.\nReturns <code>worker_event_queue_size</code>.\nReturns <code>worker_event_queue_size</code>.\nCreates a new <code>Func</code> from the given Rust closure.\nConstruct a new <code>I31</code> from the given signed value.\nConstruct a new <code>I31</code> from the given unsigned value.\nSafely writes contents of a buffer to this memory at the …\nExtensions for the <code>Store</code> type only available on Unix.\nThe signal handler must be async-signal-safe.\nThis module allows for inspection and instrumentation, …\nUtilities used by all backends\nDefinitions for a wasm runtime.\nA program blob containing a Substrate runtime.\nProvides safe memory access interface using an external …\nConstruct a range from an offset to a data length after …\nRead data from a slice of memory into a newly allocated …\nRead data from a slice of memory into a destination buffer.\nWrite data to a slice of memory.\nMemory allocation stats gathered during the lifetime of …\nDefault heap allocation pages.\nDefault heap allocation strategy.\nAllocate the initial heap pages as requested by the wasm …\nDefines the heap pages allocation strategy the wasm …\nAllocate a static number of heap pages.\nA trait that defines an abstract wasm module instance.\nA trait that defines an abstract WASM runtime module.\nThe amount of address space (in bytes) used by the …\nThe current number of bytes allocated.\nThe peak number of bytes ever allocated.\nThe sum of every allocation ever made.\nCall a method on this WASM instance.\nCall an exported method on this WASM instance.\nCall a method on this WASM instance.\nCreate a new instance.\nThe number of pages that will be added on top of the …\nThe absolute maximum size of the linear memory (in pages).\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKnobs for deterministic stack height limiting.\nAllocate the initial heap pages as requested by the wasm …\nDefines the heap pages allocation strategy the wasm …\nThe instantiation strategy to use for the WASM executor.\nPool the instances to avoid initializing everything from …\nPool the instances to avoid initializing everything from …\nRecreate the instance from scratch on every instantiation. …\nRecreate the instance from scratch on every instantiation. …\nA program blob containing a Substrate runtime.\nAllocate a static number of heap pages.\nA trait that defines an abstract WASM runtime module.\nA <code>WasmModule</code> implementation using wasmtime to compile the …\nThe WebAssembly standard requires all imports of an …\nGets a reference to the inner PolkaVM program blob, if …\nA directory in which wasmtime can store its compiled …\nControls whether wasmtime should compile floating point in …\nConverts a WASM memory import into a memory section and …\nCreate a new <code>WasmtimeRuntime</code> given the code. This function …\nThe same as <code>create_runtime</code> but takes a path to a …\nThe same as <code>create_runtime</code> but takes the bytes of a …\nScans the wasm blob for the first section with the name …\nSpecifying <code>Some</code> will enable deterministic stack height. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe heap allocation strategy to use.\nRun a pass that instrument this module so as to introduce …\nThe instantiation strategy to use.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA number of logical “values” that can be pushed on the …\nThe maximum number of bytes for stack used by wasmtime …\nCreate <code>RuntimeBlob</code> from the given WASM or PolkaVM program …\nCreate a new instance.\nConfigures wasmtime to use multiple threads for compiling.\nTakes a <code>RuntimeBlob</code> and precompiles it returning the …\nTuning of various semantics of the wasmtime executor.\nConsumes this runtime blob and serializes it.\nModifies the blob’s memory section according to the …\nCreate <code>RuntimeBlob</code> from the given WASM or PolkaVM …\nEnables WASM Bulk Memory Operations proposal\nEnables WASM Multi-Value proposal\nEnables WASM Reference Types proposal\nEnables WASM Fixed-Width SIMD proposal\nThe number of pages that will be added on top of the …\nThe absolute maximum size of the linear memory (in pages).\nBuilds the informant and returns a <code>Future</code> that drives the …\nContains the error value\nKeystore error.\nInvalid BIP39 phrase\nInvalid seed\nIO error.\nJSON error.\nPublic key type is not supported\nSomething that generates, stores and provides access to …\nA local based keystore that is either memory-based or …\nContains the success value\nInvalid password.\nKeystore Result\nKeystore unavailable\nGenerate a new bandersnatch key pair for the given key …\nGenerate a new pair compatible with the ‘bandersnatch’ …\nReturns all the bandersnatch public keys for the given key …\nGenerate a bandersnatch ring-VRF signature for the given …\nGenerate an bandersnatch signature for a given message.\nGenerate a bandersnatch VRF pre-output for a given input …\nGenerate a bandersnatch VRF signature for the given data.\nGenerate a new bls381 key pair for the given key type and …\nGenerate a new pair compatible with the ‘bls381’ …\nGenerate a bls381 Proof of Possession for a given public …\nReturns all bls12-381 public keys for the given key type.\nGenerate a bls381 signature for a given message.\nGenerate a new (ecdsa,bls381) key pair for the given key …\nGenerate a new pair of paired-keys compatible with the ‘…\nReturns all (ecdsa,bls12-381) paired public keys for the …\nGenerate a (ecdsa,bls381) signature pair for a given …\nHashes the <code>message</code> using keccak256 and then signs it using …\nGenerate a new ecdsa key pair for the given key type and …\nGenerate a new pair compatible with the ‘ecdsa’ …\nReturns all ecdsa public keys for the given key type.\nGenerate an ecdsa signature for a given message.\nGenerate an ecdsa signature for a given pre-hashed message.\nGenerate a new ed25519 key pair for the given key type and …\nGenerate a new pair compatible with the ‘sr25519’ …\nReturns all ed25519 public keys for the given key type.\nGenerate an ed25519 signature for a given message.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nChecks if the private keys for the given public key and …\nCreate a local keystore in memory.\nInsert a new secret key.\nInsert a new secret key.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet a key pair for the given public key.\nList all supported keys of a given type.\nCreate a local keystore from filesystem.\nConvenience method to sign a message using the given key …\nConvenience method to sign a message using the given key …\nGenerate a new sr25519 key pair for the given key type and …\nGenerate a new pair compatible with the ‘ed25519’ …\nReturns all the sr25519 public keys for the given key type.\nGenerate an sr25519 signature for a given message.\nGenerate an sr25519 VRF pre-output for a given input data.\nGenerate an sr25519 VRF signature for the given data.\nInterface to the mixnet service.\nThe other end of an <code>Api</code>. This should be passed to <code>run</code>.\nAn out-of-range mixnode index was encountered.\nReceived a malformed reply.\nBad SURB.\nMixnet configuration.\nMixnet configuration.\nFailed to decode the request.\nMixnet error.\nAn <em>unclamped</em> key-exchange secret key.\nThe local node has not managed to connect to any gateway …\nDid not receive a reply after the configured number of …\nNot enough space in the authored packet queue.\nAn error that doesn’t map to any of the other variants.\nFailed to post the request to the mixnet. Note that some …\nRequest/reply posting error.\nError reported by destination mixnode.\nError handling a request. Sent in replies over the mixnet.\nFailed to communicate with the mixnet service. Possibly it …\nMixnet disabled for the session.\nMixnodes not yet known for the session.\nThe session is no longer active.\nThe session is not active yet.\nSubstrate-specific mixnet configuration.\nThere aren’t enough mixnodes.\nMessage contents too large or too many SURBs.\nTopology error.\nTopology error.\nCore configuration.\nMaximum number of submit extrinsic requests waiting for …\nMaximum number of packets waiting for their forwarding …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate cover packets? This option is intended for …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe target for log messages.\nProportion of authored packets which should be loop cover …\nMaximum number of fragments per message. This should …\nMaximum number of fragments to keep across all incomplete …\nMaximum number of incomplete messages to keep.\nMaximum number of extrinsics being actively submitted. If …\nMean delay between receiving a submit extrinsic request …\nMean forwarding delay at each mixnode. This should really …\nUsed by sessions in which the local node is a mixnode. If …\nCreate a new <code>Api</code>. The <code>ApiBackend</code> should be passed to <code>run</code>.\nUsed by sessions in which the local node is not a mixnode. …\nThe number of mixnodes to connect to when we are not a …\nMaximum number of incoming mixnet connections to accept …\nNumber of hops for packets to traverse. Some packets may …\nReturns the peers set configuration for the mixnet …\nConservative estimate of the network (and processing) …\nReturns the protocol name to use for the mixnet controlled …\nAttempt to register the local node as a mixnode?\nReply manager configuration.\nNumber of requests to the mixnet service that can be …\nRequest manager configuration.\nRun the mixnet service. If <code>keystore</code> is <code>None</code>, the service …\nThe key-exchange secret key to use in session 0. This …\nSubmit an extrinsic via the mixnet.\nSubstrate-specific configuration.\nUsed to determine the number of SURBs to include in …\nMaximum number of outstanding SURBs to keep keys for. Must …\nAct as an authority\nThird-party authority.\nProtocol name hasn’t been registered.\nBitswap config.\nThe notification receiver has been closed, usually because …\nFound closest peers to the target <code>PeerId</code>. With libp2p also …\nClosest peers to the target <code>PeerId</code> has not been found.\nThe configuration for a <code>Behaviour</code> protocol.\nThe connection closed before a response was received.\nAn error during decoding of key material.\nEvent generated by a DHT.\nEvents generated by DHT as a response to get_value and …\nThe request could not be sent because a dialing attempt …\nType for events generated by networking layer.\nFull node, does not participate in consensus.\nFull node.\nWhen sending a request, what to do on a disconnected …\nJust fail if the destination is not yet connected.\nAn IO failure happened on an outbound stream.\nThe (opaque) key of a record.\nIdentity keypair of a node.\nLight client node.\nLight node.\nNetworking backend for <code>litep2p</code>.\nMaximum response size limit.\nMessage sink for peers.\n<code>Multiaddr</code> type used in Substrate. Converted to libp2p’s …\nNo network.\nNetworking backend.\nProvides ability to announce blocks to the network.\nProvides access to the networking DHT.\nProvides access to network-level event stream.\nProvides low-level API for manipulating network peers.\nProvides ability to send network requests.\nSubstrate network service. Handles network IO and manages …\nType implementing <code>NetworkService</code> for the networking …\nSigner with network identity\nTrait for providing information about the local network …\nOverview status of the network.\nProvides high-level status information about network.\nProvides an ability to set a fork sync request for a …\nMain network worker. Must be polled in order for the …\n<code>GET_PROVIDERS</code> query finished and won’t yield any more …\nTrait defining the required functionality from a …\nNotification metrics.\nType representing notification protocol-related …\nA <code>NotificationSender</code> allows for sending notifications to a …\nError returned by the notification sink.\nReserved slot in the notifications buffer, ready to accept …\nA <code>NotificationSender</code> allows for sending notifications to a …\nNotification service\nClosed a substream with the given node. Always matches a …\nOpened a substream with the given node with the given …\nReceived one or more messages from the given node using …\nRole that the peer sent to us during the handshake, with …\nThe protocol name as a dynamically allocated string.\nPossible failures occurring in the context of sending an …\nIdentifier of a peer of the network.\nType implementing <code>PeerStore</code>.\nThe protocol name transmitted on the wire.\nThe providers for <code>Key</code> were found. Multiple such events can …\n<code>GET_PROVIDERS</code> query failed and no providers for <code>Key</code> were …\nThe public key of a node’s identity keypair.\nThe DHT received a put record request.\nDescription of a reputation adjustment for a node.\nError in a request.\nType representing request-response protocol-related …\nBitmask of the roles that a node fulfills.\nA result of signing a message with a network identity. …\nAn error occured while registering as a content provider …\nSuccessfully started providing the given key.\nThe protocol name as a static string.\nThe request timed out before a response was received.\nTry to connect to the peer.\nThe remote supports none of the requested protocols.\nThe value was found.\nThe requested record has not been found in the DHT.\nThe record has been successfully inserted into the DHT.\nAn error has occurred while putting a record into the DHT.\nConnect to unreserved peers and allow unreserved peers to …\nAdds an address known to a node.\nAdds an address for a node.\nAdd peers to a peer set.\nAdds a <code>PeerId</code> and its <code>Multiaddr</code> as reserved for a sync …\nAdds a <code>PeerId</code> and its <code>Multiaddr</code> as reserved.\nReturns the set containing all flags.\nMake sure an important block is propagated to peers.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nCreate Bitswap server.\nCreate Bitswap server.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nThe actual signature made for the message signed.\nMake a copy of the object so it can be shared between …\nInstruct <code>Notifications</code> to close substream for <code>peer</code>.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nDisconnect from unreserved peers and deny new unreserved …\nDeterministically derive a new secret from this <code>Keypair</code>, …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nDisconnect from a node as soon as possible.\nDiscovery mechanisms of Substrate.\nReturns an empty set of flags.\nCreate a new, empty multiaddress.\nEncode the public key into a protobuf structure for …\nSubstrate network possible errors.\nNetwork event types. These are not the part of the …\nReturns a stream containing the events that happen on the …\nReturns the local external addresses.\nReturns the local external addresses.\nStart finding closest peers to the target.\nStart finding closest peerst to the target peer ID in the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nDecode a private key from a protobuf structure and parse …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate a new Ed25519 keypair.\nStart getting the list of providers for <code>key</code> on the DHT.\nStart getting a value from the DHT.\nStart getting a value from the DHT.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nDoes this role represents a client that does not …\nReturns <code>true</code> if no flags are currently stored.\nDoes this role represents a client that holds full chain …\nReturns <code>true</code> for <code>ObservedRole::Light</code>.\nDoes this role represents a client that does not hold full …\nReturns the components of this multiaddress.\nReturn a <code>KeyType</code> of the <code>Keypair</code>.\nReturn a <code>KeyType</code> of the <code>PublicKey</code>.\nReturns the listening addresses (without trailing <code>/p2p/</code> …\nReturns the listener addresses (without trailing <code>/p2p/</code> …\nReturns the list of addresses we are listening on.\nReturns the local Peer ID.\nReturns the local Peer ID.\nReturns the local <code>PeerId</code>.\nGet message sink of the peer.\nGet handle to <code>NetworkService</code> of the <code>NetworkBackend</code>.\nGet handle to <code>NetworkService</code> of the <code>NetworkBackend</code>.\nInformation about the networking, for diagnostic purposes.\nGet the network state.\nGet network state.\nGet network state.\nCreate new <code>NetworkBackend</code>.\nCreates a new key from the bytes of the input.\nCreate new <code>Signature</code>.\nCreates the network service.\nCreate new <code>NotificationMetrics</code>.\nInform the network service about new best imported block.\nPerform one action on the network.\nGet next event from the <code>Notifications</code> event stream.\nReturns the complement of this set of flags.\nCreate notification protocol configuration and an …\nCreate notification protocol configuration for <code>protocol</code>.\nCreate notification protocol configuration.\nReturns the number of peers we’re connected to.\nTotal number of connected peers.\nInstruct <code>Notifications</code> to open a new substream for <code>peer</code>.\n<code>PeerInfoBehaviour</code> is implementation of <code>NetworkBehaviour</code> …\nGet peer reputation.\nAttempt to get peer role.\n<code>PeerStore</code> manages peer reputations and provides connection …\nCreate <code>PeerStore</code>.\nCreate <code>PeerStore</code>.\nPops the last <code>Protocol</code> of this multiaddr, or <code>None</code> if the …\nGet protocol name of the <code>NotificationService</code>.\nProtocol Controller. Generic implementation of peer …\nGet protocol name.\nGet the public key of this keypair.\nThe public key derived from the network identity that …\nAdds an address component to the end of this multiaddr.\nStart putting the record to <code>peers</code>.\nStart putting a value in the DHT.\nStart putting a value in the DHT.\nReturns a future that resolves when the <code>NotificationSender</code> …\nReason for reputation change.\nRegister metrics that are used by the notification …\nRegister received notification to Prometheus.\nRegister sent notification to Prometheus.\nRegister closed substream to Prometheus.\nRegister opened substream to Prometheus.\nRemoves the specified flags in-place.\nRemove peers from a peer set.\nRemoves a <code>PeerId</code> from the list of reserved peers for a …\nRemoves a <code>PeerId</code> from the list of reserved peers.\nReport a given peer as either beneficial (+) or costly (-) …\nSends a single targeted request to a specific peer. On …\nCreate request-response protocol configuration.\nCreate request-response protocol configuration.\nCreate request-response protocol configuration.\nCollection of request-response protocols.\nGet the list of reserved peers.\nGet the list of reserved peers.\nStart <code>NetworkBackend</code> event loop.\nStart <code>Litep2pNetworkBackend</code> event loop.\nStart <code>NetworkBackend</code> event loop.\nRun the network.\nConsumes this slots reservation and actually queues the …\nSend asynchronous <code>notification</code> to <code>peer</code>, allowing sender to …\nSend an asynchronous <code>notification</code> to to the peer …\nSend synchronous <code>notification</code> to <code>peer</code>.\nSend synchronous <code>notification</code> to the peer associated with …\nMain entry point of the sc-network crate.\nReturn a <code>NetworkService</code> that can be shared through the …\nInserts or removes the specified flags depending on the …\nSet authorized_only flag.\nSet authorized peers.\nGet access to the <code>SetConfig</code> of the notification protocol.\nSet handshake for the notification protocol replacing the …\nSets the timeout for inbound and outbound requests.\nSets the reserved set of a protocol to the given set of …\nNotifies the sync service to try and sync the given block …\nSign a message using the private key of this keypair, …\nCreate a signature for a message with a given network …\nSigns the message with the <code>KeyPair</code> that defines the local …\nRegister this node as a provider for <code>key</code> on the DHT.\nVariation of <code>request</code> which starts a request whose response …\nHigh-level network status information.\nHigh-level network status information.\nDeregister this node as a provider for <code>key</code> on the DHT.\nStore a record in the DHT memory store.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the number of peers in the sync peer set we’re …\nConvert the <code>PublicKey</code> into the corresponding <code>PeerId</code>.\nEncode a private key as protobuf structure.\nCopies the bytes of the key into a new vector.\nReturn a copy of this <code>Multiaddr</code>’s byte representation.\nToggles the specified flags in-place.\nReturns the total number of bytes received so far.\nThe total number of bytes received.\nReturns the total number of bytes sent so far.\nThe total number of bytes sent.\nTransport that serves as a common ground for all …\nDecode a public key from a protobuf structure, e.g. read …\nNon-blocking variant of <code>set_handshake()</code> that attempts to …\n<code>sc-network</code> type definitions\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\n<code>sc-network</code> utilities\nReputation delta.\nVerify signature using peer’s public key.\nVerify a signature for a message using this public key, …\nLike <code>Multiaddr::push</code> but consumes <code>self</code>.\nSets the upper bound for the number of concurrent inbound …\nSets the timeout for inbound and outbound requests.\nConcerned protocol and associated message.\nIf the negotiation didn’t use the main name of the …\nThe concerned protocol. Each protocol uses a different …\nThe concerned protocol. Each protocol uses a different …\nReceived handshake.\nNode we opened the substream with.\nNode we closed the substream with.\nNode we received the message from.\nRole of the remote.\n<code>FIND_NODE</code> query yielded closest peers with their …\nThe closest peers to the target <code>PeerId</code> have not been found.\nDefault value for Kademlia replication factor which  …\nWe discovered a peer and currenlty have it’s addresses …\nImplementation of <code>NetworkBehaviour</code> that discovers the …\n<code>DiscoveryBehaviour</code> configuration.\nEvent generated by the <code>DiscoveryBehaviour</code>.\nThe DHT yielded no more providers for the key (…\nThe DHT yielded results for the providers request.\nProviders for the requested key were not found in the DHT.\nThe DHT received a put record request.\nStarted a random Kademlia query.\nStarting providing a key failed.\nThe content provider for a given key was successfully …\nA peer connected to this node for whom no listen address …\nThe DHT yielded results for the record request.\nThe record requested was not found in the DHT.\nThe record with a given key was successfully inserted into …\nInserting a value into the DHT failed.\nAdds a hard-coded address for the given peer, that never …\nAdd a self-reported address of a remote peer to the …\nShould non-global addresses be inserted to the DHT?\nShould private IPv4/IPv6 addresses be reported?\nCan the given <code>Multiaddr</code> be put into the DHT?\nSet the number of active connections at which we pause …\nStart finding the closest peers to the given <code>PeerId</code>.\nCreate a <code>DiscoveryBehaviour</code> from this config.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet content providers for <code>key</code> from the DHT.\nStart fetching a record from the DHT.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the total size in bytes of all the records in the …\nReturns the list of nodes that we know exist in the …\nCreate a default configuration with the given public key.\nReturns the number of nodes in each Kademlia kbucket for …\nReturns the number of records in the Kademlia record …\nPuts a record into the DHT on the provided <code>peers</code>\nStart putting a record into the DHT. Other nodes can later …\nRegister as a content provider on the DHT for <code>key</code>.\nDeregister as a content provider on the DHT for <code>key</code>.\nStore a record in the Kademlia record store.\nRequire iterative Kademlia DHT queries to use disjoint …\nWhether the discovery behaviour should periodically …\nAdd discovery via Kademlia for the given protocol.\nSets Kademlia replication factor.\nShould MDNS discovery be supported?\nSet custom nodes which never expire, e.g. bootstrap or …\nThe network addresses are invalid because they don’t …\nChannel closed.\nClient error\nConnection closed.\nThe same bootnode (based on address) is registered with …\nThe same request-response protocol has been registered …\nContains the error value\nError type for the network.\nIo error\nLitep2p error.\nContains the success value\nPeer does not exist.\nPrometheus metrics error.\nResult type alias for the network.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe address of the bootnode.\nThe invalid addresses.\nThe first peer id that was found for the bootnode.\nName of the protocol registered multiple times.\nThe second peer id that was found for the bootnode.\nTransport used.\nFound closest peers to the target <code>PeerId</code>. With libp2p also …\nClosest peers to the target <code>PeerId</code> has not been found.\nEvent generated by a DHT.\nEvents generated by DHT as a response to get_value and …\nType for events generated by networking layer.\n<code>GET_PROVIDERS</code> query finished and won’t yield any more …\nClosed a substream with the given node. Always matches a …\nOpened a substream with the given node with the given …\nReceived one or more messages from the given node using …\nThe providers for <code>Key</code> were found. Multiple such events can …\n<code>GET_PROVIDERS</code> query failed and no providers for <code>Key</code> were …\nThe DHT received a put record request.\nAn error occured while registering as a content provider …\nSuccessfully started providing the given key.\nThe value was found.\nThe requested record has not been found in the DHT.\nThe record has been successfully inserted into the DHT.\nAn error has occurred while putting a record into the DHT.\nConcerned protocol and associated message.\nIf the negotiation didn’t use the main name of the …\nThe concerned protocol. Each protocol uses a different …\nThe concerned protocol. Each protocol uses a different …\nReceived handshake.\nNode we opened the substream with.\nNode we closed the substream with.\nNode we received the message from.\nRole of the remote.\nLess data provided than indicated by length.\nInvalid multiaddress.\nInvalid protocol specification.\nFailed to decode unsigned varint.\nIterator over <code>Multiaddr</code> <code>Protocol</code>s.\nContains the “port” to contact. Similar to TCP or UDP, …\n<code>Multiaddr</code> type used in Substrate. Converted to libp2p’s …\nError when parsing a <code>Multiaddr</code> from string.\nOther error emitted when parsing into the wrapped type.\n<code>Protocol</code> describes all possible multiaddress protocols.\nUnknown protocol numeric id.\nUnknown protocol string identifier.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEasy way for a user to create a <code>Multiaddr</code>.\nThe socket comes from a dialer.\nWe are dialing the given address.\nPart of the <code>NetworkState</code> struct. Unstable.\nThe socket comes from a listener.\nWe are listening.\nReturns general information about the networking.\nPart of the <code>NetworkState</code> struct. Unstable.")