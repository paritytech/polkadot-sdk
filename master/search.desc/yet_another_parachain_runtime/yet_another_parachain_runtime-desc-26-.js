searchState.loadedDescShard("yet_another_parachain_runtime", 26, "Prevent subcommands from being consumed as an arguments …\nIf no <code>subcommand</code> is present at runtime, error and exit …\nSets the value name used for subcommands when printing …\nAdds multiple subcommands to the list of valid …\nReturns whether this action accepts values on the …\nSets the terminal width at which to wrap help messages.\nThe canonical argument value.\nThis is a “var arg” and everything that follows should …\nNon-panicking version of <code>ArgMatches::contains_id</code>\nNon-panicking version of <code>ArgMatches::get_many</code>\nParse <code>env::args_os</code>, returning a <code>clap::Result</code> on failure.\nParse the specified arguments, returning a <code>clap::Result</code> on …\nParse the specified arguments, returning a <code>clap::Result</code> on …\nNon-panicking version of <code>ArgMatches::get_occurrences</code>\nNon-panicking version of <code>ArgMatches::get_one</code>\nNon-panicking version of <code>ArgMatches::get_raw</code>\nNon-panicking version of <code>ArgMatches::get_raw_occurrences</code>\nParse from <code>std::env::args_os()</code>, return Err on error.\nParse from iterator, return Err on error.\nNon-panicking version of <code>ArgMatches::remove_many</code>\nNon-panicking version of <code>ArgMatches::remove_occurrences</code>\nNon-panicking version of <code>ArgMatches::remove_one</code>\nUpdate from iterator, return Err on error.\nUpdate from iterator, exit on error.\nAssign values from <code>ArgMatches</code> to <code>self</code>.\nAssign values from <code>ArgMatches</code> to <code>self</code>.\nAllow grouping of multiple values via a delimiter.\nProvide the shell a hint about how to complete this …\nPlaceholder for the argument’s value in the help message …\nPlaceholders for the argument’s values in the help …\nSpecify the typed behavior of the argument.\nSelect a <code>ValueParser</code> implementation from the intended type\nReport where argument value came from\nSentinel to <strong>stop</strong> parsing multiple values of a given …\nAll possible argument values, in display order.\nSets the version for the short version (<code>-V</code>) and help …\nAdd an alias, which functions as a visible long flag.\nSets a visible alias to this subcommand.\nAdd aliases, which function as visible long flags.\nSets multiple visible aliases to this subcommand.\nAdd an alias, which functions as a “visible” long flag …\nAdd aliases, which function as <em>visible</em> long flag …\nAdd an alias, which functions as a visible short flag.\nAdd aliases, which function as visible short flags.\nAdd an alias, which functions as  “visible” short flag …\nAdd aliases, which function as <em>visible</em> short flag …\nAny existing path.\nWhen encountered, store the associated value(s) in …\nThe abstract representation of a command line argument. …\nBehavior of arguments when they are encountered while …\nFamily of related arguments.\nOperations to perform on argument values\nImplementation for <code>ValueParser::bool</code>\nParse bool-like string values, everything else is <code>true</code>\nBuild a command-line interface.\nName of a command, without arguments. May be relative to …\nA single string containing a command and its arguments.\nCapture the remaining arguments as a command name and …\nWhen encountered, increment a <code>u8</code> counter starting from <code>0</code>.\nPath to a directory.\nNor argument values, or a flag\nEmail address.\nParse an <code>ValueEnum</code> value.\nDoes the argument match the specified value?\nPath to an executable file.\nParse false-like string values, everything else is <code>true</code>\nPath to a file.\nWhen encountered, display <code>Command::print_help</code>\nWhen encountered, display <code>Command::print_long_help</code>\nWhen encountered, display <code>Command::print_help</code>\nHost name of a computer. Shells usually parse <code>/etc/hosts</code> …\nConvert to the intended resettable type\nIs the argument present?\nAdapt a <code>TypedValueParser</code> from one value to another\nParse non-empty string values\nA UTF-8-encoded fixed string\nImplementation for <code>ValueParser::os_string</code>\nNone of the hints below apply. Disables shell completion …\nGenerated parser, usually <code>ValueParser</code>.\nImplementation for <code>ValueParser::path_buf</code>\nA possible value of an argument.\nVerify the value is from an enumerated set of <code>PossibleValue</code>…\nParse number that fall within a range of values\nParse number that fall within a range of values\nReset builder value\nClearable builder value\nA single argument value, the most common case for options\nWhen encountered, store the associated value(s) in …\nWhen encountered, act as if <code>&quot;false&quot;</code> was encountered on the …\nWhen encountered, act as if <code>&quot;true&quot;</code> was encountered on the …\nA UTF-8-encoded fixed string\nImplementation for <code>ValueParser::string</code>\nTerminal-styling container\nTerminal styling definitions\nAdapt a <code>TypedValueParser</code> from one value to another\nParse/validate argument values\nDefault value if hint is not specified. Follows shell …\nWhen encountered, report <code>ErrorKind::UnknownArgument</code>\nComplete web address.\nName of a local operating system user.\nOverwrite builder value\nArgument’s value type\nProvide shell with hint on how to complete an argument.\nParse/validate argument values\nRegister a type with <code>value_parser!</code>\nValues per occurrence for an argument\nWhen encountered, display <code>Command::version</code>\nSets a <em>hidden</em> alias for this argument value.\nSets multiple <em>hidden</em> aliases for this argument value.\nExtend the suggestions\nDisplay using ANSI Escape Code styling\nGet the raw string as an <code>std::ffi::OsStr</code>\nGet the raw string of the <code>Str</code>\n<code>bool</code> parser for argument values\nError heading\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nError heading\nGeneral Heading style, e.g. <code>help_heading</code>\nGet the help specified for this argument, if any\nHighlight invalid usage\nLiteral command-line syntax, e.g. <code>--help</code>\nGet the name of the argument value\nReturns all valid values of the argument value.\nDescriptions within command-line syntax, e.g. <code>value_name</code>\nUsage heading\nHighlight suggested usage\nGeneral Heading style, e.g. <code>help_heading</code>\nSets the help description of the value.\nHides this value from help and shell completions.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert to the intended resettable type\nHighlight invalid usage\nReport if <code>PossibleValue::hide</code> is set\nLiteral command-line syntax, e.g. <code>--help</code>\nAdapt a <code>TypedValueParser</code> from one value to another\nTests if the value is valid for this argument value\nMost number of values the argument accepts\nFewest number of values the argument accepts\nCustom parser for argument values\nCreate a <code>PossibleValue</code> with its name.\nCreate a range\nCreate an empty buffer\nImplementation for <code>ValueParser::string</code>\nImplementation for <code>ValueParser::os_string</code>\nImplementation for <code>ValueParser::path_buf</code>\nParse an <code>ValueEnum</code>\nVerify the value is from an enumerated set of <code>PossibleValue</code>…\nSelect full range of <code>i64</code>\nSelect full range of <code>u64</code>\nImplementation for <code>ValueParser::bool</code>\nParse false-like string values, everything else is <code>true</code>\nParse bool-like string values, everything else is an error.\nParse non-empty string values\n<code>OsString</code> parser for argument values\nParse the argument value\nParse the argument value\nParse the argument value\nParse the argument value\n<code>PathBuf</code> parser for argument values\nDescriptions within command-line syntax, e.g. <code>value_name</code>\nNo terminal styling\nReflect on enumerated value properties\nReflect on enumerated value properties\nNarrow the supported range\nNarrow the supported range\n<code>String</code> parser for argument values\nDefault terminal styling\nTerminal <code>Styles</code> for help and error output\nProvide a general suggestion\nSuggest an alternative argument\nReport whether the argument takes any values (ie is a flag)\nGet the raw string as an <code>OsString</code>\nAdapt a <code>TypedValueParser</code> from one value to another\nDescribes the content of <code>AnyValue</code>\nUsage heading\nHighlight suggested usage\nCreate the specified <code>Self::Parser</code>\n256 (8-bit) color support\nAvailable 4-bit ANSI color palette codes\nBlack: #0 (foreground code <code>30</code>, background code <code>40</code>).\nBlue: #4 (foreground code <code>34</code>, background code <code>44</code>).\nBright black: #0 (foreground code <code>90</code>, background code <code>100</code>).\nBright blue: #4 (foreground code <code>94</code>, background code <code>104</code>).\nBright cyan: #6 (foreground code <code>96</code>, background code <code>106</code>).\nBright green: #2 (foreground code <code>92</code>, background code <code>102</code>).\nBright magenta: #5 (foreground code <code>95</code>, background code <code>105</code>…\nBright red: #1 (foreground code <code>91</code>, background code <code>101</code>).\nBright white: #7 (foreground code <code>97</code>, background code <code>107</code>).\nBright yellow: #3 (foreground code <code>93</code>, background code <code>103</code>…\nAny ANSI color code scheme\nCyan: #6 (foreground code <code>36</code>, background code <code>46</code>).\nA set of text effects\nGreen: #2 (foreground code <code>32</code>, background code <code>42</code>).\nSwap foreground and background colors; inconsistent …\nNot widely supported. Sometimes treated as inverse or blink\nMagenta: #5 (foreground code <code>35</code>, background code <code>45</code>).\nRed: #1 (foreground code <code>31</code>, background code <code>41</code>).\nReset terminal formatting\n24-bit ANSI RGB color codes\nCharacters legible but marked as if for deletion. Not …\nANSI Text styling\nTerminal styling definitions\nStyle extensions exist for Kitty, VTE, mintty and iTerm2.\nWhite: #7 (foreground code <code>37</code>, background code <code>47</code>).\nYellow: #3 (foreground code <code>33</code>, background code <code>43</code>).\nSet background color\nApply <code>blink</code> effect\nApply <code>bold</code> effect\nChange the color to/from bright\nReset all effects in-place\nReturns <code>true</code> if all of the effects in <code>other</code> are contained …\nApply <code>dimmed</code> effect\nSet text effects\nSet foreground color\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nApply <code>hidden</code> effect\nInserts the specified effects in-place.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nApply <code>invert</code> effect\nReport whether the color is bright\nCheck if no effects are enabled\nCheck if no effects are enabled\nApply <code>italic</code> effect\nIterate over enabled effects\nNo effects enabled\nNo effects enabled\nCreate a <code>Style</code> with this as the foreground\nCreate a <code>Style</code> with this as the foreground\nCreate a <code>Style</code> with this as the foreground\nCreate a <code>Style</code> with this as the foreground\nCreate a <code>Style</code> with this as the foreground\nCreate a <code>Style</code> with this as the foreground\nCreate a <code>Style</code> with this as the foreground\nCreate a <code>Style</code> with this as the foreground\nRemoves the specified effects in-place.\nRender the ANSI code\nRender the ANSI code\nRender the ANSI code\nRender the ANSI code for a background color\nRender the ANSI code for a background color\nRender the ANSI code for a background color\nRender the ANSI code for a background color\nRender the ANSI code for a foreground color\nRender the ANSI code for a foreground color\nRender the ANSI code for a foreground color\nRender the ANSI code for a foreground color\nRenders the relevant <code>Reset</code> code\nEnable or disable the specified effects depending on the …\nApply <code>strikethrough</code> effect\nApply <code>underline</code> effect\nSet underline color\nWrite the relevant <code>Reset</code> code\nWrite the ANSI code\nGenerates the <code>Args</code> impl.\nGenerates the <code>Parser</code> implementation.\nGenerates the <code>Subcommand</code> impl.\nGenerates the <code>ValueEnum</code> impl.\nNumber of values present\nOccurs when the user provides two values which conflict …\nA single value\nSemantics for a piece of error information\nA piece of error information\nAn opaque message to the user\nRichly formatted error context\nNot a true “error” as it means <code>--help</code> or similar was …\nOccurs when either an argument or a <code>Subcommand</code> is …\nNot a true “error” as it means <code>--version</code> or similar …\nContains the error value\nCommand Line Argument Parser Error\nDefines how to format an error for displaying to the user\nCommand line argument parser kind of error\nNumber of allowed values\nRepresents a Format error (which is a part of <code>Display</code>). …\nThe cause of the error\nThe cause of the error\nOccurs when the user provides an unrecognized <code>Subcommand</code> …\nOccurs when the user provides a value containing invalid …\nRejected values\nOccurs when an <code>Arg</code> has a set of possible values, and the …\nRepresents an I/O error. Can occur when writing to <code>stderr</code> …\nReport <code>ErrorKind</code>\nMinimum number of allowed values\nOccurs when the user does not provide one or more required …\nOccurs when a subcommand is required (as defined by …\nOccurs when the user doesn’t use equals for an option …\n<code>ContextKind</code> is self-sufficient, no additional information …\nA single value\nContains the success value\nExisting arguments\nShort hand for <code>Result</code> type\nRichly formatted error context\nA single value\nMany values\nA single value\nmany value\nPotential fix for the user\nPotential fix for the user\nPotential fix for the user\nPotential fix for the user\nPotential fix for the user\nOccurs when the user provides fewer values for an argument …\nOccurs when a user provides more values for an argument …\nTrailing argument\nOccurs when a user provides a flag, option, argument or …\nA usage string\nAccepted subcommands\nAccepted values\nOccurs when the user provides a value for an argument with …\nOccurs when the user provides a different number of values …\nApply an alternative formatter to the error\nEnd-user description of the error case, where relevant\nEnd-user description of the error case, where relevant\nAdditional information to further qualify the error\nPrints the error and exits.\nReturns the exit code that <code>.exit</code> will exit the process …\nFormat the existing message with the Command’s context\nStylize the error for the terminal\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nLookup a piece of context\nInsert a piece of context\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nType of error for programmatic processing\nCreate an error with a pre-defined message\nPrints formatted and colored error to <code>stdout</code> or <code>stderr</code> …\nCreate an unformatted error\nRender the error message to a <code>StyledStr</code>.\nShould the message be written to <code>stdout</code> or not?\nApply <code>Command</code>’s formatting to the error\nContainer for parse results.\nValue was passed in on the command-line\nValue came <code>Arg::default_value</code>\nFailed to downcast <code>AnyValue</code> to the specified type\nValue came <code>Arg::env</code>\nIterate over <code>Arg</code> and <code>ArgGroup</code> <code>Id</code>s via <code>ArgMatches::ids</code>.\nIterate over indices for where an argument appeared when …\nViolation of <code>ArgMatches</code> assumptions\nIterate over raw argument values via <code>ArgMatches::get_raw</code>.\nArgument not defined in <code>Command</code>\nOrigin of the argument’s value\nIterate over multiple values for an argument via …\nIterate over multiple values for an argument via …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nType for value stored in <code>ArgMatches</code>\nThe target type to downcast to\nThe <code>build-spec</code> command used to build a specification.\nThe <code>chain-info</code> subcommand used to output db meta columns …\nThe <code>check-block</code> command used to validate blocks.\nThe <code>export-blocks</code> command used to export blocks.\nExport a chain-spec to a JSON file in plain or in raw …\nThe <code>export-state</code> command used to export the state of a …\nGenerate a random account\nThe <code>generate</code> command\nCommon arguments accross all generate key commands, subkey …\nGenerate a random node key, write it to a file or stdout …\nThe <code>import-blocks</code> command used to import blocks.\nInsert a key to the keystore of a node.\nThe <code>insert</code> command\nGets a public key and a SS58 address from the provided …\nThe <code>inspect</code> command\nLoad a node key from a file or stdin and print the …\nThe <code>inspect-node-key</code> command\nKey utilities for the cli.\nThe <code>purge-chain</code> command used to remove the whole chain.\nThe <code>revert</code> command used revert the chain to a previous …\nThe <code>run</code> command used to run a node.\nThe <code>sign</code> command\nThe <code>vanity</code> command\nThe <code>verify</code> command\nShortcut for <code>--name Alice --validator</code>.\nUse binary output rather than JSON.\nTry importing blocks from binary format rather than JSON.\nShortcut for <code>--name Bob --validator</code>.\nThe chain spec identifier to export.\nShortcut for <code>--name Charlie --validator</code>.\nShortcut for <code>--name Dave --validator</code>.\nThe default number of 64KB pages to ever allocate for Wasm …\nThe default number of 64KB pages to ever allocate for Wasm …\nDisable adding the default bootnode to the specification. …\nShortcut for <code>--name Eve --validator</code>.\nExpect that <code>--uri</code> has the given public key/account-id. If …\nShortcut for <code>--name Ferdie --validator</code>.\nEnable authoring even when offline.\nSpecify starting block number. Default is 1.\nBlock hash or number.\nBlock hash or number.\nInput file or stdin if unspecified.\nThe human-readable name for this node.\nThis argument is deprecated and has no effect for this …\nDisable GRANDPA.\nNumber of blocks to revert.\nShortcut for <code>--name One --validator</code>.\nOutput file name or stdout if unspecified.\n<code>chain-spec</code> JSON file path. If omitted, prints to stdout.\nForce raw genesis storage output.\nExport in raw genesis storage format.\nThe cryptography scheme that should be used to generate …\nRun a temporary node.\nSpecify last block number. Default is best block.\nShortcut for <code>--name Two --validator</code>.\nsubcommand utilities\nEnable validator mode.\nSkip interactive prompt by answering yes automatically.\nPublic key type for Runtime\nSeed type for Runtime\nformats seed as hex\ngenerate a pair from suri\nTry to parse given <code>public</code> as hex encoded public key and …\nTry to parse given <code>uri</code> and print relevant information.\nhelper method to fetch uri from <code>Option&lt;String&gt;</code> either as a …\nShould be sent when a import or finality notification is …\nList of operations to be performed on storage aux data. …\nProvides access to an auxiliary database.\nClient backend.\nThe backend used by the node.\nThe transaction type used by <code>Backend</code>.\nKnown bad block hashes.\nNew best block.\nInterface for fetching block data.\nSummary of an imported block\nBlock insertion operation.\nAssociated block insertion operation type.\nFigure out the block type for a given type (for now, just …\nAssociated blockchain backend type.\nA source of blockchain events.\nBoth block import notifications above should be fired.\nMethod call executor.\nInformation related to a child state.\nImport operation wrapper.\nClient info\nStorage proof in compact form.\nAn error type when fetching data is not possible.\nExternalities error type.\nNotify for every single block no matter what the sync …\nexecutor instance\nExecutor Provider\nNewly finalized block (implicitly best).\nSummary of a finalized block.\nA stream of block finality notifications.\nFinalization operation summary.\nFinalize Facilities\nExpected hashes of blocks at given heights.\nThe merkle value is the hash of the node.\nBlockchain database header backend. Does not perform any …\nDescribes which block import notification stream should be …\nType that implements <code>futures::Stream</code> of block import …\nImport operation summary.\nI/O statistics for client instance.\nMultiple key value state. States are ordered by root …\nAn <code>Iterator</code> that iterates keys in a given block under a …\nMark for all Backend implementations, that are making use …\nInterface for performing operations on the backend.\nMemory statistics for client instance.\nA wrapper to store the size of some memory.\nEither the <code>hash</code> or <code>value</code> of a node depending on its size.\nState of a new block.\nThe merkle value is the node data itself when the node …\nNo value.\nNo value.\nNo block import notification should be fired.\nNormal block.\nOffchain workers local storage.\nCallback invoked before committing the operations created …\nCallback invoked before committing the operations created …\nAn <code>Iterator</code> that iterates keys and values in a given block …\nThis is the one used by default.\nInterface to perform auxiliary actions before committing a …\nStorage key of a child trie, it contains the prefix to the …\nInterface for providing block proving utilities.\nProvide a list of potential uncle headers for a given …\nType of the raw storage iterator.\nNotify only when the node has synced to the tip or there …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nA stale block.\nAssociated state backend type.\nAssociated state backend type.\nA state backend is used to read state data and can have …\nExtracts the state backend type for the given backend.\nStorage change set\nStorage data associated to a <code>StorageKey</code>.\nType that implements <code>futures::Stream</code> of storage change …\nStorage key.\nA type of a message delivered to the subscribers\nManages storage listeners.\nA proof that some set of key-value pairs are included in …\nProvides access to storage primitives\nType of trie backend storage.\nSpecify the desired trie cache context when calling …\nThis is used when calling <code>Backend::state_at</code> in a trusted …\nThe type of the block.\nShould be sent when a import or finality notification is …\nKeeps a specific block pinned while the handle is alive. …\nSends a message to the pinning-worker once dropped to …\nMessage that signals notification-based pinning actions to …\nThis is used when calling <code>Backend::state_at</code> in from …\nUsage statistics for running client instance.\nUsage Information Provider interface\nAppend justification to the block with the given <code>hash</code>.\nHelper function to apply auxiliary data insertion into an …\nMark all blocks up to given as finalized in operation.\nReturns the memory size as bytes.\nAverage size of the transaction.\nSubstrate Client data backend\nBegin a new block insertion transaction with given parent …\nNote an operation to contain state transition.\nGet full block by hash.\nThe hash of the block\nGet block body by ID. Returns <code>None</code> if the body is not …\nGet block hash by number.\nConvert an arbitrary block ID into a block hash.\nGet all indexed transactions for a block, including …\nConvert an arbitrary block ID into a block hash.\nGet block status by block hash.\nReturns reference to blockchain backend.\nTotal bytes read from disk.\nTotal bytes written to disk.\nExecute a call to a contract on top of state in a block of …\nA method call executor interface.\nBest block hash.\nThe set of changes\nGet the child merkle value or None if there is nothing …\nGiven a block’s <code>Hash</code>, a key and a child storage key, …\nGet child keyed child storage or None if there is nothing …\nGiven a block’s <code>Hash</code>, a key and a child storage key, …\nGet child keyed storage value hash or None if there is …\nGiven a block’s <code>Hash</code>, a key and a child storage key, …\nGiven a block’s <code>Hash</code> and a key <code>prefix</code> and a child …\nCalculate the child storage root, with given delta over …\nReturns the type for this child info.\nA set of APIs supported by the client along with their …\nGet the merkle value or None if there is nothing …\nGiven a block’s <code>Hash</code> and a key, return the closest …\nCommit given transaction to storage.\nCommit given transaction to storage.\nCommit given transaction to storage.\nCommit given transaction to storage.\nCommit block insertion.\nExecute a contextual call on top of state in a block of a …\nSize of backend database cache.\nReturns a new empty proof.\nReturns the estimated encoded size of the compact proof.\nGet a stream of every imported block.\nExecution extensions for runtime calls.\nGet a reference to the execution extensions.\nReturns the <code>ExecutionExtensions</code>.\nExecute a call to a contract on top of state in a block of …\nGet call executor reference.\ntrue if a key exists in child storage.\ntrue if a key exists in child storage.\ntrue if a key exists in child storage.\ntrue if a key exists in child storage.\ntrue if a key exists in storage.\ntrue if a key exists in storage.\ntrue if a key exists in storage.\ntrue if a key exists in storage.\nConvert an arbitrary block ID into a block hash. Returns …\nConvert an arbitrary block ID into a block number. Returns …\nGet block header. Returns <code>UnknownBlock</code> error if block is …\nGet a stream of finality notifications. Not guaranteed to …\nFinalize a block.\nFinalize block with given <code>hash</code>.\nBlocks that were finalized.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> from the given <code>bytes</code> size.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate finality notification from finality summary.\nCreate finality notification from finality summary.\nCalculate the storage root, with given delta over what is …\nCalculate the storage root, with given delta over what is …\nCalculate the storage root, with given delta over what is …\nCalculate the storage root, with given delta over what is …\nQuery auxiliary data from key-value store.\nQuery auxiliary data from key-value store.\nGain access to the import lock around this backend.\nExtend storage info for benchmarking db\nExtend storage info for benchmarking db\nExtend storage info for benchmarking db\nExtend storage info for benchmarking db\nGet the whitelist for tracking db reads/writes\nGet the whitelist for tracking db reads/writes\nGet the whitelist for tracking db reads/writes\nGet the whitelist for tracking db reads/writes\nCheck if transaction index exists.\nGet block hash by number. Returns <code>None</code> if the header is …\nHash of the block this handle is unpinning on drop\nBlock hash of the imported block.\nThe hash of this block.\nImported block header hash.\nFinalized block header hash.\nReturns true if state for given block is available.\nGet block header. Returns <code>None</code> if block is not found.\nHeader of the imported block.\nLast finalized block header.\nImported block header.\nFinalized block header.\nWhat notify action to take for this import.\nGet block import event stream.\nIn memory client backend\nGet single indexed transaction by content hash.\nGet blockchain info.\nInsert auxiliary keys.\nInsert auxiliary data into key-value store.\nInsert auxiliary data into key-value store.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEncode as a compact proof with default trie layout.\nGet inner key, this should only be needed when writing …\nConvert into an iterator over encoded trie nodes in …\nCreates a <code>MemoryDB</code> from <code>Self</code>.\nConvert into plain node vector.\nReturns the full location in the direct parent of this …\nConsume this notification and extract the unpin handle.\nConsume this notification and extract the unpin handle.\nI/O statistics.\nWhether this block is the new best block.\nReturns whether this is an empty proof.\nWhether this block is considered final.\nIs this a head?\nIs this block a new best block.\nIs this the new best block.\nConvert the change set into iterator over storage items.\nReturn an iterator on the compact encoded nodes.\nCreate an iterator over encoded trie nodes in …\nGet block justifications for the block with the given hash.\nGet an iterator over keys.\nGet an iterator over keys.\nGet an iterator over keys.\nGet an iterator over keys.\nReturns byte sequence (keyspace) that can be use by …\nHelper for managing the set of available leaves in the …\nReturns the number of nodes in the proof.\nReturn total number of key values in states.\nStart listening for particular storage keys.\nLock the import lock, and run operations inside.\nMark a block as finalized, if multiple blocks are …\nMark a block as new head. If both block import and set …\nMemory statistics.\nMerges multiple storage proofs covering potentially …\nCreate a new iterator over storage keys.\nCreate a new iterator over storage key and value pairs.\nCreate a prefixed storage key from its byte array …\nCreate a new <code>UnpinHandleInner</code>\nCreate a new <code>UnpinHandle</code>\nCreate new notification\nInitialize a new StorageNotifications optionally pass a …\nConstructs a storage proof from a subset of encoded trie …\nCreate a new iterator over a child storage’s keys.\nInstantiates child information for a default child trie of …\nSame as <code>new_default</code> but with <code>Vec&lt;u8&gt;</code> as input.\nCreate a prefixed storage key reference.\nConstructs a storage proof from a subset of encoded trie …\nReturn the next key in child storage in lexicographic …\nReturn the next key in storage in lexicographic order or …\nStorage notifications\nSummary of finalized block.\nSummary of imported block.\nGet block number by hash. Returns <code>None</code> if the header is …\nReturns a handle to offchain storage.\nDB Operation.\nImport origin.\nImported block origin.\nGet an iterator over key/value pairs.\nGet an iterator over key/value pairs.\nGet an iterator over key/value pairs.\nGet an iterator over key/value pairs.\nPin the block to keep body, justification and state …\nReturn the full location in the direct parent of this trie.\nProof utilities\nEstimate proof size\nEstimate proof size\nEstimate proof size\nEstimate proof size\nProve the execution of the given <code>method</code>.\nReturns a lifetimeless raw storage iterator.\nReads child storage value at a given block + storage_key + …\nReads storage value at a given block + key, returning read …\nGiven a <code>Hash</code> iterate over all storage values starting at …\nGet the read/write count of the db\nGet the read/write count of the db\nGet the read/write count of the db\nGet the read/write count of the db\nTotal key reads from disk.\nActions to be performed on block finalization.\nActions to be performed on block import.\nRegister stats from overlay of state machine.\nDiscard non-best, unfinalized leaf block.\nTells whether the backend requires full-sync mode.\nTells whether the current client configuration requires …\nGet the read/write count of the db\nGet the read/write count of the db\nGet the read/write count of the db\nGet the read/write count of the db\nInject storage data into the database replacing any …\nAttempts to revert the chain by <code>n</code> blocks. If …\nExtract RuntimeVersion of given block\nAppend block data to the transaction.\nConfigure whether to create a block gap if newly imported …\nSet genesis state. If <code>commit</code> is <code>false</code> the state is saved …\nUpdate the whitelist for tracking db reads/writes\nUpdate the whitelist for tracking db reads/writes\nUpdate the whitelist for tracking db reads/writes\nUpdate the whitelist for tracking db reads/writes\nBlocks that became stale during this finalization …\nStale blocks.\nReturns pending state.\nReturns state backend with post-state of given block.\nSize of state cache.\nState reads (keys)\nState reads (keys) from cache.\nState reads (keys)\nState write (keys) already cached.\nState write (trie nodes) to backend db.\nGet block status.\nGet keyed storage or None if there is nothing associated.\nGiven a block’s <code>Hash</code> and a key, return the value under …\nOptional storage changes.\nGet storage changes event stream.\nGiven a <code>Hash</code> iterate over all storage values starting at …\nGet keyed storage value hash or None if there is nothing …\nGiven a block’s <code>Hash</code> and a key, return the value under …\nReturns a reference to the location in the direct parent of\nGiven a block’s <code>Hash</code> and a key prefix, returns a <code>KeysIter</code>…\nGiven a block’s <code>Hash</code> and a key prefix, returns an …\nCalculate the storage root, with given delta over what is …\nEncode as a compact proof with default trie layout.\nCreates a <code>MemoryDB</code> from <code>Self</code> reference.\nConvert self into a <code>MemoryDB</code>.\nDecode to a full storage_proof.\nNumber of transactions.\nTree route from old best to new best.\nTree route from old best to new best parent.\nPath from the old finalized to new finalized parent …\nTrigger notification to all listeners.\nTry to update with another instance, return false if both …\nGets the uncles of the block with <code>target_hash</code> going back …\nUnpin the block to allow pruning.\nInject storage data into the database.\nUpdate last keys accessed from this state.\nWrite offchain storage changes to the database.\nSet storage changes.\nAdd a transaction index operation.\nUsage info, if backend supports this.\nQuery backend usage statistics (i/o, memory)\nReturns current usage statistics.\nGet usage info about current client.\nUtility methods for the client.\nVerify read storage proof for a set of keys. Returns …\nWipe the state database.\nWipe the state database.\nWipe the state database.\nWipe the state database.\nTotal key writes to disk.\nProvides access to an auxiliary database.\nClient backend.\nThe transaction type used by <code>Backend</code>.\nNew best block.\nBlock insertion operation.\nAssociated block insertion operation type.\nAssociated blockchain backend type.\nBoth block import notifications above should be fired.\nImport operation wrapper.\nAn error type when fetching data is not possible.\nNotify for every single block no matter what the sync …\nNewly finalized block (implicitly best).\nFinalization operation summary.\nFinalize Facilities\nThe merkle value is the hash of the node.\nDescribes which block import notification stream should be …\nImport operation summary.\nMultiple key value state. States are ordered by root …\nAn <code>Iterator</code> that iterates keys in a given block under a …\nMark for all Backend implementations, that are making use …\nInterface for performing operations on the backend.\nEither the <code>hash</code> or <code>value</code> of a node depending on its size.\nState of a new block.\nThe merkle value is the node data itself when the node …\nNo block import notification should be fired.\nNormal block.\nOffchain workers local storage.\nAn <code>Iterator</code> that iterates keys and values in a given block …\nType of the raw storage iterator.\nNotify only when the node has synced to the tip or there …\nA stale block.\nAssociated state backend type.\nAssociated state backend type.\nA state backend is used to read state data and can have …\nExtracts the state backend type for the given backend.\nProvides access to storage primitives\nType of trie backend storage.\nSpecify the desired trie cache context when calling …\nThis is used when calling <code>Backend::state_at</code> in a trusted …\nThis is used when calling <code>Backend::state_at</code> in from …\nAppend justification to the block with the given <code>hash</code>.\nHelper function to apply auxiliary data insertion into an …\nMark all blocks up to given as finalized in operation.\nBegin a new block insertion transaction with given parent …\nNote an operation to contain state transition.\nReturns reference to blockchain backend.\nGet the child merkle value or None if there is nothing …\nGiven a block’s <code>Hash</code>, a key and a child storage key, …\nGet child keyed child storage or None if there is nothing …\nGiven a block’s <code>Hash</code>, a key and a child storage key, …\nGet child keyed storage value hash or None if there is …\nGiven a block’s <code>Hash</code>, a key and a child storage key, …\nGiven a block’s <code>Hash</code> and a key <code>prefix</code> and a child …\nCalculate the child storage root, with given delta over …\nGet the merkle value or None if there is nothing …\nGiven a block’s <code>Hash</code> and a key, return the closest …\nCommit given transaction to storage.\nCommit block insertion.\ntrue if a key exists in child storage.\ntrue if a key exists in storage.\nFinalize a block.\nFinalize block with given <code>hash</code>.\nBlocks that were finalized.\nCalculate the storage root, with given delta over what is …\nQuery auxiliary data from key-value store.\nGain access to the import lock around this backend.\nExtend storage info for benchmarking db\nGet the whitelist for tracking db reads/writes\nBlock hash of the imported block.\nThe hash of this block.\nHeader of the imported block.\nLast finalized block header.\nWhat notify action to take for this import.\nInsert auxiliary keys.\nInsert auxiliary data into key-value store.\nIs this a head?\nIs this block a new best block.\nGet an iterator over keys.\nLock the import lock, and run operations inside.\nMark a block as finalized, if multiple blocks are …\nMark a block as new head. If both block import and set …\nReturn the next key in child storage in lexicographic …\nReturn the next key in storage in lexicographic order or …\nSummary of finalized block.\nSummary of imported block.\nReturns a handle to offchain storage.\nDB Operation.\nImport origin.\nGet an iterator over key/value pairs.\nPin the block to keep body, justification and state …\nEstimate proof size\nReturns a lifetimeless raw storage iterator.\nGet the read/write count of the db\nRegister stats from overlay of state machine.\nDiscard non-best, unfinalized leaf block.\nTells whether the backend requires full-sync mode.\nGet the read/write count of the db\nInject storage data into the database replacing any …\nAttempts to revert the chain by <code>n</code> blocks. If …\nAppend block data to the transaction.\nConfigure whether to create a block gap if newly imported …\nSet genesis state. If <code>commit</code> is <code>false</code> the state is saved …\nUpdate the whitelist for tracking db reads/writes\nBlocks that became stale during this finalization …\nReturns pending state.\nReturns state backend with post-state of given block.\nGet keyed storage or None if there is nothing associated.\nGiven a block’s <code>Hash</code> and a key, return the value under …\nOptional storage changes.\nGet keyed storage value hash or None if there is nothing …\nGiven a block’s <code>Hash</code> and a key, return the value under …\nGiven a block’s <code>Hash</code> and a key prefix, returns a <code>KeysIter</code>…\nGiven a block’s <code>Hash</code> and a key prefix, returns an …\nCalculate the storage root, with given delta over what is …\nTree route from old best to new best.\nUnpin the block to allow pruning.\nInject storage data into the database.\nWrite offchain storage changes to the database.\nSet storage changes.\nAdd a transaction index operation.\nQuery backend usage statistics (i/o, memory)\nReturns current usage statistics.\nWipe the state database.\nError when the runtime failed to apply an extrinsic.\nBlockchain database backend. Does not perform any …\nRepresents the block gap resulted by warp sync or fast …\nRepresents the type of block gaps that may result from …\nBlock status.\nCached header metadata. Used to efficiently traverse the …\nResult of  <code>Backend::displaced_leaves_after_finalizing</code>.\nContains the error value\nSubstrate Client error\nError used in case the header metadata is not found.\nHandles stale forks.\nHash and number of a block.\nBlockchain database header backend. Does not perform any …\nHandles header metadata: hash, number, parent hash, etc.\nCaches header metadata in an in-memory LRU cache.\nAlready in the blockchain.\nBlockchain info\nThe block body is missing, as a result of fast sync.\nBoth the header and body are missing, as a result of warp …\nContains the success value\nClient Result type alias\nA error used by various storage subsystems.\nA tree-route from one block to another in the chain.\nNot in the queue or the blockchain.\nThe transaction cannot be included into the current block.\nBest block hash.\nBest block number.\nMissing blocks after warp sync or fast sync.\nGet block body. Returns <code>None</code> if block is not found.\nReturn hashes of all blocks that are children of the block …\nGet the common ancestor block. This might be one of the …\nA list of hashes displaced blocks from all displaced …\nA list of hashes and block numbers of displaced leaves.\nReturns all leaves that will be displaced after the block …\nGet a slice of enacted blocks (descendants of the common …\nThe ending block number of the gap (inclusive).\nReturns block hashes for provided fork heads. It skips the …\nThe head of the finalized chain.\nLast finalized block number.\nLast finalized state.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nChain a blockchain error.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nChain a state error.\nConstruct from a state db error.\nThe type of gap.\nGenesis block hash.\nCheck if indexed transaction exists.\nGet block hash by number. Returns <code>None</code> if the header is …\nThe hash of the block.\nHash of the header.\nReturns a collection of hashes for the displaced leaves.\nGet block header. Returns <code>None</code> if block is not found.\nGet single indexed transaction by content hash. Note that …\nGet blockchain info.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into all retracted blocks in reverse order …\nGet block justifications. Returns <code>None</code> if no justification …\nReturns the last block.\nGet last finalized block hash.\nReturns hashes of all blocks that are leaves of the block …\nGet the most recent block hash of the longest chain that …\nGet the lowest common ancestor between two blocks in the …\nCreates a new LRU header metadata cache with <code>capacity</code>.\nCreates a new <code>TreeRoute</code>.\nGet block number by hash. Returns <code>None</code> if the header is …\nThe number of the block.\nBlock number.\nNumber of concurrent leave forks.\nHash of parent header.\nGet a slice of all retracted blocks in reverse order …\nThe starting block number of the gap (inclusive).\nBlock state root.\nGet block status.\nCompute a tree-route between two blocks. See tree-route …\nThe backend used by the node.\nMethod call executor.\nExternalities error type.\nexecutor instance\nExecutor Provider\nExecute a call to a contract on top of state in a block of …\nExecute a contextual call on top of state in a block of a …\nGet a reference to the execution extensions.\nReturns the <code>ExecutionExtensions</code>.\nGet call executor reference.\nProve the execution of the given <code>method</code>.\nExtract RuntimeVersion of given block\nShould be sent when a import or finality notification is …\nList of operations to be performed on storage aux data. …\nKnown bad block hashes.\nInterface for fetching block data.\nSummary of an imported block\nFigure out the block type for a given type (for now, just …\nA source of blockchain events.\nClient info\nSummary of a finalized block.\nA stream of block finality notifications.\nExpected hashes of blocks at given heights.\nType that implements <code>futures::Stream</code> of block import …\nI/O statistics for client instance.\nMemory statistics for client instance.\nA wrapper to store the size of some memory.\nNo value.\nNo value.\nCallback invoked before committing the operations created …\nCallback invoked before committing the operations created …\nInterface to perform auxiliary actions before committing a …\nProvide a list of potential uncle headers for a given …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThe type of the block.\nShould be sent when a import or finality notification is …\nKeeps a specific block pinned while the handle is alive. …\nSends a message to the pinning-worker once dropped to …\nMessage that signals notification-based pinning actions to …\nUsage statistics for running client instance.\nAverage size of the transaction.\nGet full block by hash.\nGet block body by ID. Returns <code>None</code> if the body is not …\nGet block hash by number.\nGet all indexed transactions for a block, including …\nGet block status by block hash.\nTotal bytes read from disk.\nTotal bytes written to disk.\nBest block hash.\nSize of backend database cache.\nGet a stream of every imported block.\nGet a stream of finality notifications. Not guaranteed to …\nCheck if transaction index exists.\nImported block header hash.\nFinalized block header hash.\nImported block header.\nFinalized block header.\nGet block import event stream.\nGet single indexed transaction by content hash.\nI/O statistics.\nIs this the new best block.\nGet block justifications for the block with the given hash.\nMemory statistics.\nImported block origin.\nTotal key reads from disk.\nActions to be performed on block finalization.\nActions to be performed on block import.\nTells whether the current client configuration requires …\nStale blocks.\nSize of state cache.\nState reads (keys)\nState reads (keys) from cache.\nState reads (keys)\nState write (keys) already cached.\nState write (trie nodes) to backend db.\nGet storage changes event stream.\nNumber of transactions.\nTree route from old best to new best parent.\nPath from the old finalized to new finalized parent …\nGets the uncles of the block with <code>target_hash</code> going back …\nUsage info, if backend supports this.\nTotal key writes to disk.\nA producer of execution extensions for offchain calls.\nAn <code>ExtensionsFactory</code> that registers an <code>Extension</code> before a …\nGenerate the starting set of <code>Extensions</code>.\nProduces default extensions based on the input parameters.\nCreate <code>Extensions</code> for the given input.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate the extension factory.\nCreate new <code>ExecutionExtensions</code> given an <code>extensions_factory</code>.\nSet the new extensions_factory\nIn-memory backend. Keeps all states and blocks in memory.\nIn-memory operation.\nIn-memory blockchain. Supports concurrent reads.\nGet total number of blocks.\nCompare canonical chain to other canonical chain.\nCheck that genesis storage is valid.\nCompare this blockchain with another in-mem blockchain\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet block hash by number. Returns <code>None</code> if the header is …\nGet block header. Returns <code>None</code> if block is not found.\nGet header hash of given block.\nGet blockchain info.\nInsert a block header and associated data.\nInsert header CHT root.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance of in-mem backend.\nCreate new in-memory blockchain storage.\nGet block number by hash. Returns <code>None</code> if the header is …\nReturn the number of references active for a pinned block.\nSet an existing block as head.\nRemoved leaves after a finalization action.\nInserted and removed leaves after an import action.\nlist of leaf hashes ordered by number (descending). stored …\nInserted and removed leaves after a remove action.\nHelper for undoing operations.\nCheck if given block is a leaf.\nNumber of known leaves.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns an iterator over all hashes in the leaf set …\nReturns the highest leaf and all hashes associated to it.\nUpdate the leaf list on import.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructor\nConstruct a new, blank leaf set.\nWrite the leaf list to the database transaction.\nRead the leaf list from the DB, using given prefix for …\nUpdate the leaf list on removal.\nRemove all leaves displaced by the last block finalization.\nRevert to the given block height by dropping all leaves in …\nUndo all pending operations.\nUndo a finalization operation by providing the displaced …\nUndo an imported block by providing the import operation …\nUndo a removed block by providing the displaced leaf. No …\nStorage change set\nType that implements <code>futures::Stream</code> of storage change …\nA type of a message delivered to the subscribers\nManages storage listeners.\nThe hash of the block\nThe set of changes\nInterface for providing block proving utilities.\nExecute a call to a contract on top of state in a block of …\nReads child storage value at a given block + storage_key + …\nReads storage value at a given block + key, returning read …\nGiven a <code>Hash</code> iterate over all storage values starting at …\nGiven a <code>Hash</code> iterate over all storage values starting at …\nVerify read storage proof for a set of keys. Returns …\nReturns a function for checking block ancestry, the …\nNo pruning. Canonicalization is a no-op.\nCanonicalization discards non-canonical nodes. All the …\nCheck given path, and see if there is an existing database …\nDisk backend.\nState that manages the backend database reference. Allows …\nDatabase transaction\nBlock database\nBlock pruning settings.\nMaintain a pruning window.\nUse a custom already-open database.\nDatabase settings.\nWhere to find the database..\nHash type that this backend uses for the database.\nDB-backed patricia trie state, transaction type is an …\nBuilder for <code>DbState</code>.\nKeep full block history, of every block that was ever …\nKeep full finalized block history.\nLoad a ParityDb database from a given path.\nPruning mode.\nA raw iterator over the <code>RefTrackingState</code>.\nA reference tracking state.\nLoad a RocksDB database from a given path. Recommended for …\nKeep N recent finalized blocks.\nState backend that’s useful for benchmarking\nCreate a mode that keeps given number of blocks.\nBlock pruning mode.\nCommit the <code>transaction</code> to the database atomically. Any …\nCheck if the value exists in the database without …\nCheck if the value exists in the database without …\nCheck if the value exists in the database without …\nExpose the Database that is used by this backend. The …\nExpose the shared trie cache that is used by this backend.\nExpose the Storage that is used by this backend.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRetrieve the value previously stored against <code>key</code> or <code>None</code> if\nGet block hash by number. Returns <code>None</code> if the header is …\nGet block header. Returns <code>None</code> if block is not found.\nReturns the pruning mode\nGet blockchain info.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this an archive (either ArchiveAll or ArchiveCanonical) …\nTrue if this is an archive pruning mode (either KeepAll or …\nPrometheus metrics registry.\nCreate a new instance that creates a database in a …\nCreate a new instance of database backend.\nCreate new memory-backed client backend for tests.\nCreate new memory-backed client backend for tests.\nGet block number by hash. Returns <code>None</code> if the header is …\nRocksDB-based offchain workers local storage.\nReturn path for databases that are stored on disk.\nGet the key tracking information for the state db.\nGet the proof recorder for this state\nReset the key tracking information for the state db.\nReset the shared trie cache.\nRemove a possible path-prefix from the key.\nRemove a possible path-prefix from the key.\nRemove a possible path-prefix from the key.\nSet path for databases that are stored on disk.\nWhere to find the database.\nRequested state pruning mode.\nCheck if database supports internal ref counting for state …\nCheck if database supports internal ref counting for state …\nCheck if database supports internal ref counting for state …\nThe maximum trie cache size in bytes.\nCheck value size in the database possibly without …\nCheck value size in the database possibly without …\nCheck value size in the database possibly without …\nCall <code>f</code> with the value previously stored against <code>key</code>.\nCall <code>f</code> with the value previously stored against <code>key</code>.\nCall <code>f</code> with the value previously stored against <code>key</code>.\nCache size in MiB. Used only by <code>RocksDb</code> variant of …\nCache size in MiB.\nthe handle to the custom storage\nPath to the paritydb database.\nPath to the database.\nPath to the database.\nif set, the <code>create</code> flag will be required to open such …\nPath to the rocksdb database.\nState that manages the backend database reference. Allows …\nA raw iterator over the <code>BenchmarkingState</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nOffchain local storage\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate offchain local storage with given <code>KeyValueDB</code> …\nCreate new offchain storage for tests (backed by memorydb)\nAlready in the blockchain.\nApply precomputed changes coming from block execution or …\nBlock is known to be Bad\nInterface to a basic block import queue that is importing …\nData required to check validity of a Block.\nBlock import trait.\nBlock import error.\nData required to import a Block.\nBlock import successful result.\nShared block import struct used by the queue.\nShared justification import struct used by the queue.\nBlock import has been cancelled. This can happen if the …\nChanges coming from block execution.\nCustom fork choice rule, where true indicates the new …\nA commonly-used Import Queue type.\nThe error type.\nExecute block body (required) and compute state.\nExecute block body if parent state is available and …\nJustification was not imported successfully.\nFork choice strategy.\nWhole new state.\nBlock import result.\nBlock imported.\nAuxiliary data associated with an imported block result.\nImported known block.\nImported state data. A vector of key-value pairs that …\nImported unknown block.\nBlock data used by the queue.\nBlock missed header, can’t be imported\nJustification import trait\nThe result of importing a justification.\nControl the synchronization process of block …\nBlock or parent is known to be bad.\nHooks that the verification queue can use to influence the …\nImplement Longest Chain Select implementation where ‘…\nLongest chain fork choice.\nParent state is missing.\nParent state is missing.\nOther error.\nJustification was not imported successfully, because it is …\nDon’t execute or import state.\nDefines how a new state is computed for a given imported …\nPrecomputed storage.\nJustification was imported successfully.\nBlock parent is not in the chain.\nBlock has an unknown parent\nBlock verification failed, can’t be imported\nVerify a justification of a block\nAllow importing the block if parent block is missing.\nAllow importing the block skipping state verification if …\nAllow importing the block skipping state verification if …\nAuxiliary consensus data produced by the block. Contains a …\nReceived a bad justification.\nTarget block hash.\nBlock import helpers.\nBatch of blocks imported, with or without error.\nThe body of the block.\nBlock body if requested.\nCheck block preconditions.\nClear all pending justification requests.\nClear all pending justification requests.\nWhether to create “block gap” in case this block doesn…\nIs this block finalized already? <code>true</code> implies instant …\nFork choice strategy of this import. This should only be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to a given intermediate.\nGet a mutable reference to a given intermediate.\nHandles any necessary request for justifications (or …\nHash of the block that we verify.\nBlock header hash.\nThe header, without consensus post-digests applied. This …\nBlock header if requested.\nOnly the header has been imported. Block body verification …\nImport a block.\nRe-validate existing block.\nRe-validate existing block.\nRe-validate existing block.\nImport a Block justification and finalize the given block.\nImport Queue primitive: something which can verify and …\nSingle block import function.\nReturns default value for <code>ImportResult::Imported</code> with …\nIndexed transaction body of the block.\nIndexed block body if requested.\nInsert intermediate by given key.\nIntermediate values that are interpreted by block …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the block that was imported is the new best block.\nJustification import result.\nJustification(s) provided for this block from the outside.\nJustification(s) if requested.\nMetering tools for consensus\nRequest a justification for the given block.\nCreate a new block import params.\nInstantiate a new basic queue, with given verifier.\nInstantiate a new LongestChain for Backend B\nReturns the imported block number.\nBlock number of the block that we verify.\nCalled by the import queue when it is started. Returns a …\nOrigin of the Block\nThe peer, we received this from\nParent hash of the block that we verify.\nThis method should behave in a way similar to <code>Future::poll</code>…\nPoll actions from network.\nDigest items that have been added after the runtime for …\nGet the full header hash (with post-digests applied).\nCached full header hash (with post-digests applied).\nGet the post header.\nRemove and return intermediate by given key.\nRequest a justification for the given block.\nRequest a justification for the given block.\nStart asynchronous runner for import queue.\nStart asynchronous runner for import queue.\nGet a copy of the handle to <code>ImportQueueService</code>.\nGet handle to <code>ImportQueueService</code>.\nGet a reference to the handle to <code>ImportQueueService</code>.\nGet a reference to the handle to <code>ImportQueueService</code>.\nProvides a generic wrapper around shared data. See …\nSkip block execution and state verification.\nCheck if execution checks that require runtime calls …\nState keys and values.\nDo not compute new state, but rather set it to the given …\nSpecify how the new state is computed.\nVerify the given block data and return the …\nCheck if this block contains state import action\nAlready in the blockchain.\nApply precomputed changes coming from block execution or …\nData required to check validity of a Block.\nBlock import trait.\nData required to import a Block.\nChanges coming from block execution.\nCustom fork choice rule, where true indicates the new …\nThe error type.\nExecute block body (required) and compute state.\nExecute block body if parent state is available and …\nFork choice strategy.\nWhole new state.\nBlock import result.\nBlock imported.\nAuxiliary data associated with an imported block result.\nImported state data. A vector of key-value pairs that …\nJustification import trait\nControl the synchronization process of block …\nBlock or parent is known to be bad.\nLongest chain fork choice.\nParent state is missing.\nDon’t execute or import state.\nDefines how a new state is computed for a given imported …\nPrecomputed storage.\nBlock parent is not in the chain.\nAllow importing the block if parent block is missing.\nAllow importing the block skipping state verification if …\nAuxiliary consensus data produced by the block. Contains a …\nReceived a bad justification.\nTarget block hash.\nThe body of the block.\nCheck block preconditions.\nClear all pending justification requests.\nClear all pending justification requests.\nWhether to create “block gap” in case this block doesn…\nIs this block finalized already? <code>true</code> implies instant …\nFork choice strategy of this import. This should only be …\nHash of the block that we verify.\nThe header, without consensus post-digests applied. This …\nOnly the header has been imported. Block body verification …\nImport a block.\nRe-validate existing block.\nRe-validate existing block.\nImport a Block justification and finalize the given block.\nIndexed transaction body of the block.\nIntermediate values that are interpreted by block …\nWhether the block that was imported is the new best block.\nJustification(s) provided for this block from the outside.\nRequest a justification for the given block.\nBlock number of the block that we verify.\nCalled by the import queue when it is started. Returns a …\nOrigin of the Block\nParent hash of the block that we verify.\nDigest items that have been added after the runtime for …\nCached full header hash (with post-digests applied).\nRequest a justification for the given block.\nState keys and values.\nSpecify how the new state is computed.\nBlock is known to be Bad\nInterface to a basic block import queue that is importing …\nBlock import error.\nBlock import successful result.\nShared block import struct used by the queue.\nShared justification import struct used by the queue.\nBlock import has been cancelled. This can happen if the …\nA commonly-used Import Queue type.\nJustification was not imported successfully.\nBlocks import queue API.\nImported known block.\nImported unknown block.\nBlock data used by the queue.\nBlock missed header, can’t be imported\nThe result of importing a justification.\nHooks that the verification queue can use to influence the …\nParent state is missing.\nOther error.\nJustification was not imported successfully, because it is …\nMaps to the RuntimeOrigin used by the network.\nJustification was imported successfully.\nBlock has an unknown parent\nBlock verification failed, can’t be imported\nVerify a justification of a block\nAllow importing the block skipping state verification if …\nBatch of blocks imported, with or without error.\nBlock body if requested.\nProvides the <code>buffered_link</code> utility.\nBlock header hash.\nBlock header if requested.\nImport a bunch of blocks, every next block must be an …\nRe-validate existing block.\nImport block justifications.\nSingle block import function.\nIndexed block body if requested.\nJustification import result.\nJustification(s) if requested.\nThe peer, we received this from\nThis method should behave in a way similar to <code>Future::poll</code>…\nRequest a justification for the given block.\nStart asynchronous runner for import queue.\nGet a copy of the handle to <code>ImportQueueService</code>.\nGet a reference to the handle to <code>ImportQueueService</code>.\nSkip block execution and state verification.\nDo not compute new state, but rather set it to the given …\nVerify the given block data and return the …\nInternal buffered message.\nSee <code>buffered_link</code>.\nSee <code>buffered_link</code>.\nWraps around an unbounded channel from the <code>futures</code> crate. …\nClose the channel.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the sender points to nowhere.\nPoll next element from import queue and send the …\nPolls for the buffered link actions. Any enqueued action …\nSend action for the synchronization to perform.\nValidate that all current expectations for all methods have\nValidate that all current expectations for all methods have\nCreate an <code>Expectation</code> for mocking the <code>import_blocks</code> method\nCreate an <code>Expectation</code> for mocking the <code>import_justifications</code>…\nCreate an <code>Expectation</code> for mocking the <code>poll_actions</code> method\nCreate an <code>Expectation</code> for mocking the <code>run</code> method\nCreate an <code>Expectation</code> for mocking the <code>service</code> method\nCreate an <code>Expectation</code> for mocking the <code>service_ref</code> method\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new mock object with no expectations.\nCreate a new mock object with no expectations.\nExpectation type for methods that return a <code>&#39;static</code> type. …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAdd this expectation to a <code>Sequence</code>.\nCalls <code>U::from(self)</code>.\nForbid this expectation from ever being called.\nCreate a new, default, <code>Expectation</code>\nExpect this expectation to be called exactly once.  …\nReturn a constant value from the <code>Expectation</code>\nSingle-threaded version of <code>return_const</code>.  This is useful …\nSupply an <code>FnOnce</code> closure that will provide the return …\nSingle-threaded version of <code>return_once</code>.  This is useful for\nSupply a closure that will provide the return value for …\nSingle-threaded version of <code>returning</code>. Can be used when the …\nRestrict the number of times that that this method may be …\nSet matching criteria for this Expectation.\nSet a matching function for this Expectation.\nSingle-threaded version of <code>withf</code>. Can be used when the …\nExpectation type for methods that return a <code>&#39;static</code> type. …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAdd this expectation to a <code>Sequence</code>.\nCalls <code>U::from(self)</code>.\nForbid this expectation from ever being called.\nCreate a new, default, <code>Expectation</code>\nExpect this expectation to be called exactly once.  …\nReturn a constant value from the <code>Expectation</code>\nSingle-threaded version of <code>return_const</code>.  This is useful …\nSupply an <code>FnOnce</code> closure that will provide the return …\nSingle-threaded version of <code>return_once</code>.  This is useful for\nSupply a closure that will provide the return value for …\nSingle-threaded version of <code>returning</code>. Can be used when the …\nRestrict the number of times that that this method may be …\nSet matching criteria for this Expectation.\nSet a matching function for this Expectation.\nSingle-threaded version of <code>withf</code>. Can be used when the …\nExpectation type for methods that return a <code>&#39;static</code> type. …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAdd this expectation to a <code>Sequence</code>.\nCalls <code>U::from(self)</code>.\nForbid this expectation from ever being called.\nCreate a new, default, <code>Expectation</code>\nExpect this expectation to be called exactly once.  …\nReturn a constant value from the <code>Expectation</code>\nSingle-threaded version of <code>return_const</code>.  This is useful …\nSupply an <code>FnOnce</code> closure that will provide the return …\nSingle-threaded version of <code>return_once</code>.  This is useful for\nSupply a closure that will provide the return value for …\nSingle-threaded version of <code>returning</code>. Can be used when the …\nRestrict the number of times that that this method may be …\nSet matching criteria for this Expectation.\nSet a matching function for this Expectation.\nSingle-threaded version of <code>withf</code>. Can be used when the …\nExpectation type for methods that return a <code>&#39;static</code> type. …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAdd this expectation to a <code>Sequence</code>.\nCalls <code>U::from(self)</code>.\nForbid this expectation from ever being called.\nCreate a new, default, <code>Expectation</code>\nExpect this expectation to be called exactly once.  …\nReturn a constant value from the <code>Expectation</code>\nSingle-threaded version of <code>return_const</code>.  This is useful …\nSupply an <code>FnOnce</code> closure that will provide the return …\nSingle-threaded version of <code>return_once</code>.  This is useful for\nSupply a closure that will provide the return value for …\nSingle-threaded version of <code>returning</code>. Can be used when the …\nRestrict the number of times that that this method may be …\nSet matching criteria for this Expectation.\nSet a matching function for this Expectation.\nSingle-threaded version of <code>withf</code>. Can be used when the …\nExpectation type for methods that return a <code>&#39;static</code> type. …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAdd this expectation to a <code>Sequence</code>.\nCalls <code>U::from(self)</code>.\nForbid this expectation from ever being called.\nCreate a new, default, <code>Expectation</code>\nExpect this expectation to be called exactly once.  …\nReturn a constant value from the <code>Expectation</code>\nSingle-threaded version of <code>return_const</code>.  This is useful …\nSupply an <code>FnOnce</code> closure that will provide the return …\nSingle-threaded version of <code>return_once</code>.  This is useful for\nSupply a closure that will provide the return value for …\nSingle-threaded version of <code>returning</code>. Can be used when the …\nRestrict the number of times that that this method may be …\nSet matching criteria for this Expectation.\nSet a matching function for this Expectation.\nSingle-threaded version of <code>withf</code>. Can be used when the …\nExpectation type for methods taking a <code>&amp;mut self</code> argument …\nSimulating calling the real method for this expectation\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAdd this expectation to a <code>Sequence</code>.\nCalls <code>U::from(self)</code>.\nForbid this expectation from ever being called.\nCreate a new, default, <code>Expectation</code>\nExpect this expectation to be called exactly once.  …\nConvenience method that can be used to supply a return …\nSupply a closure that the <code>Expectation</code> will use to create …\nSingle-threaded version of <code>returning</code>. Can be used when the …\nRestrict the number of times that that this method may be …\nSet matching criteria for this Expectation.\nSet a matching function for this Expectation.\nSingle-threaded version of <code>withf</code>. Can be used when the …\nSome shared data that provides support for locking this …\nCreated by <code>SharedData::shared_data_locked</code>.\nCreated by <code>SharedDataLocked::release_mutex</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance of <code>SharedData</code> to share the given …\nRelease the mutex, but keep the shared data locked.\nAcquire access to the shared data.\nAcquire access to the shared data and lock it.\nUpgrade to a <em>real</em> mutex guard that will give access to the …\nThe <code>ConsensusEngineId</code> of AuRa.\nAPI necessary for block authorship with aura.\nThe type of the Aura inherent.\nA verifier for Aura blocks.\nThe authorities have changed.\nAURA authorities tracker. Updates authorities based on the …\nBad signature\nParameters of <code>build_aura_worker</code>.\nParameters of <code>build_verifier</code>.\nShould we check for equivocation of a block author?\nClient Error\nRun <code>AURA</code> in a compatibility mode.\nA digest item which is usable with aura consensus.\nAn consensus log item for Aura.\nAura Errors\nHeader has a bad seal\nHeader is unsealed\nThe Aura inherent identifier.\nParameters of <code>import_queue</code>.\nInherents Error\nProvides the slot duration inherent data for <code>Aura</code>.\nMultiple Aura pre-runtime headers\nNo, don’t check for equivocation.\nNo Aura pre-runtime digest found\nDon’t use any compatibility mode.\nDisable the authority with given index.\nSlot Author not found\nA slot duration defined in milliseconds.\nA unit type wrapper to express the proportion of a slot.\nParameters of <code>start_aura</code>.\nAn oracle for when major synchronization work is being …\nCall <code>initialize_block</code> before doing any runtime calls.\nYes, check for equivocation.\nIf this item is an AuRa pre-digest, return the slot number\nIf this item is an Aura seal, return the signature.\nReturns <code>self</code> as <code>core::time::Duration</code>.\nReturns <code>self</code> as a <code>u64</code> representing the duration in …\nConstruct a digest item which contains the slot number\nConstruct a digest item which contains a signature on the …\nReturn the current set of authorities.\nThe backoff strategy when we miss slots.\nThe backoff strategy when we miss slots.\nThe block import to use.\nThe block import.\nThe block import.\nThe proportion of the slot dedicated to proposing.\nThe proportion of the slot dedicated to proposing.\nBuild the aura worker.\nBuild the <code>AuraVerifier</code>\nShould we check for equivocation?\nShould we check for equivocation?\nThe client to interact with the chain.\nThe client to interact with the chain.\nThe client to interact with the chain.\nThe client to interact with the chain.\nCompatibility mode that should be used.\nCompatibility mode that should be used.\nCompatibility mode that should be used.\nCompatibility mode that should be used.\nSomething that can create the inherent data providers.\nSomething that can create the inherent data providers.\nSomething that can create the inherent data providers.\nFetch authorities from the tracker, if available. If not …\nExtract a pre-digest from a block header.\nShould we force the authoring of blocks?\nShould we force the authoring of blocks?\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitialize from the given milliseconds.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreates the inherent data provider by calculating the slot …\nIf there is an authorities change digest in the header, …\nStart an import queue for the Aura consensus algorithm.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the synchronization service is undergoing major …\nWhether the synchronization service is offline. Returns …\nThe justification import.\nHook into the sync module to control the justification …\nHook into the sync module to control the justification …\nThe keystore used by the node.\nThe keystore used by the node.\nThe maximum proportion of the slot dedicated to proposing …\nThe maximum proportion of the slot dedicated to proposing …\nCreate a new instance with the given slot.\nCreate a new <code>AuthoritiesTracker</code>.\nThe proposer factory to build proposer instances.\nThe proposer factory to build proposer instances.\nThe prometheus registry.\nA select chain implementation to select the best block.\nGet the slot duration for Aura by reading from a runtime …\nReturns the slot duration for Aura.\nThe duration of a slot.\nThe spawner to spawn background tasks.\nStandalone functions used within the implementation of …\nStart the aura worker. The returned future should be run …\nThe sync oracle that can give us the current sync status.\nThe sync oracle that can give us the current sync status.\nTelemetry instance used to report telemetry metrics.\nTelemetry instance used to report telemetry metrics.\nTelemetry instance used to report telemetry metrics.\nTelemetry instance used to report telemetry metrics.\nThe block number until this compatibility mode should be …\nThe header has a malformed seal.\nThe header has a bad signature.\nHeader is deferred to the future.\nHeader has no valid slot pre-digest.\nMultiple Aura pre-runtime headers\nNo Aura pre-runtime digest found\nErrors in pre-digest lookup.\nErrors in slot and seal verification.\nNo slot author found.\nThe header has no seal digest.\nChecks if the header is an equivocation and returns the …\nCheck a header has been signed by the right key. If the …\nAttempt to claim a slot using a keystore.\nLoad the current set of authorities from a runtime at a …\nFetch the current set of authorities from the runtime at a …\nExtract a pre-digest from a block header.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProduce the pre-runtime digest containing the slot info.\nProduce the seal digest item by signing the hash of a …\nGet the slot author for given block along with authorities.\nGet the slot duration for Aura by reading from a runtime …\nGet the slot duration for Aura by reading from a runtime …\nA Babe authority identifier. Necessarily equivalent to the …\nA Babe authority keypair. Necessarily equivalent to the …\nA Babe authority signature.\nThe <code>ConsensusEngineId</code> of BABE.\nAPI necessary for block authorship with BABE.\nThe weight of an authority.\nA block-import handler for BABE.\nThe cumulative weight of a BABE block, i.e. sum of block …\nConfiguration data used by the BABE consensus engine.\nConfiguration data used by the BABE consensus engine that …\nIntermediate value passed to block importer.\nState that must be shared between the import queue and the …\nParameters for BABE.\nA verifier for Babe blocks.\nWorker for Babe which implements <code>Future&lt;Output=()&gt;</code>. This …\nA handle to the BABE worker for issuing requests.\nBackground worker is not running and therefore requests …\nBad signature\nCheck inherents error\nUnhandled check inherents error\nClient error\nA digest item which is usable with BABE consensus.\nAn consensus log item for BABE.\nCreate inherents error.\nBABE epoch information\nErrors encountered by the babe authorship task.\nExpected epoch change to happen.\nCould not extract timestamp and slot\nCould not fetch epoch\nCould not fetch parent header\nFork tree error\nHeader has a bad seal\nHeader is unsealed\nIntermediate key for Babe engine.\nParameters passed to <code>import_queue</code>.\nInvalid author: Expected secondary author\nMultiple BABE config change digests\nMultiple BABE epoch change digests\nMultiple BABE pre-runtime digests\nThe epoch has changed, and the epoch after the current one …\nInformation about the next epoch config, if changed. This …\nThe epoch has changed. This provides information about the …\nInformation about the next epoch. This is broadcast in the …\nNo BABE pre-runtime digest found\nNo secondary author expected.\nDisable the authority with given index.\nParent block has no associated weight\nParent unavailable. Cannot import\nA BABE pre-runtime digest. This contains all data required …\nA primary VRF-based slot assignment.\nRaw BABE primary slot assignment pre-digest.\nRandomness type required by BABE operations.\nRuntime Api error.\nA secondary deterministic slot assignment.\nBABE secondary slot assignment pre-digest.\nSecondary slot assignments are disabled for the current …\nA secondary deterministic slot assignment with VRF outputs.\nSlot author not found\nSlot number must increase\nA unit type wrapper to express the proportion of a slot.\nAn oracle for when major synchronization work is being …\nHeader rejected: too far in the future\nUnexpected config change.\nUnexpected epoch change\nVersion 1.\nPrimary slot threshold too low\nVRF verification failed\nReturns the weight <em>added</em> by this digest, not the …\nType of allowed slots.\nWhether this chain should run with secondary slots, which …\nIf this item is an BABE pre-digest, return it.\nIf this item is a BABE signature, return the signature.\nIf this item is a BABE config descriptor, return it.\nIf this item is a BABE epoch descriptor, return it.\nThe authorities.\nThe authorities\nReturns the slot number of the pre digest.\nAuthority index\nAuthority index\nBABE authority selection and slot claiming.\nSchema for BABE epoch changes in the aux-db.\nThe source of timestamps for relative slots\nConstruct a digest item which contains a BABE pre-digest.\nConstruct a digest item which contains a BABE seal.\nStrategy and parameters for backing off block production.\nProduce a BABE block-import object to be used later on in …\nThe underlying block-import object to supply our produced …\nThe block import that should be wrapped.\nThe proportion of the slot dedicated to proposing.\nLoad the cumulative chain-weight associated with a block.\nA constant value that is used in the threshold calculation …\nA constant value that is used in the threshold calculation …\nThe client to use\nThe client to interact with the internals of the node.\nClone and tweak epoch information to refer to the …\nGet the config of this link.\nRead configuration from the runtime state at current best …\nReturn the configuration for BABE.\nReturn the configuration for BABE.\nReturn the configuration for BABE. Version 1.\nReturn the configuration for BABE. Version 1.\nSomething that can create the inherent data providers.\nReturns information regarding the current epoch.\nReturns information regarding the current epoch.\nReturns the slot that started the current epoch.\nReturns the slot that started the current epoch.\nThe environment we are producing blocks for.\nGet the epoch changes of this link.\nFetch all available epoch data.\nFetch the epoch that a child of the given block, with the …\nThe epoch descriptor.\nThe duration of epochs in slots.\nExtract the BABE epoch change digest from the given …\nExtract the BABE pre digest from the given header. …\nForce authoring of blocks even if we are offline\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerates a proof of key ownership for the given authority …\nGenerates a proof of key ownership for the given authority …\nCreate the genesis epoch (epoch #0).\nStart an import queue for the BABE consensus algorithm.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the synchronization service is undergoing major …\nWhether the synchronization service is offline. Returns …\nReturns true if this pre-digest is for a primary slot …\nOptional justification import.\nHook into the sync module to control the justification …\nThe keystore that manages the keys of the node.\nThe BABE link that is created by <code>block_import</code>.\nThe maximum proportion of the slot dedicated to proposing …\nReturns information regarding the next epoch (which was …\nReturns information regarding the next epoch (which was …\nThe value of randomness to use for the slot-assignment.\nThe randomness\nRegistry for prometheus metrics.\nReverts protocol aux data to at most the last finalized …\nThe SelectChain Strategy\nReturns the slot of the pre digest.\nSlot\nSlot\nConvenience method to get the slot duration as a …\nSlot duration.\nThe slot duration in milliseconds for BABE. Currently, only\nReturn an event stream of notifications for when new slot …\nSpawner for spawning futures.\nStart the babe worker.\nSubmits an unsigned extrinsic to report an equivocation. …\nSubmits an unsigned extrinsic to report an equivocation. …\nA sync oracle\nHandle use to report telemetries.\nOptional telemetry handle to report telemetry events.\nReturns the VRF output and proof, if they exist.\nVRF signature\nValue of <code>allowed_slots</code> in <code>BabeEpochConfiguration</code>.\nValue of <code>c</code> in <code>BabeEpochConfiguration</code>.\nTries to claim the given slot number. This method starts …\nLike <code>claim_slot</code>, but allows passing an explicit set of key …\nThe aux storage key used to store the block weight of the …\nLoad the cumulative chain-weight associated with a block.\nLoad or initialize persistent epoch change data from …\nProvides RPC methods for interacting with Babe.\nClient implementation for the <code>BabeApi</code> RPC API.\nServer trait implementation for the <code>BabeApi</code> RPC API.\nConsensus error\nHolds information about the <code>slot</code>’s that can be claimed …\nTop-level error type for the RPC handler.\nFailed to fetch epoch data.\nFailed to fetch the current best header.\nErrors that can be formatted as a String\nCall to an unsafe RPC was denied.\nReturns data about which slots (primary or secondary) can …\nReturns data about which slots (primary or secondary) can …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCollects all the methods and subscriptions defined in the …\nCreates a new instance of the Babe Rpc handler.\nBEEFY gadget network parameters.\nBEEFY gadget initialization parameters.\nLinks used by the BEEFY RPC layer, from the BEEFY …\nLinks between the block importer, the background voter and …\nA convenience BEEFY client trait that defines all the type …\nClient Backend\nMake block importer and link half necessary to tie the …\nBEEFY client\nCommunication streams for the BEEFY networking protocols.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nStream of BEEFY signed commitments from block import to …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nStream of BEEFY best block hashes coming from the voter.\nStream of signed commitments coming from the voter.\nName of the votes gossip protocol used by BEEFY.\nChain specific BEEFY gossip protocol name. See …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether running under “Authority” role.\nChain specific BEEFY on-demand justifications protocol …\nName of the BEEFY justifications request-response protocol.\nLocal key store\nLinks between the block importer, the background voter and …\nMinimal delta between blocks, BEEFY should vote for\nNetwork implementing gossip, requests and sync-oracle.\nBEEFY voter network params\nHandle for receiving notification events.\nHandler for incoming BEEFY justifications requests from a …\nBEEFY Payload provider\nPrometheus metric registry\nRuntime Api Provider\nStart the BEEFY gadget.\nSyncing service implementing a sync oracle and an event …\nSends BEEFY best block hashes from voter to RPC.\nSends BEEFY signed commitments from voter to RPC.\nReturns the configuration value to put in …\nRequest/response protocol for syncing BEEFY justifications.\nThe sending half of the notifications channel(s) used to …\nThe receiving half of a notifications channel used to …\nProvides tracing key for BEEFY best block stream.\nThe sending half of the notifications channel(s) used to …\nThe receiving half of a notifications channel used to …\nProvides tracing key for BEEFY versioned finality proof …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHandler for incoming BEEFY justifications requests from a …\nDecoding failed, we were able to change the peer’s …\nDecoding failed, but sending reputation change failed.\nBEEFY justification request.\nIncoming request stream exhausted. Should only happen on …\nStart collecting proofs from this block.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>BeefyJustifsRequestHandler</code>.\nNetwork request-response protocol name used by this …\nRun <code>BeefyJustifsRequestHandler</code>.\nA block-import handler for BEEFY.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate a new BeefyBlockImport.\nA finality proof with matching BEEFY authorities’ …\nCurrent active version\nImplements the BeefyApi RPC trait for interacting with …\nClient implementation for the <code>BeefyApi</code> RPC API.\nServer trait implementation for the <code>BeefyApi</code> RPC API.\nThe BEEFY RPC endpoint is not ready.\nTop-level error type for the RPC handler\nThe error codes returned by jsonrpc.\nReturned when BEEFY RPC endpoint is not ready.\nThe BEEFY RPC background task failed to spawn.\nReturned on BEEFY RPC background task failure.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCollects all the methods and subscriptions defined in the …\nReturns hash of the latest BEEFY finalized block as seen …\nReturns hash of the latest BEEFY finalized block as seen …\nCreates a new Beefy Rpc handler instance.\nReturns the block most recently finalized by BEEFY, …\nReturns the block most recently finalized by BEEFY, …\nEpoch data, distinguish whether it is genesis or not.\nTree of all epoch changes across all <em>seen</em> forks. Data …\nType alias to produce the epoch-changes tree from a block …\nHeader of epoch data, consisting of start and end slot.\nEpoch identifier.\nPosition of the epoch identifier.\nThe error returned by the function.\nGenesis persisted epoch data. epoch_0, epoch_1.\nGenesis persisted epoch header. epoch_0, epoch_1.\nThe identifier points to a genesis epoch <code>epoch_0</code>.\nThe identifier points to a genesis epoch <code>epoch_1</code>.\nWrapper to get around unconstrained type errors when …\nA fresh, incremented epoch to import into the underlying …\nA function that can tell you if the second parameter is a …\nA builder for <code>is_descendent_of</code> functions.\nDescriptor for the next epoch.\nPersisted epoch stored in EpochChanges.\nPersisted epoch header stored in ForkTree.\nThe identifier points to a regular epoch.\nRegular persisted epoch data. epoch_n.\nRegular persisted epoch header. epoch_n.\nA shared epoch changes tree.\nRegular viable epoch data.\nThe epoch is signaled and has been imported, with given …\nType of the slot number.\nUnimported genesis viable epoch data.\nThe epoch is an unimported genesis, with given start slot …\nThe viable epoch under which a block can be verified.\nDescriptor for a viable epoch.\nBuild an <code>is_descendent_of</code> function.\nProduce a descendent query object given the client.\nProduce the “end slot” of the epoch. This is NOT …\nThe end slot of the epoch. This is NOT inclusive to the …\nGet a reference to an epoch with given identifier.\nGet the epoch data from an epoch descriptor.\nFinds the epoch data for a child of the given block. …\nFinds the epoch for a child of the given block, assuming …\nGet a mutable reference to an epoch with given identifier.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nHash of the block when the epoch is signaled.\nImport a new epoch-change, signalled at the given block.\nIncrement the epoch data, using the next epoch descriptor.\nIncrement the epoch, yielding an <code>IncrementedEpoch</code> to be …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet cloned value for the viable epoch.\nExtract the underlying epoch, disregarding the fact that a …\nReturns if this is a genesis epoch.\nMap the epoch to a different type using a conversion …\nMap the epoch header to a different type.\nMap the epoch changes from one storing data to a different …\nMigration types for epoch changes.\nCreate a new epoch change.\nNumber of the block when the epoch is signaled.\nLocation of the epoch.\nPrune out finalized epochs, except for the ancestor of the …\nRebalances the tree of epoch changes so that it is sorted …\nReset to a specified pair of epochs, as if they were …\nRevert to a specified block given its <code>hash</code> and <code>number</code>. …\nThe starting slot of the epoch.\nStart slot of the descriptor.\nThe starting slot of the epoch.\nReturn the inner fork tree (mostly useful for testing)\nGet a reference to a viable epoch with given descriptor.\nGet a mutable reference to a viable epoch with given …\nLegacy definition of epoch changes.\nType alias for v0 definition of epoch changes.\nLegacy definition of epoch changes.\nType alias for v1 and v2 definition of epoch changes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nCreate a new value of this type from raw.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMigrate the type into current epoch changes definition.\nMigrate the type into current epoch changes definition.\nIdentity of a Grandpa authority.\nThe grandpa crypto scheme defined via the keypair type.\nA set of authorities.\nTracks historical authority set changes. We store the …\nA descriptor for an authority set hard fork. These are …\nA custom voting rule that guarantees that our vote is …\nThe requested block is not covered by authority set …\nThe requested block has not yet been finalized.\nArithmetic necessary for a block number.\nA blockchain error.\nA catch up message for this chain’s block type.\nErrors originating from the client.\nCould not complete a round on disk.\nA trait that includes all the client functionalities …\nA commit message for this chain’s block type.\nA compact commit message for this chain’s block type.\nConfiguration for the GRANDPA service\nErrors that can occur while voting in GRANDPA.\nFinality for block B is proved by providing:\nErrors occurring when trying to prove finality\nFinality proof provider for serving network requests.\nProvider for the Grandpa authority set configured on the …\nAn error within grandpa.\nAPIs for integrating the GRANDPA finality gadget into …\nA block-import handler for GRANDPA.\nA GRANDPA justification for block finality, it includes a …\nThe sending half of the Grandpa justification channel(s).\nThe receiving half of the Grandpa justification channel.\nParameters used to run Grandpa.\nLink between the block importer and the background voter.\nA GRANDPA message for a substrate chain.\nA network error.\nA precommit message for this chain’s block type.\nA precommit message.\nA prevote message for this chain’s block type.\nA prevote message.\nA primary propose message for this chain’s block type.\nA primary proposal message.\nA runtime api request failed.\nAn invariant has been violated (e.g. not finalizing …\nA scheduled change of authority set.\nA shared authority set.\nShared voter state for querying.\nA signed message.\nCould not sign outgoing message\nA custom voting rule that limits votes towards 3/4 of the …\nA timer failed to fire.\nA trait for custom voting rules in GRANDPA.\nA future returned by a <code>VotingRule</code> to restrict a given …\nA builder of a composite voting rule that applies a set of …\nAdd a new voting rule to the builder.\nAdd all given voting rules to the builder.\nAuthentication data for the commit.\nThe authorities in the new set.\nClone the inner <code>AuthoritySetChanges</code>.\nThe base hash. See struct docs.\nThe base number. See struct docs.\nFetch the justification for the latest block finalized by …\nThe block hash and number at which the hard fork should be …\nThe hash of block F for which justification is provided.\nMake block importer and link half necessary to tie the …\nMake block importer and link half necessary to tie the …\nReturn a new <code>VotingRule</code> that applies all of the previously …\nClone the inner <code>AuthoritySet</code>.\nConfiguration for the GRANDPA service.\nGet the current authorities and their weights (for the …\nGet current GRANDPA authority set id.\nDecode a GRANDPA justification and validate the commit and …\nThe number of blocks to delay.\nCreate a new empty <code>SharedVoterState</code> instance.\nCheck whether the given finalized block number enacts any …\nChecks the given header for a consensus digest signalling …\nChecks the given header for a consensus digest signalling …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a GRANDPA justification from the given commit. This …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerates a proof of key ownership for the given authority …\nGet the authority set at the genesis block.\nThe expected duration for a message to be gossiped across …\nGet the current GRANDPA authorities and weights. This …\nReturns the configuration value to put in …\nThe Id of the signer\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over all historical authority set …\nJustification of the block F.\nThe GRANDPA justification for block finality.\nJustification generation period (in blocks). GRANDPA will …\nGet the receiving end of justification notifications.\nThe keystore that manages the keys of this node.\nThe latest block number that was finalized before this …\nA link to the block import worker.\nThe role of the local node (i.e. authority, full-node or …\nThe internal message which has been signed.\nSome local identifier of the voter.\nThe Network instance.\nReturn a new voting rule builder using the given backend.\nCreate new finality proof provider using:\nCreate new finality proof provider for the service using:\nThe new authorities after the change, along with their …\nHandle for interacting with <code>Notifications</code>.\nWhether the GRANDPA observer protocol is live on the …\nOffchain transaction pool factory.\nPrecommits for target block or any block after it that …\nPrecommits for target block or any block after it that …\nPrecommits for target block or any block after it that …\nPrevotes for target block or any block after it that …\nThe prometheus metrics registry.\nChain specific GRANDPA protocol name. See …\nName of the notifications protocol used by GRANDPA.\nProve finality for the given block number by returning a …\nProve finality for the given block number by returning a …\nContains a number of data transfer objects for reporting …\nRestrict the given <code>current_target</code> vote, returning the …\nReverts protocol aux data to at most the last finalized …\nRound number.\nRun a GRANDPA observer as a task, the observer will …\nRun a GRANDPA voter as a task. Provide configuration and a …\nGet the current set ID. This is incremented every time the …\nThe new authority set id.\nGet the shared authority set.\nThe voter state is exposed at an RPC endpoint.\nThe signature on the message.\nSubmits an unsigned extrinsic to report an equivocation. …\nEvent stream for syncing-related events.\nThe target block number and hash that this justifications …\nThe target block’s hash.\nThe target block’s hash.\nThe target block’s hash.\nThe target block’s hash.\nThe target block’s hash.\nThe target block’s number\nThe target block’s number.\nThe target block’s number\nThe target block’s number.\nThe target block’s number.\nTelemetryHandle instance.\nTelemetryHandle instance.\nThe set of headers in the range (B; F] that we believe are …\nValidate the commit and the votes’ ancestry proofs.\nGet the inner <code>VoterState</code> instance.\nA voting rule used to potentially restrict target votes.\nUtilities for generating and verifying GRANDPA warp sync …\nBasic data struct for the state of a round.\nBasic data struct for the current state of the voter in a …\nVoting rounds running in the background.\nThe current best voting round.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCurrent weight of the precommits.\nThe identities of nodes that have cast precommits so far.\nCurrent weight of the prevotes.\nThe identities of nodes that have cast prevotes so far.\nThe threshold voter weight.\nTotal weight of all votes.\nClient backend error.\nDecoding error.\nWarp proof processing error.\nInvalid warp proof.\nInvalid request data.\nMissing header or authority set change data.\nImplements network API for warp sync.\nA proof of an authority set change.\nAn accumulated proof of multiple authority set changes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe last block that the given authority set finalized. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA justification for the header above which proves its …\nCreate a new instance for a given backend and authority …\nProvides RPC methods for interacting with GRANDPA.\nClient implementation for the <code>GrandpaApi</code> RPC API.\nServer trait implementation for the <code>GrandpaApi</code> RPC API.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCollects all the methods and subscriptions defined in the …")