searchState.loadedDescShard("yet_another_parachain_runtime", 0, "The address format for describing accounts.\nIt’s a 20 byte representation.\nIt’s a 32 byte representation.\nAll pallets included in the runtime as a nested tuple of …\nAll pallets included in the runtime as a nested tuple of …\nAn Aura authority identifier using S/R 25519 as its crypto.\nBalance of an account.\nThe type that is returned as result from polynomial …\nContains a variant per dispatchable extrinsic that this …\nBlock type as expected by this runtime.\nWeight of executing an empty block. Calculated by …\nBlockId type as expected by this runtime.\nAn index to a block.\nA bounded slice.\nComplex storage builder stuff.\nWe allow root and the StakingAdmin to execute privileged …\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nImplementor of <code>WeightToFee</code> that uses a constant multiplier.\nA trait for querying whether a type can be said to “…\nA generalized group of dispatch types.\n“OR gate” implementation of <code>EnsureOrigin</code> allowing for …\nA <code>Contains</code> implementation that contains every value.\nExecutive: handles dispatch to the various modules.\nHandles incoming messages for a single origin.\nA hash of some data used by the chain.\nIdentify by block header hash.\nBlock header type as expected by this runtime.\nIt’s an account ID (pubkey).\nImplementor of <code>WeightToFee</code> that maps one unit of weight to …\nIt’s an account index.\nTrivial utility for implementing <code>Contains</code>/<code>OrderedMembership</code>…\nThe maximal weight in all dimensions.\nA mandatory dispatch. These kinds of dispatch are always …\nThe maximal length any enqueued message may have.\nIndex of a transaction in the chain.\nA normal dispatch.\nA <code>Contains</code> implementation that contains no value.\nIdentify by block number.\nAn operational dispatch.\nA pallet identifier. These are per pallet and should be …\nProvides an implementation of <code>PalletInfo</code> to provide …\nA fixed point representation of a number in the range [0, 1…\nA fixed point representation of a number in the range [0, 1…\nThe type that get/take return.\nThe resource footprint of a queue.\nA trait that is able to provide randomness.\nIt’s some arbitrary raw bytes.\nImplements all runtime apis for the client side.\nThe aggregated runtime call type.\nA reason for placing a freeze on funds.\nA reason for placing a hold on funds.\nAn identifier for each lock placed on funds.\nThe runtime origin type representing the origin of a call.\nA reason for slashing funds.\nAn aggregation of all <code>Task</code> enums across all pallets …\nRuntime query type.\nA Block signed with a Justification\nA trait for working with macro-generated storage values …\nContains a variant per dispatchable extrinsic that this …\nTransform the origin of an <code>EnqueueMessage</code> via <code>C::convert</code>.\nThe TransactionExtension to the basic transaction logic.\nUnchecked extrinsic type as expected by this runtime.\nThis runtime version.\nOne coefficient and its position in the <code>WeightToFee</code>.\nA list of coefficients that represent a polynomial.\nA trait that describes the weight to fee calculation as …\nConstant version of Add for <code>proof_size</code> component with u64.\nConstant version of Add for <code>ref_time</code> component with u64.\nReturns an array containing all dispatch classes.\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nAppend the given item to the value in the storage.\nAssimilate the storage for this module into pre-existing …\nFull block.\nBuild <code>GenesisConfig</code> from a JSON blob not using any …\nBuild the storage out of this builder.\nBuild the storage out of this builder.\nBuild the storage out of this builder.\nBuild the storage out of this builder.\nBuild the storage out of this builder.\nBuild the storage out of this builder.\nBurn the specified liquid free balance from the origin …\nTry to increase <code>self</code> by <code>amount</code> via checked addition.\nChecked <code>Weight</code> addition. Computes <code>self + rhs</code>, returning …\nChecked <code>Weight</code> scalar division. Computes …\nCalculates how many <code>other</code> fit into <code>self</code>.\nChecked <code>Weight</code> scalar multiplication. Computes …\nTry to reduce <code>self</code> by <code>amount</code> via checked subtraction.\nChecked <code>Weight</code> subtraction. Computes <code>self - rhs</code>, returning …\nThe fractional part of the coefficient.\nThe integral part of the coefficient.\nConstruct a runtime, with the given name and the given …\nReturn <code>true</code> if this “contains” the given value <code>t</code>.\nDecode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …\nRead the length of the storage value without decoding the …\nRead the length of the storage value without decoding the …\nRead the length of the storage value without decoding the …\nRead the length of the storage value without decoding the …\nConsume self and return the number of parts per thing.\nSee <code>PerThing::deconstruct</code>.\nConsume self and return the number of parts per thing.\nSee <code>PerThing::deconstruct</code>.\nDegree/exponent of the term.\nThis attribute can be used to derive a full implementation …\nDerived development accounts(Optional):\nA chain-specific digest of data useful for light clients …\nConstant version of Div with u64.\nPerform the origin check.\nConvenience function for view functions dispatching and …\nDoes the value (explicitly) exist in storage?\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nAdjust the total issuance in a saturating way.\nSet the regular balance of a given account.\nExactly as <code>transfer_allow_death</code>, except the origin must be …\nUnreserve some balance from a user by force.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert to runtime origin, using as filter: …\nConvert to runtime origin with caller being system signed …\nReturns the argument unchanged.\nConvert to runtime origin using […\nConvert to runtime origin using […\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct <code>Weight</code> from the same weight for all parts.\nOptionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.\nNOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>\nSee <code>PerThing::from_float</code>.\nSee <code>PerThing::from_float</code>.\nNOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nConstruct <code>Weight</code> from weight parts, namely reference time …\nBuild this type from a number of parts per thing.\nFrom an explicitly defined number of parts per maximum of …\nBuild this type from a number of parts per thing.\nFrom an explicitly defined number of parts per maximum of …\nConverts a percent into <code>Self</code>. Equal to <code>x / 100</code>.\nConverts a percent into <code>Self</code>. Equal to <code>x / 100</code>.\nConverts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.\nConverts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.\nSee <code>PerThing::from_rational</code>.\nSee <code>PerThing::from_rational</code>.\nSee <code>PerThing::from_rational</code>.\nSee <code>PerThing::from_rational</code>.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe function that should be called.\nGenerate a set of keys with optionally using the given …\nLoad the value from the provided storage instance.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nGet the default <code>GenesisConfig</code> as a JSON blob if <code>name</code> is …\nEnqueue a single <code>message</code> with an implied origin.\nEnqueue multiple <code>messages</code> from an implied origin.\nGet the storage key.\nThe block header.\nInteger division with another value, rounding down.\nInteger division with another value, rounding down.\nInteger multiplication with another value, saturating at 1.\nInteger multiplication with another value, saturating at 1.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.\nSee <code>PerThing::is_one</code>.\nSee <code>PerThing::is_one</code>.\nSee <code>PerThing::is_zero</code>.\nSee <code>PerThing::is_zero</code>.\nBlock justification.\nThe <code>AccountId</code> of the sudo key.\nInitial list of validator at genesis representing by their …\nClear the storage value.\nGet the aggressive max of <code>self</code> and <code>other</code> weight.\nGet the conservative min of <code>self</code> and <code>other</code> weight.\nConstant version of Mul with u64.\nSee <code>PerThing::mul_ceil</code>.\nSee <code>PerThing::mul_ceil</code>.\nSee <code>PerThing::mul_floor</code>.\nSee <code>PerThing::mul_floor</code>.\nMutate the value\nMutate the value. Deletes the item if mutated to a <code>None</code>.\nMutate the value under a key if the value already exists. …\nMutate the value under a key if the value already exists. …\nThe version information used to identify this runtime when …\nTrue iff the coefficient should be interpreted as negative.\nCreate a call with the variant <code>burn</code>.\nCreate a call with the variant <code>force_adjust_total_issuance</code>.\nCreate a call with the variant <code>force_set_balance</code>.\nCreate a call with the variant <code>force_transfer</code>.\nCreate a call with the variant <code>force_unreserve</code>.\nCreate a call with the variant <code>set</code>.\nCreate a call with the variant <code>transfer_all</code>.\nCreate a call with the variant <code>transfer_allow_death</code>.\nCreate a call with the variant <code>transfer_keep_alive</code>.\nCreate a call with the variant <code>upgrade_accounts</code>.\nList of (AccountId, ValidatorId, Keys) that will be …\nReturns an array of all dispatch classes except <code>Mandatory</code>.\nCreate with system none origin and …\nThe block number.\nSee <code>PerThing::one</code>\nSee <code>PerThing::one</code>\nThe number of pages in the queue (including overweight …\nCreate new implementations of the <code>Get</code> trait.\nThe parent hash.\nReturns a polynomial that describes the weight to fee …\nInformation regarding the type of extrinsic this is …\nReturn the storage size part of the weight.\nReturn a mutable reference to the storage size part of the …\nStore a value under this key into the provided storage …\nGet the most recently determined random seed, along with …\nGet the basic random seed.\nGet the basic random seed.\nThe number of pages that are ready (not yet processed and …\nReturn the reference time part of the weight.\nReturn a mutable reference to the reference time part of …\nCreate with system root origin and …\nThe default version to encode outgoing XCM messages with.\nIncrement <code>Weight</code> by <code>amount</code> via saturating addition.\nSaturating <code>Weight</code> addition. Computes <code>self + rhs</code>, …\nSaturating addition. Compute <code>self + rhs</code>, saturating at the …\nSaturating addition. Compute <code>self + rhs</code>, saturating at the …\nSaturating <code>Weight</code> scalar division. Computes …\nSaturating division. Compute <code>self / rhs</code>, saturating at one …\nSaturating division. Compute <code>self / rhs</code>, saturating at one …\nEvaluate the term at <code>x</code> and saturatingly amalgamate into …\nSaturating <code>Weight</code> scalar multiplication. Computes …\nSaturating multiply. Compute <code>self * rhs</code>, saturating at the …\nSaturating multiply. Compute <code>self * rhs</code>, saturating at the …\nSaturating <code>Weight</code> scalar exponentiation. Computes …\nSaturating exponentiation. Computes <code>self.pow(exp)</code>, …\nSaturating exponentiation. Computes <code>self.pow(exp)</code>, …\nSee <code>PerThing::saturating_reciprocal_mul</code>.\nSee <code>PerThing::saturating_reciprocal_mul</code>.\nSee <code>PerThing::saturating_reciprocal_mul_ceil</code>.\nSee <code>PerThing::saturating_reciprocal_mul_ceil</code>.\nSee <code>PerThing::saturating_reciprocal_mul_floor</code>.\nSee <code>PerThing::saturating_reciprocal_mul_floor</code>.\nReduce <code>Weight</code> by <code>amount</code> via saturating subtraction.\nSaturating <code>Weight</code> subtraction. Computes <code>self - rhs</code>, …\nSaturating subtraction. Compute <code>self - rhs</code>, saturating at …\nSaturating subtraction. Compute <code>self - rhs</code>, saturating at …\nStore a value under this key into the provided storage …\nSet the current time.\nSet the storage size part of the weight.\nSet the reference time part of the weight.\nCreate with system signed origin and …\nSee <code>PerThing::square</code>.\nSee <code>PerThing::square</code>.\nThe state trie merkle root\nThe storage footprint of the queue (including overweight …\nConstant version of Sub for <code>proof_size</code> component with u64.\nConstant version of Sub for <code>ref_time</code> component with u64.\nThe default versioned locations to support at genesis.\nAny remaining unprocessed messages should happen only …\nTake a value from storage, removing it afterwards.\nTransfer the entire transferable balance from the caller …\nTransfer some liquid free balance to another account.\nSame as the <code>transfer_allow_death</code> call, but with a check …\nTranslate a value from some previous type (<code>O</code>) to the …\nCreate an instance from the first elements of the given …\nTry to add some <code>other</code> weight while upholding the <code>limit</code>.\nTry to get the underlying value from the provided storage …\nMutate the value if closure returns <code>Ok</code>\nMutate the value if closure returns <code>Ok</code>. Deletes the item …\nPerform the origin check, returning the origin value if …\nReturns an outer origin capable of passing <code>try_origin</code> …\nUpgrade a specified account.\nCalculates the fee from the passed <code>weight</code> according to the …\nReturn a <code>Weight</code> where all fields are zero.\nSee <code>PerThing::zero</code>.\nSee <code>PerThing::zero</code>.\nA set of traits for a minimal parachain runtime, that may …\nBasic builder based on balances, collators and …\nEnum representing governance origin/location.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHelper function which emulates opening HRMP channel which …\nModule contains predefined test-case scenarios for <code>Runtime</code> …\nModule contains predefined test-case scenarios for <code>Runtime</code> …\nHelpers for calculating XCM delivery fees.\nTest-case makes sure that <code>Runtime</code>’s <code>xcm::AssetTransactor</code> …\nTest-case makes sure that <code>Runtime</code>’s <code>xcm::AssetTransactor</code> …\nTest-case makes sure that <code>Runtime</code> can change storage …\nTest-case makes sure that <code>Runtime</code> can create and manage …\nTest-case makes sure that <code>Runtime</code> can reserve-transfer …\nTest-case makes sure that <code>Runtime</code> can receive teleported …\nTest-case makes sure that <code>Runtime</code> can receive native asset …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nTest-case makes sure that <code>Runtime</code> can initiate <strong>reserve </strong>…\nReturns the delivery fees amount for the execution of …\nReturns the delivery fees amount for a query response as a …\nReturns the delivery fees amount for pallet xcm’s …\nFallible converter from a location to a <code>H160</code> that matches …\n<code>Location</code> vs <code>AssetIdForPoolAssets</code> converter for <code>PoolAssets</code>.\n<code>Location</code> vs <code>AssetIdForTrustBackedAssets</code> converter for …\n<code>Location</code> vs <code>CollectionId</code> converter for <code>Uniques</code>\n<code>xcm_executor::traits::MatchesFungibles</code> implementation that …\nAn Asset Transactor that deals with ERC20 tokens.\n<code>MatchedConvertedConcreteId</code> converter dedicated for storing …\n<code>Contains&lt;Location&gt;</code> implementation that matches locations …\nAdapter implementation for accessing pools (…\n<code>MatchedConvertedConcreteId</code> converter dedicated for …\n<code>MatchedConvertedConcreteId</code> converter dedicated for …\n<code>MatchedConvertedConcreteId</code> converter dedicated for …\n<code>MatchedConvertedConcreteId</code> converter dedicated for <code>Uniques</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRuntime API definition for assets.\nReturns a vector of all assets in a pool with <code>asset</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHelper function for filtering pool.\nProvides a current prices. Wrapper over …\nRuntime API definition for fungibles.\nCreates asset pairs for liquidity pools with <code>Target</code> always …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\n<code>EnsureOriginWithArg</code> impl for <code>CreateOrigin</code> that allows only …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nConverting any [<code>(AssetId, Balance)</code>] to <code>Asset</code>\nChecks for <code>Location</code>.\nHelper function to convert collections with […\nHelper function to convert <code>Balance</code> with Location<code>to</code>Asset`\nConverts a given <code>Location</code> to <code>Either::Left</code> based on the …\nConverts a given <code>Location</code> to <code>Either::Left</code> when equal to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if <code>a</code> is from the expected global consensus network. …\nChecks if <code>a</code> is from sibling location <code>b</code>. Checks that …\nAccepts an asset if it is from the origin.\nAccept an asset if it is native to <code>AssetsAllowedNetworks</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>u128</code> amount to currency <code>Balance</code> conversion failed.\n<code>Location</code> to <code>AssetId</code>/<code>ClassId</code> conversion failed.\nThe possible errors that can happen querying the storage …\nThe API for querying account’s balances from runtime.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the list of all <code>Asset</code> that an <code>AccountId</code> has.\nReturns the list of all <code>Asset</code> that an <code>AccountId</code> has.\nHash of the leaf content.\nLeaf node for proof verification.\nA generated merkle proof.\nLeaf content.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLeaf content.\nIndex of the leaf the proof is for (0-based).\nConstruct a Merkle Proof for leaves given by indices.\nConstruct a Merkle Proof for leaves given by indices.\nConstruct a root hash of a Binary Merkle Tree created from …\nConstruct a root hash of a Binary Merkle Tree created from …\nNumber of leaves in the original tree.\nProof items (does not contain the leaf hash, nor the root …\nRoot hash of generated merkle tree.\nVerify Merkle Proof correctness versus given root hash.\nAverage size of the chain header. We don’t expect to see …\nA GRANDPA Authority List and ID.\nA minimized version of <code>pallet-bridge-grandpa::Call</code> that …\nThe <code>BridgeGrandpaCall</code> for a pallet that bridges with given …\nSubstrate-based chain that is using direct GRANDPA …\nA trait that provides helper methods for querying the …\nThe type returned when encountering an error while looking …\nAbstract finality proof that is justifying block finality.\nHelper trait for finding equivocations in finality proofs.\nA struct that provides helper methods for querying the …\nSubstrate header chain, abstracted from the way it is …\nHeader chain error.\nThe finality-related info associated to a header.\nProcessed Grandpa-related info associated to a header.\nData required for initializing the GRANDPA bridge pallet.\nMax number of GRANDPA authorities at the chain.\nMaximal size of the mandatory chain header. Mandatory …\nA type that can be used as a parameter in a dispatchable …\nMax reasonable number of headers in <code>votes_ancestries</code> …\nError generated by the <code>storage_proof</code> module.\nHeader data that we’re storing on-chain.\nStored header data builder.\nGrandpa-related info associated to a header. This info can …\nResult of checking maximal expected submit finality proof …\nA digest information on the …\nHeader with given hash is missing from the chain.\nName of the bridge GRANDPA pallet (used in …\nList of GRANDPA authorities for the current round.\nThe initial authorities of the pallet.\nNumber of the finality target.\nBuild header data from self.\nAn identifier of the validators set that has signed the …\nExtra size (in bytes) that we assume are included in the …\nExtra size (in bytes) that we assume are included in the …\nExtra weight that we assume is included in the call.\nThe header finality proof.\nThe header finality proof.\nThe header finality proof.\nReturns state (storage) root of given finalized header.\nFind equivocations.\nFind and return forced change digest item. Or light client …\nFind and return scheduled (regular) change digest item.\nReturns <code>true</code> if call size/weight is below our estimations …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe header from which we should start syncing.\n<code>pallet-bridge-grandpa::Call::initialize</code>\n<code>pallet-bridge-grandpa::Call::initialize</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf <code>true</code>, then the call must be free (assuming that …\nIf <code>true</code>, then the call proves new <strong>mandatory</strong> header.\nA flag that is true if the header is the mandatory header …\nIf true, the call weight is larger than what we have …\nLogic for checking GRANDPA Finality Proofs.\nReturns maximal expected size of <code>submit_finality_proof</code> …\nCreate a new GRANDPA Authority Set.\nThe new verification context introduced by the header.\nThe new verification context introduced by the header.\nThe new verification context introduced by the header.\nHeader number.\nPallet operating mode.\nReturns true if digest contains item that schedules …\nMonotonic identifier of the current GRANDPA authority set.\nThe ID of the initial authority set.\nHeader state root.\nStorage keys of bridge GRANDPA pallet.\n<code>pallet-bridge-grandpa::Call::submit_finality_proof</code>\n<code>pallet-bridge-grandpa::Call::submit_finality_proof</code>\n<code>pallet-bridge-grandpa::Call::submit_finality_proof_ex</code>\n<code>pallet-bridge-grandpa::Call::submit_finality_proof_ex</code>\nChecks whether the given <code>header</code> and its finality <code>proof</code> fit …\nReturn hash of header that this proof is generated for.\nReturn number of header that this proof is generated for.\nGet storage proof checker using finalized header.\nAn identifier of the validators set, that have signed the …\nThe header that we are going to finalize.\nThe header that we are going to finalize.\nAll data, required to initialize the pallet.\nFinality justification for the <code>finality_target</code>.\nFinality justification for the <code>finality_target</code>.\nAn identifier of the validators set, that have signed the …\nThe header that we are going to finalize.\nThe header that we are going to finalize.\nAll data, required to initialize the pallet.\nFinality justification for the <code>finality_target</code>.\nFinality justification for the <code>finality_target</code>.\nVotes ancestries with useful methods.\nJustification contains duplicate authority precommit.\nThe justification contains duplicate headers in its …\nStructure that can extract equivocations from multiple …\nJustification verification error.\nHelper struct for finding equivocations in GRANDPA proofs.\nA GRANDPA Justification is a proof that a given header was …\nCould not convert <code>AuthorityList</code> to <code>VoterSet</code>.\nThe authority has provided an invalid signature.\nJustification is finalizing unexpected header.\nFailed to decode justification.\nThe context needed for validating GRANDPA finality proofs.\nJustification verification error.\nError validating a precommit\nJustification verification error.\nJustification contains redundant votes.\nThe justification contains extra (unused) headers in its …\nThe cumulative weight of all votes in the justification is …\nJustification contains unknown authority precommit.\nThe justification contains precommit for header that is …\nReturns a route if the precommit target block is a …\nThe ID of the authority set used to verify the …\nThe set of votes for the chain which is to be finalized.\nReturn identifier of header that this justification claims …\nDecode justification target.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExtract the equivocation proofs that have been collected.\nReturns reasonable size of justification using constants …\nCreate a new instance of <code>EquivocationsCollector</code>.\nCreates a new instance of <code>AncestryChain</code> starting from a …\nReturns the hash of a block’s parent if the block is …\nParse additional justifications for equivocations.\nGiven GRANDPA authorities set size, return number of valid …\nThe round (voting period) this justification is valid for.\nVerify and optimize given justification by removing …\nVerify that justification, that is generated by given …\nThe authority set used to verify the justification.\nA proof that the chain of blocks in the commit are related …\nName of the <code>BestFinalized</code> storage value.\nName of the <code>CurrentAuthoritySet</code> storage value.\nName of the <code>IsHalted</code> storage value.\nStorage key of the best finalized header number and hash …\nStorage key of the <code>CurrentAuthoritySet</code> variable in the …\nStorage key of the <code>PalletOperatingMode</code> variable in the …\nGeneric info about a messages delivery/confirmation proof.\nBasic operating mode (Normal/Halted)\nA minimized version of <code>pallet-bridge-messages::Call</code> that …\nSubstrate-based chain with messaging support.\nLane is closed and all attempts to send/receive messages …\nDelivered messages with their dispatch result.\nMessage has been received and dispatched. Note that we don…\nThe message proof is empty.\nHard limit on message size that can be sent over the …\nBridge lane identifier.\nError returned by the bridged header chain.\nInbound lane data.\nError returned while reading/decoding inbound lane data …\nInbound message details, returned by runtime APIs.\nThe declared message weight is incorrect.\nMessage has invalid nonce and lane has rejected to accept …\nTrait representing a generic <code>LaneId</code> type.\nLane state.\nBridge lane identifier (legacy).\nMaximal number of unconfirmed messages in a single …\nMaximal number of unrewarded relayers in a single …\nMessage as it is stored in the storage.\nMessage key (unique message identifier) as it is stored in …\nMessage nonce. Valid messages will never have 0 nonce.\nOpaque message payload. We only decode this payload when …\nError returned while reading/decoding message data from …\nThe message is too large.\nInfo about a <code>ReceiveMessagesProof</code> or a …\nDeclared messages count doesn’t match actual value.\nMessages pallet operating mode.\nLane is opened and messages may be sent/received over it.\nCustom error\nOutbound lane data.\nError returned while reading/decoding outbound lane data …\nOutbound message details, returned by runtime APIs.\nMessages delivery confirmation call info.\nInfo about a <code>ReceiveMessagesDeliveryProof</code> call which tries …\nMessages delivery call info.\nInfo about a <code>ReceiveMessagesProof</code> call which tries to …\nReceived messages with their dispatch result.\nResult of single message receival.\nThe pallet is not accepting outbound messages. Inbound …\nStorage proof related error.\nThere are too many unconfirmed messages at the lane.\nThere are too many unrewarded relayer entries at the lane.\nUnrewarded relayer entry stored in the inbound lane data.\nOccupation state of the unrewarded relayers vector.\nGist of <code>InboundLaneData::relayers</code> field used by runtime …\nError that happens during message verification.\nName of the bridge messages pallet (used in …\nReturns true if <code>bundled_range</code> continues the …\nBase messages proof info\nNonce of the first message that has been delivered …\nNonce of the best message, stored by this chain before the …\nReturns range of messages, bundled with the call.\nNonces of messages, included in the call.\nCalculate the number of messages that the relayers have …\nReturns true if delivered messages contain message with …\nMessage dispatch weight.\nComputed message dispatch weight.\nReturns approximate size of the struct, given a number of …\nReturns the approximate size of the struct as u32, given a …\nNonce of the last message that has been delivered …\nThe number of messages that we are ready to accept.\nThe number of remaining unoccupied entries for new …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate lane identifier from given hash.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAccess the inner lane representation.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if lane state allows sending/receiving …\nReturns true if:\nReturns true if outbound lane is ready to accept …\nVerify that the relayers state corresponds with the …\nMessage key.\nId of the lane which is receiving messages.\nReturns lane, used by the call.\nMessage lane, used by the call.\nID of the message lane.\nNonce of the last message that a) has been delivered to …\nNonce of the last message that has been delivered to this …\nNonce of the latest message that has been delivered to the …\nNonce of the latest message, generated by us.\nNonce of the latest message, received by bridged chain.\nReturn maximal dispatch weight of the message we’re able …\nReturn maximal size of the message the chain with …\nReturn maximal size of the message we’re able to receive.\nMessages range, delivered by this relayer.\nNumber of messages in the oldest entry of …\nCreates new <code>ReceivedMessages</code> structure from given results.\nCreate new <code>DeliveredMessages</code> struct that confirms delivery …\nMessage nonce.\nNonce assigned to the message.\nNote new dispatched message.\nNonce of the oldest message that we haven’t yet pruned. …\nReturns default inbound lane data with opened state.\nReturns default outbound lane data with opened state.\nMessage payload.\nPush <code>result</code> of the <code>message</code> delivery onto <code>receive_results</code> …\nReturn nonces of all currently queued messages (i.e. …\n…\n<code>pallet-bridge-messages::Call::receive_messages_proof</code>\nResult of messages which we tried to dispatch\nIdentifier of the relayer.\nIdentifiers of relayers and messages that they have …\nSize of the encoded message.\nPrimitives of messages module, that are used on the source …\nInbound lane state.\nLane state.\nStorage keys of bridge messages pallet.\nPrimitives of messages module, that are used on the target …\nReturn total count of delivered messages.\nTotal number of messages in the relayers vector.\nReturns the total number of messages in the <code>relayers</code> …\nCreates a new <code>LaneId</code> type (if supported).\nCreate lane identifier from two locations.\nCreate lane identifier from two locations.\nNumber of entries in the <code>InboundLaneData::relayers</code> set.\nState of unrewarded relayers vector.\nTotal dispatch weight of messages in the proof.\nA number of messages in the proof.\nMessages proof.\nMessages delivery proof.\nAccount id of relayer at the <strong>bridged</strong> chain.\n“Digest” of unrewarded relayers state at the bridged …\nManages payments that are happening at the source chain …\nError type.\nError type.\nStructure that may be used in place …\nMessages delivery proof from the bridged chain.\nMessages bridge API to be used from other pallets.\nCallback that is called at the source chain (bridge hub) …\nNumber of messages, delivered by relayers.\nIntermediary structure returned by <code>validate_message()</code>.\nSend message artifacts.\nHash of the bridge header the proof is for.\nNumber of enqueued messages at the lane, after the message …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLane id of which messages were delivered and the proof is …\nNonce of the message.\nNew messages delivery has been confirmed.\nPay rewards for delivering messages to the given relayers.\nSend message over the bridge.\nStorage trie proof generated for <code>Self::bridged_header_hash</code>.\nCheck if the message can be sent over the bridge.\nName of the <code>InboundLanes</code> storage map.\nName of the <code>OPERATING_MODE_VALUE_NAME</code> storage value.\nName of the <code>OutboundLanes</code> storage map.\nName of the <code>OutboundMessages</code> storage map.\nStorage key of the inbound message lane state in the …\nStorage key of the outbound message in the runtime storage.\nStorage key of the <code>PalletOperatingMode</code> value in the …\nStorage key of the outbound message lane state in the …\nManages payments that are happening at the target chain …\nFine-grained result of single message dispatch (for better …\nMessage with decoded dispatch payload.\nMessage data with decoded dispatch payload.\nDecoded message payload type. Valid message may contain …\nError type.\nStructure that may be used in place of  <code>MessageDispatch</code> on …\nMessages proof from bridged chain.\nLane identifier type.\nCalled when inbound message is received.\nProved messages from single lane of the source chain.\nProved messages from the source chain.\nHash of the finalized bridged header the proof is for.\nMessage data with decoded dispatch payload.\nCalled when inbound message is received.\nEstimate dispatch weight.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if dispatcher is ready to accept additional …\nMessage key.\nMessages in this proof are sent over this lane.\nOptional outbound lane state.\nMessages sent through this lane.\nNonce of the last message being delivered.\nNonce of the first message being delivered.\nPay rewards for delivering messages to the given relayer.\nResult of dispatch payload decoding.\nA storage trie proof of messages being delivered.\nBest known parachain head hash.\nA minimized version of <code>pallet-bridge-parachains::Call</code> that …\nCan be use to access the runtime storage key of the …\nRuntime hook for when a parachain head is updated.\nBest known parachain head as it is stored in the runtime …\nStored data of the parachain head. It is encoded version …\nStored parachain head data builder.\nCan be use to access the runtime storage key of the …\nBlock hash of the bridged relay chain.\nHasher of the bridged relay chain.\nBlock number of the bridged relay chain.\nHelper for using single parachain as …\nHeader data that we’re storing on-chain.\nInfo about a <code>SubmitParachainHeads</code> call which tries to …\nNumber and hash of the finalized relay block that has been …\nNumber of relay block where this head has been read.\nBest known parachain head hash.\nDecode stored parachain head data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nHash of parachain head.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf <code>true</code>, then the call must be free (assuming that …\nMaximal parachain head size that we may accept for free. …\nCurrent ring buffer position for this parachain.\nHeader number.\nCalled when a parachain head is updated. Returns the …\nHash of the bundled parachain head.\nParachain identifier.\nReturns runtime storage key of given parachain head at the …\nHeader state root.\n<code>pallet-bridge-parachains::Call::submit_parachain_heads</code>\nReturn number of parachains that are supported by this …\nTry to build head data from encoded head of parachain with …\nRelay chain block, for which we have submitted the …\nParachain heads proof.\nParachain identifiers and their head hashes.\nAverage header size in <code>votes_ancestries</code> field of …\nAll Polkadot-like chains assume that an on-initialize …\nAddress of account on Polkadot-like chains.\nId of account on Polkadot-like chains.\nProvides a storage key for account data.\nPublic key of account on Polkadot-like chains.\nAccount address, used by the Polkadot-like chain.\nIt’s a 20 byte representation.\nIt’s a 20 byte representation.\nIt’s a 32 byte representation.\nIt’s a 32 byte representation.\nThe balance of an account on Polkadot-like chain.\nBlock type of Polkadot-like chains.\nAll Polkadot-like chains have maximal block size set to …\nBlock number type used in Polkadot-like chains.\nAll Polkadot-like chains have the same block weights.\nSigned extension that is used by most chains.\nExtra signed extension data that is used by most chains.\nInfallible conversion trait. Generic over both source and …\nA day, expressed in Polkadot-like chain blocks.\nNumber of extra bytes (excluding size of storage value …\nAn ECDSA/SECP256k1 signature.\nAn Ed25519 signature.\nAn ECDSA/SECP256k1 signature but with a different address …\nWeight of executing a NO-OP extrinsic, for example …\nA hour, expressed in Polkadot-like chain blocks.\nHash type used in Polkadot-like chains.\nThe type of object that can produce hashes on …\nHashing type.\nThe header type used by Polkadot-like chains.\nIt’s an account ID (pubkey).\nIt’s an account ID (pubkey).\nIt’s an account index.\nIt’s an account index.\nAll Polkadot-like chains allow 2 seconds of compute with a …\nMaximal number of GRANDPA authorities at Polkadot-like …\nApproximate maximal header size on Polkadot-like chains.\nMaximal number of messages in single delivery transaction.\nMilliseconds between Polkadot-like chain blocks.\nA minute, expressed in Polkadot-like chain blocks.\nNonce of a transaction on the Polkadot-like chains.\nA type that can be used as a parameter in a dispatchable …\nA fixed point representation of a number in the range [0, 1…\nReasonable number of headers in the <code>votes_ancestries</code> on …\nIt’s some arbitrary raw bytes.\nIt’s some arbitrary raw bytes.\nSlot duration in Polkadot-like chain consensus algorithms.\nSignature type used by Polkadot-like chains.\nPolkadot-like block signed with a Justification.\nAn Sr25519 signature.\nExtra transaction extension data that starts with …\nHelper trait to define some extra methods on …\nMaximal number of bytes, included in the signed …\nUnchecked Extrinsic type.\nFull block.\nMake conversion.\nA chain-specific digest of data useful for light clients …\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nReturn storage key for given account data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nCreate signed extension from its components.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe function that should be called.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nThe block header.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBlock justification.\nReturns maximal extrinsic size on all Polkadot-like chains.\nReturns maximal extrinsic weight on all Polkadot-like …\nReturn transaction nonce.\nThe block number.\nPrimitives of polkadot-like chains, that are related to …\nThe parent hash.\nA payload that is included in the transaction.\nA payload that is included in the transaction.\nInformation regarding the type of extrinsic this is …\nThe state trie merkle root\nHuman readable time units defined in terms of number of …\nReturn transaction tip.\nParachain head hash.\nParachain head hasher.\nParachain head.\nRaw storage proof of parachain heads, stored in …\nParachain id.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the hash of this head data.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnverified storage proof of finalized parachain heads.\nA day, expressed in Polkadot-like chain blocks.\nA hour, expressed in Polkadot-like chain blocks.\nMilliseconds between Polkadot-like chain blocks.\nA minute, expressed in Polkadot-like chain blocks.\nSlot duration in Polkadot-like chain consensus algorithms.\nRelay chain finality + parachain finality + message …\nSomething that can unpack batch calls (all-or-nothing …\nType parameter used to identify the beneficiaries eligible …\nMessages pallet instance.\nRelayers pallet instance.\nThe sovereign account of the final chain on the other end …\nError that may be returned by the procedure.\nExplicit account reference.\nEither explicit account reference or <code>RewardsAccountParams</code>.\nExtra post-dispatch data, associated with the supported …\nType of the call that the signed extension recognizes.\nSigned extension configuration.\nUnique identifier of the signed extension that will use …\nLane identifier type.\nStandalone message delivery/confirmation call.\nParachain finality + message delivery/confirmation calls.\nAccount, referenced using <code>RewardsAccountParams</code>.\nReward payment procedure that executes a <code>balances::transfer</code>…\nReward payment procedure.\nAdditional priority that is added to base message delivery …\nRelayer registration.\nRelay chain finality + message delivery/confirmation calls.\nCan be used to access the runtime storage key within the …\nBlock number for the remote <strong>GRANDPA chain</strong>. Mind that this …\nRequired <strong>remaining</strong> registration lease to be able to get …\nThe stake that the relayer must have to have its …\nA trait defining a reward ledger, which tracks rewards …\nThe owner of the sovereign account that should pay the …\nStructure used to identify the account that pays a reward …\nRuntime that optionally supports batched calls. We assume …\nAn <code>BatchCallUnpacker</code> adapter for runtimes with utility …\nRelayer stake-and-slash mechanism.\nThe sovereign account of the final chain on this end of …\nGiven runtime call info, check that this call has been …\nCheck if runtime call is already obsolete.\nExtra size, consumed by the call. We have some assumptions …\nExtra weight, consumed by the call. We have some …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if call is a message delivery call (with …\nGetter for <code>lane_id</code>.\nReturns the pre-dispatch <code>ReceiveMessagesProofInfo</code>.\nCreate a new instance of <code>RewardsAccountParams</code>.\nGiven runtime call, check if it is supported by the …\nPay reward to the relayer (or alternative beneficiary if …\nRegisters a reward for a given relayer.\nSlash up to <code>amount</code> from reserved balance of account <code>relayer</code>…\nReserve the given amount at relayer account.\nReturn account that pays rewards based on the provided …\nActive relayer stake, which is mapped to the relayer …\nReturns the pre-dispatch <code>finality_target</code> sent to the …\nReturns the pre-dispatch <code>SubmitParachainHeadsInfo</code>.\nUnpack batch call with no more than <code>max_packed_calls</code> calls.\n<code>Unreserve</code> the given amount from relayer account.\nThe last block number, where this registration is …\nThe user account identifier type for the runtime.\nAccount id type used by the chain.\nAccount public type used by the chain.\nBalance of an account in native tokens.\nBalance type used by the chain.\nBasic operating modes for a bridges module (Normal/Halted).\nA type that fulfills the abstract idea of what a Substrate …\nBlock number used by the chain.\nA bounded runtime storage value.\nMinimal Substrate-based chain representation that may be …\nUnderlying chain type.\nUnique identifier of the chain.\nError decoding value associated to a provided key.\nThe decoded call.\nThe proof contains duplicate nodes. (for non-compact …\nThe value associated to the provided key is <code>None</code>.\nThe call that is SCALE-encoded.\nChain call, that is either SCALE-encoded, or decoded.\nAll pallet operations are halted.\nThe pallet is halted. All operations (except operating …\nA type that fulfills the abstract idea of what a Substrate …\nHash type used by the chain.\nA type that fulfills the abstract idea of what a Substrate …\nThe same as <code>StorageMap::Hasher1</code>.\nThe same as <code>StorageDoubleMap::Hasher1</code>.\nThe same as <code>StorageDoubleMap::Hasher2</code>.\nHasher type used by the chain.\nA type that fulfills the abstract idea of what a Substrate …\nGeneric header Id.\nHeader id used by the chain.\nGeneric header id provider.\nHeader type used by the chain.\nChain id.\nTransaction is immortal.\nTransaction is immortal.\nCall to <code>verify_trie_proof()</code> failed.\nThe same as <code>StorageMap::Key1</code>.\nThe same as <code>StorageDoubleMap::Key1</code>.\nThe same as <code>StorageDoubleMap::Key2</code>.\nThe target that will be used when publishing logs related …\nThe name of the variable that holds the <code>StorageMap</code>.\nThe name of the variable that holds the <code>StorageDoubleMap</code>.\nMaximal size of the parachain header.\nTransaction is valid for a given number of blocks, …\nTransaction is valid for a given number of blocks, …\nUse this when something must be shared among all instances.\nNonce of a transaction used by the chain.\nTransaction nonce type used by the chain.\nNormal mode, when all operations are allowed.\nOperating mode for a bridge module.\nOperating mode type of the pallet.\nA storage value that holds the pallet operating mode.\nBridge module that has owner and operating mode\nError generated by the <code>OwnedBridgeModule</code> trait.\nA storage entry that holds the module <code>Owner</code> account.\nParachain identifier.\nMinimal parachain representation that may be used from …\nAdapter for <code>Get&lt;u32&gt;</code> to access <code>PARACHAIN_ID</code> from …\nPre-computed size.\nA trait defining helper methods for <code>RangeInclusive</code> …\nRaw storage proof type (just raw trie nodes).\nVersion of the state implementation used by this chain. …\nStatic string.\nSignature type, used on this chain.\nSignature type used by the chain.\nAnything that has size.\nTrait that provides a static <code>str</code>.\nCan be used to access the runtime storage key of a …\nCan be use to access the runtime storage key of a …\nThis struct is used to read storage values from a subset …\nErrors that can occur when interacting with …\nExpected storage root is missing from the proof. (for …\nUnable to reach expected storage value using provided trie …\nEra of specific transaction.\nTransaction era used by the chain.\nCall to <code>generate_trie_proof()</code> failed.\nThe provided key wasn’t found.\nUnderlying chain type.\nA trait that provides the type of the underlying chain.\nThe <code>Vec</code> entries weren’t sorted as expected.\nAt least one key or node wasn’t read.\nStorage values size requirements.\nThe same as <code>StorageMap::Value</code>.\nThe same as <code>StorageDoubleMap::Value</code>.\nAll extra operations with weights that we need in bridges.\nComputes the length of the <code>RangeInclusive</code>, checking for …\nReturn valid storage proof and state root.\nExpected storage proof size in bytes.\nConvenience macro that declares bridge finality runtime …\nConvenience macro that declares bridge messages runtime …\nConvenience macro that declares bridge finality runtime …\nReturns error if the proof has some nodes that are left …\nEnsure that the module is not halted.\nEnsure that the origin is either root, or <code>PalletOwner</code>.\nPrimitives that may be used for creating signed extensions …\nThis is a copy of the …\nThis is a copy of the …\nReturns era that is used by FRAME-based runtimes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMake storage proof parameters that require proof of at …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nA macro that generates <code>StaticStrProvider</code> with the string …\nInsert values in the provided trie at common-prefix keys …\nAdd extra data to the storage value so that it’ll be of …\nReturn header hash.\nGet the header id.\nCreate new immortal transaction era.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts self to decoded call.\nConverts self to encoded call.\nConvert into the inner type\nReturns true if the bridge module is halted.\nCheck if the module is halted.\nGet the maximum size (in bytes) of a Normal extrinsic at …\nGet the maximum weight (compute time) that a Normal …\nPrimitives that may be used by different message delivery …\nChecked division of individual components of two weights.\nPallet owner has a right to halt all module operations and …\nReturns mortality period if transaction is mortal.\nConstructs a new storage proof checker.\nPrepare transaction era, based on mortality period and …\nReturn header number.\nThe current operating mode of the module. Depending on the …\nGet the header id for the parent block.\nCalculates size for <code>RawStorageProof</code>.\nReads and decodes a value from the available subset of …\nReads and decodes a value from the available subset of …\nReads and decodes a value from the available subset of …\nReads a value from the available subset of storage. If the …\nRecord all keys for a given root.\nComputes the length of the <code>RangeInclusive</code>, saturating in …\nHalt or resume all/some module operations.\nChange the owner of the module.\nReturns header hash that needs to be included in the …\nReturn size of this object (in bytes).\nThis is a copy of the …\nReturns the storage prefix for a specific pallet name and …\nThis is how a storage key of storage value is computed.\nReturns decoded call.\nConstruct <code>BoundedStorageValue</code> from the underlying <code>value</code> …\nThe <code>TransactionExtensionSchema</code> for …\nThe <code>TransactionExtensionSchema</code> for …\nThe <code>TransactionExtensionSchema</code> for <code>frame_system::CheckEra</code>.\nThe <code>TransactionExtensionSchema</code> for …\nThe <code>TransactionExtensionSchema</code> for …\nThe <code>TransactionExtensionSchema</code> for <code>frame_system::CheckNonce</code>…\nThe <code>TransactionExtensionSchema</code> for …\nThe <code>TransactionExtensionSchema</code> for …\nThe <code>TransactionExtensionSchema</code> for …\nA simplified version of signed extensions meant for …\nAn implementation of <code>TransactionExtensionSchema</code> using …\nParameters which are part of the payload used to produce …\nA type of the data encoded as part of the transaction.\nThe <code>TransactionExtensionSchema</code> for …\nThe <code>TransactionExtensionSchema</code> for …\nTrait that describes some properties of a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate new <code>GenericTransactionExtension</code> object.\nA payload that is included in the transaction.\nMessage dispatch result.\nFine-grained result of single message dispatch (for better …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nUnspent dispatch weight. This weight that will be deducted …\nSet of test accounts with friendly names: Alice.\nA test account which can be used to sign messages.\nSet of test accounts with friendly names: Bob.\nSet of test accounts with friendly names: Charlie.\nSet of test accounts with friendly names: Dave.\nSet of test accounts with friendly names: Eve.\nSet of test accounts with friendly names: Ferdie.\nConfiguration parameters when generating test GRANDPA …\nName of the <code>Paras</code> pallet used across tests.\nGRANDPA round number used across tests.\nGRANDPA validators set id used across tests.\nGet a list of “unique” accounts.\nThe total number of precommit ancestors in the …\nThe current GRANDPA authority set.\nConvenience function to get a list of Grandpa authorities.\nThe number of forks.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAdds methods for testing the <code>set_owner()</code> and …\nThe header which we want to finalize.\nConvenience function for generating a Header ID at a given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMake a valid GRANDPA justification with sensible defaults\nGenerate justifications in a way where we are able to tune …\nReturns key pair, used to sign data on behalf of this …\nMake valid proof for parachain <code>heads</code>\nReturns public key of this account.\nThe GRANDPA round number for the current authority set.\nThe current authority set ID.\nGenerate a signature of given message.\nCreate signed precommit with given target.\nGet a header for testing.\nGet a header for testing with given <code>state_root</code>.\nGet the corresponding identities from the keyring for the …\nGet a valid justification verification context for a …\nGet a valid set of voters for a Grandpa round.\nBridge metadata.\nBridge identifier - used <strong>only</strong> for communicating with …\nLocations of bridge endpoints at both sides of the bridge.\nErrors that may happen when we check bridge locations.\nBridge state.\nBridge is closed. Associated lanes are also closed. After …\nDestination location is within the same global consensus.\nError that may be returned when suspending/resuming the …\nBridge destination is not supported (in general).\nBridge origin location is not supported.\nLocal XCM channel manager.\nOrigin or destination locations are not universal.\nBridge is opened. Associated lanes are also opened.\nBridge is suspended. Associated lanes are opened.\nDestination network is not the network we are bridged with.\nDestination location is unsupported. We only support …\nThe <code>LaneIdType</code> generator is not supported.\nThe version of XCM location argument is unsupported.\nEncoded XCM blob. We expect the bridge messages pallet to …\nA minimized version of <code>pallet_xcm_bridge_hub::Call</code> that …\nGetter for <code>bridge_destination_universal_location</code>\nSee <code>BridgeLocations::bridge_destination_universal_location</code>.\nGetter for <code>bridge_id</code>\nGiven XCM locations, generate lane id and universal …\nGetter for <code>bridge_origin_relative_location</code>\nRelative location of the bridge origin chain. This is …\nGetter for <code>bridge_origin_universal_location</code>\nSee <code>BridgeLocations::bridge_origin_universal_location</code>. …\nAccount with the reserved funds. Derived from …\nGenerates the exact same <code>LaneId</code> on the both bridge hubs.\n<code>pallet_xcm_bridge_hub::Call::close_bridge</code>\nReserved amount on the sovereign account of the sibling …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAccess the inner representation.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the channel with given location is …\nMapping to the unique <code>LaneId</code>.\nCreate bridge identifier from two universal locations.\n<code>pallet_xcm_bridge_hub::Call::open_bridge</code>\nResume the previously suspended bridge, opened by given …\nCurrent bridge state.\nSuspend the bridge, opened by given origin.\nUniversal <code>InteriorLocation</code> from the bridged consensus.\nUniversal <code>InteriorLocation</code> from the bridged consensus.\nThe number of messages that we may prune in a single call.\nCurrent status of the bridge.\nMinimal delivery fee factor.\nA minimized version of <code>pallet-xcm-bridge-hub-router::Call</code> …\nXCM channel status provider that may report whether it is …\nCurrent delivery fee factor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the channel is currently congested.\nBridge congestion flag.\n<code>pallet-xcm-bridge-hub-router::Call::report_bridge_status</code>\nThe aggregate origin of an inbound message. This is …\nRoutes messages to either the XCMP|Snowbridge V1 …\nRoutes messages to either the XCMP or Snowbridge processor.\nCustom header digest items, inserted as DigestItem::Other\nDeny execution if the message contains instruction …\nThe message came from the para-chain itself.\nThe message came from the relay-chain.\nThe message came from a sibling para-chain.\nMerkle root of outbound Snowbridge messages.\nThe message came from a snowbridge channel.\nMerkle root of outbound Snowbridge V2 messages.\nCustom digest items\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRuntime configuration for MessageQueue pallet\nCustom XCM implementation.\nDeny execution if the message contains instruction …\nCustom header digest items, inserted as DigestItem::Other\nMerkle root of outbound Snowbridge messages.\nMerkle root of outbound Snowbridge V2 messages.\nThe aggregate origin of an inbound message. This is …\nRoutes messages to either the XCMP|Snowbridge V1 …\nRoutes messages to either the XCMP or Snowbridge processor.\nThe message came from the para-chain itself.\nNarrow the scope of the <code>Inner</code> query from …\nConvert a sibling <code>ParaId</code> to an <code>AggregateMessageOrigin</code>.\nThe message came from the relay-chain.\nThe message came from a sibling para-chain.\nThe message came from a snowbridge channel.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdapter for the implementation of <code>GetVersion</code>, which …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA set of traits for a minimal parachain runtime, that may …\nBasic builder based on balances, collators and …\nEnum representing governance origin/location.\nA helper function for comparing the actual value of a fee …\nHelper function to open the bridge/lane for <code>source</code> and …\nHelper function which emulates opening HRMP channel which …\nUtility for opening bridge with dedicated …\nUtility for opening bridge directly inserting data to the …\nModule contains predefined test-case scenarios for <code>Runtime</code> …\nGenerating test data, used by all tests.\nGet a header for testing.\nEstimates XCM execution fee for paid <code>ExportMessage</code> …\nTest-case makes sure that <code>Runtime</code> can change bridge …\nTest-case makes sure that <code>Runtime</code> can change bridge …\nTest-case makes sure that <code>Runtime</code> can change bridge …\nTest-case makes sure that <code>Runtime</code> can change storage …\nModule contains predefined test-case scenarios for <code>Runtime</code> …\nModule contains predefined test-case scenarios for <code>Runtime</code> …\nTest-case makes sure that <code>Runtime</code> can handle xcm …\nTest-case makes sure that <code>Runtime</code> can process bridging …\nTest-case makes sure that Runtime can route XCM messages …\nTest-case makes sure that <code>Runtime</code> can open/close bridges.\nPrepare default runtime storage and run test within this …\nTest-case makes sure that <code>Runtime</code> can change storage …\nAll pallets of this chain, excluding system pallet.\nInstance of the <code>pallet-bridge-grandpa</code>, used to bridge with …\nInstance of the <code>pallet-bridge-messages</code>, used to bridge …\nInstance of the <code>pallet-bridge-relayers</code>, used to collect …\nRelayer reward type.\nThis chain runtime.\nHelper trait to test bridges with remote GRANDPA chain.\nAdapter struct that implements <code>WithRemoteGrandpaChainHelper</code>…\nEstimates transaction fee for default message confirmation …\nEstimates transaction fee for default message delivery …\nEstimates transaction fee for default message confirmation …\nEstimates transaction fee for default message delivery …\nTest-case makes sure that Runtime can dispatch XCM …\nTest-case makes sure that Runtime can dispatch XCM …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nTest-case makes sure that Runtime can dispatch XCM …\nAll pallets of this chain, excluding system pallet.\nInstance of the <code>pallet-bridge-grandpa</code>, used to bridge with …\nInstance of the <code>pallet-bridge-messages</code>, used to bridge …\nInstance of the <code>pallet-bridge-parachains</code>, used to bridge …\nInstance of the <code>pallet-bridge-relayers</code>, used to collect …\nRelayer reward type.\nThis chain runtime.\nHelper trait to test bridges with remote parachain.\nAdapter struct that implements <code>WithRemoteParachainHelper</code>.\nEstimates transaction fee for default message confirmation …\nEstimates transaction fee for default message delivery …\nEstimates transaction fee for default message confirmation …\nEstimates transaction fee for default message delivery …\nTest-case makes sure that Runtime can dispatch XCM …\nTest-case makes sure that Runtime can dispatch XCM …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nTest-case makes sure that Runtime can dispatch XCM …\nGenerating test data for bridges with remote GRANDPA …\nGenerating test data for bridges with remote parachains.\nHelper that creates InitializationData mock data, that can …\nMake bridged GRANDPA chain header with given state root.\nPrepare a batch call with bridged GRANDPA finality and …\nPrepare storage proofs of message confirmations, stored at …\nPrepare a batch call with bridged GRANDPA finality and …\nPrepare storage proofs of messages, stored at the …\nPrepare a call with message delivery proof.\nPrepare a call with message proof.\nMaximal expected <code>submit_finality_proof</code> call size.\nMake bridged parachain header with given state root and …\nPrepare a batch call with relay finality proof, parachain …\nPrepare storage proofs of message confirmations, stored at …\nPrepare a batch call with relay finality proof, parachain …\nPrepare storage proofs of messages, stored at the source …\nPrepare a call with message delivery proof.\nPrepare a call with message proof.\nMacro that ensures that the bridge messages pallet is …\nMacro that ensures that the runtime configuration and …\nMacro that combines four other macro calls - …\nTransaction extension that rejects bridge-related …\nDeclares a runtime-specific …\nIntegrity tests for chain constants and pallets …\nHelpers for implementing various message-related runtime …\nEverything required to run benchmarks of messages module, …\nEverything required to run benchmarks of parachains …\nA duplication of the <code>FilterCall</code> trait.\nWrapper for the bridge GRANDPA pallet that checks calls …\nWrapper for the bridge parachains pallet that checks calls …\nData that may be passed from the validate to <code>post_dispatch</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalled after transaction is dispatched.\nCalled during validation. Needs to checks whether a …\nParameters for asserting chain-related constants.\nParameters for asserting complete standard messages bridge.\nTest that the constants, used in GRANDPA pallet …\nTest that the constants, used in messages pallet …\nTest that our hardcoded, chain-related constants, are …\nAll bridge-related constants tests for the complete …\nAll bridge-related constants tests for the complete …\nAll bridge-related constants tests for the standalone …\nBlock length limits of the chain.\nBlock weight limits of the chain.\nCheck that the message lane weights are correct.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nParameters to assert this chain constants.\nImplementation of the <code>To*InboundLaneApi::message_details</code>.\nImplementation of the <code>To*OutboundLaneApi::message_details</code>.\nReturns callback which generates <code>BridgeMessage</code> from …\nPrepare proof of messages delivery for the …\nPrepare proof of messages delivery for the …\nPrepare proof of messages for the <code>receive_messages_proof</code> …\nPrepare proof of messages for the <code>receive_messages_proof</code> …\nPrepare proof of messages for the <code>receive_messages_proof</code> …\nBootnode advertisement task params.\nWhether to advertise non-global IP addresses.\nBootnode request-response protocol config.\nEnable DHT bootnode discovery.\nEnable embedded DHT bootnode.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nParachain ID.\nParachain fork ID.\nParachain genesis hash.\nParachain node network service.\nParachain public addresses provided by the operator.\nRelay chain fork ID.\nRelay chain interface.\nRelay chain network service.\n<code>/paranode</code> protocol request receiver.\nStart parachain bootnode advertisement and discovery tasks.\nTask manager.\nOptions only relevant for collator/parachain nodes\nSpawn embedded relay chain node\nCommand for exporting the genesis head data of the …\nCommand for exporting the genesis wasm file.\nConnect to remote relay chain node via websocket RPC\nA non-redundant version of the <code>RunCmd</code> that sets the …\nThe <code>purge-chain</code> command used to remove the whole chain: …\nPossible modes for the relay chain to operate in.\nThe <code>run</code> command used to run a node.\nThe cumulus RunCmd inherents from sc_cli’s\nThe base struct of the purge-chain command.\nThe cumulus RunCmd inherents from sc_cli’s\nRun node as collator.\nCreate <code>CollatorOptions</code> representing options only relevant …\nEnable DHT bootnode discovery.\nEnable embedded DHT bootnode.\nEXPERIMENTAL: This is meant to be used only if collator is …\nExtract the genesis code from a given ChainSpec.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet the SCALE encoded genesis header of the parachain.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDisable embedded DHT bootnode.\nDisable DHT bootnode discovery.\nCreate a <code>NormalizedRunCmd</code> which merges the <code>collator</code> cli …\nOutput file name or stdout if unspecified.\nOutput file name or stdout if unspecified.\nOnly delete the para chain database\nWrite output in binary. Default is to write in hex.\nWrite output in binary. Default is to write in hex.\nHow this collator retrieves relay chain information\nCreates a less resource-hungry node that retrieves relay …\nOnly delete the relay chain database\nRun the purge command\nRun the export-genesis-head command\nRun the export-genesis-wasm command\nInitialize the collation-related subsystems on the …\nRelay-chain-driven collators are those whose block …\nThe Cumulus <code>CollatorService</code> is a utility struct for …\nA request to author a collation, based on the advancement …\nComplete the request with a collation, if any.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nInitialize the collator with Polkadot’s …\nCalls <code>U::from(self)</code>.\nGet the <code>PersistedValidationData</code> for the request.\nGet the relay parent of the collation request.\nThe <code>CollatorService</code> provides common utilities for …\nUtility functions generally applicable to writing …\nDirectly announce a block on the network.\nInform networking systems that the block should be …\nInform the networking systems that the block should be …\nBuild a full <code>Collation</code> from a given <code>ParachainCandidate</code>. …\nBuild a full <code>Collation</code> from a given <code>ParachainCandidate</code>. …\nChecks the status of the given block hash in the Parachain.\nChecks the status of the given block hash in the Parachain.\nFetch the collation info from the runtime.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate a new instance.\nA verifier for Aura blocks.\nParameters of <code>build_aura_worker</code>.\nParameters of <code>build_verifier</code>.\nParameters for <code>import_queue</code>.\nSlot specific extension that the inherent data provider …\nA unit type wrapper to express the proportion of a slot.\nThe backoff strategy when we miss slots.\nThe block import to use.\nThe block import.\nThe proportion of the slot dedicated to proposing.\nBuild the <code>AuraVerifier</code>.\nThe client to interact with the chain.\nThe client to interact with the chain.\nThe client to interact with the chain.\nThe core collator logic for Aura - slot claiming, block …\nStock, pure Aura collators.\nCompatibility mode that should be used.\nThe inherent data providers, to create the inherent data.\nThe inherent data providers, to create the inherent data.\nShould we force the authoring of blocks?\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the inner that is guaranteed to be in the range …\nStart an import queue for the Aura consensus algorithm.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHook into the sync module to control the justification …\nThe keystore used by the node.\nThe maximum proportion of the slot dedicated to proposing …\nCreate a new proportion.\nThe proposer factory to build proposer instances.\nThe prometheus registry.\nThe current slot that will be found in the <code>InherentData</code>.\nGet the slot duration for Aura by reading from a runtime …\nGet the slot duration for Aura by reading from a runtime …\nThe spawner to spawn background tasks.\nThe sync oracle that can give us the current sync status.\nThe telemetry handle.\nThe telemetry handle.\nTelemetry instance used to report telemetry metrics.\nA utility struct for writing collation logic that makes …\nParameters for instantiating a <code>Collator</code>.\nA claim on an Aura slot.\nGet the author’s public key.\nThe block import handle.\nBuild and import a parachain block on the given parent …\nAttempt to claim a slot derived from the given …\nPropose, seal, import a block and packaging it into a …\nGet the underlying collator service.\nThe collator service used for bundling proposals into …\nExplicitly creates the inherent data for parachain block …\nA builder for inherent data builders.\nExplicitly creates the inherent data for parachain block …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe keystore handle used for accessing parachain key …\nInstantiate a new instance of the <code>Aura</code> manager.\nThe identifier of the parachain within the relay-chain.\nGet the Aura pre-digest for this slot.\nThe block proposer used for building blocks.\nAn interface to the relay-chain client.\nSeal a block with a signature in the header.\nGet the slot assigned to this claim.\nGet the timestamp corresponding to the relay-chain slot …\nCreate a slot-claim from the given author public key, …\nHolds a relay parent and its descendants.\nThis provides the option to run a basic relay-chain driven …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nConsumes the structure and returns a vector containing the …\nA collator for Aura that looks ahead of the most recently …\nCreates a new instance with the given relay parent and no …\nCreates a new instance with the given relay parent and …\nReturns a reference to the relay parent header.\nArchitecture Overview\nParameters for <code>run</code>.\nThe amount of time to spend authoring each block.\nUsed to actually import blocks.\nReceiver for collation requests. If <code>None</code>, Aura consensus …\nThe collator key used to sign collations before submitting …\nThe generic collator service used to plug into this …\nInherent data providers. Only non-consensus inherent data …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe underlying keystore, which should contain Aura …\nA handle to the relay-chain client’s “Overseer” or …\nThe underlying para client.\nThe para’s ID.\nThe underlying block proposer this should call into.\nThe length of slots in the relay chain.\nA handle to the relay-chain client.\nRun bare Aura consensus as a relay-chain-driven collator.\nParameters for <code>run</code>.\nParameters for <code>run_with_export</code>.\nThe amount of time to spend authoring each block.\nUsed to actually import blocks.\nA validation code hash provider, used to get the current …\nThe collator key used to sign collations before submitting …\nThe generic collator service used to plug into this …\nInherent data providers. Only non-consensus inherent data …\nWhen set, the collator will export every produced <code>POV</code> to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe underlying keystore, which should contain Aura …\nThe maximum percentage of the maximum PoV size that the …\nA handle to the relay-chain client’s “Overseer” or …\nThe para client’s backend, used to access the database.\nThe underlying para client.\nThe para’s ID.\nThe parameters.\nThe underlying block proposer this should call into.\nWhether we should reinitialize the collator config (i.e. …\nThe length of slots in the relay chain.\nA handle to the relay-chain client.\nRun async-backing-friendly Aura.\nRun async-backing-friendly Aura.\nParameters for <code>run</code>.\nSpecial block import for the slot based collator.\nHandle for receiving the block and the storage proof from …\nThe amount of time to spend authoring each block.\nUsed to actually import blocks.\nThe handle returned by <code>SlotBasedBlockImport</code>.\nA validation code hash provider, used to get the current …\nThe collator key used to sign collations before submitting …\nThe generic collator service used to plug into this …\nInherent data providers. Only non-consensus inherent data …\nWhen set, the collator will export every produced <code>POV</code> to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe underlying keystore, which should contain Aura …\nThe maximum percentage of the maximum PoV size that the …\nCreate a new instance.\nReturns the next item.\nThe para client’s backend, used to access the database.\nThe underlying para client.\nThe para’s ID.\nThe underlying block proposer this should call into.\nWhether we should reinitialize the collator config (i.e. …\nSlot duration of the relay chain\nA handle to the relay-chain client.\nRun aura-based block building and collation task.\nOffset slots by a fixed duration. This can be used to …\nSpawner for spawning futures.\nA parachain block import verifier that checks for …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nStart an import queue for a Cumulus node which checks …\nCalls <code>U::from(self)</code>.\nCreates a new Verifier instance for handling parachain …\nLimit set to <code>MAX_LEAVES_PER_LEVEL_SENSIBLE_DEFAULT</code>.\nUpper bound to the number of leaves allowed for each level …\nValue good enough to be used with parachains using the …\nNo explicit limit, however a limit may be implicitly …\nParachain specific block import.\nMarker trait denoting a block import type that fits the …\nThe result from building a collation.\nParameters when searching for suitable parents to build on …\nA potential parent block returned from …\nCustom value.\nProvides the hash of validation code used for …\nWhether the block is the included block, is itself pending …\nA limitation on the age of relay parents for parachain …\nThe block that was built for this candidate.\nThe depth of the block with respect to the included block.\nReturns a stream that will yield finalized heads for the …\nPerform a recursive search through blocks to find potential\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe hash of the block.\nThe header of the block.\nWhether to only ignore “alternative” branches, i.e. …\n(unstable) Composable utilities for constructing import …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads abridged host configuration from the relay chain …\nHow “deep” parents can be relative to the included …\nCreate a new instance.\nCreate a new instance which delays setting the best block.\nCreate a new instance with an explicit limit to the number …\nThe ID of the parachain.\nThe proof that was recorded while building the block.\nThe relay-parent that is intended to be used.\nGet the relay-parent slot and timestamp from a header.\nRun the parachain consensus.\nStart search for child blocks that can be used as parents.\nA <code>Verifier</code> for blocks which verifies absolutely nothing.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAn import queue which does no verification.\nErrors that can occur when proposing a parachain block.\nA type alias for easily referring to the type of a …\nAn interface for proposers.\nThe block that was build.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nProof that was recorded while building the block.\nPropose a collation using the supplied <code>InherentData</code> and …\nCreate an error tied to the creation of a proposer.\nCreate an error tied to the proposing logic itself.\nThe storage changes while building this block.\nA verifier that just checks the inherents.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate a new instance.\nA <code>BlockAnnounceValidator</code> which accepts all block …\nThe data that we attach to a block announcement.\nA type alias for the <code>RequireSecondedInBlockAnnounce</code> …\nParachain specific block announce validator.\nWait before announcing a block that a candidate message …\nInstantiate this block announcement validator while …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate the <code>WaitToAnnounce</code> object\nCreate a new <code>RequireSecondedInBlockAnnounce</code>.\nInstantiate this block announcement validator while …\nWait for a candidate message for the block, then announce …\nInherent data provider that supplies mocked validation …\nParameters for how the Mock inherent data provider should …\nThe inherent data that is passed by the collator to the …\nAdditional key-value pairs that should be injected.\nContains the collator peer ID, which is later sent by the …\nCreate the <code>ParachainInherentData</code> at the given <code>relay_parent</code>.\nThe current block number of the local block chain (the …\nThe current block head data of the local block chain (the …\nDownward messages in the order they were sent.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nHRMP messages grouped by channels. The messages in the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a MockXcmConfig by reading the mqc_heads directly …\nNumber of parachain blocks per relay chain epoch Mock …\nThe parachain ID of the parachain for that the inherent …\nInbound downward XCM messages to be injected into the …\nInbound Horizontal messages sorted by channel.\nThe number of relay blocks that elapses between each …\nA storage proof of a predefined set of keys from the …\nThe relay block in which this parachain appeared to start. …\nContains the relay parent header and its descendants. This …\nFunction to mock BABE one epoch ago randomness.\nThe starting state of the dmq_mqc_head.\nThe starting state of each parachain’s mqc head\nWhether upgrade go ahead should be set.\nXCM messages and associated configuration information.\nFull ancestry recovery.\nEncapsulates the logic of the pov recovery.\nThe delay between observing an unknown block and …\nTest-friendly wrapper trait for the overseer handle. Can …\nType of recovery to trigger.\nStructure used to trigger an explicit recovery request via …\nSingle block recovery.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nHash of the last block to recover.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRecovery type.\nStart recovering before <code>max</code> delay.\nStart recovering after <code>min</code> delay.\nCreate a new instance.\nAttempts an explicit recovery of one or more blocks.\nRun the pov-recovery.\nParameters given to <code>build_network</code>.\nCollators use an aggressive recovery profile by default.\nThe expected level of collator sybil-resistance on the …\nA hint about how long the node should wait before …\nFull nodes use a passive recovery profile by default, as …\nProvide an explicit recovery profile.\nHost functions that should be used in parachain nodes.\nImplementation of <code>TracingExecuteBlock</code> for parachains.\nThere is a collator-selection protocol which provides …\nParameters given to <code>start_relay_chain_tasks</code>.\nThere is no collator-selection protocol providing …\nBuild the network service, the network status sinks and an …\nBuild a relay chain interface. Will return a minimal relay …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new instance of <code>self</code>.\nPrepare the parachain’s node configuration\nStart necessary consensus tasks related to the relay chain.\nInterface that provides access to the current storage …\nProvides implementations for the extern host functions.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the current storage proof size.\nThe block executor used when validating a PoV at the relay …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nA consensus hook that enforces fixed block production …\nCan be used to configure the genesis state of this pallet.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nWhether it is legal to extend the chain, assuming the …\nThe definition of a <code>FixedVelocityConsensusHook</code> for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsensus hook that performs validations on the provided …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nA consensus hook that enforces fixed block production …\nMigrate <code>V0</code> to <code>V1</code>.\nThe in-code storage version.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nCan be used to configure the genesis state of this pallet.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nContains a variant per dispatchable extrinsic that this …\nSome debris was cleaned up.\nThe cleanup of remaining pallet storage completed.\nThe migration finished. The pallet can now be removed from …\nThe export of pages completed.\nThe page export completed.\nThe export of overweight messages completed.\nThe export of overweight messages completed.\nConfiguration trait of this pallet.\nThe sink for all DMP messages that the lazy migration will …\nThe <code>Event</code> enum of this pallet\nThe export of a page failed.\nThe export of an overweight message failed.\nThe export of a page completed.\nThe export of an overweight message completed.\nThe maximal length of a DMP message.\nThe lazy-migration state of the pallet.\nThe migration state of this pallet.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nMigration has not started yet.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe overarching event type of the runtime.\nThe cleanup of remaining pallet storage started.\nThe storage cleanup started.\nThe export of pages started.\nThe export of pages started.\nThe export of overweight messages started.\nThe export of overweight messages started.\nWeight functions needed for <code>cumulus_pallet_dmp_queue</code>.\nWeight info for this pallet (only needed for the lazy …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe worst-case weight of <code>Self::on_idle</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for <code>cumulus_pallet_dmp_queue</code>\nThe next page that should be exported.\nThe next overweight index that should be exported.\nContains a variant per dispatchable extrinsic that this …\nSome debris was cleaned up.\nThe cleanup of remaining pallet storage completed.\nThe migration finished. The pallet can now be removed from …\nThe export of pages completed.\nThe page export completed.\nThe export of overweight messages completed.\nThe export of overweight messages completed.\nConfiguration trait of this pallet.\nThe sink for all DMP messages that the lazy migration will …\nThe <code>Event</code> enum of this pallet\nThe export of a page failed.\nThe export of an overweight message failed.\nThe export of a page completed.\nThe export of an overweight message completed.\nThe lazy-migration state of the pallet.\nThe migration state of this pallet.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nMigration has not started yet.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe overarching event type of the runtime.\nThe cleanup of remaining pallet storage started.\nThe storage cleanup started.\nThe export of pages started.\nThe export of pages started.\nThe export of overweight messages started.\nThe export of overweight messages started.\nWeight info for this pallet (only needed for the lazy …\nThe next page that should be exported.\nThe next overweight index that should be exported.\nWeights for <code>cumulus_pallet_dmp_queue</code> using the Substrate …\nWeight functions needed for <code>cumulus_pallet_dmp_queue</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>DmpQueue::MigrationStatus</code> (r:1 w:1) Proof: …\nStorage: <code>DmpQueue::MigrationStatus</code> (r:1 w:1) Proof: …\nStorage: <code>DmpQueue::MigrationStatus</code> (r:1 w:1) Proof: …\nStorage: <code>DmpQueue::MigrationStatus</code> (r:1 w:1) Proof: …\nStorage field that keeps track of bandwidth used by the …\nAncestor of the block being currently executed, not yet …\nThe number of HRMP messages we observed in <code>on_initialize</code> …\nProvides an implementation of <code>CheckAssociatedRelayNumber</code>.\nContains a variant per dispatchable extrinsic that this …\nSomething that can check the associated relay block number.\nSomething that can check the associated relay parent block …\nConfiguration trait of this pallet.\nThe consensus hook for dealing with the unincluded segment.\nAn entry-point for higher-level logic to manage the …\nA custom head data that should be returned as result of …\nWere the validation data set to notify the relay chain?\nQueues inbound downward messages for delayed processing.\nDownward messages were processed using the given weight.\nSome downward messages have been received and will be …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA special consensus hook for handling the migration to …\nCan be used to configure the genesis state of this pallet.\nThe parachain host configuration that was obtained from …\nThe inherent which supplies the host configuration did not …\nHRMP messages that were sent in a block.\nHRMP watermark that was set in a block.\nThe last downward message queue chain head we have …\nThe message queue chain heads we have observed per each …\nThe last processed downward message.\nThe last processed HRMP message.\nThe relay chain block number associated with the last …\nThe max length of a DMP message.\nA snapshot of some messaging related state of relay chain …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nValidation code that is set by the parachain and is to be …\nNo validation function upgrade is currently scheduled.\nSomething that should be informed about system related …\nSomething which can be notified when the validation data …\nThe place where outbound XCMP messages come from. This is …\nAttempt to upgrade validation function while existing …\nThe <code>Pallet</code> struct, the main type that implements traits …\nType that implements <code>SetCode</code>.\nUpward messages that are still pending and not yet send to …\nIn case of a scheduled upgrade, this storage field …\nNumber of downward messages processed in a block.\nPolkadot currently prohibits this parachain from upgrading …\nHolds the most recent relay-parent state root and block …\nA state proof extracted from the relay chain.\nProvides an implementation of <code>CheckAssociatedRelayNumber</code>.\nProvides an implementation of <code>CheckAssociatedRelayNumber</code>.\nThe offset between the tip of the relay chain and the …\nThe state proof for the last relay parent block.\nImplements <code>BlockNumberProvider</code> that returns relay chain …\nImplements <code>BlockNumberProvider</code> and <code>RelaychainStateProvider</code> …\nThis exposes the <code>RelayChainState</code> to other runtime modules.\nThe snapshot of some state related to messaging relevant …\nThe weight we reserve at the beginning of the block for …\nThe weight we reserve at the beginning of the block for …\nThe weight we reserve at the beginning of the block for …\nThe weight we reserve at the beginning of the block for …\nThe overarching event type.\nReturns the parachain ID we are running with.\nThe supplied validation function has compiled into a blob …\nLatest included block descendants the runtime accepted. In …\nOptional upgrade go-ahead signal from the relay-chain.\nAn option which indicates if the relay-chain restricts …\nThe factor to multiply the base delivery fee by for UMP.\nAn upward message was sent to the relay chain.\nUpward messages that were sent in a block.\nBandwidth used by a parachain block(s).\nThe <code>PersistedValidationData</code> set for this block.\nThe inherent which supplies the validation data did not …\nThe validation function was applied as of the contained …\nThe relay-chain aborted the upgrade process.\nThe validation function has been scheduled to apply.\nWeight functions needed for …\nWeight info for functions and calls.\nThe message handler that will be invoked when messages are …\nCheck the current relay number versus the previous relay …\nReturns the <code>CollationInfo</code> of the current active block.\nThe definition of a <code>ConsensusHook</code> trait for consensus …\nMay be called by any runtime module to obtain the current …\nThe current message queue chain head for downward message …\nInformation about all the outbound HRMP channels.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nOutbound HRMP channels updates.\nInformation about all the inbound HRMP channels.\nPrepare/insert relevant data for <code>schedule_code_upgrade</code> for …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")