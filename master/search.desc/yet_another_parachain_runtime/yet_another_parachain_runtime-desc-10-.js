searchState.loadedDescShard("yet_another_parachain_runtime", 10, "Get a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nComputations, specific to bridge messages transactions.\nComputations, specific to bridge parachains transactions.\nComputations, specific to bridge relay chains transactions.\nEnsures that the value of <code>PriorityBoostPerMessage</code> matches …\nEnsures that the value of <code>PriorityBoostPerHeader</code> matches …\nEnsures that the value of <code>PriorityBoostPerHeader</code> matches …\nThe in-code storage version.\nThis module contains data structures that are valid for …\nThis migration updates <code>RelayerRewards</code> where …\nThe pallet in version 1 only supported rewards collected …\nReward account generator for <code>v0</code>.\nStructure used to identify the account that pays a reward …\nbridged_chain_id\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nlane_id\nCreate a new instance of <code>RewardsAccountParams</code>.\nowner\nReturn account that pays rewards based on the provided …\n<code>UncheckedMigrationV0ToV1</code> wrapped in a <code>VersionedMigration</code>, …\nMigrates the pallet storage to v1.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\n<code>UncheckedMigrationV1ToV2</code> wrapped in a <code>VersionedMigration</code>, …\nMigrates the pallet storage to v2.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nType for representing balance of an account used for …\nShortcut to alternative beneficiary type for …\nContains a variant per dispatchable extrinsic that this …\nNew registration lease is less than the previous one.\nConfiguration trait of this pallet.\nRelayer has been <code>deregistered</code>.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nReward payment procedure has failed.\nFailed to reserve enough funds on relayer account.\nFailed to <code>unreserve</code> enough funds on relayer account.\n<code>Instance1</code> to be used for instantiable pallets defined with …\nThe relayer has tried to register for past block or …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nNo reward can be claimed by given relayer.\nCannot <code>deregister</code> if not registered.\nThe <code>Pallet</code> struct, the main type that implements traits …\nPay rewards scheme.\nRelayers that have reserved some of their balance to get …\nFailed to <code>deregister</code> relayer, because lease is still …\nRelayer registration has been added or updated.\nMap of the relayer =&gt; accumulated reward.\nReward discriminator type. The pallet can collect …\nType of relayer reward balance.\nReward has been paid to the relayer.\nRelayer reward has been registered and may be claimed …\nThe overarching event type.\nRelayer has been slashed and <code>deregistered</code>.\nStake and slash scheme.\nPallet call weights.\nClaim accumulated rewards.\nClaim accumulated rewards and send them to the alternative …\n<code>Deregister</code> relayer.\nRegister relayer or update its registration.\nBeneficiary.\nRelayer registration.\nRegistration that was removed.\nRelayer account that can claim reward.\nRelayer account that has been rewarded.\nRelayer account that has been registered.\nRelayer account that has been <code>deregistered</code>.\nRelayer account that has been <code>deregistered</code>.\nReward amount.\nReward amount.\nRelayer can claim this kind of reward.\nRelayer has received reward of this kind.\nWeights for <code>pallet_bridge_relayers</code> that are generated …\nWeight functions needed for pallet_bridge_relayers.\nStorage: BridgeRelayers RelayerRewards (r:1 w:1)\nStorage: BridgeRelayers RelayerRewards (r:1 w:1)\nStorage: BridgeRelayers RegisteredRelayers (r:1 w:1)\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: BridgeRelayers RegisteredRelayers (r:1 w:1)\nStorage: BridgeRelayers RelayerRewards (r:1 w:1)\nStorage: BridgeRelayers RegisteredRelayers (r:1 w:1)\nA (Relay-chain-side) account ID.\nType for determining how to set price.\nResult of <code>AdaptPrice::adapt_price</code>.\nThe origin test needed for administrating this pallet.\nThe lease expiry time has already passed.\nA Region has been assigned to a particular task.\nAttempted to force remove an assignment that doesn’t …\nAn assignment has been removed from the workplan.\nFailed to auto-renew a core, likely due to the payer …\nThe auto-renewal limit has been reached upon renewing …\nAttempted to disable auto-renewal for a core that didn’t …\nA record containing information regarding auto-renewal for …\nKeeping track of cores which have auto-renewal enabled.\nA (Relay-chain-side) balance.\nThe number of bits in the <code>CoreMask</code>.\nContains a variant per dispatchable extrinsic that this …\nSimple implementation of <code>AdaptPrice</code> with two linear phases.\nSome historical Instantaneous Core Pool Revenue is ready …\nThe core is fully assigned; the inner is the workload …\nThe pivot mask for the interlacing is complete (and …\nHow much of a core has been assigned or, if completely …\nConfiguration trait of this pallet.\nConfiguration of this pallet.\nThe current configuration of this pallet.\nSome historical Instantaneous Core Pool contribution …\nThe record body of a Region which was contributed to the …\nReversible conversion from local balance to Relay-chain …\nA Core has been assigned to one or more tasks and/or the …\nAn element to which a core can be assigned.\nThe number of cores available for scheduling has changed.\nReceived core count change from the relay chain.\nA new number of cores has been requested.\nIndex of a Polkadot Core.\nCounter for the total number of set bits over every core’…\nRelay chain’s Coretime API used to interact with and …\nType able to accept Coretime scheduling instructions and …\nThe workplan of the pallet’s state is invalid. This …\nNeeded to prevent spam attacks.The amount of credits the …\nSome Instantaneous Coretime Pool credit has been purchased.\nCurrency used to pay for Coretime.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe pivot mask for the interlacing is not contained within …\nThe region is removed; the assignment may be eligible for …\nWhether a core assignment is revokable or not.\nCan be used to configure the genesis state of this pallet.\nSome historical Instantaneous Core Pool payment record has …\nSome historical Instantaneous Core Pool payment record has …\nSome historical Instantaneous Core Pool payment record has …\nCore need not be used for anything.\nThe workload assigned for renewal is incomplete. This is …\nRecord of a single contribution to the Instantaneous …\nTotal InstaPool rewards for each Timeslice and the number …\nA per-timeslice bookkeeping record for tracking …\nRecord of Coretime entering or leaving the Instantaneous …\nA Region has been converted into two overlapping Regions …\nThe configuration could not be applied because it is …\nA lease is about to end.\nThe lease does not exist.\nInformation on a single legacy lease.\nA lease has been removed.\nA new lease has been created.\nThe Polkadot Core legacy leases.\nRecord for Polkadot Core legacy leases.\nGiven that we are performing all auto-renewals in a single …\nMaximum number of legacy leases.\nMaximum number of system cores.\nThe smallest amount of credits a user can purchase.\n<code>AdaptPrice</code> like <code>CenterTargetPrice</code>, but with a minimum …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe revenue must be claimed for 1 or more timeslices.\nThe history item does not exist.\nThe caller doesn’t have the permission to enable or …\nThere is no sale happening currently.\nOnly cores which are assigned to a task can be …\nInvalid attempt to renew.\nThe owner of the region is not the origin.\nThere is no work to be done.\nRecord for On demand core sales.\nWhat to do with any revenues collected from the sale of …\nThe price limit is exceeded.\nThe <code>Pallet</code> struct, the main type that implements traits …\nIdentifier from which the internal Pot is generated.\nThe core is not fully assigned; the inner is the parts …\nA Region has been split into two non-overlapping Regions.\nFraction expressed as a nominator with an assumed …\nThe pivot point of the partition at the beginning of the …\nThe pivot point of the partition at or after the end of …\nCore should be used for the Instantaneous Coretime Pool.\nA record of flux in the InstaPool.\nA Region has been added to the Instantaneous Coretime Pool.\nSome historical Instantaneous Core Pool payment record has …\nThe identity of a possibly renewable Core workload.\nA record of a potential renewal.\nRecords of potential renewals.\nThe algorithm to determine the next price on the basis of …\nThe region remains with the same owner allowing the …\nA Region of Bulk Coretime has been purchased.\nRelay chain block number of <code>T</code> that implements …\nRelay chain block number provider of <code>T</code> that implements …\nA Region has been dropped due to being out of date.\nSelf-describing identity for a Region of Bulk Coretime.\nThe rest of the information describing a Region.\nA region has been force-removed from the pool. This is …\nThe current (unassigned or provisionally assigend) Regions.\nA provider for the relay chain block number.\nThe workload of a core has become renewable.\nA workload has been renewed.\nA reservation for a workload has been cancelled.\nThere is a new reservation for a workload.\nThe Polkadot Core reservations (generally tasked with the …\nRecord for Polkadot Core reservations (generally tasked …\nThe act of claiming revenue has begun.\nA particular timeslice has a non-zero claim.\nA revenue claim has (possibly only in part) been paid.\nReceived revenue info from the relay chain.\nThe details of the current sale, including its properties …\nThe status of a Bulk Coretime Sale.\nA new sale has been initialized.\nPerformance of a past sale.\nThe sale rotation has been started and a new sale is …\nAn distinct item which can be scheduled on a Polkadot Core.\nThe same as <code>CoreMaskBitCount</code> but signed.\nThe sale limit has been reached.\nFailed to get the sovereign account of a task.\nType used for getting the associated account of a task. …\nThe current status of miscellaneous subsystems of this …\nGeneral status of the system.\nAn item cannot be dropped because it is still valid.\nCore should be used to process the given task.\nA Task Id. In general this is called a ParachainId.\nRelay-chain block number with a fixed divisor of …\nNumber of Relay-chain blocks per timeslice.\nThe purchase cannot happen yet as the sale period is yet …\nWe reached the limit for auto-renewals.\nThe maximum amount of leases has already been reached.\nThe maximum amount of reservations has already been …\nOwnership of a Region has been transferred.\nThere are no cores available.\nThis pallet has not yet been initialized.\nThe identified contribution to the Instantaneous Core Pool …\nThe given region identity is not known.\nThe renewal record cannot be found.\nNo reservation of the given index exists.\nThe revenue for the Instantaneous Core Sales of this …\nThe pivot mask for the interlacing is void (and therefore …\nWeight functions needed for <code>pallet_broker</code>.\nWeight information for all calls of this pallet.\nThe current workload of each core. This gets updated with …\nThe work we plan on having each core do at a particular …\nThe renewal operation is not valid at the current time (it …\nReturn adapted prices for next sale.\nThe number of Relay-chain blocks in advance which …\nThe number of Relay-chain blocks in advance which …\nThe accumulated balance of on demand sales made on the …\nThe accumulated balance of on demand sales made on the …\nAssign a Bulk Coretime Region to a task.\nAssign a Bulk Coretime Region to a task.\nInstructs the Relay-chain to ensure that the core indexed …\nThe job that the Core should be doing.\nThe timeslice at which this Region begins.\nWithdraw a region from account.\nClaim the revenue owed from inclusion in the Instantaneous …\nClaim the revenue owed from inclusion in the Instantaneous …\nReturn reference to the complete workload, or <code>None</code> if …\nThe workload which will be scheduled on the Core in the …\nThe workload which will be scheduled on the Core in the …\nConfigure the pallet.\nConfigure the pallet.\nThe duration by which rewards for contributions to the …\nThe duration by which rewards for contributions to the …\nThe index of the Polkadot Core on which this Region will …\nThe core whose workload at the sale ending with <code>when</code> may …\nThe core for which auto renewal is enabled.\nThe total number of cores which can be assigned (one plus …\nNumber of cores which are/have been offered for sale.\nNumber of cores which are/have been offered for sale.\nNumber of cores which are/have been offered for sale.\nNumber of cores which have been sold; never more than …\nNumber of cores which have been sold; never more than …\nNumber of cores which have been sold; never more than …\nInstructs the Relay-chain to add the <code>amount</code> of DOT to the …\nIf there is an ongoing sale returns the current price of a …\nExtrinsic for disabling auto renewal.\nExtrinsic for disabling auto renewal.\nReturn the complete workload, or <code>None</code> if incomplete.\nDrop an expired Instantaneous Pool Contribution record …\nDrop an expired Instantaneous Pool Contribution record …\nDrop an expired Instantaneous Pool History record from the …\nDrop an expired Instantaneous Pool History record from the …\nDrop an expired Region from the chain.\nDrop an expired Region from the chain.\nDrop an expired Allowed Renewal record from the chain.\nDrop an expired Allowed Renewal record from the chain.\nExtrinsic for enabling auto renewal.\nExtrinsic for enabling auto renewal.\nThe end of the Region.\nThe end of the Region.\nThe price of Bulk Coretime after the Leadin Period.\nThe minimum price that was achieved in this sale.\nNew minimum price to use.\nThe price of Bulk Coretime after the Leadin Period.\nThe index of the first core which is for sale. Core of …\nThe index of the first core which is for sale. Core of …\nReserve a core for a workload immediately.\nReserve a core for a workload immediately.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nConstruct performance via data from a <code>SaleInfoRecord</code>.\nThe proportion of cores available for sale which should be …\nThe proportion of cores available for sale which should be …\nThe number of cores we want to sell, ideally. Selling this …\nThe number of cores we want to sell, ideally.\nThe number of cores we want to sell, ideally. Selling this …\nSplit a Bulk Coretime Region into two wholly-overlapping …\nSplit a Bulk Coretime Region into two wholly-overlapping …\nThe length in blocks of the Interlude Period for …\nThe length in blocks of the Interlude Period for …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe last (Relay-chain) timeslice which we committed to the …\nThe timeslice of the last time we ticked.\nReturn the factor by which the regular price must be …\nThe length in blocks of the Leadin Period (where the price …\nThe length in blocks of the Leadin Period for forthcoming …\nThe length in blocks of the Leadin Period (where the price …\nThe length in blocks of the Leadin Period for forthcoming …\nThe end of the Region contributed.\nThe end of the Region contributed.\nAn artificial limit to the number of cores which are …\nAn artificial limit to the number of cores which are …\nThe regularity parts in which this Region will be …\nThe regularity parts in which this Item will be scheduled …\nThe payout remaining for the <code>private_contributions</code>, or <code>None</code>…\nThe payout remaining for the <code>private_contributions</code>, or <code>None</code>…\nDeposit a region into an account.\nCreate a call with the variant <code>assign</code>.\nCreate a call with the variant <code>claim_revenue</code>.\nCreate a call with the variant <code>configure</code>.\nCreate a call with the variant <code>disable_auto_renew</code>.\nCreate a call with the variant <code>drop_contribution</code>.\nCreate a call with the variant <code>drop_history</code>.\nCreate a call with the variant <code>drop_region</code>.\nCreate a call with the variant <code>drop_renewal</code>.\nCreate a call with the variant <code>enable_auto_renew</code>.\nCreate a call with the variant <code>force_reserve</code>.\nCreate a call with the variant <code>interlace</code>.\nCreate a call with the variant <code>notify_core_count</code>.\nCreate a call with the variant <code>notify_revenue</code>.\nCreate a call with the variant <code>partition</code>.\nCreate a call with the variant <code>pool</code>.\nCreate a call with the variant <code>purchase</code>.\nCreate a call with the variant <code>purchase_credit</code>.\nCreate a call with the variant <code>remove_assignment</code>.\nCreate a call with the variant <code>remove_lease</code>.\nCreate a call with the variant <code>renew</code>.\nCreate a call with the variant <code>request_core_count</code>.\nCreate a call with the variant <code>reserve</code>.\nCreate a call with the variant <code>set_lease</code>.\nCreate a call with the variant <code>start_sales</code>.\nCreate a call with the variant <code>swap_leases</code>.\nCreate a call with the variant <code>transfer</code>.\nCreate a call with the variant <code>unreserve</code>.\nSpecifies when the upcoming renewal should be performed. …\nA hook supposed to be called right after a new timeslice …\nThe owner of the Region.\nThe owner of the Region.\nThe amount paid to Polkadot for this Region, or <code>None</code> if …\nThe amount paid to Polkadot for this Region, or <code>None</code> if …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nSplit a Bulk Coretime Region into two non-overlapping …\nSplit a Bulk Coretime Region into two non-overlapping …\nThe identity of the contributor.\nThe identity of the contributor.\nPlace a Bulk Coretime Region into the Instantaneous …\nPlace a Bulk Coretime Region into the Instantaneous …\nThe price for which the next renewal can be made.\nThe price for which the next renewal can be made.\nThe total change of the portion of the pool supplied by …\nThe total amount of Coretime (measured in Core Mask Bits …\nThe total amount of Coretime (measured in Core Mask Bits …\nThe current size of the Instantaneous Coretime Pool, …\nPurchase Bulk Coretime in the ongoing Sale.\nPurchase Bulk Coretime in the ongoing Sale.\nPurchase credit for use in the Instantaneous Coretime Pool.\nPurchase credit for use in the Instantaneous Coretime Pool.\nThe first timeslice of the Regions which are being sold in …\nThe first timeslice of the Regions which are being sold in …\nThe timeslice on which the Regions which are being sold in …\nThe timeslice on which the Regions which are being sold in …\nThe length in timeslices of Regions which are up for sale …\nThe length in timeslices of Regions which are up for sale …\nRemove an assignment from the Workplan.\nRemove an assignment from the Workplan.\nRemove a lease.\nRemove a lease.\nRenew Bulk Coretime in the ongoing Sale or its prior …\nRenew Bulk Coretime in the ongoing Sale or its prior …\nThe amount by which the renewal price increases each sale …\nThe amount by which the renewal price increases each sale …\nRequests the Relay-chain to alter the number of …\nRequest a change to the number of cores available for …\nRequest a change to the number of cores available for …\nRequests that the Relay-chain send a <code>notify_revenue</code> …\nReserve a core for a workload.\nReserve a core for a workload.\nRuntime API definition for the FRAME Broker pallet.\nThe relay block number at which the sale will/did start.\nThe relay block number at which the sale will/did start.\nThe price at which cores have been sold out.\nThe price at which the last core was sold.\nThe price at which cores have been sold out.\nReserve a core for a single task workload for a limited …\nReserve a core for a single task workload for a limited …\nBegin the Bulk Coretime sales rotation.\nBegin the Bulk Coretime sales rotation.\nThe total change of the portion of the pool supplied by …\nThe total amount of Coretime (measured in Core Mask Bits …\nThe total amount of Coretime (measured in Core Mask Bits …\nThe current amount of the Instantaneous Coretime Pool …\nPrice the controller is optimizing for.\nThe task which the lease is for.\nThe task assigned to the core. We keep track of it so we …\nTransfer a Bulk Coretime Region to a new owner.\nTransfer a Bulk Coretime Region to a new owner.\nCancel a reservation for a workload.\nCancel a reservation for a workload.\nThe height of the Relay-chain at the time the revenue …\nThe timeslice until the lease is valid.\nThe height of the Relay-chain at the time the revenue …\nAutogenerated weights for <code>pallet_broker</code>\nThe point in time that the renewable workload on <code>core</code> ends …\nThe amount which was claimed at this timeslice.\nThe total amount of revenue claimed and paid.\nThe amount of credit purchased.\nThe workload to be done on the Core.\nThe time at which the workload would recommence of this …\nThe time at which the <code>workload</code> will begin on the <code>core</code>.\nThe Relay-chain account to which the credit will be made.\nThe core whose workload can be renewed.\nThe index of the core on which the renewed <code>workload</code> has …\nThe index of the Core which has been assigned.\nThe core whose workload is no longer available to be …\nThe core for which the renewal was enabled.\nThe core for which the renewal was disabled.\nThe core for which the renewal failed.\nThe number of cores requested.\nThe new number of cores available for scheduling.\nThe maximum number of cores which this pallet will attempt …\nNumber of cores which are/have been offered for sale.\nThe duration of the Region.\nThe number of timeslices for which this <code>workload</code> is newly …\nThe duration of the Region.\nThe duration of the assignment.\nThe duration of the Region.\nThe duration of the Region.\nThe price of Bulk Coretime after the Leadin Period.\nThe number of cores we want to sell, ideally.\nThe index of the reservation.\nThe index of the reservation which was cancelled.\nThe length in relay chain blocks of the Leadin Period …\nThe maximum number of timeslices which should be searched …\nThe new Regions into which it became.\nThe new Regions into which it became.\nThe next region which should be claimed for the …\nThe index of the core on which the <code>workload</code> was previously …\nThe old owner of the Region.\nThe Region which was split.\nThe Region which was interlaced.\nThe new owner of the Region.\nThe account which was supposed to pay for renewal.\nThe price paid for this Region.\nThe price at which the workload can be renewed.\nThe price paid for this renewal.\nThe nominal price of an Region of Bulk Coretime.\nThe total amount of revenue remaining to be claimed.\nThe amount of privately contributed Coretime to the …\nThe region to be claimed for.\nThe first timeslice of the Regions which are being sold in …\nThe timeslice on which the Regions which are being sold in …\nThe identity of the Region.\nThe Region which has been transferred.\nThe Region which was assigned.\nThe Region which was removed from the workplan.\nThe Region which was added to the Instantaneous Coretime …\nThe Region which no longer exists.\nThe Region whose contribution is no longer exists.\nThe Region which has been force-removed from the pool.\nThe amount of revenue the system has taken.\nThe amount of revenue which was ignored.\nThe relay block number at which the sale will/did start.\nThe price of Bulk Coretime at the beginning of the Leadin …\nThe amount of revenue the Polkadot System has already …\nThe amount of Coretime contributed to the Instantaneous …\nThe task to which the Region was assigned.\nThe task to which a core will be assigned.\nThe task to which a core was assigned.\nThe task to which a core was assigned.\nThe task for which the renewal was enabled.\nThe task for which the renewal was disabled.\nThe timeslice contained in the sale period after which …\nThe timeslice at which the task will no longer be …\nThe timeslice whose claim is being processed.\nThe timeslice at which the region was force-removed.\nThe timeslice whose history has been initialized.\nThe timeslice whose history is no longer available.\nThe timeslice whose history is was ignored.\nThe timeslice whose history is available.\nThe Relay-chain block at which this assignment should take …\nThe timeslice whose renewal is no longer available.\nThe identity of the purchaser.\nThe identity of the renewer.\nThe account to whom revenue has been paid.\nThe account which purchased the credit.\nThe actual workload which can be renewed.\nThe workload which was renewed.\nThe workload of the reservation.\nThe workload of the now cancelled reservation.\nMigrate the pallet storage from <code>0</code> to <code>1</code>.\nConverts parachain block length into equivalent relay …\nConverts absolute value of parachain block number to relay …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe origin test needed for administrating this pallet.\nThe lease expiry time has already passed.\nA Region has been assigned to a particular task.\nAttempted to force remove an assignment that doesn’t …\nAn assignment has been removed from the workplan.\nFailed to auto-renew a core, likely due to the payer …\nThe auto-renewal limit has been reached upon renewing …\nAttempted to disable auto-renewal for a core that didn’t …\nKeeping track of cores which have auto-renewal enabled.\nContains a variant per dispatchable extrinsic that this …\nSome historical Instantaneous Core Pool Revenue is ready …\nThe pivot mask for the interlacing is complete (and …\nConfiguration trait of this pallet.\nThe current configuration of this pallet.\nSome historical Instantaneous Core Pool contribution …\nReversible conversion from local balance to Relay-chain …\nA Core has been assigned to one or more tasks and/or the …\nThe number of cores available for scheduling has changed.\nReceived core count change from the relay chain.\nA new number of cores has been requested.\nRelay chain’s Coretime API used to interact with and …\nThe workplan of the pallet’s state is invalid. This …\nNeeded to prevent spam attacks.The amount of credits the …\nSome Instantaneous Coretime Pool credit has been purchased.\nCurrency used to pay for Coretime.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe pivot mask for the interlacing is not contained within …\nCan be used to configure the genesis state of this pallet.\nSome historical Instantaneous Core Pool payment record has …\nSome historical Instantaneous Core Pool payment record has …\nSome historical Instantaneous Core Pool payment record has …\nThe workload assigned for renewal is incomplete. This is …\nRecord of a single contribution to the Instantaneous …\nTotal InstaPool rewards for each Timeslice and the number …\nRecord of Coretime entering or leaving the Instantaneous …\nA Region has been converted into two overlapping Regions …\nThe configuration could not be applied because it is …\nA lease is about to end.\nThe lease does not exist.\nA lease has been removed.\nA new lease has been created.\nThe Polkadot Core legacy leases.\nGiven that we are performing all auto-renewals in a single …\nMaximum number of legacy leases.\nMaximum number of system cores.\nThe smallest amount of credits a user can purchase.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe revenue must be claimed for 1 or more timeslices.\nThe history item does not exist.\nThe caller doesn’t have the permission to enable or …\nThere is no sale happening currently.\nOnly cores which are assigned to a task can be …\nInvalid attempt to renew.\nThe owner of the region is not the origin.\nThere is no work to be done.\nWhat to do with any revenues collected from the sale of …\nThe price limit is exceeded.\nThe <code>Pallet</code> struct, the main type that implements traits …\nIdentifier from which the internal Pot is generated.\nA Region has been split into two non-overlapping Regions.\nThe pivot point of the partition at the beginning of the …\nThe pivot point of the partition at or after the end of …\nA Region has been added to the Instantaneous Coretime Pool.\nSome historical Instantaneous Core Pool payment record has …\nRecords of potential renewals.\nThe algorithm to determine the next price on the basis of …\nA Region of Bulk Coretime has been purchased.\nA Region has been dropped due to being out of date.\nA region has been force-removed from the pool. This is …\nThe current (unassigned or provisionally assigend) Regions.\nThe workload of a core has become renewable.\nA workload has been renewed.\nA reservation for a workload has been cancelled.\nThere is a new reservation for a workload.\nThe Polkadot Core reservations (generally tasked with the …\nThe act of claiming revenue has begun.\nA particular timeslice has a non-zero claim.\nA revenue claim has (possibly only in part) been paid.\nReceived revenue info from the relay chain.\nThe details of the current sale, including its properties …\nA new sale has been initialized.\nThe sale rotation has been started and a new sale is …\nThe sale limit has been reached.\nFailed to get the sovereign account of a task.\nType used for getting the associated account of a task. …\nThe current status of miscellaneous subsystems of this …\nAn item cannot be dropped because it is still valid.\nNumber of Relay-chain blocks per timeslice.\nThe purchase cannot happen yet as the sale period is yet …\nWe reached the limit for auto-renewals.\nThe maximum amount of leases has already been reached.\nThe maximum amount of reservations has already been …\nOwnership of a Region has been transferred.\nThere are no cores available.\nThis pallet has not yet been initialized.\nThe identified contribution to the Instantaneous Core Pool …\nThe given region identity is not known.\nThe renewal record cannot be found.\nNo reservation of the given index exists.\nThe revenue for the Instantaneous Core Sales of this …\nThe pivot mask for the interlacing is void (and therefore …\nWeight information for all calls of this pallet.\nThe current workload of each core. This gets updated with …\nThe work we plan on having each core do at a particular …\nThe renewal operation is not valid at the current time (it …\nAssign a Bulk Coretime Region to a task.\nClaim the revenue owed from inclusion in the Instantaneous …\nConfigure the pallet.\nExtrinsic for disabling auto renewal.\nDrop an expired Instantaneous Pool Contribution record …\nDrop an expired Instantaneous Pool History record from the …\nDrop an expired Region from the chain.\nDrop an expired Allowed Renewal record from the chain.\nExtrinsic for enabling auto renewal.\nReserve a core for a workload immediately.\nSplit a Bulk Coretime Region into two wholly-overlapping …\nSplit a Bulk Coretime Region into two non-overlapping …\nPlace a Bulk Coretime Region into the Instantaneous …\nPurchase Bulk Coretime in the ongoing Sale.\nPurchase credit for use in the Instantaneous Coretime Pool.\nRemove an assignment from the Workplan.\nRemove a lease.\nRenew Bulk Coretime in the ongoing Sale or its prior …\nRequest a change to the number of cores available for …\nReserve a core for a workload.\nReserve a core for a single task workload for a limited …\nBegin the Bulk Coretime sales rotation.\nTransfer a Bulk Coretime Region to a new owner.\nCancel a reservation for a workload.\nThe amount which was claimed at this timeslice.\nThe total amount of revenue claimed and paid.\nThe amount of credit purchased.\nThe workload to be done on the Core.\nThe time at which the workload would recommence of this …\nThe time at which the <code>workload</code> will begin on the <code>core</code>.\nThe Relay-chain account to which the credit will be made.\nThe core whose workload can be renewed.\nThe index of the core on which the renewed <code>workload</code> has …\nThe index of the Core which has been assigned.\nThe core whose workload is no longer available to be …\nThe core for which the renewal was enabled.\nThe core for which the renewal was disabled.\nThe core for which the renewal failed.\nThe number of cores requested.\nThe new number of cores available for scheduling.\nThe maximum number of cores which this pallet will attempt …\nNumber of cores which are/have been offered for sale.\nThe duration of the Region.\nThe number of timeslices for which this <code>workload</code> is newly …\nThe duration of the Region.\nThe duration of the assignment.\nThe duration of the Region.\nThe duration of the Region.\nThe price of Bulk Coretime after the Leadin Period.\nThe number of cores we want to sell, ideally.\nThe index of the reservation.\nThe index of the reservation which was cancelled.\nThe length in relay chain blocks of the Leadin Period …\nThe maximum number of timeslices which should be searched …\nThe new Regions into which it became.\nThe new Regions into which it became.\nThe next region which should be claimed for the …\nThe index of the core on which the <code>workload</code> was previously …\nThe old owner of the Region.\nThe Region which was split.\nThe Region which was interlaced.\nThe new owner of the Region.\nThe account which was supposed to pay for renewal.\nThe price paid for this Region.\nThe price at which the workload can be renewed.\nThe price paid for this renewal.\nThe nominal price of an Region of Bulk Coretime.\nThe total amount of revenue remaining to be claimed.\nThe amount of privately contributed Coretime to the …\nThe region to be claimed for.\nThe first timeslice of the Regions which are being sold in …\nThe timeslice on which the Regions which are being sold in …\nThe identity of the Region.\nThe Region which has been transferred.\nThe Region which was assigned.\nThe Region which was removed from the workplan.\nThe Region which was added to the Instantaneous Coretime …\nThe Region which no longer exists.\nThe Region whose contribution is no longer exists.\nThe Region which has been force-removed from the pool.\nThe amount of revenue the system has taken.\nThe amount of revenue which was ignored.\nThe relay block number at which the sale will/did start.\nThe price of Bulk Coretime at the beginning of the Leadin …\nThe amount of revenue the Polkadot System has already …\nThe amount of Coretime contributed to the Instantaneous …\nThe task to which the Region was assigned.\nThe task to which a core will be assigned.\nThe task to which a core was assigned.\nThe task to which a core was assigned.\nThe task for which the renewal was enabled.\nThe task for which the renewal was disabled.\nThe timeslice contained in the sale period after which …\nThe timeslice at which the task will no longer be …\nThe timeslice whose claim is being processed.\nThe timeslice at which the region was force-removed.\nThe timeslice whose history has been initialized.\nThe timeslice whose history is no longer available.\nThe timeslice whose history is was ignored.\nThe timeslice whose history is available.\nThe Relay-chain block at which this assignment should take …\nThe timeslice whose renewal is no longer available.\nThe identity of the purchaser.\nThe identity of the renewer.\nThe account to whom revenue has been paid.\nThe account which purchased the credit.\nThe actual workload which can be renewed.\nThe workload which was renewed.\nThe workload of the reservation.\nThe workload of the now cancelled reservation.\nIf there is an ongoing sale returns the current price of a …\nWeights for <code>pallet_broker</code> using the Substrate node and …\nWeight functions needed for <code>pallet_broker</code>.\nStorage: <code>Broker::Configuration</code> (r:1 w:0) Proof: …\nStorage: <code>Broker::InstaPoolContribution</code> (r:1 w:1) Proof: …\nStorage: <code>Broker::Configuration</code> (r:0 w:1) Proof: …\nStorage: <code>Broker::AutoRenewals</code> (r:1 w:1) Proof: …\nStorage: <code>Broker::Status</code> (r:1 w:1) Proof: <code>Broker::Status</code> (…\nStorage: <code>Broker::Configuration</code> (r:1 w:0) Proof: …\nStorage: <code>Broker::Configuration</code> (r:1 w:0) Proof: …\nStorage: <code>Broker::Status</code> (r:1 w:0) Proof: <code>Broker::Status</code> (…\nStorage: <code>Broker::Status</code> (r:1 w:0) Proof: <code>Broker::Status</code> (…\nStorage: <code>Broker::SaleInfo</code> (r:1 w:1) Proof: <code>Broker::SaleInfo</code>…\nStorage: <code>Broker::SaleInfo</code> (r:1 w:0) Proof: <code>Broker::SaleInfo</code>…\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nStorage: <code>Broker::Regions</code> (r:1 w:3) Proof: <code>Broker::Regions</code> (…\nCalls <code>U::from(self)</code>.\nStorage: <code>Broker::CoreCountInbox</code> (r:0 w:1) Proof: …\nStorage: <code>Broker::RevenueInbox</code> (r:0 w:1) Proof: …\nStorage: <code>Broker::Regions</code> (r:1 w:2) Proof: <code>Broker::Regions</code> (…\nStorage: <code>Broker::Status</code> (r:1 w:0) Proof: <code>Broker::Status</code> (…\nStorage: <code>Broker::CoreCountInbox</code> (r:1 w:1) Proof: …\nStorage: <code>Broker::Workplan</code> (r:1 w:1) Proof: <code>Broker::Workplan</code>…\nStorage: <code>Broker::InstaPoolIo</code> (r:1 w:0) Proof: …\nStorage: <code>Broker::RevenueInbox</code> (r:1 w:1) Proof: …\nStorage: <code>Broker::Status</code> (r:1 w:0) Proof: <code>Broker::Status</code> (…\nStorage: <code>System::Account</code> (r:1 w:1) Proof: <code>System::Account</code> (…\nStorage: <code>Broker::Workplan</code> (r:1 w:1) Proof: <code>Broker::Workplan</code>…\nStorage: <code>Broker::Leases</code> (r:1 w:1) Proof: <code>Broker::Leases</code> (…\nStorage: <code>Broker::Configuration</code> (r:1 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 1000]</code>.\nStorage: <code>Broker::Reservations</code> (r:1 w:1) Proof: …\nStorage: <code>Broker::InstaPoolIo</code> (r:3 w:3) Proof: …\nStorage: <code>Broker::Leases</code> (r:1 w:1) Proof: <code>Broker::Leases</code> (…\nStorage: <code>Broker::Configuration</code> (r:1 w:0) Proof: …\nStorage: <code>Broker::Leases</code> (r:1 w:1) Proof: <code>Broker::Leases</code> (…\nStorage: <code>Broker::Regions</code> (r:1 w:1) Proof: <code>Broker::Regions</code> (…\nStorage: <code>Broker::Reservations</code> (r:1 w:1) Proof: …\nThe child-bounty is active and waiting to be awarded.\nThe child-bounty is added and waiting for curator …\nA child-bounty is added.\nA child-bounty is awarded to a beneficiary.\nContains a variant per dispatchable extrinsic that this …\nA child-bounty is cancelled.\nChild bounties that have been added.\nA child bounty proposal.\nDEPRECATED: Replaced with <code>ParentTotalChildBounties</code> storage …\nThe description of each child-bounty. Indexed by …\nThe status of a child-bounty.\nMinimum value for a child-bounty.\nThe cumulative child-bounty curator fee for each parent …\nA child-bounty is claimed by beneficiary.\nConfiguration trait of this pallet.\nA curator has been proposed by the parent bounty curator. …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe bounty cannot be closed because it has active child …\nThe bounty balance is not enough to add new child-bounty.\nProposer’s balance is too low.\nInvalid bounty fee.\nNo proposal or bounty at that index.\nInvalid bounty value.\nMaximum number of child bounties that can be added to a …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nUser is not the proposer of the bounty.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe parent bounty is not in active state.\nNumber of active child bounties per parent bounty. Map of …\nNumber of total child bounties per parent bounty, …\nA bounty payout is pending. To cancel the bounty, you must …\nThe child-bounty is awarded and waiting to released after …\nThe bounties cannot be claimed/closed because it’s still …\nThe reason given is just too big.\nRequire bounty curator.\nThe overarching event type.\nNumber of child bounties exceeds limit …\nToo many approvals are already queued.\nThe bounty status is unexpected.\nThe mapping of the child bounty ids from storage version <code>V0</code>…\nWeight functions needed for <code>pallet_child_bounties</code>.\nWeight information for extrinsics in this pallet.\nAccept the curator role for the child-bounty.\nAccept the curator role for the child-bounty.\nAdd a new child-bounty.\nAdd a new child-bounty.\nAward child-bounty to a beneficiary.\nAward child-bounty to a beneficiary.\nClean up the storage on a parent bounty removal.\nReturns number of active child bounties for <code>bounty_id</code>\nThe account ID of a child-bounty account.\nReturns cumulative child bounty curator fees for <code>bounty_id</code> …\nClaim the payout from an awarded child-bounty after payout …\nClaim the payout from an awarded child-bounty after payout …\nCancel a proposed or active child-bounty. Child-bounty …\nCancel a proposed or active child-bounty. Child-bounty …\nThe deposit of child-bounty curator.\nThe child bounty curator fee.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>accept_curator</code>.\nCreate a call with the variant <code>add_child_bounty</code>.\nCreate a call with the variant <code>award_child_bounty</code>.\nCreate a call with the variant <code>claim_child_bounty</code>.\nCreate a call with the variant <code>close_child_bounty</code>.\nCreate a call with the variant <code>propose_curator</code>.\nCreate a call with the variant <code>unassign_curator</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe parent of this child-bounty.\nPropose curator for funded child-bounty.\nPropose curator for funded child-bounty.\nThe status of this child-bounty.\nGet the block number used in the treasury pallet.\nUnassign curator from a child-bounty.\nUnassign curator from a child-bounty.\nThe (total) amount that should be paid if this …\nAutogenerated weights for <code>pallet_child_bounties</code>\nThe beneficiary of the child-bounty.\nThe assigned child-bounty curator of this bounty.\nThe curator of this child-bounty.\nThe curator of this child-bounty.\nWhen the child-bounty can be claimed.\nMigrate the pallet storage from <code>0</code> to <code>1</code>.\nCreates a new ids for the child balances based on the …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA child-bounty is added.\nA child-bounty is awarded to a beneficiary.\nContains a variant per dispatchable extrinsic that this …\nA child-bounty is cancelled.\nChild bounties that have been added.\nDEPRECATED: Replaced with <code>ParentTotalChildBounties</code> storage …\nThe description of each child-bounty. Indexed by …\nMinimum value for a child-bounty.\nThe cumulative child-bounty curator fee for each parent …\nA child-bounty is claimed by beneficiary.\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe bounty balance is not enough to add new child-bounty.\nMaximum number of child bounties that can be added to a …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe parent bounty is not in active state.\nNumber of active child bounties per parent bounty. Map of …\nNumber of total child bounties per parent bounty, …\nThe overarching event type.\nNumber of child bounties exceeds limit …\nThe mapping of the child bounty ids from storage version <code>V0</code>…\nWeight information for extrinsics in this pallet.\nAccept the curator role for the child-bounty.\nAdd a new child-bounty.\nAward child-bounty to a beneficiary.\nClaim the payout from an awarded child-bounty after payout …\nCancel a proposed or active child-bounty. Child-bounty …\nPropose curator for funded child-bounty.\nUnassign curator from a child-bounty.\nWeights for <code>pallet_child_bounties</code> using the Substrate node …\nWeight functions needed for <code>pallet_child_bounties</code>.\nStorage: <code>Bounties::Bounties</code> (r:1 w:0) Proof: …\nStorage: <code>ChildBounties::ParentChildBounties</code> (r:1 w:1) …\nStorage: <code>Bounties::Bounties</code> (r:1 w:0) Proof: …\nStorage: <code>ChildBounties::ChildBounties</code> (r:1 w:1) Proof: …\nStorage: <code>Bounties::Bounties</code> (r:1 w:0) Proof: …\nStorage: <code>Bounties::Bounties</code> (r:1 w:0) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Bounties::Bounties</code> (r:1 w:0) Proof: …\nStorage: <code>ChildBounties::ChildBounties</code> (r:1 w:1) Proof: …\nAccount is already a candidate.\nAccount is already an Invulnerable.\nContains a variant per dispatchable extrinsic that this …\nFixed amount to deposit to become a collator.\nA new candidate joined.\nBond of a candidate updated.\nBasic information about a collation candidate.\nThe (community, limited) collation candidates. <code>Candidates</code> …\nA candidate was removed.\nAn account was replaced in the candidate list by another …\nConfiguration trait of this pallet.\nThe currency mechanism.\nNew deposit amount would be below the minimum candidacy …\nDesired number of candidates.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCan be used to configure the genesis state of this pallet.\nThe updated deposit amount is equal to the amount already …\nA convertor from collators id. Since this pallet does not …\nCould not insert in the candidate list.\nDeposit amount is too low to take the target’s slot in …\nAn account was unable to be added to the Invulnerables …\nCannot lower candidacy bond while occupying a future …\nA new Invulnerable was added.\nAn Invulnerable was removed.\nThe invulnerable, permissioned collators. This list must …\nLast block authored by collator.\nMaximum number of candidates that we should have.\nMaximum number of invulnerables.\nMinimum number eligible collators. Should always be …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe candidacy bond was set.\nThe number of desired candidates was set.\nNew Invulnerables were set.\nAccount has no associated validator ID.\nAccount is not a candidate.\nAccount is not an Invulnerable.\nThe <code>Pallet</code> struct, the main type that implements traits …\nAccount Identifier from which the internal Pot is …\nCould not remove from the candidate list.\nOverarching event type.\n<code>TypedGet</code> implementation to get the AccountId of the …\nThe target account to be replaced in the candidate list is …\nLeaving would result in too few candidates.\nThe pallet has too many candidates.\nThere are too many Invulnerables.\nCould not update the candidate list.\nOrigin that can dictate updating parameters of this pallet.\nA stable ID for a validator.\nA conversion from account ID to validator ID.\nValidator ID is not yet registered.\nValidate a user is registered\nThe weight information of this pallet.\nGet a unique, inaccessible account ID from the <code>PotId</code>.\nAdd a new account <code>who</code> to the list of <code>Invulnerables</code> …\nAdd a new account <code>who</code> to the list of <code>Invulnerables</code> …\nAssemble the current set of candidates and invulnerables …\nReserved deposit.\nEnsure the correctness of the state of this pallet.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKicks out candidates that did not produce a block in the …\nDeregister <code>origin</code> as a collator candidate. Note that the …\nDeregister <code>origin</code> as a collator candidate. Note that the …\nA module that is responsible for migration of storage for …\nCreate a call with the variant <code>add_invulnerable</code>.\nCreate a call with the variant <code>leave_intent</code>.\nCreate a call with the variant <code>register_as_candidate</code>.\nCreate a call with the variant <code>remove_invulnerable</code>.\nCreate a call with the variant <code>set_candidacy_bond</code>.\nCreate a call with the variant <code>set_desired_candidates</code>.\nCreate a call with the variant <code>set_invulnerables</code>.\nCreate a call with the variant <code>take_candidate_slot</code>.\nCreate a call with the variant <code>update_bond</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nRegister this account as a collator candidate. The account …\nRegister this account as a collator candidate. The account …\nRemove an account <code>who</code> from the list of <code>Invulnerables</code> …\nRemove an account <code>who</code> from the list of <code>Invulnerables</code> …\nSet the candidacy bond amount.\nSet the candidacy bond amount.\nSet the ideal number of non-invulnerable collators. If …\nSet the ideal number of non-invulnerable collators. If …\nSet the list of invulnerable (fixed) collators. These …\nSet the list of invulnerable (fixed) collators. These …\nThe caller <code>origin</code> replaces a candidate <code>target</code> in the …\nThe caller <code>origin</code> replaces a candidate <code>target</code> in the …\nUpdate the candidacy bond of collator candidate <code>origin</code> to …\nUpdate the candidacy bond of collator candidate <code>origin</code> to …\nAccount identifier.\nVersion 1 Migration This migration ensures that any …\nMigrate to v2. Should have been part of …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\n<code>UncheckedMigrationToV2</code> wrapped in a <code>VersionedMigration</code>, …\nMigrate to V2.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAccount is already a candidate.\nAccount is already an Invulnerable.\nContains a variant per dispatchable extrinsic that this …\nFixed amount to deposit to become a collator.\nA new candidate joined.\nBond of a candidate updated.\nBasic information about a collation candidate.\nThe (community, limited) collation candidates. <code>Candidates</code> …\nA candidate was removed.\nAn account was replaced in the candidate list by another …\nConfiguration trait of this pallet.\nThe currency mechanism.\nNew deposit amount would be below the minimum candidacy …\nDesired number of candidates.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCan be used to configure the genesis state of this pallet.\nThe updated deposit amount is equal to the amount already …\nA convertor from collators id. Since this pallet does not …\nCould not insert in the candidate list.\nDeposit amount is too low to take the target’s slot in …\nAn account was unable to be added to the Invulnerables …\nCannot lower candidacy bond while occupying a future …\nA new Invulnerable was added.\nAn Invulnerable was removed.\nThe invulnerable, permissioned collators. This list must …\nLast block authored by collator.\nMaximum number of candidates that we should have.\nMaximum number of invulnerables.\nMinimum number eligible collators. Should always be …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe candidacy bond was set.\nThe number of desired candidates was set.\nNew Invulnerables were set.\nAccount has no associated validator ID.\nAccount is not a candidate.\nAccount is not an Invulnerable.\nThe <code>Pallet</code> struct, the main type that implements traits …\nAccount Identifier from which the internal Pot is …\nCould not remove from the candidate list.\nOverarching event type.\nThe target account to be replaced in the candidate list is …\nLeaving would result in too few candidates.\nThe pallet has too many candidates.\nThere are too many Invulnerables.\nCould not update the candidate list.\nOrigin that can dictate updating parameters of this pallet.\nA stable ID for a validator.\nA conversion from account ID to validator ID.\nValidator ID is not yet registered.\nValidate a user is registered\nThe weight information of this pallet.\nAdd a new account <code>who</code> to the list of <code>Invulnerables</code> …\nReserved deposit.\nDeregister <code>origin</code> as a collator candidate. Note that the …\nRegister this account as a collator candidate. The account …\nRemove an account <code>who</code> from the list of <code>Invulnerables</code> …\nSet the candidacy bond amount.\nSet the ideal number of non-invulnerable collators. If …\nSet the list of invulnerable (fixed) collators. These …\nThe caller <code>origin</code> replaces a candidate <code>target</code> in the …\nUpdate the candidacy bond of collator candidate <code>origin</code> to …\nAccount identifier.\nWeights for pallet_collator_selection using the Substrate …\nStorage: Session NextKeys (r:1 w:0) Proof Skipped: Session …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: CollatorSelection Invulnerables (r:1 w:1) Proof: …\nMembers are already initialized!\nA motion was approved by the required threshold.\nContains a variant per dispatchable extrinsic that this …\nA proposal was closed because its threshold was reached or …\nConfiguration trait of this pallet.\nMechanism to assess the necessity of some cost for …\nConsideration cost created for publishing and storing a …\nDefault voting strategy when a member is inactive.\nDefault vote strategy of this collective.\nOrigin from which a proposal in any status may be …\nA motion was not approved by the required threshold.\nDuplicate proposals not allowed\nDuplicate vote ignored\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA motion was executed; result will be <code>Ok</code> if it returned …\nCan be used to configure the genesis state of this pallet.\nA reason for the pallet placing a hold on funds.\n<code>Instance1</code> to be used for instantiable pallets defined with …\nOrigin from which any malicious proposal may be killed …\nA proposal was killed.\nThe maximum number of members supported by the pallet. …\nThe maximum weight of a dispatch call that can be proposed …\nMaximum number of proposals allowed to be active in …\nIt has been condoned by a single member of the collective.\nIt has been condoned by a single member of the collective.\nA number of members.\nA single member did some action; result will be <code>Ok</code> if it …\nThe current members of the collective. This is stored …\nIt has been condoned by a given number of members of the …\nIt has been condoned by a given number of members of the …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nFirst see if yes vote are over majority of the whole …\nThe time-out for council motions.\nAccount is not a member\nOrigin for the collective pallet.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe prime member that helps determine the default vote …\nPrime account is not a member\nSet the prime member’s vote as the default vote.\nThe runtime call dispatch type.\nProposal is still active.\nSome cost for storing a proposal was burned.\nSome cost for storing a proposal was released.\nProposals so far.\nSimple index type for proposal counting.\nProposal must exist\nActual proposal for a given hash, if it’s current.\nFunds are held for submitting and storing a proposal.\nThe hashes of the active proposals.\nA motion (given hash) has been proposed (by given account) …\nOrigin for the collective module.\nThe runtime event type.\nThe runtime origin type.\nOrigin allowed to set collective members\nThe close call was made too early, before the end of the …\nThere can only be a maximum of <code>MaxProposals</code> active …\nA motion (given hash) has been voted on by given account, …\nInfo for keeping track of a motion being voted on.\nVotes on a given proposal, if it is ongoing.\nWeight functions needed for <code>pallet_collective</code>.\nWeight information for extrinsics in this pallet.\nMismatched index\nThe given length bound for the proposal was too low.\nThe given weight bound for the proposal was too low.\nDummy to manage the fact we have instancing.\nDummy to manage the fact we have instancing.\nUpdate the members of the collective. Votes are updated …\nClose a vote that is either approved, disapproved or whose …\nClose a vote that is either approved, disapproved or whose …\nGet the default voting strategy, given:\nTypes implementing various cost strategies for a given …\nDisapprove a proposal, close, and remove it from the …\nDisapprove a proposal, close, and remove it from the …\nClose a vote that is either approved, disapproved or whose …\nRemoves a proposal from the pallet, and deposit the …\nExecute immediately when adding a new proposal.\nAdd a new proposal to be voted.\nAdd an aye or nay vote for the member to the given …\nEnsure that the origin <code>o</code> represents at least <code>n</code> members. …\nDispatch a proposal from a member using the <code>Member</code> origin.\nDispatch a proposal from a member using the <code>Member</code> origin.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck whether <code>who</code> is a member of the collective.\nDisapprove the proposal and burn the cost held for storing …\nDisapprove the proposal and burn the cost held for storing …\nCreate a call with the variant <code>close</code>.\nCreate a call with the variant <code>disapprove_proposal</code>.\nCreate a call with the variant <code>execute</code>.\nCreate a call with the variant <code>kill</code>.\nCreate a call with the variant <code>propose</code>.\nCreate a call with the variant <code>release_proposal_cost</code>.\nCreate a call with the variant <code>set_members</code>.\nCreate a call with the variant <code>vote</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAdd a new proposal to either be voted on or executed …\nAdd a new proposal to either be voted on or executed …\nRelease the cost held for storing a proposal once the …\nRelease the cost held for storing a proposal once the …\nSet the collective’s membership.\nSet the collective’s membership.\nAdd an aye or nay vote for the sender to the given …\nAdd an aye or nay vote for the sender to the given …\nAutogenerated weights for <code>pallet_collective</code>\nConstant deposit amount regardless of current proposal …\nDefines <code>Delay</code> for supplied <code>Step</code> implementing <code>Convert</code> trait.\nGeometrically increasing. f(x) = a * r^x, a = <code>Base</code>, x = …\nLinear increasing with some offset. f(x) = ax + b, a = …\nRounds a <code>Deposit</code> result with <code>Precision</code>. Particularly …\nDefines <code>Period</code> for supplied <code>Step</code> implementing <code>Convert</code> …\nDefines <code>Ceil</code> for supplied <code>Step</code> implementing <code>Convert</code> trait.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nVersion 4.\nMigrate the entire storage of this pallet to a new prefix.\nSome checks for after migration. This can be linked to …\nSome checks prior to migration. This can be linked to …\nMembers are already initialized!\nA motion was approved by the required threshold.\nContains a variant per dispatchable extrinsic that this …\nA proposal was closed because its threshold was reached or …\nConfiguration trait of this pallet.\nMechanism to assess the necessity of some cost for …\nConsideration cost created for publishing and storing a …\nDefault vote strategy of this collective.\nOrigin from which a proposal in any status may be …\nA motion was not approved by the required threshold.\nDuplicate proposals not allowed\nDuplicate vote ignored\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA motion was executed; result will be <code>Ok</code> if it returned …\nCan be used to configure the genesis state of this pallet.\nA reason for the pallet placing a hold on funds.\n<code>Instance1</code> to be used for instantiable pallets defined with …\nOrigin from which any malicious proposal may be killed …\nA proposal was killed.\nThe maximum number of members supported by the pallet. …\nThe maximum weight of a dispatch call that can be proposed …\nMaximum number of proposals allowed to be active in …\nIt has been condoned by a single member of the collective.\nA single member did some action; result will be <code>Ok</code> if it …\nThe current members of the collective. This is stored …\nIt has been condoned by a given number of members of the …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe time-out for council motions.\nAccount is not a member\nOrigin for the collective pallet.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe prime member that helps determine the default vote …\nPrime account is not a member\nThe runtime call dispatch type.\nProposal is still active.\nSome cost for storing a proposal was burned.\nSome cost for storing a proposal was released.\nProposals so far.\nProposal must exist\nActual proposal for a given hash, if it’s current.\nFunds are held for submitting and storing a proposal.\nThe hashes of the active proposals.\nA motion (given hash) has been proposed (by given account) …\nThe runtime event type.\nThe runtime origin type.\nOrigin allowed to set collective members\nThe close call was made too early, before the end of the …\nThere can only be a maximum of <code>MaxProposals</code> active …\nA motion (given hash) has been voted on by given account, …\nVotes on a given proposal, if it is ongoing.\nWeight information for extrinsics in this pallet.\nMismatched index\nThe given length bound for the proposal was too low.\nThe given weight bound for the proposal was too low.\nDummy to manage the fact we have instancing.\nClose a vote that is either approved, disapproved or whose …\nDisapprove a proposal, close, and remove it from the …\nDispatch a proposal from a member using the <code>Member</code> origin.\nDisapprove the proposal and burn the cost held for storing …\nAdd a new proposal to either be voted on or executed …\nRelease the cost held for storing a proposal once the …\nSet the collective’s membership.\nAdd an aye or nay vote for the sender to the given …\nWeights for <code>pallet_collective</code> using the Substrate node and …\nWeight functions needed for <code>pallet_collective</code>.\nStorage: <code>Council::Voting</code> (r:1 w:1) Proof: <code>Council::Voting</code> (…\nStorage: <code>Council::Voting</code> (r:1 w:1) Proof: <code>Council::Voting</code> (…\nStorage: <code>Council::Voting</code> (r:1 w:1) Proof: <code>Council::Voting</code> (…\nStorage: <code>Council::Voting</code> (r:1 w:1) Proof: <code>Council::Voting</code> (…\nStorage: <code>Council::Proposals</code> (r:1 w:1) Proof: …\nStorage: <code>Council::Members</code> (r:1 w:0) Proof: <code>Council::Members</code>…\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Council::ProposalOf</code> (r:1 w:1) Proof: …\nStorage: <code>Council::Members</code> (r:1 w:0) Proof: <code>Council::Members</code>…\nStorage: <code>Council::Members</code> (r:1 w:0) Proof: <code>Council::Members</code>…\nStorage: <code>Council::ProposalOf</code> (r:1 w:0) Proof: …\nStorage: <code>Council::Members</code> (r:1 w:1) Proof: <code>Council::Members</code>…\nStorage: <code>Council::Members</code> (r:1 w:0) Proof: <code>Council::Members</code>…\nA new announcement has been made.\nDefault lifetime for an announcement before it expires.\nThe origin to control the collective announcements.\nAn on-chain announcement has been removed.\nThe collective announcements.\nContains a variant per dispatchable extrinsic that this …\nThe collective charter.\nThe origin to control the collective charter.\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\n<code>Instance1</code> to be used for instantiable pallets defined with …\nCannot expire in the past.\nMaximum number of announcements in the storage.\nThe announcement is not found.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nA new charter has been set.\nIPFS compatible CID.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe overarching event type.\nNumber of announcements exceeds <code>MaxAnnouncementsCount</code>.\nWeights information needed for the pallet.\nWeight information needed for the pallet.\nReturns the weight of the announce extrinsic.\nPublish an announcement.\nPublish an announcement.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>announce</code>.\nCreate a call with the variant <code>remove_announcement</code>.\nCreate a call with the variant <code>set_charter</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nReturns the weight of the remove_announcement extrinsic.\nRemove an announcement.\nRemove an announcement.\nReturns the weight of the set_charter extrinsic.\nSet the collective charter.\nSet the collective charter.\nThe pallet weight info trait and its unit implementation.\nA new announcement has been made.\nDefault lifetime for an announcement before it expires.\nThe origin to control the collective announcements.\nAn on-chain announcement has been removed.\nThe collective announcements.\nContains a variant per dispatchable extrinsic that this …\nThe collective charter.\nThe origin to control the collective charter.\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\n<code>Instance1</code> to be used for instantiable pallets defined with …\nCannot expire in the past.\nMaximum number of announcements in the storage.\nThe announcement is not found.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nA new charter has been set.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe overarching event type.\nNumber of announcements exceeds <code>MaxAnnouncementsCount</code>.\nWeight information needed for the pallet.\nPublish an announcement.\nRemove an announcement.\nSet the collective charter.\nWeights information needed for the pallet.\nReturns the weight of the announce extrinsic.\nReturns the weight of the remove_announcement extrinsic.\nReturns the weight of the set_charter extrinsic.\nProvides the contract address generation method.\nThe address generator used to generate the addresses of …\nThe address generator used to generate the addresses of …\nDefines the current version of the HostFn APIs. This is …\nThe version of the HostFn APIs that are available in the …\nThe version of the HostFn APIs that are available in the …\nContains a variant per dispatchable extrinsic that this …\nFilter that is applied to calls dispatched by contracts.\nFilter that is applied to calls dispatched by contracts.\nThe type of <code>CallSpan</code> that is created by this trait.\nThe type of the call stack determines the maximum nesting …\nA contract was called either by a plain account or another …\nCan not add a delegate dependency to the code hash of the …\nType that allows the runtime authors to add new host …\nType that allows the runtime authors to add new host …\nThe transaction increased storage consumption.\nReference to an existing code hash or a new wasm module.\nThe percentage of the storage deposit that should be held …\nThe percentage of the storage deposit that should be held …\nCode removal was denied because the code is still in use …\nNo code info could be found at the supplied code hash.\nNo code could be found at the supplied code hash.\nThe contract’s code was found to be invalid during …\nA code with the specified hash was removed.\nCode with the specified hash has been stored.\nThe code supplied to <code>instantiate_with_code</code> exceeds the …\nThe Pallet has reserved it for storing code on-chain.\nResult type of a <code>bare_code_upload</code> call.\nThe result of successfully uploading a contract.\nDetermines whether events should be collected during …\nConfiguration trait of this pallet.\nThe possible errors that can happen querying the storage …\nA contract’s code was updated.\nA custom event emitted by the contract.\nResult type of a <code>bare_call</code> call as well as …\nResult type of a <code>bare_instantiate</code> call as well as …\nNo contract was found at the specified address.\nResult type of a <code>bare_call</code> or <code>bare_instantiate</code> call as …\nThe contract ran to completion but decided to revert its …\nContract trapped during execution.\nThe API used to dry-run contract interactions.\nThe fungible in which fees are paid and contract balances …\nNote\nNote\nDetermines whether debug messages will be collected.\nInput passed to a contract API function failed to decode …\nDefault address generator.\nBased on <code>Config</code>. Auto-generated by …\nFallback value to limit the storage deposit if it’s not …\nFallback value to limit the storage deposit if it’s not …\nA contract delegate called a code hash.\nThe contract already depends on the given delegate …\nThe dependency was not found in the contract’s delegate …\nThe amount of balance a caller has to pay for each byte of …\nThe amount of balance a caller has to pay for each byte of …\nThe amount of balance a caller has to pay for each storage …\nThe amount of balance a caller has to pay for each storage …\nDefines the required determinism level of a wasm blob when …\nThe given address doesn’t point to a contract.\nA contract with the same AccountId already exists.\nThe execution should be deterministic and hence no …\nList of all runtime configurable types that are used in …\nType that bundles together all the runtime configurable …\nType that bundles together all the runtime configurable …\nWrapper around <code>PhantomData</code> to prevent it being filtered by …\nContains the error value\nContains the error value\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nOutput of a contract call or instantiation which ran to …\nThe code hash of an on-chain wasm blob.\nRepresents one entry in the call stack.\nResult type of a <code>get_storage</code> call.\nA reason for the pallet contracts placing a hold on funds.\nAn indeterministic code was used in a context where this …\n<code>seal_call</code> forwarded this contracts input. It therefore is …\nOrigin allowed to instantiate code.\nOrigin allowed to instantiate code.\nThe result of a successful contract instantiation.\nContract deployed by address at the specified address.\nGas metering of Wasm executed instructions is being done …\nInvalid combination of flags supplied to <code>seal_call</code> or …\nInvalid schedule supplied, e.g. with zero weight of a …\nStorage key cannot be decoded from the provided input data.\nDescribes the upper limits on various metrics.\nPerforming a call was denied because the calling depth …\nThe maximum length of a contract code in bytes.\nThe maximum length of a contract code in bytes.\nThe maximum length of the debug buffer in bytes.\nThe maximum length of the debug buffer in bytes.\nThe maximum number of delegate_dependencies that a …\nThe maximum number of delegate_dependencies that a …\nThe contract has reached its maximum number of delegate …\nThe maximum allowable length in bytes for storage keys.\nThe maximum allowable length in bytes for storage keys.\nThe maximum size of the transient storage in bytes. This …\nThe maximum size of the transient storage in bytes. This …\nDefines a sequence of migrations.\nPerforms all necessary migrations based on <code>StorageVersion</code>.\nStorage is migrating. Try again later.\nA pending migration needs to complete before the extrinsic …\nThe sequence of migration steps that will be applied …\nThe sequence of migration steps that will be applied …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe chain does not provide a chain extension. Calling the …\nMigrate dispatch call was attempted but no migration was …\nContains the success value\nContains the success value\nThe type of origins supported by the contracts pallet.\nA buffer outside of sandbox memory was passed to a …\nThe executed contract exhausted its gas limit.\nCan not add more data to transient storage.\nThe output buffer supplied to a contract API call was too …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe subject passed to <code>seal_random</code> exceeds the limit.\nThe generator used to supply randomness to contracts …\nThe generator used to supply randomness to contracts …\nA call tried to invoke a contract that is flagged as …\nThe transaction reduced storage consumption.\nAllow calling or uploading an indeterministic code.\nThe overarching call type.\nThe overarching call type.\nThe overarching event type.\nThe overarching event type.\nOverarching hold reason.\nOverarching hold reason.\nDefinition of the cost schedule and other …\nCost schedule and limits.\nSkip event collection.\nSkip collection of debug messages.\nA contract attempted to invoke a state modifying API while …\nThe amount of balance that was either charged or refunded …\nMore storage was created than allowed by the storage …\nOrigin doesn’t have enough balance to pay the required …\nThe Pallet has reserved it for storage deposit.\nSome funds have been transferred and held as storage …\nSome storage deposit funds have been transferred and …\nContract has been removed.\nA contract self destructed in its constructor.\nTermination of a contract is not allowed while the …\nThe time implementation used to supply timestamps to …\nThe time implementation used to supply timestamps to …\nThe amount of topics passed to <code>seal_deposit_events</code> exceeds …\nDefines methods to capture contract calls, enabling …\nPerforming the requested transfer failed. Probably because …\nCollect events.\nCollect debug messages.\nMake contract callable functions marked as <code>#[unstable]</code> …\nMake contract callable functions marked as <code>#[unstable]</code> …\nA wasm module as raw bytes.\nOrigin allowed to upload code.\nOrigin allowed to upload code.\nReturns the range of versions that this migrations …\nThe size defined in <code>T::MaxValueSize</code> was exceeded.\nWeight functions needed for <code>pallet_contracts</code>.\nDescribes the weights of the dispatchables of this module …\nDescribes the weights of the dispatchables of this module …\nUsed to answer contracts’ queries regarding the current …\nUsed to answer contracts’ queries regarding the current …\nFailed to decode the XCM program.\nA type that exposes XCM APIs, allowing contracts to …\nA type that exposes XCM APIs, allowing contracts to …\nThe type parameter is used in the default implementation.\nReturns the AccountId of a Signed Origin or an error if …\nThe account id of the new contract.\nIf the amount of deposit (this type) is constrained by a …\nPerform a call to a specified contract.\nInstantiate a new contract.\nUpload new code without instantiating a contract from it.\nBase instruction <code>ref_time</code> Weight. Should match to wasmi’…\nMakes a call to an account, optionally transferring some …\nPerform a call from a specified account to a given …\nMakes a call to an account, optionally transferring some …\nDeprecated version if <code>Self::call</code> for use in an in-storage …\nDeprecated version if <code>Self::call</code> for use in an in-storage …\nA mechanism for runtime authors to augment the …\nReturns how much balance is charged or <code>0</code> in case of a …\nReturns the code hash of the contract specified by <code>account</code> …\nThe key under which the new code is stored.\nThe address of a contract based on the given instantiate …\nFormula: …\nDetermine the address of a contract.\nBuffer passed along by <code>seal_return</code>. Empty when <code>seal_return</code> …\nAn optional debug message. This message is only filled …\nAn optional debug message. This message is only filled …\nAn optional debug message. This message is only filled …\nWe execute 6 different instructions therefore we have to …\nThe deposit that was reserved at the caller. Is zero when …\nThe contract did revert all storage changes.\nThe additional ref_time added to the <code>deposit_event</code> host …\nThe maximum number of topics supported by an event.\nThe events that were emitted during execution. It is an …\nThe events that were emitted during execution. It is an …\nThe events that were emitted during execution. It is an …\nFlags passed along by <code>seal_return</code>. Empty when <code>seal_return</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new Signed Caller from an AccountId.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreates a new Origin from a <code>RuntimeOrigin</code>.\nHow much weight was consumed during execution.\nHow much weight was consumed during execution.\nHow much weight was consumed during execution.\nHow much weight is required as gas limit in order to …\nHow much weight is required as gas limit in order to …\nHow much weight is required as gas limit in order to …\nQuery storage of a specified contract under a specified …\nQuery a given storage key in a given contract.\nInstantiates a contract from a previously deployed wasm …\nInstantiate a new contract.\nInstantiates a contract from a previously deployed wasm …\nDeprecated version if <code>Self::instantiate</code> for use in an …\nDeprecated version if <code>Self::instantiate</code> for use in an …\nInstantiates a new contract from the supplied <code>code</code> …\nInstantiates a new contract from the supplied <code>code</code> …\nDeprecated version if <code>Self::instantiate_with_code</code> for use …\nDeprecated version if <code>Self::instantiate_with_code</code> for use …\nThe weights for individual wasm instructions.\nVerify that the migration step fits into <code>Cursor</code>, and that …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether migrating from <code>in_storage</code> to <code>target</code> is …\nDescribes the upper limits on various metrics.\nThe maximum memory size in bytes that a contract can …\nMaximum number of memory pages allowed for a contract.\nWhen a migration is in progress, this dispatchable can be …\nWhen a migration is in progress, this dispatchable can be …\nMulti-block Migration framework for pallet-contracts.\nReturns the default cursor for the given version.\nCreates a new call span to encompass the upcoming contract …\nCreate a call with the variant <code>call</code>.\nCreate a call with the variant <code>call_old_weight</code>.\nCreate a call with the variant <code>instantiate</code>.\nCreate a call with the variant <code>instantiate_old_weight</code>.\nCreate a call with the variant <code>instantiate_with_code</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>migrate</code>.\nCreate a call with the variant <code>remove_code</code>.\nCreate a call with the variant <code>set_code</code>.\nCreate a call with the variant <code>upload_code</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe maximum size of a storage value and event payload in …\nReturns the reference time per engine fuel.\nRemove the code stored under <code>code_hash</code> and refund the …\nRemove the code stored under <code>code_hash</code> and refund the …\nThe execution result of the wasm code.\nThe execution result of the wasm code.\nThe execution result of the wasm code.\nThe output of the called constructor.\nThe maximum node runtime memory. This is for integrity …\nThis is essentially a saturating signed add.\nThis is essentially a saturating signed sub.\nPrivileged function that changes the code of an existing …\nPrivileged function that changes the code of an existing …\nExecute the migration step until the available weight is …\nHow much balance was paid by the origin into the contract…\nHow much balance was paid by the origin into the contract…\nHow much balance was paid by the origin into the contract…\nThe maximum length of a subject in bytes used for PRNG …\nShared utilities for testing contracts. This is not part …\nUpload new <code>code</code> without instantiating a contract from it.\nUpload new code without instantiating a contract from it.\nUpload new <code>code</code> without instantiating a contract from it.\nThe maximum validator node runtime memory. This is for …\nAutogenerated weights for <code>pallet_contracts</code>\nThe account that received the contracts remaining balance\nThe caller of the <code>contract</code>.\nThe code hash that was delegate called.\nThe contract that was terminated.\nThe contract that emitted the event.\nThe contract that has been updated.\nThe contract that was called.\nThe contract that performed the delegate call and hence in …\nData supplied by the contract. Metadata generated during …\nNew code hash that was set for the contract.\nPrevious code hash of the contract.\nData to be associated with an account (other than …\nThe user account identifier type for the runtime.\nThe address generator used to generate the addresses of …\nThe version of the HostFn APIs that are available in the …\nThe basic call filter to use in Origin. All origins are …\nThe Block type used by the runtime. This is used by …\nMaximum number of block number to block hash mappings to …\nThe maximum length of a block (in bytes).\nBlock &amp; extrinsics weights: base values and limits.\nA state that uses a buffer as input.\nUses a buffer for input and a buffer for output.\nA state that uses a buffer as output.\nFilter that is applied to calls dispatched by contracts.\nThe type of the call stack determines the maximum nesting …\nA trait used to extend the set of contract callable …\nType that allows the runtime authors to add new host …\nThe percentage of the storage deposit that should be held …\nConfiguration trait of this pallet.\nThe chain extensions returns the supplied value to its …\nThe fungible in which fees are paid and contract balances …\nThe weight of runtime database operations the runtime can …\nNote\nFallback value to limit the storage deposit if it’s not …\nThe amount of balance a caller has to pay for each byte of …\nThe amount of balance a caller has to pay for each storage …\nThis type is used to describe a storage change when …\nThe control does <strong>not</strong> return to the calling contract.\nGrants the chain extension access to its parameters and …\nType that bundles together all the runtime configurable …\nContains the error value\nAn interface that provides access to the external …\nWeight information for the transaction extensions of this …\nThe output of the <code>Hashing</code> function.\nThe hashing system (algorithm) being used in the runtime …\nThe extensions globally unique identifier.\nThe initial state of an <code>Environment</code>.\nOrigin allowed to instantiate code.\nConverting trait to take a source type and convert to …\nThe maximum length of a contract code in bytes.\nThe maximum number of consumers allowed on a single …\nThe maximum length of the debug buffer in bytes.\nThe maximum number of delegate_dependencies that a …\nThe maximum allowable length in bytes for storage keys.\nThe maximum size of the transient storage in bytes. This …\nThe sequence of migration steps that will be applied …\nThe migrator that is used to run Multi-Block-Migrations.\nThis stores the number of previous transactions associated …\nContains the success value\nA function that is invoked when an account has been …\nHandler for when a new account has just been created.\nWhat to do if the runtime wants to change the code to …\nA state that uses all arguments as primitive inputs.\nProvides information about the pallet setup in the runtime.\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly before …\nA state that uses primitive inputs.\nA state that uses two arguments as primitive inputs and …\nA state that uses primitive outputs.\nThe generator used to supply randomness to contracts …\nA <code>ChainExtension</code> that can be composed with other …\nResult that returns a <code>DispatchError</code> on error.\nDetermines the exit behaviour and return value of a chain …\nFlags used by a contract to customize exit behaviour.\nThe aggregated <code>RuntimeCall</code> type.\nThe overarching call type.\nThe aggregated event type of the runtime.\nThe overarching event type.\nOverarching hold reason.\nThe <code>RuntimeOrigin</code> type used by dispatchable calls.\nThe aggregated <code>RuntimeTask</code> type.\nThe designated SS58 prefix of this chain.\nCost schedule and limits.\nAll migrations that should run in the next runtime upgrade.\nAny state of an <code>Environment</code> implements this trait. See …\nConfiguration trait of this pallet.\nWeight information for the extrinsics of this pallet.\nThe time implementation used to supply timestamps to …\nMake contract callable functions marked as <code>#[unstable]</code> …\nOrigin allowed to upload code.\nGet the chain’s in-code version.\nDescribes the weights of the dispatchables of this module …\nUsed to answer contracts’ queries regarding the current …\nA type that exposes XCM APIs, allowing contracts to …\nReturns the number of times the specified contract exists …\nReturns a reference to the account id of the current …\nAdjust a previously charged amount down to its actual …\nAppend a string to the debug buffer.\nReturns the balance of the current contract.\nReturns the current block number.\nUse input and output arguments as pointers to a buffer.\nHow many bytes were added to storage.\nHow many bytes were removed from storage.\nCall (possibly transferring some amount of funds) into the …\nCall the chain extension logic.\nCall some dispatchable and return the result.\nReturns the caller.\nCheck if the caller of the current contract is the origin …\nCheck if the caller is origin, and this origin is root.\nCharges <code>diff</code> from the meter.\nCharge the passed <code>amount</code> of weight from the overall limit.\nReturns the code hash of the contract for the given <code>address</code>…\nTests sometimes need to modify and inspect the contract …\nReturns <code>true</code> if debug message recording is enabled. …\nDecrement the reference count of a stored code by one.\nExecute code in the current frame.\nDeposit an event with the given topics.\nRecovers ECDSA compressed public key based on signature …\nReturns Ethereum address from the ECDSA compressed public …\nDetermines whether chain extensions are enabled for this …\nGrants access to the execution environment of the current …\nThe chain extension id within the <code>id</code> passed by a contract.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe function id within the <code>id</code> passed by a contract.\nGet an immutable reference to the nested gas meter.\nGet a mutable reference to the nested gas meter.\nReturns the storage entry of the executing account by the …\nReturns <code>Some(len)</code> (in bytes) if a storage item exists at …\nReturns the transient storage entry of the executing …\nReturns <code>Some(len)</code> (in bytes) if a transient storage item …\nReturns the price for the specified amount of weight.\nThe length of the input as passed in as <code>input_len</code>.\nIncrement the reference count of a of a stored code by one.\nInstantiate a contract from the given code.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if a contract lives at the specified <code>address</code>.\nCheck if running in read-only context.\nHow many storage items were added to storage.\nHow many storage items were removed from storage.\nAdds a delegate dependency to <code>ContractInfo</code>’s …\nReturns the number of locked delegate dependencies.\nReturns the maximum allowed size of a storage item.\nReturns the minimum balance that is required for creating …\nReturns a nonce that is incremented for every instantiated …\nReturns a reference to the timestamp of the current block\nUse all arguments as integer values.\nReturns the code hash of the contract being executed.\nUse input arguments as integer and output arguments as …\nReturns a random number for the current block with the …\nReads <code>min(max_len, in_len)</code> from contract memory.\nReads and decodes a type with a size fixed at compile time …\nReads and decodes a type with a dynamic size from contract …\nReads `min(buffer.len(), in_len) from contract memory.\nReturns the number of times the currently executing …\nGet a reference to the schedule used by the current call.\nSets new code hash for existing contract.\nSets the storage entry by the given key to the specified …\nSets the transient storage entry for the given key to the …\nVerify a sr25519 signature.\nTransfer all funds to <code>beneficiary</code> and delete the contract.\nTransfer some amount of funds into the specified account.\nGet a mutable reference to the transient storage. Useful …\nRemoves a delegate dependency from <code>ContractInfo</code>’s …\nCalculate how much of a charge or refund results from …\nThe <code>input_ptr</code> argument.\nThe <code>input_len</code> argument.\nThe <code>output_ptr</code> argument.\nThe <code>output_len_ptr</code> argument.\nReturns the value transferred along with this call.\nWrite the supplied buffer to contract memory.\nThe function which is executed when a contract is called.\nProvides an interface for intercepting contract calls.\nDefines a span of execution for a contract call.\nThe type of <code>CallSpan</code> that is created by this trait.\nThe constructor function which is executed on deployment …\nUmbrella trait for all interfaces that serves for …\nContains the error value\nOutput of a contract call or instantiation which ran to …\nDescribes the different functions that can be exported by …\nContains the success value\nDefines methods to capture contract calls, enabling …\nCalled just after the execution of a contract.\nBuffer passed along by <code>seal_return</code>. Empty when <code>seal_return</code> …\nFlags passed along by <code>seal_return</code>. Empty when <code>seal_return</code> …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAllows to intercept contract calls and decide whether they …\nCalls <code>U::from(self)</code>.\nCreates a new call span to encompass the upcoming contract …\nAll migrations are completed\nThe cursor used to encode the position (usually the last …\nA migration is in progress\nIsFinished describes whether a migration is finished or …\nThe result of running the migration.\nDefines a sequence of migrations.\nPerforms all necessary migrations based on <code>StorageVersion</code>.\nA trait that allows to migrate storage from one version to …\nNo migration currently in progress\nNo migration was performed\nThe result of running a migration step.\nReturns the version of the migration.\nReturns the range of versions that this migrations …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nVerify that the migration step fits into <code>Cursor</code>, and that …\nVerify that the migration step fits into <code>Cursor</code>, and that …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether migrating from <code>in_storage</code> to <code>target</code> is …\nReturns the maximum weight that can be consumed in a …\nReturns the default cursor for the given version.\nExecute some post-checks after running the last step of …\nExecute some pre-checks prior to running the first step of …\nProcess one step of the migration.\nExecute the migration step until the available weight is …\nUpdate <code>CodeStorage</code> with the new <code>determinism</code> field.\nDon’t rely on reserved balances keeping an account alive …\nOverflowing bounded DeletionQueue. See …\nMove <code>OwnerInfo</code> to <code>CodeInfo</code>, add <code>determinism</code> field to the …\nAdd <code>delegate_dependencies</code> to <code>ContractInfo</code>. See …\nUpdate the code owner balance, make the code upload …\nMove contracts’ <em>reserved</em> balance from the <code>deposit_account</code>…\nRemove ED from storage base deposit. See …\nThe Migration Steps used for benchmarking the migration …\nThe latest migration version, pulled from the latest …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe address generator used to generate the addresses of …\nThe address generator used to generate the addresses of …\nThe version of the HostFn APIs that are available in the …\nThe version of the HostFn APIs that are available in the …\nContains a variant per dispatchable extrinsic that this …\nFilter that is applied to calls dispatched by contracts.\nFilter that is applied to calls dispatched by contracts.\nThe type of the call stack determines the maximum nesting …\nA contract was called either by a plain account or another …\nCan not add a delegate dependency to the code hash of the …\nType that allows the runtime authors to add new host …\nType that allows the runtime authors to add new host …\nThe percentage of the storage deposit that should be held …\nThe percentage of the storage deposit that should be held …\nCode removal was denied because the code is still in use …\nNo code info could be found at the supplied code hash.\nNo code could be found at the supplied code hash.\nThe contract’s code was found to be invalid during …\nA code with the specified hash was removed.\nCode with the specified hash has been stored.\nThe code supplied to <code>instantiate_with_code</code> exceeds the …\nThe Pallet has reserved it for storing code on-chain.\nConfiguration trait of this pallet.\nA contract’s code was updated.\nA custom event emitted by the contract.\nNo contract was found at the specified address.\nThe contract ran to completion but decided to revert its …\nContract trapped during execution.\nThe fungible in which fees are paid and contract balances …\nNote\nNote\nInput passed to a contract API function failed to decode …\nBased on <code>Config</code>. Auto-generated by …\nFallback value to limit the storage deposit if it’s not …\nFallback value to limit the storage deposit if it’s not …\nA contract delegate called a code hash.\nThe contract already depends on the given delegate …\nThe dependency was not found in the contract’s delegate …\nThe amount of balance a caller has to pay for each byte of …\nThe amount of balance a caller has to pay for each byte of …\nThe amount of balance a caller has to pay for each storage …\nThe amount of balance a caller has to pay for each storage …\nA contract with the same AccountId already exists.\nType that bundles together all the runtime configurable …\nType that bundles together all the runtime configurable …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA reason for the pallet contracts placing a hold on funds.\nAn indeterministic code was used in a context where this …\n<code>seal_call</code> forwarded this contracts input. It therefore is …\nOrigin allowed to instantiate code.\nOrigin allowed to instantiate code.\nContract deployed by address at the specified address.\nInvalid combination of flags supplied to <code>seal_call</code> or …\nInvalid schedule supplied, e.g. with zero weight of a …\nPerforming a call was denied because the calling depth …\nThe maximum length of a contract code in bytes.\nThe maximum length of a contract code in bytes.\nThe maximum length of the debug buffer in bytes.\nThe maximum length of the debug buffer in bytes.\nThe maximum number of delegate_dependencies that a …\nThe maximum number of delegate_dependencies that a …\nThe contract has reached its maximum number of delegate …\nThe maximum allowable length in bytes for storage keys.\nThe maximum allowable length in bytes for storage keys.\nThe maximum size of the transient storage in bytes. This …\nThe maximum size of the transient storage in bytes. This …\nA pending migration needs to complete before the extrinsic …\nThe sequence of migration steps that will be applied …\nThe sequence of migration steps that will be applied …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe chain does not provide a chain extension. Calling the …\nMigrate dispatch call was attempted but no migration was …\nA buffer outside of sandbox memory was passed to a …\nThe executed contract exhausted its gas limit.\nCan not add more data to transient storage.\nThe output buffer supplied to a contract API call was too …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe subject passed to <code>seal_random</code> exceeds the limit.\nThe generator used to supply randomness to contracts …\nThe generator used to supply randomness to contracts …\nA call tried to invoke a contract that is flagged as …\nThe overarching call type.\nThe overarching call type.\nThe overarching event type.\nThe overarching event type.\nOverarching hold reason.\nOverarching hold reason.\nCost schedule and limits.\nA contract attempted to invoke a state modifying API while …\nMore storage was created than allowed by the storage …\nOrigin doesn’t have enough balance to pay the required …\nThe Pallet has reserved it for storage deposit.\nSome funds have been transferred and held as storage …\nSome storage deposit funds have been transferred and …\nContract has been removed.\nA contract self destructed in its constructor.\nTermination of a contract is not allowed while the …\nThe time implementation used to supply timestamps to …\nThe time implementation used to supply timestamps to …\nThe amount of topics passed to <code>seal_deposit_events</code> exceeds …\nPerforming the requested transfer failed. Probably because …\nMake contract callable functions marked as <code>#[unstable]</code> …\nMake contract callable functions marked as <code>#[unstable]</code> …\nOrigin allowed to upload code.\nOrigin allowed to upload code.\nThe size defined in <code>T::MaxValueSize</code> was exceeded.\nDescribes the weights of the dispatchables of this module …\nDescribes the weights of the dispatchables of this module …\nUsed to answer contracts’ queries regarding the current …\nUsed to answer contracts’ queries regarding the current …\nFailed to decode the XCM program.\nA type that exposes XCM APIs, allowing contracts to …\nA type that exposes XCM APIs, allowing contracts to …\nMakes a call to an account, optionally transferring some …\nDeprecated version if <code>Self::call</code> for use in an in-storage …\nContainer for different types that implement <code>DefaultConfig</code>`…\nInstantiates a contract from a previously deployed wasm …\nDeprecated version if <code>Self::instantiate</code> for use in an …\nInstantiates a new contract from the supplied <code>code</code> …\nDeprecated version if <code>Self::instantiate_with_code</code> for use …\nWhen a migration is in progress, this dispatchable can be …\nRemove the code stored under <code>code_hash</code> and refund the …\nPrivileged function that changes the code of an existing …\nUpload new <code>code</code> without instantiating a contract from it.\nThe account that received the contracts remaining balance\nThe caller of the <code>contract</code>.\nThe code hash that was delegate called.\nThe contract that was terminated.\nThe contract that emitted the event.\nThe contract that has been updated.\nThe contract that was called.\nThe contract that performed the delegate call and hence in …\nData supplied by the contract. Metadata generated during …\nNew code hash that was set for the contract.\nPrevious code hash of the contract.\nA type providing default configurations for this pallet in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn opaque 32-byte cryptographic identifier.\nA builder to construct a bare_call call\nA builder to construct a bare_instantiate call\nA builder to construct a call call\nA builder to construct a instantiate call\nA builder to construct a instantiate_with_code call\nCreate a <code>BareCallBuilder</code> with default values.\nBuild the instantiate_with_code call\nBuild the instantiate call\nBuild the bare_instantiate call\nBuild the call call\nBuild the bare_call call\nBuild the instantiate call and unwrap the account id.\nBuild the instantiate call and unwrap the result.\nBuild the call and unwrap the result.\nCreate a <code>CallBuilder</code> with default values.\nSet the code\nSet the code\nSet the code_hash\nSet the collect_events\nSet the collect_events\nSet the data\nSet the data\nSet the data\nSet the data\nSet the data\nSet the debug\nSet the debug\nSet the dest\nSet the dest\nSet the determinism\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSet the gas_limit\nSet the gas_limit\nSet the gas_limit\nSet the gas_limit\nSet the gas_limit\nCreate an <code>InstantiateBuilder</code> with default values.\nCreate an <code>InstantiateWithCodeBuilder</code> with default values.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the origin\nSet the origin\nSet the origin\nSet the origin\nSet the origin\nSet the salt\nSet the salt\nSet the salt\nSet the storage_deposit_limit\nSet the storage_deposit_limit\nSet the storage_deposit_limit\nSet the storage_deposit_limit\nSet the storage_deposit_limit\nSet the value\nSet the value\nSet the value\nSet the value\nSet the value\nWeights for <code>pallet_contracts</code> using the Substrate node and …\nWeight functions needed for <code>pallet_contracts</code>.\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:0) Proof: …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:0) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:0) Proof: …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:0) Proof: …\nThe range of component <code>r</code> is <code>[0, 5000]</code>.\nCalls <code>U::from(self)</code>.\nStorage: <code>Contracts::CodeInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:1) Proof: …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:1) Proof: …\nThe range of component <code>r</code> is <code>[0, 1600]</code>.\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Contracts::DeletionQueueCounter</code> (r:1 w:0) Proof: …\nStorage: UNKNOWN KEY …\nStorage: UNKNOWN KEY …\nStorage: UNKNOWN KEY …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:0) Proof: …\nStorage: <code>Contracts::ContractInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 16384]</code>.\nStorage: <code>Contracts::ContractInfoOf</code> (r:1 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 16384]</code>.\nThe range of component <code>i</code> is <code>[0, 1048576]</code>.\nStorage: <code>Contracts::CodeInfoOf</code> (r:1 w:0) Proof: …\nStorage: <code>System::EventTopics</code> (r:4 w:4) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 16384]</code>.\nThe range of component <code>n</code> is <code>[0, 1048576]</code>.\nThe range of component <code>n</code> is <code>[0, 1048576]</code>.\nThe range of component <code>n</code> is <code>[0, 1048576]</code>.\nThe range of component <code>n</code> is <code>[0, 1048576]</code>.\nThe range of component <code>n</code> is <code>[0, 1048572]</code>.\nStorage: <code>Contracts::CodeInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Contracts::Nonce</code> (r:1 w:0) Proof: <code>Contracts::Nonce</code>…\nStorage: <code>Contracts::ContractInfoOf</code> (r:1 w:0) Proof: …\nStorage: <code>RandomnessCollectiveFlip::RandomMaterial</code> (r:1 w:0)\nThe range of component <code>n</code> is <code>[0, 1048572]</code>.\nStorage: <code>Contracts::CodeInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 16384]</code>. The range of …\nThe range of component <code>n</code> is <code>[0, 125697]</code>.\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 16384]</code>.\nStorage: <code>Contracts::DeletionQueueCounter</code> (r:1 w:1) Proof: …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Contracts::CodeInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:0) Proof: …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:0) Proof: …\nStorage: <code>Contracts::ContractInfoOf</code> (r:2 w:1) Proof: …\nStorage: <code>Contracts::DeletionQueue</code> (r:1 w:1025) Proof: …\nStorage: UNKNOWN KEY …\nStorage: <code>Contracts::ContractInfoOf</code> (r:2 w:1) Proof: …\nStorage: <code>Contracts::CodeInfoOf</code> (r:2 w:0) Proof: …\nStorage: <code>Contracts::ContractInfoOf</code> (r:2 w:1) Proof: …\nStorage: <code>Contracts::ContractInfoOf</code> (r:2 w:1) Proof: …\nStorage: UNKNOWN KEY …\nXCM router for parachain.\nXCM router for relay chain.\nProcess all messages in the message buses\nExecute some code in the context of the test …\nExecute code in the context of the test externalities, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInitialize the test environment.\nParachain runtime mock.\nRelay chain runtime mock.\nResets the state of the test environment.\nParachain runtime mock.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nBad XCM format used.\nBad XCM version used.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe <code>Event</code> enum of this pallet\nDownward message executed with the given outcome.\nSome XCM failed.\nDownward message is invalid XCM.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nSome XCM was executed OK.\nDownward message is unsupported version of XCM.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMessage processor to handle any messages that were …\nAmount of weight that can be spent per block to service …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.")