searchState.loadedDescShard("yet_another_parachain_runtime", 13, "Provider for the block number. Normally this is the …\nAn <code>item</code> was destroyed.\nContains a variant per dispatchable extrinsic that this …\nA witness data to cancel attributes approval operation.\nDetails of a collection.\nThe collections owned by any given account; set out this …\nCollection’s configuration.\nA <code>collection</code> has had its config changed by the <code>Force</code> …\nA type alias for the settings configuration of a …\nConfig of a collection.\nThe basic amount of funds that must be reserved for …\nInformation about a collection.\nA type alias representing the details of a collection.\nIdentifier for the collection of item.\nCollection ID is already taken.\nSome <code>collection</code> was locked.\nMax supply has been set for a collection.\nInformation about the collection’s metadata.\nMetadata has been cleared for a <code>collection</code>.\nMetadata of a collection.\nNew metadata has been set for a <code>collection</code>.\nMint settings for a collection had changed.\nCan’t delete non-empty collections.\nAn attribute was set by collection’s owner.\nSupport for up to 8 different roles for collections.\nThe items in existence and their ownership details. Stores …\nA wrapper type that implements <code>Codec</code>.\nSupport for up to 64 user-enabled features on a collection.\nWrapper type for <code>BitFlags&lt;CollectionSetting&gt;</code> that …\nConfiguration trait of this pallet.\nStandard collection creation is only allowed if the origin …\nA <code>collection</code> was created.\nThe currency mechanism, used for paying for reserves.\nThe deadline has already expired.\nA type alias for handling balance deposits.\nThe additional funds that must be reserved for the number …\nWhen this isn’t set then the deposit is required to hold …\nWitness data for the destroy transactions.\nA <code>collection</code> was destroyed.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nDisables some of pallet’s features.\nA <code>collection</code> was force-created.\nThe origin which may forcibly create or destroy an item or …\nCan freeze items.\nA set of helper functions for benchmarking.\nOnly holders of items in specified collection could mint …\nItem’s config already exists and should be equal to the …\nThe provided data is incorrect.\nThe provided metadata might be too long.\n<code>Instance1</code> to be used for instantiable pallets defined with …\nAn <code>item</code> was issued.\nOnly an <code>Issuer</code> could mint items.\nCan mint items.\nThe items in existence and their ownership details.\nA new approval to modify item attributes was added.\nA new approval to modify item attributes was removed.\nA type alias for keeping track of approvals for an item’…\nThe maximum attributes approvals an item could have.\nItem attribute approvals.\nAn item was bought.\nItem’s configuration.\nConfig of an item.\nInformation about the reserved item deposit.\nThe basic amount of funds that must be reserved for an …\nA type that holds the deposit for a single item.\nInformation concerning the ownership of a single unique …\nA type that holds the details of a single item.\nThe type used to identify a unique item within a …\nThe item is locked (non-transferable).\nInformation about the item’s metadata.\nMetadata has been cleared for an item.\nInformation about the reserved item’s metadata deposit.\nA type that holds the deposit amount for an item’s …\nMetadata of an item.\nNew metadata has been set for an item.\nAn attribute was set by item’s owner.\nA type alias to represent the price of an item.\nA price of an item.\nThe price for the item was removed.\nThe price was set for the item.\n<code>item</code> metadata or attributes were locked.\nSupport for up to 64 user-enabled features on an item.\nWrapper type for <code>BitFlags&lt;ItemSetting&gt;</code> that implements …\nInformation about the tip.\nA type alias for the tips held by a single item.\nAn <code>item</code> became non-transferable.\nAn <code>item</code> became transferable.\nItems within that collection are non-transferable.\nThe maximum length of an attribute key.\nThe log target of this pallet.\nCollection’s attributes are locked.\nCollection’s metadata is locked.\nItem’s attributes are locked.\nItem’s metadata is locked.\nLocker trait to enable Locking mechanism downstream.\nCan’t set more attributes per one call.\nThe max number of attributes a user could set per call.\nThe max duration in blocks for deadlines.\nThe max supply is locked and can’t be changed.\nAll items have been minted.\nThe provided max supply is less than the number of items a …\nThe max number of tips a user could send.\nThe basic amount of funds that must be reserved when …\nThe given item has no metadata set.\nThe method is disabled by system settings.\nMint has already ended.\nMint has not started yet.\nHolds the information about minting.\nMint type. Can the NFT be create by anyone, or only the …\nWitness data for items mint transactions.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nStores the <code>CollectionId</code> that is going to be used for the …\nEvent gets emitted when the <code>NextCollectionId</code> gets …\nConfig for a collection or an item can’t be found.\nThe signing account has no permission to do the operation.\nThe provided account is not a delegate.\nItem is not for sale.\nOff-Chain public key.\nOff-Chain signature type.\nThe owner changed.\nThe collection, if any, of which an account is willing to …\nOwnership acceptance has changed for an account.\nThe <code>Pallet</code> struct, the main type that implements traits …\nAn attribute was set by the pallet.\nA new attribute in the <code>Pallet</code> namespace was set for the …\nA list of possible pallet-level attributes.\nSupport for up to 64 system-enabled features on a …\nWrapper type for <code>BitFlags&lt;PalletFeature&gt;</code> that implements …\nInformation about the pending swap.\nHandles all the pending swaps.\nA type alias for the pre-signed minting configuration on …\nNew attributes have been set for an <code>item</code> of the <code>collection</code>.\nA type alias for the pre-signed minting configuration for …\nSpecifies whether the tokens will be sent or received.\nHolds the details about the price.\nAnyone could mint items.\nThe item has reached its approval limit.\nTokens will be received.\nThe deposit for a set of <code>item</code>s within a <code>collection</code> has …\nSome roles were not cleared.\nThe overarching event type.\nTokens will be sent.\nThe maximum length of data stored on-chain.\nThe swap was cancelled.\nThe swap has been claimed.\nAn <code>item</code> swap intent was created.\nAllow/disallow atomic items swap.\nThe management team changed.\nA tip was sent.\nEnable/disable trading operations.\nAn <code>item</code> of a <code>collection</code> has been approved by the <code>owner</code> for …\nMarks an item as being restricted from transferring.\nThis item is transferable.\nItems in this collection are transferable.\nAn <code>item</code> was transferred.\nThe named owner has not signed ownership acceptance of the …\nNo approval exists that would allow the transfer.\nThe given item ID is unknown.\nThe given item ID is unknown.\nSwap doesn’t exist.\nAttributes of this collection can be modified.\nAttributes of this item can be modified.\nThe supply of this collection can be modified.\nThe metadata of this collection can be modified.\nThe metadata of this item can be modified.\nMarks an item as being used in order to claim another item.\nThe maximum length of an attribute value.\nWeight functions needed for <code>pallet_nfts</code>.\nWeight information for extrinsics in this pallet.\nThe witness data should be provided.\nThe delegate turned out to be different to what was …\nThe duration provided should be less than or equal to …\nThe provided namespace isn’t supported in this call.\nThe extrinsic was sent by the wrong origin.\nThe owner turned out to be different to what was expected.\nThe provided setting can’t be set.\nThe provided signature is incorrect.\nA depositor account.\nA depositor account.\nA depositor account, None means the deposit is collection…\nA depositor account.\nA depositor account.\nA depositor account, None means the deposit is collection…\nAn amount of attributes previously created by account.\nAn amount that gets reserved.\nAn amount that gets reserved.\nAn amount that gets reserved.\nAn amount the sender is willing to tip.\nAn amount that gets reserved.\nAn amount the sender is willing to tip.\nAn amount that gets reserved.\nAn amount that gets reserved.\nAn amount.\nThe approved transferrer of this item, if one is set.\nThe approved transferrer of this item, if one is set.\nApprove item’s attributes to be changed by a delegated …\nApprove item’s attributes to be changed by a delegated …\nApprove an item to be transferred by a delegated …\nApprove an item to be transferred by a delegated …\nReturns the attribute value of <code>item</code> of <code>collection</code> …\nThe total number of attributes for this collection.\nAdditional item’s key-value attributes.\nKey-value attributes.\nThe total number of attributes for this collection.\nThe total number of attributes for this collection.\nAdditional item’s key-value attributes.\nKey-value attributes.\nDestroy a single item.\nDestroy a single item.\nAllows to buy an item if it’s up for sale.\nAllows to buy an item if it’s up for sale.\nReturns <code>true</code> if the <code>item</code> of <code>collection</code> may be transferred.\nCancel one of the transfer approvals for a specific item.\nCancel one of the transfer approvals for a specific item.\nCancel the previously provided approval to change item’s …\nCancel the previously provided approval to change item’s …\nCancel an atomic swap.\nCancel an atomic swap.\nClaim an atomic swap. This method executes a pending swap, …\nClaim an atomic swap. This method executes a pending swap, …\nCancel all the approvals of a specific item.\nCancel all the approvals of a specific item.\nClear an attribute for a collection or item.\nClear an attribute for a collection or item.\nClear the metadata for a collection.\nClear the metadata for a collection.\nClear the metadata for an item.\nClear the metadata for an item.\nThe collection of the item.\nA collection of the item to be minted.\nCollection’s ID.\nThe collection of the item.\nA collection of the item to be minted.\nCollection’s ID.\nReturns the attribute value of <code>item</code> of <code>collection</code> …\nGet the owner of the collection, if the collection exists.\nReturns an iterator of the collections in existence.\nA helper method to construct an attribute’s key.\nA helper method to construct an attribute’s value.\nA helper method to construct metadata.\nIssue a new collection of non-fungible items from a public …\nIssue a new collection of non-fungible items from a public …\nCreate a <code>collection</code> of nonfungible items to be owned by <code>who</code>…\nCreate a collection of nonfungible items with <code>collection</code> …\nRegister a new atomic swap, declaring an intention to send …\nRegister a new atomic swap, declaring an intention to send …\nReturns the custom attribute value of <code>item</code> of <code>collection</code> …\nGeneral information concerning this collection. Limited in …\nGeneral information concerning this item. Limited in …\nA deadline for the signature.\nA deadline for the signature.\nA deadline for the swap.\nA deadline for the signature.\nA deadline for the signature.\nDefault settings each item will get during the mint.\nThe amount held in the pallet’s default account for this …\nThe amount held in the pallet’s default account for this …\nThe balance deposited for this metadata.\nThe balance deposited for this metadata.\nThe collection that contains the item that the user wants …\nThe item the user wants to receive.\nDestroy a collection of fungible items.\nDestroy a collection of fungible items.\nA direction (send or receive).\nBurns the specified item with the given <code>collection</code>, <code>item</code>, …\nCreate a new collection with the given <code>collection</code>, <code>owner</code>, …\nDestroy the specified collection with the given <code>collection</code>…\nMint a new unique item with the given <code>collection</code>, <code>item</code>, …\nTransfer an NFT to the specified destination account.\nWhen the mint ends.\nChange the config of a collection.\nChange the config of a collection.\nChange the Owner of a collection.\nChange the Owner of a collection.\nIssue a new collection of non-fungible items from a …\nIssue a new collection of non-fungible items from a …\nMint an item of a particular collection from a privileged …\nMint an item of a particular collection from a privileged …\nForce-set an attribute for a collection or item.\nForce-set an attribute for a collection or item.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGroups provided roles by account, given one account could …\nA helper method to check whether a system attribute is set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn item of which the tip is sent for.\nItem’s ID.\nItem’s ID.\nAn item of which the tip is sent for.\nItem’s ID.\nItem’s ID.\nThe total number of outstanding item configs of this …\nThe total number of outstanding item configs of this …\nThe total number of outstanding item configs of this …\nThe total number of outstanding item metadata of this …\nThe total number of outstanding item metadata of this …\nThe total number of items in this collection that have …\nReturns an iterator of the items of a <code>collection</code> in …\nThe total number of outstanding items of this collection.\nThe total number of outstanding items of this collection.\nDisallows specified settings for the whole collection.\nDisallows specified settings for the whole collection.\nDisallows changing the metadata or attributes of the item.\nDisallows changing the metadata or attributes of the item.\nDisallow further unprivileged transfer of an item.\nDisallow further unprivileged transfer of an item.\nCollection’s max supply.\nCollection’s max supply.\nAdditional item’s metadata.\nAdditional item’s metadata.\nMint an item of a particular collection.\nMint an item of a particular collection.\nMint an item by providing the pre-signed approval.\nMint an item by providing the pre-signed approval.\nAn optional price the claimer would need to pay for the …\nThe price specified in mint settings.\nAn optional price the claimer would need to pay for the …\nDefault settings each item will get during the mint.\nDefault settings each item will get during the mint.\nWhether anyone can mint or if minters are restricted to …\nAttributes’ namespace.\nAttributes’ namespace.\nCreate a call with the variant <code>approve_item_attributes</code>.\nCreate a call with the variant <code>approve_transfer</code>.\nCreate a call with the variant <code>burn</code>.\nCreate a call with the variant <code>buy_item</code>.\nCreate a call with the variant <code>cancel_approval</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>cancel_swap</code>.\nCreate a call with the variant <code>claim_swap</code>.\nCreate a call with the variant <code>clear_all_transfer_approvals</code>…\nCreate a call with the variant <code>clear_attribute</code>.\nCreate a call with the variant <code>clear_collection_metadata</code>.\nCreate a call with the variant <code>clear_metadata</code>.\nCreate a call with the variant <code>create</code>.\nCreate a call with the variant <code>create_swap</code>.\nCreate a call with the variant <code>destroy</code>.\nCreate a call with the variant <code>force_collection_config</code>.\nCreate a call with the variant <code>force_collection_owner</code>.\nCreate a call with the variant <code>force_create</code>.\nCreate a call with the variant <code>force_mint</code>.\nCreate a call with the variant <code>force_set_attribute</code>.\nCreate a call with the variant <code>lock_collection</code>.\nCreate a call with the variant <code>lock_item_properties</code>.\nCreate a call with the variant <code>lock_item_transfer</code>.\nCreate a call with the variant <code>mint</code>.\nCreate a call with the variant <code>mint_pre_signed</code>.\nCreate a call with the variant <code>pay_tips</code>.\nCreate a call with the variant <code>redeposit</code>.\nCreate a call with the variant <code>set_accept_ownership</code>.\nCreate a call with the variant <code>set_attribute</code>.\nCreate a call with the variant <code>set_attributes_pre_signed</code>.\nCreate a call with the variant <code>set_collection_max_supply</code>.\nCreate a call with the variant <code>set_collection_metadata</code>.\nCreate a call with the variant <code>set_metadata</code>.\nCreate a call with the variant <code>set_price</code>.\nCreate a call with the variant <code>set_team</code>.\nCreate a call with the variant <code>transfer</code>.\nCreate a call with the variant <code>transfer_ownership</code>.\nCreate a call with the variant <code>unlock_item_transfer</code>.\nCreate a call with the variant <code>update_mint_settings</code>.\nRestrict the claim to a particular account.\nRestrict the claim to a particular account.\nReturns an iterator of the items of all collections owned …\nReturns an iterator of the items of <code>collection</code> owned by <code>who</code>…\nProvide the id of the item in a required collection.\nGet the owner of the item, if the item exists.\nCollection’s owner.\nThe owner of this item.\nCollection’s owner.\nThe owner of this item.\nThe total balance deposited by the owner for all the …\nThe total balance deposited by the owner for all the …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAllows to pay the tips.\nAllows to pay the tips.\nA price for the desired <code>item</code> with the direction.\nAn optional price per mint.\nA sender of the tip.\nA sender of the tip.\nRe-evaluate the deposits on some items.\nRe-evaluate the deposits on some items.\nSet (or reset) the acceptance of ownership for a …\nSet (or reset) the acceptance of ownership for a …\nSet an attribute for a collection or item.\nSet an attribute for a collection or item.\nSet attributes for an item by providing the pre-signed …\nSet attributes for an item by providing the pre-signed …\nSet the maximum number of items a collection could have.\nSet the maximum number of items a collection could have.\nSet the metadata for a collection.\nSet the metadata for a collection.\nSet the metadata for an item.\nSet the metadata for an item.\nSet (or reset) the price for an item.\nSet (or reset) the price for an item.\nChange the Issuer, Admin and Freezer of a collection.\nChange the Issuer, Admin and Freezer of a collection.\nCollection’s settings.\nCollection’s settings.\nItem’s settings.\nWhen the mint starts.\nReturns the system attribute value of <code>item</code> of <code>collection</code> …\nMove an item from the sender account to another.\nMove an item from the sender account to another.\nChange the Owner of a collection.\nChange the Owner of a collection.\nRe-allow unprivileged transfer of an item.\nRe-allow unprivileged transfer of an item.\nUpdate mint settings.\nUpdate mint settings.\nValidates the signature of the given data with the …\nAutogenerated weights for <code>pallet_nfts</code>\nA migration utility to update the storage version from v0 …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe items held by any given account; set out this way so …\nAll approvals of an item got cancelled.\nThe provided Item was already used for claiming.\nThe item ID has already been used for an item.\nAn approval for a <code>delegate</code> account to transfer the <code>item</code> of …\nThe approval had a deadline that expired, so the approval …\nThe maximum approvals an item could have.\nAttributes of a collection.\nAttribute metadata has been cleared for a <code>collection</code> or …\nThe basic amount of funds that must be reserved when …\nThe provided attribute can’t be found.\nNew attribute metadata has been set for a <code>collection</code> or …\nThe witness data given does not match the current state of …\nThe provided bid is too low.\nProvider for the block number. Normally this is the …\nAn <code>item</code> was destroyed.\nContains a variant per dispatchable extrinsic that this …\nDetails of a collection.\nThe collections owned by any given account; set out this …\nA <code>collection</code> has had its config changed by the <code>Force</code> …\nConfig of a collection.\nThe basic amount of funds that must be reserved for …\nIdentifier for the collection of item.\nCollection ID is already taken.\nSome <code>collection</code> was locked.\nMax supply has been set for a collection.\nMetadata has been cleared for a <code>collection</code>.\nMetadata of a collection.\nNew metadata has been set for a <code>collection</code>.\nMint settings for a collection had changed.\nCan’t delete non-empty collections.\nThe items in existence and their ownership details. Stores …\nConfiguration trait of this pallet.\nStandard collection creation is only allowed if the origin …\nA <code>collection</code> was created.\nThe currency mechanism, used for paying for reserves.\nThe deadline has already expired.\nThe additional funds that must be reserved for the number …\nA <code>collection</code> was destroyed.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nDisables some of pallet’s features.\nA <code>collection</code> was force-created.\nThe origin which may forcibly create or destroy an item or …\nA set of helper functions for benchmarking.\nItem’s config already exists and should be equal to the …\nThe provided data is incorrect.\nThe provided metadata might be too long.\n<code>Instance1</code> to be used for instantiable pallets defined with …\nAn <code>item</code> was issued.\nThe items in existence and their ownership details.\nA new approval to modify item attributes was added.\nA new approval to modify item attributes was removed.\nThe maximum attributes approvals an item could have.\nItem attribute approvals.\nAn item was bought.\nConfig of an item.\nThe basic amount of funds that must be reserved for an …\nThe type used to identify a unique item within a …\nThe item is locked (non-transferable).\nMetadata has been cleared for an item.\nMetadata of an item.\nNew metadata has been set for an item.\nA price of an item.\nThe price for the item was removed.\nThe price was set for the item.\n<code>item</code> metadata or attributes were locked.\nAn <code>item</code> became non-transferable.\nAn <code>item</code> became transferable.\nItems within that collection are non-transferable.\nThe maximum length of an attribute key.\nCollection’s attributes are locked.\nCollection’s metadata is locked.\nItem’s attributes are locked.\nItem’s metadata is locked.\nLocker trait to enable Locking mechanism downstream.\nCan’t set more attributes per one call.\nThe max number of attributes a user could set per call.\nThe max duration in blocks for deadlines.\nThe max supply is locked and can’t be changed.\nAll items have been minted.\nThe provided max supply is less than the number of items a …\nThe max number of tips a user could send.\nThe basic amount of funds that must be reserved when …\nThe given item has no metadata set.\nThe method is disabled by system settings.\nMint has already ended.\nMint has not started yet.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nStores the <code>CollectionId</code> that is going to be used for the …\nEvent gets emitted when the <code>NextCollectionId</code> gets …\nConfig for a collection or an item can’t be found.\nThe signing account has no permission to do the operation.\nThe provided account is not a delegate.\nItem is not for sale.\nOff-Chain public key.\nOff-Chain signature type.\nThe owner changed.\nThe collection, if any, of which an account is willing to …\nOwnership acceptance has changed for an account.\nThe <code>Pallet</code> struct, the main type that implements traits …\nA new attribute in the <code>Pallet</code> namespace was set for the …\nHandles all the pending swaps.\nNew attributes have been set for an <code>item</code> of the <code>collection</code>.\nThe item has reached its approval limit.\nThe deposit for a set of <code>item</code>s within a <code>collection</code> has …\nSome roles were not cleared.\nThe overarching event type.\nThe maximum length of data stored on-chain.\nThe swap was cancelled.\nThe swap has been claimed.\nAn <code>item</code> swap intent was created.\nThe management team changed.\nA tip was sent.\nAn <code>item</code> of a <code>collection</code> has been approved by the <code>owner</code> for …\nAn <code>item</code> was transferred.\nThe named owner has not signed ownership acceptance of the …\nNo approval exists that would allow the transfer.\nThe given item ID is unknown.\nThe given item ID is unknown.\nSwap doesn’t exist.\nThe maximum length of an attribute value.\nWeight information for extrinsics in this pallet.\nThe witness data should be provided.\nThe delegate turned out to be different to what was …\nThe duration provided should be less than or equal to …\nThe provided namespace isn’t supported in this call.\nThe extrinsic was sent by the wrong origin.\nThe owner turned out to be different to what was expected.\nThe provided setting can’t be set.\nThe provided signature is incorrect.\nApprove item’s attributes to be changed by a delegated …\nApprove an item to be transferred by a delegated …\nDestroy a single item.\nAllows to buy an item if it’s up for sale.\nCancel one of the transfer approvals for a specific item.\nCancel the previously provided approval to change item’s …\nCancel an atomic swap.\nClaim an atomic swap. This method executes a pending swap, …\nCancel all the approvals of a specific item.\nClear an attribute for a collection or item.\nClear the metadata for a collection.\nClear the metadata for an item.\nIssue a new collection of non-fungible items from a public …\nRegister a new atomic swap, declaring an intention to send …\nDestroy a collection of fungible items.\nChange the config of a collection.\nChange the Owner of a collection.\nIssue a new collection of non-fungible items from a …\nMint an item of a particular collection from a privileged …\nForce-set an attribute for a collection or item.\nDisallows specified settings for the whole collection.\nDisallows changing the metadata or attributes of the item.\nDisallow further unprivileged transfer of an item.\nMint an item of a particular collection.\nMint an item by providing the pre-signed approval.\nAllows to pay the tips.\nRe-evaluate the deposits on some items.\nSet (or reset) the acceptance of ownership for a …\nSet an attribute for a collection or item.\nSet attributes for an item by providing the pre-signed …\nSet the maximum number of items a collection could have.\nSet the metadata for a collection.\nSet the metadata for an item.\nSet (or reset) the price for an item.\nChange the Issuer, Admin and Freezer of a collection.\nMove an item from the sender account to another.\nChange the Owner of a collection.\nRe-allow unprivileged transfer of an item.\nUpdate mint settings.\nWeights for <code>pallet_nfts</code> using the Substrate node and …\nWeight functions needed for <code>pallet_nfts</code>.\nStorage: <code>Nfts::Item</code> (r:1 w:0) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::Item</code> (r:1 w:1) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::Attribute</code> (r:1 w:0) Proof: <code>Nfts::Attribute</code> (…\nStorage: <code>Nfts::Item</code> (r:1 w:1) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::Item</code> (r:1 w:1) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::Item</code> (r:1 w:0) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::PendingSwapOf</code> (r:1 w:1) Proof: …\nStorage: <code>Nfts::Item</code> (r:2 w:2) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::Item</code> (r:1 w:1) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::Attribute</code> (r:1 w:1) Proof: <code>Nfts::Attribute</code> (…\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::NextCollectionId</code> (r:1 w:1) Proof: …\nStorage: <code>Nfts::Item</code> (r:2 w:0) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::Collection</code> (r:1 w:1) Proof: <code>Nfts::Collection</code>…\nStorage: <code>Nfts::Collection</code> (r:1 w:0) Proof: <code>Nfts::Collection</code>…\nStorage: <code>Nfts::Collection</code> (r:1 w:1) Proof: <code>Nfts::Collection</code>…\nStorage: <code>Nfts::NextCollectionId</code> (r:1 w:1) Proof: …\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::Collection</code> (r:1 w:1) Proof: <code>Nfts::Collection</code>…\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Nfts::Collection</code> (r:1 w:0) Proof: <code>Nfts::Collection</code>…\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::CollectionConfigOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::CollectionRoleOf</code> (r:2 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 10]</code>.\nStorage: <code>Nfts::Collection</code> (r:1 w:0) Proof: <code>Nfts::Collection</code>…\nStorage: <code>Nfts::OwnershipAcceptance</code> (r:1 w:1) Proof: …\nStorage: <code>Nfts::Collection</code> (r:1 w:1) Proof: <code>Nfts::Collection</code>…\nStorage: <code>Nfts::Item</code> (r:1 w:0) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::CollectionConfigOf</code> (r:1 w:1) Proof: …\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::Item</code> (r:1 w:0) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::Collection</code> (r:1 w:1) Proof: <code>Nfts::Collection</code>…\nStorage: <code>Nfts::Collection</code> (r:1 w:0) Proof: <code>Nfts::Collection</code>…\nStorage: <code>Nfts::OwnershipAcceptance</code> (r:1 w:1) Proof: …\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …\nThe receipt is already communal.\nThere are enough funds for what is required.\nThe receipt is already private.\nThe amount of the bid is less than the minimum allowed.\nThe base period for the duration queues. This is the …\nSetup the empty genesis state for benchmarking.\nSetup the state for benchmarking.\nA single bid, an item of a <em>queue</em> in <code>Queues</code>.\nA bid was dropped from a queue because of another, more …\nA bid was successfully placed.\nA bid was successfully removed (before being accepted).\nThe queue for the bid’s duration is full and the amount …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe accounting system for the fungible counterpart tokens.\nThe system to convert an overall proportion of issuance …\nCurrency type that this works on.\nJust the <code>Balance</code> type; we have this item to allow us to …\nUnbalanced handler to account for funds created (in case …\nThe duration is the bid is greater than the number of …\nThe duration of the bid is less than one.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nPortion of the queue which is free from ordering and just …\nOrigin required for auto-funding the deficit.\nAn automatic funding of the deficit was made.\nA reason for the NIS pallet placing a hold on funds.\nThe issuance to ignore. This is subtracted from the …\nThe number of blocks between consecutive attempts to …\nIssuance information returned by <code>issuance()</code>.\nA bid was accepted. The balance may not be released until …\nThe operation would result in a receipt worth an …\nThe maximum amount of bids that can consolidated into …\nMaximum number of items that may be in each duration queue.\nThe minimum amount of funds that may be placed in a bid. …\nThe minimum amount of funds which may intentionally be …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe NIS Pallet has reserved it for a non-fungible receipt.\nBond not yet at expiry date.\nNot the owner of the receipt.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe treasury’s pallet id, used for deriving its …\nThe portion supplied is beyond the value of the receipt.\nNumber of duration queues in total. This sets the maximum …\nThe totals of items and balances within each queue. Saves …\nThe queues of bids. Indexed by duration (in <code>Period</code>s).\nAn index for a receipt.\nInformation representing a receipt.\nThe currently outstanding receipts, indexed according to …\nOverarching event type.\nOverarching hold reason.\nSummary information over the general state.\nOverall information package on the outstanding receipts.\nThe target sum of all receipts’ proportions.\nThe maximum proportion which may be thawed and the period …\nAn receipt has been (at least partially) thawed.\nThe thaw throttle has been reached for this period.\nA receipt was transferred.\nNot enough funds are held to pay out.\nThe given bid for retraction is not found.\nReceipt index is unknown.\nWeight functions needed for <code>pallet_nis</code>.\nInformation on runtime weights.\nThe account ID of the reserves.\nThe amount bid.\nMake a private receipt communal and create fungible …\nMake a private receipt communal and create fungible …\nCreate the counterpart asset. Should panic on error.\nThe effective total issuance, hypothetically if all …\nThe time after which this receipt can be thawed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nEnsure we have sufficient funding for all potential …\nEnsure we have sufficient funding for all potential …\nThe balance held by this pallet instance together with the …\nThe total number of receipts created so far.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns information on the issuance within the system.\nReturns information on the issuance within the system\nThe current thaw period’s beginning.\nCreate a call with the variant <code>communify</code>.\nCreate a call with the variant <code>fund_deficit</code>.\nCreate a call with the variant <code>place_bid</code>.\nCreate a call with the variant <code>privatize</code>.\nCreate a call with the variant <code>retract_bid</code>.\nCreate a call with the variant <code>thaw_communal</code>.\nCreate a call with the variant <code>thaw_private</code>.\nThe (non-ignored) issuance in the system, not including …\nThe account to whom this receipt belongs and the amount of …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nPlace a bid.\nPlace a bid.\nMake a communal receipt private and burn fungible …\nMake a communal receipt private and burn fungible …\nThe proportion of the effective total issuance.\nThe total proportion over all outstanding receipts.\nThe total amount of funds on hold for receipts. This doesn…\nThe amount needed to be accessible to this pallet in case …\nRetract a previously placed bid.\nRetract a previously placed bid.\nReduce or remove an outstanding receipt, placing the …\nReduce or remove an outstanding receipt, placing the …\nReduce or remove an outstanding receipt, placing the …\nReduce or remove an outstanding receipt, placing the …\nThe amount (as a proportion of ETI) which has been thawed …\nAutogenerated weights for <code>pallet_nis</code>\nThe owner of the bid.\nThe amount of funds which were debited from the owner.\nThe amount by which the owner was credited.\nIf <code>true</code> then the receipt is done.\nThe block number at which the receipt may be thawed.\nThe identity of the receipt.\nThe identity of the receipt.\nThe proportion of the effective total issuance which the …\nThe proportion of the effective total issuance by which …\nThe owner of the receipt.\nThe owner.\nThe receipt is already communal.\nThere are enough funds for what is required.\nThe receipt is already private.\nThe amount of the bid is less than the minimum allowed.\nThe base period for the duration queues. This is the …\nSetup the state for benchmarking.\nA single bid, an item of a <em>queue</em> in <code>Queues</code>.\nA bid was dropped from a queue because of another, more …\nA bid was successfully placed.\nA bid was successfully removed (before being accepted).\nThe queue for the bid’s duration is full and the amount …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe accounting system for the fungible counterpart tokens.\nThe system to convert an overall proportion of issuance …\nCurrency type that this works on.\nJust the <code>Balance</code> type; we have this item to allow us to …\nUnbalanced handler to account for funds created (in case …\nThe duration is the bid is greater than the number of …\nThe duration of the bid is less than one.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nPortion of the queue which is free from ordering and just …\nOrigin required for auto-funding the deficit.\nAn automatic funding of the deficit was made.\nA reason for the NIS pallet placing a hold on funds.\nThe issuance to ignore. This is subtracted from the …\nThe number of blocks between consecutive attempts to …\nIssuance information returned by <code>issuance()</code>.\nA bid was accepted. The balance may not be released until …\nThe operation would result in a receipt worth an …\nThe maximum amount of bids that can consolidated into …\nMaximum number of items that may be in each duration queue.\nThe minimum amount of funds that may be placed in a bid. …\nThe minimum amount of funds which may intentionally be …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe NIS Pallet has reserved it for a non-fungible receipt.\nBond not yet at expiry date.\nNot the owner of the receipt.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe treasury’s pallet id, used for deriving its …\nThe portion supplied is beyond the value of the receipt.\nNumber of duration queues in total. This sets the maximum …\nThe totals of items and balances within each queue. Saves …\nThe queues of bids. Indexed by duration (in <code>Period</code>s).\nAn index for a receipt.\nInformation representing a receipt.\nThe currently outstanding receipts, indexed according to …\nOverarching event type.\nOverarching hold reason.\nSummary information over the general state.\nOverall information package on the outstanding receipts.\nThe target sum of all receipts’ proportions.\nThe maximum proportion which may be thawed and the period …\nAn receipt has been (at least partially) thawed.\nThe thaw throttle has been reached for this period.\nA receipt was transferred.\nNot enough funds are held to pay out.\nThe given bid for retraction is not found.\nReceipt index is unknown.\nInformation on runtime weights.\nThe amount bid.\nMake a private receipt communal and create fungible …\nThe effective total issuance, hypothetically if all …\nThe time after which this receipt can be thawed.\nEnsure we have sufficient funding for all potential …\nThe balance held by this pallet instance together with the …\nThe total number of receipts created so far.\nThe current thaw period’s beginning.\nThe (non-ignored) issuance in the system, not including …\nThe account to whom this receipt belongs and the amount of …\nPlace a bid.\nMake a communal receipt private and burn fungible …\nThe proportion of the effective total issuance.\nThe total proportion over all outstanding receipts.\nThe total amount of funds on hold for receipts. This doesn…\nThe amount needed to be accessible to this pallet in case …\nRetract a previously placed bid.\nReduce or remove an outstanding receipt, placing the …\nReduce or remove an outstanding receipt, placing the …\nThe amount (as a proportion of ETI) which has been thawed …\nThe owner of the bid.\nThe amount of funds which were debited from the owner.\nThe amount by which the owner was credited.\nIf <code>true</code> then the receipt is done.\nThe block number at which the receipt may be thawed.\nThe identity of the receipt.\nThe identity of the receipt.\nThe proportion of the effective total issuance which the …\nThe proportion of the effective total issuance by which …\nThe owner of the receipt.\nThe owner.\nWeights for <code>pallet_nis</code> using the Substrate node and …\nWeight functions needed for <code>pallet_nis</code>.\nStorage: <code>Nis::Receipts</code> (r:1 w:1) Proof: <code>Nis::Receipts</code> (…\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nStorage: <code>Nis::Summary</code> (r:1 w:0) Proof: <code>Nis::Summary</code> (…\nCalls <code>U::from(self)</code>.\nStorage: <code>Nis::Queues</code> (r:1 w:1) Proof: <code>Nis::Queues</code> (…\nStorage: <code>Nis::Queues</code> (r:1 w:1) Proof: <code>Nis::Queues</code> (…\nStorage: <code>Nis::Receipts</code> (r:1 w:1) Proof: <code>Nis::Receipts</code> (…\nStorage: <code>Nis::Receipts</code> (r:0 w:1) Proof: <code>Nis::Receipts</code> (…\nStorage: <code>Nis::Queues</code> (r:1 w:1) Proof: <code>Nis::Queues</code> (…\nStorage: <code>Nis::Summary</code> (r:1 w:1) Proof: <code>Nis::Summary</code> (…\nStorage: <code>Nis::Queues</code> (r:1 w:1) Proof: <code>Nis::Queues</code> (…\nStorage: <code>Nis::Receipts</code> (r:1 w:1) Proof: <code>Nis::Receipts</code> (…\nStorage: <code>Nis::Receipts</code> (r:1 w:1) Proof: <code>Nis::Receipts</code> (…\nThe origin which can add a well known node.\nThe additional adaptive connections of each node.\nThe node is already claimed by a user.\nThe node is already joined in the list.\nContains a variant per dispatchable extrinsic that this …\nThe given claim was removed by its owner.\nConfiguration trait of this pallet.\nThe allowed connections were added to a node.\nThe allowed connections were removed from a node.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCan be used to configure the genesis state of this pallet.\nThe maximum length in bytes of PeerId\nThe maximum number of well known nodes that are allowed to …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe given well known node was added.\nThe given node was claimed by a user.\nThe given well known node was removed.\nThe given well known node was swapped; first item was …\nThe node was transferred to another account.\nThe given well known nodes were reset.\nThe node hasn’t been claimed yet.\nThe node doesn’t exist in the list.\nYou are not the owner of the node.\nA map that maintains the ownership of each node.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe PeerId is too long.\nNo permission to perform specific operation.\nThe origin which can remove a well known node.\nThe origin which can reset the well known nodes.\nThe overarching event type.\nThe origin which can swap the well known nodes.\nToo many well known nodes.\nWeight information for extrinsics in this pallet.\nThe set of well known nodes. This is stored sorted (just …\nAdd additional connections to a given node.\nAdd additional connections to a given node.\nAdd a node to the set of well known nodes. If the node is …\nAdd a node to the set of well known nodes. If the node is …\nAn auto-generated getter for <code>AdditionalConnections</code>.\nA given node can be claimed by anyone. The owner should be …\nA given node can be claimed by anyone. The owner should be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>add_connections</code>.\nCreate a call with the variant <code>add_well_known_node</code>.\nCreate a call with the variant <code>claim_node</code>.\nCreate a call with the variant <code>remove_claim</code>.\nCreate a call with the variant <code>remove_connections</code>.\nCreate a call with the variant <code>remove_well_known_node</code>.\nCreate a call with the variant <code>reset_well_known_nodes</code>.\nCreate a call with the variant <code>swap_well_known_node</code>.\nCreate a call with the variant <code>transfer_node</code>.\nSet reserved node every block. It may not be enabled …\nAn auto-generated getter for <code>Owners</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nA claim can be removed by its owner and get back the …\nA claim can be removed by its owner and get back the …\nRemove additional connections of a given node.\nRemove additional connections of a given node.\nRemove a node from the set of well known nodes. The …\nRemove a node from the set of well known nodes. The …\nReset all the well known nodes. This will not remove the …\nReset all the well known nodes. This will not remove the …\nSwap a well known node to another. Both the ownership and …\nSwap a well known node to another. Both the ownership and …\nA node can be transferred to a new owner.\nA node can be transferred to a new owner.\nAutogenerated weights for pallet_node_authorization\nAn auto-generated getter for <code>WellKnownNodes</code>.\nThe origin which can add a well known node.\nThe additional adaptive connections of each node.\nThe node is already claimed by a user.\nThe node is already joined in the list.\nContains a variant per dispatchable extrinsic that this …\nThe given claim was removed by its owner.\nConfiguration trait of this pallet.\nThe allowed connections were added to a node.\nThe allowed connections were removed from a node.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCan be used to configure the genesis state of this pallet.\nThe maximum length in bytes of PeerId\nThe maximum number of well known nodes that are allowed to …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe given well known node was added.\nThe given node was claimed by a user.\nThe given well known node was removed.\nThe given well known node was swapped; first item was …\nThe node was transferred to another account.\nThe given well known nodes were reset.\nThe node hasn’t been claimed yet.\nThe node doesn’t exist in the list.\nYou are not the owner of the node.\nA map that maintains the ownership of each node.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe PeerId is too long.\nNo permission to perform specific operation.\nThe origin which can remove a well known node.\nThe origin which can reset the well known nodes.\nThe overarching event type.\nThe origin which can swap the well known nodes.\nToo many well known nodes.\nWeight information for extrinsics in this pallet.\nThe set of well known nodes. This is stored sorted (just …\nAdd additional connections to a given node.\nAdd a node to the set of well known nodes. If the node is …\nA given node can be claimed by anyone. The owner should be …\nA claim can be removed by its owner and get back the …\nRemove additional connections of a given node.\nRemove a node from the set of well known nodes. The …\nReset all the well known nodes. This will not remove the …\nSwap a well known node to another. Both the ownership and …\nA node can be transferred to a new owner.\nAn account is already delegating in another pool. An …\nThe origin that can manage pool configurations.\nA utility struct that provides a way to check if a given …\nThe pool or member delegation has already migrated to …\nThe balance type used by the currency system.\nInfallible method for converting <code>Currency::Balance</code> to <code>U256</code>.\nProvider for the block number. Normally this is the …\nThe pool is blocked. No one else can join.\nHow to increase the bond of a member.\nBonding extra is restricted to the exact pending reward …\nThe type of bonding that can happen to a pool.\nA member has became bonded in a pool.\nA wrapper for bonded pools, with utility functions.\nPool permissions and state\nStorage for bonded pools.\nThe bonded account should only be killed by the staking …\nContains a variant per dispatchable extrinsic that this …\nThe pools state cannot be changed.\nNone of the funds can be withdrawn yet because the bonding …\nThe permission a pool member can set for other accounts to …\nMap from a pool member account to their opted claim …\nPool commission.\nPool commission change rate preferences.\nThe submitted changes to commission change rate are not …\nNot enough blocks have surpassed since the last commission …\nThe supplied commission exceeds global maximum commission.\nThe supplied commission exceeds the max allowed commission.\nConfiguration trait of this pallet.\nPossible operations on the configuration values of this …\nSomeone is bonding into the pool upon creation.\nA pool has been created.\nThe currency type used for nomination pool.\nSome error occurred that should never happen. This should …\nThe delegation feature is unsupported.\nA pool has been destroyed.\nThe pool is in the process of being destroyed.\nThe caller does not have adequate permissions.\nThe <code>Error</code> enum of this pallet.\nEvents of this pallet.\nSomeone is adding more funds later to this pool.\nRestrict some accounts from participating in a nomination …\nTake from the free balance.\nA reason for freezing funds.\nThe member is fully unbonded (and thus cannot access the …\nCan be used to configure the genesis state of this pallet.\nThe maximum commission that can be charged by a pool. Used …\nGlobal parameters regulating nomination pools have been …\nPool id provided is not correct/usable.\nThe log target of this pallet.\nEver increasing number of all pools created so far.\nThe pool’s max commission cannot be set higher than the …\nThe maximum length, in bytes, that a pools metadata maybe.\nThe maximum pool points-to-balance ratio that an <code>open</code> pool …\nMaximum number of members that can exist in the system. If …\nToo many members in the pool or system.\nMaximum number of members that may belong to pool. If <code>None</code>…\nMaximum number of nomination pools that can exist. If <code>None</code>…\nThe system is maxed out on pools.\nThe maximum number of simultaneous unbonding chunks that …\nThe member cannot unbond further chunks due to reaching …\nA pool member’s claim permission has been updated.\nA member has been removed from a pool.\nMetadata for the pool.\nMetadata exceeds <code>Config::MaxMetadataLen</code>\nA pool’s metadata was updated.\nTopped up deficit in frozen ED of the reward pool.\nClaimed excess frozen ED of af the reward pool.\nMinimum bond required to create a pool.\nMinimum amount to bond to join a pool.\nThe amount does not meet the minimum bond to either join …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nNo commission current has been set.\nThere is no pending commission to claim.\nDon’t change.\nA pool must be in <code>PoolState::Destroying</code> in order for the …\nThere isn’t enough space in the unbond pool.\nEither a) the caller cannot make a valid kick or b) the …\nThe pool or member delegation has not migrated yet to …\nThe caller does not have nominating permissions for the …\nThe pool is not open to join\nThis call is not allowed in the current state of the …\nNo imbalance in the ED deposit for the pool.\nNo slash pending that can be applied to the member.\nThe pool is open to be joined, and is working normally.\nThe transaction could not be executed due to overflow risk …\nA payout has been made to a member.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe nomination pool’s pallet id.\nPartial unbonding now allowed permissionlessly.\nOnly the pool member themselves can claim their rewards.\nAnyone can withdraw and compound rewards on a pool member…\nAnyone can compound rewards on a pool member’s behalf.\nAnyone can withdraw rewards on a pool member’s behalf.\nA pool’s commission <code>change_rate</code> has been changed.\nPool commission claim permission has been updated.\nPool commission has been claimed.\nA pool’s commission setting has been changed.\nType used for unique identifier of each pool.\nPool id currently in use.\nA pool’s maximum commission setting has been changed.\nA member in a pool.\nAn account is not a member.\nActive members.\nPool reward account is restricted from going below …\nA pool’s nominating account (or the pool’s root …\nThe pool is chilled i.e. no longer nominating.\nA (bonded) pool id does not exist.\nA (bonded) pool id does not exist.\nPool administration roles.\nThe active balance of pool <code>pool_id</code> has been slashed to …\nA pool’s possible states.\nThe amount of eras a <code>SubPools::with_era</code> pool can exist …\nRemove from storage.\nAccount is restricted from participation in pools. This …\nA reverse lookup from the pool’s account id to its id.\nThe type that is used for reward counter.\nA reward pool.\nA reward pool does not exist. In all cases this is a …\nA reward pool does not exist. In all cases this is a …\nReward pools. This is where there rewards for each pool …\nTake the entire amount from the accumulated rewards.\nThe roles of a pool have been updated to the given new …\nThe overarching event type.\nThe overarching freeze reason.\nSet the given value.\nUnable to slash to the member of the pool.\nThe slash amount is too low to be applied.\nThe interface for nominating.\nThe state of a pool has changed\nA sub pool does not exist.\nA sub pool does not exist.\nGroups of unbonding pools. Each group of unbonding pools …\nThe maximum amount of eras an unbonding pool can exist …\nThe sum of funds across all pools.\nInfallible method for converting <code>U256</code> to <code>Currency::Balance</code>.\nAn unbonding pool. This is always mapped with an era.\nA member has unbonded from their pool.\nThe unbond pool at <code>era</code> of pool <code>pool_id</code> has been slashed to …\nWeight functions needed for <code>pallet_nomination_pools</code>.\nWeight information for extrinsics in this pallet.\nA member has withdrawn from their pool.\nTop up the deficit or withdraw the excess ED from the pool.\nTop up the deficit or withdraw the excess ED from the pool.\nReturns the equivalent <code>new_funds</code> balance to point …\nChecks whether member delegation needs to be migrated to …\nReturns the unapplied slash of a member.\nContribution of the member in the pool.\nReturns the pending rewards for the specified <code>who</code> account.\nReturns the points to balance conversion for a specified …\nReturns the bonded account and reward account associated …\nTotal balance contributed to the pool.\nChecks whether pool needs to be migrated to …\nReturns the unapplied slash of the pool.\nApply a pending slash on a member.\nApply a pending slash on a member.\nThe funds in the pool.\nBond <code>extra</code> more funds from <code>origin</code> into the pool to which …\nBond <code>extra</code> more funds from <code>origin</code> into the pool to which …\n<code>origin</code> bonds funds from <code>extra</code> for some pool member <code>member</code> …\n<code>origin</code> bonds funds from <code>extra</code> for some pool member <code>member</code> …\nCan change the pools state and kick members if the pool is …\nOptional configuration around how often commission can be …\nCheck if any pool have an incorrect amount of ED frozen.\nChill on behalf of the pool.\nChill on behalf of the pool.\nClaim pending commission.\nClaim pending commission.\nA bonded member can use this to claim their payout based …\nA bonded member can use this to claim their payout based …\n<code>origin</code> can claim payouts on some pool member <code>other</code>’s …\n<code>origin</code> can claim payouts on some pool member <code>other</code>’s …\nThe commission rate of the pool.\nCreate a new delegation pool.\nCreate a new delegation pool.\nCreate a new delegation pool with a previously used pool id\nCreate a new delegation pool with a previously used pool id\nOptional commission rate of the pool along with the …\nCreates the pool and is the initial member. They can only …\nThe amount of bond that MUST REMAIN IN BONDED in ALL POOLS.\nRemove everything related to the given bonded pool.\nEnsure the correctness of the state of this pallet.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nFully unbond the shares of <code>member</code>, when executed from …\nCreate the main, bonded account of a pool with the given …\nCreate the reward account of a pool with the given id.\nGet <code>Self</code> from storage. Returns <code>None</code> if no entry for …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStake funds with a pool. The amount to bond is delegated …\nStake funds with a pool. The amount to bond is delegated …\nThe reward counter at the time of this member’s last …\nThe last recorded value of the reward counter.\nThe last recorded total payouts of the reward pool.\nOptional maximum commission that can be set by the pool …\nThe maximum amount the commission can be updated by per …\nCount of members that belong to the pool.\nMigrates delegated funds from the pool account to the …\nMigrates delegated funds from the pool account to the …\nMigrate pool from <code>adapter::StakeStrategyType::Transfer</code> to …\nMigrate pool from <code>adapter::StakeStrategyType::Transfer</code> to …\nHow often an update can take place.\nCreate a call with the variant <code>adjust_pool_deposit</code>.\nCreate a call with the variant <code>apply_slash</code>.\nCreate a call with the variant <code>bond_extra</code>.\nCreate a call with the variant <code>bond_extra_other</code>.\nCreate a call with the variant <code>chill</code>.\nCreate a call with the variant <code>claim_commission</code>.\nCreate a call with the variant <code>claim_payout</code>.\nCreate a call with the variant <code>claim_payout_other</code>.\nCreate a call with the variant <code>create</code>.\nCreate a call with the variant <code>create_with_pool_id</code>.\nCreate a call with the variant <code>join</code>.\nCreate a call with the variant <code>migrate_delegation</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>nominate</code>.\nCreate a call with the variant <code>pool_withdraw_unbonded</code>.\nCreate a call with the variant <code>set_claim_permission</code>.\nCreate a call with the variant <code>set_commission</code>.\nCreate a call with the variant <code>set_commission_change_rate</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>set_commission_max</code>.\nCreate a call with the variant <code>set_configs</code>.\nCreate a call with the variant <code>set_metadata</code>.\nCreate a call with the variant <code>set_state</code>.\nCreate a call with the variant <code>unbond</code>.\nCreate a call with the variant <code>update_roles</code>.\nCreate a call with the variant <code>withdraw_unbonded</code>.\nA general, era agnostic pool of funds that have fully …\nNominate on behalf of the pool.\nNominate on behalf of the pool.\nCan select which validators the pool nominates.\nReduces the balances of the <code>SubPools</code>, that belong to the …\nReduces the overall <code>TotalValueLocked</code> if a withdrawal …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe quantity of points this member has in the bonded pool …\nTotal points of all the members in the pool who are …\nThe points in this pool.\nThe identifier of the pool to which <code>who</code> belongs.\nCall <code>withdraw_unbonded</code> for the pools account. This call …\nCall <code>withdraw_unbonded</code> for the pools account. This call …\nSee <code>PoolRoles</code>.\nCan change the nominator, bouncer, or itself and can …\nAllows a pool member to set a claim permission to allow or …\nAllows a pool member to set a claim permission to allow or …\nSet the commission of a pool. Both a commission percentage …\nSet the commission of a pool. Both a commission percentage …\nSet the commission change rate for a pool.\nSet the commission change rate for a pool.\nSet or remove a pool’s commission claim permission.\nSet or remove a pool’s commission claim permission.\nSet the maximum commission of a pool.\nSet the maximum commission of a pool.\nUpdate configurations for the nomination pools. The origin …\nUpdate configurations for the nomination pools. The origin …\nSet a new metadata for the pool.\nSet a new metadata for the pool.\nSet a new state for the pool.\nSet a new state for the pool.\nThe current state of the pool.\nThe block from where throttling should be checked from. …\nTotal balance of the member, both active and unbonding. …\nThe amount of commission that has been claimed.\nThe amount of commission pending to be claimed.\nTotal amount that this pool has paid out so far to the …\nUnbond up to <code>unbonding_points</code> of the <code>member_account</code>’s …\nUnbond up to <code>unbonding_points</code> of the <code>member_account</code>’s …\nThe eras in which this member is unbonding, mapped from …\nRemoves the ED freeze on the reward account of <code>pool_id</code>.\nUpdate the roles of the pool.\nUpdate the roles of the pool.\nAutogenerated weights for <code>pallet_nomination_pools</code>\nMap of era in which a pool becomes unbonded in =&gt; unbond …\nWithdraw unbonded funds from <code>member_account</code>. If no bonded …\nWithdraw unbonded funds from <code>member_account</code>. If no bonded …\nMember funds are delegated to pool account and staked.\nA staking strategy implementation that supports delegation …\nA type that only belongs in context of a pool member.\nA type that only belongs in context of a pool.\nAn adapter trait that can support multiple staking …\nTypes of stake strategies.\nMember funds are transferred to pool account and staked.\nA staking strategy implementation that supports transfer …\nSee <code>StakingInterface::active_stake</code>.\nSee <code>StakingInterface::bonding_duration</code>.\nSee <code>StakingInterface::chill</code>.\nSee <code>StakingInterface::current_era</code>.\nDissolve the pool account.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAmount of tokens delegated by the member.\nSlash the member account with <code>amount</code> against pending …\nWithdraw funds from pool account to member account.\nMigrate member balance from pool account to member account.\nMigrate pool account from being a direct nominator to a …\nSee <code>StakingInterface::minimum_nominator_bond</code>.\nSee <code>StakingInterface::nominate</code>.\nList of validators nominated by the pool account.\nCheck if there is any pending slash for the pool.\nPledge <code>amount</code> towards <code>pool_account</code> and update the pool …\nWhich strategy the pool account is using.\nRemove the pool account as agent.\nThe type of staking strategy of the current adapter.\nTotal balance of the pool including amount that is …\nSee <code>StakingInterface::total_stake</code>.\nBalance that can be transferred from pool account to …\nSee <code>StakingInterface::unbond</code>.\nSee <code>StakingInterface::withdraw_unbonded</code>.\nExports for versioned migration <code>type</code>s for this pallet.\nMigrate existing pools from …\nChecks and updates <code>TotalValueLocked</code> if out of sync.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrivial migration which makes the roles of each pool …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMigrate the pool reward scheme to the new version, as per …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis migration removes stale bonded-pool metadata, if any.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nWarning\nMigrates from <code>v3</code> directly to <code>v5</code> to avoid the broken <code>v4</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis migration adds <code>total_commission_pending</code> and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nWrapper over <code>MigrateToV6</code> with convenience version checks.\nMigration V6 to V7 wrapped in a …\nv8: Adds commission claim permissions to <code>BondedPools</code>.\nAll pallets included in the runtime as a nested tuple of …\nAll pallets included in the runtime as a nested tuple of …\nProvides an implementation of <code>PalletInfo</code> to provide …\nThe aggregated runtime call type.\nA reason for placing a freeze on funds.\nA reason for placing a hold on funds.\nAn identifier for each lock placed on funds.\nThe runtime origin type representing the origin of a call.\nA reason for slashing funds.\nAn aggregation of all <code>Task</code> enums across all pallets …\nRuntime query type.\nAll events of the <code>Balances</code> pallet.\nDerived development accounts(Optional):\nConvenience function for view functions dispatching and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert to runtime origin with caller being system signed …\nConvert to runtime origin, using as filter: …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nOptionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSame as <code>fully_unbond</code>, in permissioned setting.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the key for this parameter type.\nReturns the key for this parameter type.\nReturns the key for this parameter type.\nReturns the key for this parameter type.\nReturns the key for this parameter type.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nCreate with system none origin and …\nAll events of this pallet.\nKill/reset the value to whatever was set at first.\nKill/reset the value to whatever was set at first.\nKill/reset the value to whatever was set at first.\nKill/reset the value to whatever was set at first.\nKill/reset the value to whatever was set at first.\nKill/reset the value to whatever was set at first.\nKill/reset the value to whatever was set at first.\nKill/reset the value to whatever was set at first.\nKill/reset the value to whatever was set at first.\nKill/reset the value to whatever was set at first.\nCreate with system root origin and …\nHelper to run a specified amount of blocks.\nSet the internal value.\nSet the internal value.\nSet the internal value.\nSet the value of this parameter type in the storage.\nSet the value of this parameter type in the storage.\nSet the internal value.\nSet the internal value.\nSet the value of this parameter type in the storage.\nSet the internal value.\nSet the value of this parameter type in the storage.\nSet the value of this parameter type in the storage.\nSet the internal value.\nSet the internal value.\nSet the internal value.\nSet the internal value.\nCreate with system signed origin and …\nMimics a slash towards a pool specified by <code>pool_id</code>. This …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nAn account is already delegating in another pool. An …\nThe origin that can manage pool configurations.\nThe pool or member delegation has already migrated to …\nInfallible method for converting <code>Currency::Balance</code> to <code>U256</code>.\nProvider for the block number. Normally this is the …\nBonding extra is restricted to the exact pending reward …\nA member has became bonded in a pool.\nStorage for bonded pools.\nThe bonded account should only be killed by the staking …\nContains a variant per dispatchable extrinsic that this …\nThe pools state cannot be changed.\nNone of the funds can be withdrawn yet because the bonding …\nMap from a pool member account to their opted claim …\nThe submitted changes to commission change rate are not …\nNot enough blocks have surpassed since the last commission …\nThe supplied commission exceeds global maximum commission.\nThe supplied commission exceeds the max allowed commission.\nConfiguration trait of this pallet.\nA pool has been created.\nThe currency type used for nomination pool.\nSome error occurred that should never happen. This should …\nThe delegation feature is unsupported.\nA pool has been destroyed.\nThe caller does not have adequate permissions.\nThe <code>Error</code> enum of this pallet.\nEvents of this pallet.\nRestrict some accounts from participating in a nomination …\nA reason for freezing funds.\nThe member is fully unbonded (and thus cannot access the …\nCan be used to configure the genesis state of this pallet.\nThe maximum commission that can be charged by a pool. Used …\nGlobal parameters regulating nomination pools have been …\nPool id provided is not correct/usable.\nEver increasing number of all pools created so far.\nThe pool’s max commission cannot be set higher than the …\nThe maximum length, in bytes, that a pools metadata maybe.\nThe maximum pool points-to-balance ratio that an <code>open</code> pool …\nMaximum number of members that can exist in the system. If …\nToo many members in the pool or system.\nMaximum number of members that may belong to pool. If <code>None</code>…\nMaximum number of nomination pools that can exist. If <code>None</code>…\nThe system is maxed out on pools.\nThe maximum number of simultaneous unbonding chunks that …\nThe member cannot unbond further chunks due to reaching …\nA pool member’s claim permission has been updated.\nA member has been removed from a pool.\nMetadata for the pool.\nMetadata exceeds <code>Config::MaxMetadataLen</code>\nA pool’s metadata was updated.\nTopped up deficit in frozen ED of the reward pool.\nClaimed excess frozen ED of af the reward pool.\nMinimum bond required to create a pool.\nMinimum amount to bond to join a pool.\nThe amount does not meet the minimum bond to either join …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nNo commission current has been set.\nThere is no pending commission to claim.\nA pool must be in <code>PoolState::Destroying</code> in order for the …\nThere isn’t enough space in the unbond pool.\nEither a) the caller cannot make a valid kick or b) the …\nThe pool or member delegation has not migrated yet to …\nThe caller does not have nominating permissions for the …\nThe pool is not open to join\nThis call is not allowed in the current state of the …\nNo imbalance in the ED deposit for the pool.\nNo slash pending that can be applied to the member.\nThe transaction could not be executed due to overflow risk …\nA payout has been made to a member.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe nomination pool’s pallet id.\nPartial unbonding now allowed permissionlessly.\nA pool’s commission <code>change_rate</code> has been changed.\nPool commission claim permission has been updated.\nPool commission has been claimed.\nA pool’s commission setting has been changed.\nPool id currently in use.\nA pool’s maximum commission setting has been changed.\nAn account is not a member.\nActive members.\nPool reward account is restricted from going below …\nA pool’s nominating account (or the pool’s root …\nThe pool is chilled i.e. no longer nominating.\nA (bonded) pool id does not exist.\nA (bonded) pool id does not exist.\nThe active balance of pool <code>pool_id</code> has been slashed to …\nThe amount of eras a <code>SubPools::with_era</code> pool can exist …\nAccount is restricted from participation in pools. This …\nA reverse lookup from the pool’s account id to its id.\nThe type that is used for reward counter.\nA reward pool does not exist. In all cases this is a …\nA reward pool does not exist. In all cases this is a …\nReward pools. This is where there rewards for each pool …\nThe roles of a pool have been updated to the given new …\nThe overarching event type.\nThe overarching freeze reason.\nUnable to slash to the member of the pool.\nThe slash amount is too low to be applied.\nThe interface for nominating.\nThe state of a pool has changed\nA sub pool does not exist.\nA sub pool does not exist.\nGroups of unbonding pools. Each group of unbonding pools …\nThe sum of funds across all pools.\nInfallible method for converting <code>U256</code> to <code>Currency::Balance</code>.\nA member has unbonded from their pool.\nThe unbond pool at <code>era</code> of pool <code>pool_id</code> has been slashed to …\nWeight information for extrinsics in this pallet.\nA member has withdrawn from their pool.\nTop up the deficit or withdraw the excess ED from the pool.\nApply a pending slash on a member.\nBond <code>extra</code> more funds from <code>origin</code> into the pool to which …\n<code>origin</code> bonds funds from <code>extra</code> for some pool member <code>member</code> …\nChill on behalf of the pool.\nClaim pending commission.\nA bonded member can use this to claim their payout based …\n<code>origin</code> can claim payouts on some pool member <code>other</code>’s …\nCreate a new delegation pool.\nCreate a new delegation pool with a previously used pool id\nStake funds with a pool. The amount to bond is delegated …\nMigrates delegated funds from the pool account to the …\nMigrate pool from <code>adapter::StakeStrategyType::Transfer</code> to …\nNominate on behalf of the pool.\nCall <code>withdraw_unbonded</code> for the pools account. This call …\nAllows a pool member to set a claim permission to allow or …\nSet the commission of a pool. Both a commission percentage …\nSet the commission change rate for a pool.\nSet or remove a pool’s commission claim permission.\nSet the maximum commission of a pool.\nUpdate configurations for the nomination pools. The origin …\nSet a new metadata for the pool.\nSet a new state for the pool.\nUnbond up to <code>unbonding_points</code> of the <code>member_account</code>’s …\nUpdate the roles of the pool.\nWithdraw unbonded funds from <code>member_account</code>. If no bonded …\nWeights for <code>pallet_nomination_pools</code> using the Substrate …\nWeight functions needed for <code>pallet_nomination_pools</code>.\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::PoolMembers</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::PoolMembers</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::ClaimPermissions</code> (r:1 w:0) …\nStorage: <code>NominationPools::PoolMembers</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::ClaimPermissions</code> (r:1 w:0) …\nStorage: <code>NominationPools::LastPoolId</code> (r:1 w:1) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>NominationPools::MinJoinBond</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::PoolMembers</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::PoolMembers</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::MinJoinBond</code> (r:0 w:1) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::PoolMembers</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::PoolMembers</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::PoolMembers</code> (r:1 w:1) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nBenchmarks for the nomination pools coupled with the …\nCalls <code>U::from(self)</code>.\nRuntime api for accessing information about nomination …\nReturns the equivalent points of <code>new_funds</code> for a given …\nReturns true if the delegated funds of the pool <code>member</code> …\nReturns the pending slash for a given pool member.\nReturns the total contribution of a pool member including …\nReturns the pending rewards for the member that the …\nReturns the equivalent balance of <code>points</code> for a given pool.\nReturns the bonded account and reward account associated …\nTotal balance contributed to the pool.\nReturns true if the pool with <code>pool_id</code> needs migration.\nReturns the pending slash for a given pool.\nContains a variant per dispatchable extrinsic that this …\nA vector of reports of the same kind that happened at the …\nConfiguration trait of this pallet.\nEvents type.\nFull identification of the validator.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThere is an offence reported of the given <code>kind</code> happened at …\nA handler called for every offence report.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe primary structure that holds all offence records keyed …\nThe overarching event type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nGet the offence details from reports of given ID.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nA vector of reports of the same kind that happened at the …\nConfiguration trait of this pallet.\nEvents type.\nFull identification of the validator.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThere is an offence reported of the given <code>kind</code> happened at …\nA handler called for every offence report.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe primary structure that holds all offence records keyed …\nThe overarching event type.\nA helper trait to make sure we can convert …\nConvert identification tuple from <code>historical</code> trait to the …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nOffences pallet benchmarking.\nCalls <code>U::from(self)</code>.\nA helper trait to make sure we can convert …\nConvert identification tuple from <code>historical</code> trait to the …\nRetrieve every aggregated oracle value tracked by the …\nThe oracle member has already fed data in the current …\nHelper trait for benchmarking oracle operations.\nA helper trait for benchmarking oracle operations.\nContains a variant per dispatchable extrinsic that this …\nUsed to combine data from multiple providers.\nThe implementation to combine raw values into a single …\nConfiguration trait of this pallet.\nA trait for feeding data to a data provider.\nA simple trait for providing data.\nAn extended <code>DataProvider</code> that provides timestamped data.\nSort by value and returns median timestamped value. …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nExceeds the maximum number of <code>HasDispatched</code> size.\nRetrieve the aggregated oracle value for a specific key, …\n<code>Instance1</code> to be used for instantiable pallets defined with …\nThe maximum number of key-value pairs that can be …\nThe maximum number of oracle operators that can feed data …\nThe source of oracle members.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nNew data has been fed into the oracle.\nThe sender is not a member of the oracle and does not have …\nA handler for new data events.\nA hook to be called when new data is received.\nThe key type for identifying oracle data feeds.\nThe value type for oracle data.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe pallet ID.\nThe raw values for each oracle operator.\nThe time provider for timestamping oracle data.\nA wrapper for a value with a timestamp.\nThe aggregated values for each oracle key.\nWeight functions needed for <code>pallet_oracle</code>.\nWeight information for extrinsics in this pallet.\nRetrieve every aggregated oracle value tracked by the …\nCombine data provided by operators\nCreates a median data provider from a list of other data …\nFeeds a new value for a given key.\nFeeds external data values into the oracle system.\nFeeds external data values into the oracle system.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the data for a given key.\nReturns the aggregated and timestamped value for a given …\nReturns a list of all keys and their optional timestamped …\nReturns a list of <code>(oracle_key, oracle_value)</code> pairs to be …\nRetrieve the aggregated oracle value for a specific key, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new [<code>#view_function_struct_ident</code>] instance.\nCreate a new [<code>#view_function_struct_ident</code>] instance.\nCreate a call with the variant <code>feed_values</code>.\n<code>on_initialize</code> to return the weight used in <code>on_finalize</code>.\nNew data is available\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAn auto-generated getter for <code>RawValues</code>.\nReads the raw values for a given key from all oracle …\nThe timestamp.\nThis module provides traits for data feeding and …\nThe value.\nAn auto-generated getter for <code>Values</code>.\nAutogenerated weights for <code>pallet_oracle</code>\nThe account that fed the data.\nThe key-value pairs of the data that was fed.\nRetrieve every aggregated oracle value tracked by the …\nThe oracle member has already fed data in the current …\nA helper trait for benchmarking oracle operations.\nContains a variant per dispatchable extrinsic that this …\nThe implementation to combine raw values into a single …\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nExceeds the maximum number of <code>HasDispatched</code> size.\nRetrieve the aggregated oracle value for a specific key, …\n<code>Instance1</code> to be used for instantiable pallets defined with …\nThe maximum number of key-value pairs that can be …\nThe maximum number of oracle operators that can feed data …\nThe source of oracle members.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nNew data has been fed into the oracle.\nThe sender is not a member of the oracle and does not have …\nA hook to be called when new data is received.\nThe key type for identifying oracle data feeds.\nThe value type for oracle data.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe pallet ID.\nThe raw values for each oracle operator.\nThe time provider for timestamping oracle data.\nA wrapper for a value with a timestamp.\nThe aggregated values for each oracle key.\nWeight information for extrinsics in this pallet.\nFeeds external data values into the oracle system.\nThe timestamp.\nThe value.\nThe account that fed the data.\nThe key-value pairs of the data that was fed.\nUsed to combine data from multiple providers.\nA trait for feeding data to a data provider.\nA simple trait for providing data.\nAn extended <code>DataProvider</code> that provides timestamped data.\nA handler for new data events.\nCombine data provided by operators\nFeeds a new value for a given key.\nReturns the data for a given key.\nReturns a list of all keys and their optional timestamped …\nReturns the median of a list of values.\nNew data is available\nWeights for <code>pallet_oracle</code> using the Substrate node and …\nWeight functions needed for <code>pallet_oracle</code>.\nStorage: <code>TechnicalMembership::Members</code> (r:1 w:0) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Oracle::HasDispatched</code> (r:0 w:1) Proof: …\nRuntime API for querying oracle data from the blockchain.\nRetrieves all oracle values for a specific provider.\nRetrieves a specific oracle value for a given provider and …\nThe allowance for an entity, defining its usage limit and …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe origin has no usage tracked.\nThe usage is not zero.\nFor some entities, the calls that are allowed to go beyond …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe info passed between the prepare and post-dispatch …\nThis transaction extension restricts some origins and …\nThe restriction of an entity.\nThe type that represent the entities tracked, its …\nThe runtime event type.\nThe usage of an entity.\nUsage for an entity is cleaned.\nThe current usage for each entity.\nThe info passed between the validate and prepare steps for …\nWeight functions needed for pallet origins restriction.\nThe weight information for this pallet.\nThe allowance given for the entity.\nThe block number at which the usage was last updated.\nAllow to clean usage associated with an entity when it is …\nAllow to clean usage associated with an entity when it is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum usage allowed before transactions are …\nInstantiates a new <code>RestrictOrigins</code> extension.\nCreate a call with the variant <code>clean_usage</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe amount of usage recovered per block.\nWhether the origin is restricted, and what entity it …\nThe amount of usage consumed at block <code>at_block</code>.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe origin has no usage tracked.\nThe usage is not zero.\nFor some entities, the calls that are allowed to go beyond …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe type that represent the entities tracked, its …\nThe runtime event type.\nThe usage of an entity.\nUsage for an entity is cleaned.\nThe current usage for each entity.\nThe weight information for this pallet.\nThe block number at which the usage was last updated.\nAllow to clean usage associated with an entity when it is …\nThe amount of usage consumed at block <code>at_block</code>.\nWeight functions needed for pallet origins restriction.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\n<code>Instance1</code> to be used for instantiable pallets defined with …\nA storage paged list akin to what the FRAME macros would …\nGenerates a unique storage prefix for each instance of the …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nA paginated storage list.\nThe value type that can be stored in the list.\nThe number of values that can be put into newly created …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHelpers for tests.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAll pallets included in the runtime as a nested tuple of …\nAll pallets included in the runtime as a nested tuple of …\nProvides an implementation of <code>PalletInfo</code> to provide …\nThe aggregated runtime call type.\nA reason for placing a freeze on funds.\nA reason for placing a hold on funds.\nAn identifier for each lock placed on funds.\nThe runtime origin type representing the origin of a call.\nA reason for slashing funds.\nAn aggregation of all <code>Task</code> enums across all pallets …\nRuntime query type.\nConvenience function for view functions dispatching and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert to runtime origin with caller being system signed …\nConvert to runtime origin, using as filter: …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nOptionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the key for this parameter type.\nBuild genesis storage according to the mock runtime.\nCreate with system none origin and …\nCreate with system root origin and …\nSet the value of this parameter type in the storage.\nCreate with system signed origin and …\nRun this closure in test externalities.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\n<code>Instance1</code> to be used for instantiable pallets defined with …\nA storage paged list akin to what the FRAME macros would …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe value type that can be stored in the list.\nThe number of values that can be put into newly created …\nThe origin which may update a parameter.\nThe origin which may update a parameter.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nBased on <code>Config</code>. Auto-generated by …\nThe <code>Event</code> enum of this pallet\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nStored parameters.\nThe overarching event type.\nThe overarching event type.\nThe overarching KV type of the parameters.\nThe overarching KV type of the parameters.\nA Parameter was set.\nWeight functions needed for <code>pallet_parameters</code>.\nWeight information for extrinsics in this module.\nWeight information for extrinsics in this module.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>set_parameter</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nSet the value of a parameter.\nSet the value of a parameter.\nThe key that was updated.\nThe new value after this call.\nThe old value before this call.\nThe origin which may update a parameter.\nThe origin which may update a parameter.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nBased on <code>Config</code>. Auto-generated by …\nThe <code>Event</code> enum of this pallet\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nStored parameters.\nThe overarching event type.\nThe overarching event type.\nThe overarching KV type of the parameters.\nThe overarching KV type of the parameters.\nA Parameter was set.\nWeight information for extrinsics in this module.\nWeight information for extrinsics in this module.\nDefault implementations of <code>DefaultConfig</code>, which can be …\nSet the value of a parameter.\nThe key that was updated.\nThe new value after this call.\nThe old value before this call.\nA configuration for testing.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nContexts which may validly have an account alias behind it …\nThe account is already in use under another alias.\nConversion of an account ID to a contextual alias.\nAssociation of an account ID to a personal ID.\nThe number of people currently included in a ring.\nAlias &lt;-&gt; Account is already set and up to date.\nConversion of a contextual alias to an account ID.\nThe rings can accept new people sequentially if the …\nHelper for benchmarks.\nContains a variant per dispatchable extrinsic that this …\nNumber of chunks per page.\nPaginated collection of static chunks used by the …\nConfiguration trait of this pallet.\nCould not push member into the ring.\nAn mutating session could not be started.\nTrait allowing cryptographic proof of membership without …\nKeeps track of the ring index currently being populated.\nGuard to ensure that the given origin is a person. The …\nGuard to ensure that the given origin is a person. The …\nGuard to ensure that the given origin is a person. The …\nGuard to ensure that the given origin is a person.\nGuard to ensure that the given origin is a person.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCan be used to configure the genesis state of this pallet.\nCoordinates within the rings for a person that was …\nThe root cannot be finalized as there are still unpushed …\nThe account is not known.\nThe context is not a member of those allowed to have …\nInvalid state for attempted key migration.\nThe onboarding size must not exceed the maximum ring size.\nThe proof is invalid.\nRing cannot be merged if it’s the top ring.\nThe signature is invalid.\nSuspension indices provided are invalid.\nKey already in use by another person.\nInvalid suspension of a key belonging to a person whose …\nAfter mutations to the member set, any pending key …\nA map of all the people who have declared their intent to …\nThe old key was not found when expected.\nThe current individuals we recognise, but not necessarily …\nMaximum number of people included in a ring before a new …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nA semaphore counting the number of entities making changes …\nThe next free and never reserved personal ID.\nThe given person has no associated key.\nThere are not yet any members of our personhood set.\nAn mutating action was queued when there was no mutation …\nThe supplied identifier does not represent a person.\nPersonhood cannot be resumed if it is not suspended.\nCoordinates within the onboarding queue for a person that …\nPaginated collection of people public keys ready to be …\nMaximum number of people included in an onboarding queue …\nMaximum number of people queued before onboarding to a …\nThe <code>Pallet</code> struct, the main type that implements traits …\nA map of all rings which currently have pending …\nThe current individuals we recognise, but not necessarily …\nAn individual has had their personhood recognised again …\nRecord of personhood.\nPersonal Id was not reserved.\nPersonal Id was not reserved or not already recognized.\nPersonal Id has never been reserved.\nAn individual has had their personhood recognised and …\nKeeps track of the page indices of the head and tail of …\nCandidates’ reserved identities which we track.\nAn alias <code>Alias</code> used in a specific ring revision.\nA contextual alias <code>ContextualAlias</code> used in a specific ring …\nRing cannot be merged if it’s not below 1/2 capacity.\nHint for the maximum number of people that can be included …\nBoth the keys that are included in built rings and the …\nStores the meta information for each ring, the number of …\nThe overarching state of all people rings regarding the …\nThe state of a person’s key within the pallet along with …\nInformation about the current key inclusion status in a …\nThe state of the pallet regarding the actions that are …\nThe current individuals we recognise.\nThe runtime event type.\nThe record is already using this key.\nThe root is still fresh.\nThe person is suspended and isn’t part of any ring or …\nPersonhood is suspended.\nCannot merge rings while a suspension session is in …\nRing cannot be built while there are suspensions pending.\nCall is too late or too early.\nToo many members have been pushed.\nWeight functions needed for pallet_ranked_collective.\nWeight information for extrinsics in this pallet.\nAn optional privileged account that can send transaction …\nThe amount of block number tolerance we allow for a setup …\nReturns whether the state allows only incremental …\nBuild a ring root by including registered people.\nBuild a ring root by including registered people.\nMove out of a key migration state.\nMove out of a mutation state.\nEnsure that the origin <code>o</code> represents an extrinsic (i.e. …\nEnsure that the origin <code>o</code> represents a person. Returns <code>Ok</code> …\nEnsure that the origin <code>o</code> represents an extrinsic (i.e. …\nEnsure that the origin <code>o</code> represents a person. Returns <code>Ok</code> …\nEnsure that the origin <code>o</code> represents an extrinsic (i.e. …\nEnsure that the origin <code>o</code> represents a person. On success …\nPeople transaction extensions.\nRecognize a set of people without any additional checks.\nRecognize a set of people without any additional checks.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe number of keys that have already been baked in.\nAn intermediate value if the ring is not full.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the state allows the pending key …\nMerge the people in two rings into a single, new ring. In …\nMerge the people in two rings into a single, new ring. In …\nMigrate the key for a person who was onboarded and is …\nMigrate the key for a person who was onboarded and is …\nMigrate the key for a person who is currently onboarding. …\nMigrate the key for a person who is currently onboarding. …\nReturns whether the state allows mutating the member set …\nCreate a call with the variant <code>build_ring_manual</code>.\nCreate a call with the variant <code>force_recognize_personhood</code>.\nCreate a call with the variant <code>merge_rings</code>.\nCreate a call with the variant <code>migrate_included_key</code>.\nCreate a call with the variant <code>migrate_onboarding_key</code>.\nCreate a call with the variant <code>onboard_people_manual</code>.\nCreate a call with the variant <code>set_alias_account</code>.\nCreate a call with the variant <code>set_onboarding_size</code>.\nCreate a call with the variant <code>set_personal_id_account</code>.\nCreate a call with the variant <code>under_alias</code>.\nCreate a call with the variant <code>unset_alias_account</code>.\nCreate a call with the variant <code>unset_personal_id_account</code>.\nOnboard people into a ring by taking their keys from the …\nOnboard people into a ring by taking their keys from the …")