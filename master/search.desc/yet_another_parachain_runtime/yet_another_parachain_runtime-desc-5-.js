searchState.loadedDescShard("yet_another_parachain_runtime", 5, "A type used for calculations concerning the <code>Balance</code> type …\nIt was not possible to get or increment the Id of the pool.\nInsufficient liquidity minted.\nProvided asset pair is not supported for pool.\nThe provided path must consists of 2 assets at least.\nA % the liquidity providers will take of every swap. …\nA successful call of the <code>AddLiquidity</code> extrinsic will …\nA successful call of the <code>RemoveLiquidity</code> extrinsic will …\nA fee to withdraw the liquidity.\nThe max number of hops in a swap.\nThe minimum LP token amount that could be minted. …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nStores the <code>PoolAssetId</code> that is going to be used for the …\nThe provided path must consists of unique assets.\nOptimal calculated amount is less than desired.\nAn overflow happened.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe pallet’s id, used for deriving its sovereign account …\nAsset class for the lp tokens from <code>Self::PoolAssets</code>.\nRegistry for the lp tokens. Ideally only this pallet …\nA successful call of the <code>CreatePool</code> extrinsic will create …\nPool already exists.\nLiquidity pool identifier.\nProvides means to resolve the <code>Config::PoolId</code> and it’s …\nThe pool doesn’t exist.\nA one-time fee to setup the pool.\nAsset class from <code>Config::Assets</code> used to pay the …\nHandler for the <code>Config::PoolSetupFee</code>.\nMap from <code>PoolAssetId</code> to <code>PoolInfo</code>. This establishes whether …\nProvided maximum amount is not sufficient for swap.\nCalculated amount out is less than provided minimum amount.\nGets a quote for swapping an exact amount of <code>asset1</code> for …\nGets a quote for swapping <code>amount</code> of <code>asset1</code> for an exact …\nReserve needs to always be greater than or equal to the …\nOverarching event type.\nAssets have been converted from one to another.\nAssets have been converted from one to another. Both …\nPool has been touched in order to fulfill operational …\nWeight information for extrinsics in this pallet.\nDesired amount can’t be zero.\nAmount can’t be zero.\nRequested liquidity can’t be zero.\nProvide liquidity into the pool of <code>asset1</code> and <code>asset2</code>. …\nCreates an empty liquidity pool and an associated new …\nAllows you to remove liquidity by providing the …\nSwap the exact amount of <code>asset1</code> into <code>asset2</code>. <code>amount_out_min</code>…\nSwap any amount of <code>asset1</code> to get the exact amount of <code>asset2</code>…\nTouch an existing pool to fulfill prerequisites before …\nThe amount of the first asset that was removed from the …\nThe amount of the first asset that was added to the pool.\nThe amount of the second asset that was removed from the …\nThe amount of the second asset that was added to the pool.\nThe amount of the first asset that was swapped.\nThe amount of the first asset that was swapped.\nThe amount of the second asset that was received.\nThe amount of the second asset that was received.\nThe account that created the pool.\nThe id of the liquidity tokens that will be minted when …\nThe id of the lp token that was minted.\nThe id of the lp token that was burned.\nThe amount of lp tokens that were burned of that id.\nThe amount of lp tokens that were minted of that id.\nThe account that the liquidity tokens were minted to.\nThe route of asset IDs with amounts that the swap went …\nThe route of asset IDs with amounts that the swap went …\nThe account ID of the pool.\nThe pool id associated with the pool. Note that the order …\nThe pool id of the pool that the liquidity was added to.\nThe pool id that the liquidity was removed from.\nThe ID of the pool.\nThe account that the assets were transferred to.\nThe account that the liquidity was taken from.\nThe account that the liquidity tokens were burned from.\nWhich account was the instigator of the swap.\nThe account initiating the touch.\nThe account that the assets were transferred to.\nLiquidity withdrawal fee (%).\nWeights for <code>pallet_asset_conversion</code> using the Substrate …\nWeight functions needed for <code>pallet_asset_conversion</code>.\nStorage: <code>AssetConversion::Pools</code> (r:1 w:0) Proof: …\nStorage: <code>AssetConversion::Pools</code> (r:1 w:1) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>AssetConversion::Pools</code> (r:1 w:0) Proof: …\nStorage: <code>Assets::Asset</code> (r:4 w:4) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:4 w:4) Proof: <code>Assets::Asset</code> (…\nStorage: <code>AssetConversion::Pools</code> (r:1 w:0) Proof: …\nThe Balances pallet example of storing the balance of an …\nAll balance information for an account.\nThe means of storing the balances of an account.\nWhether something should be interpreted as an increase or …\nAny reason at all.\nThe balance of an account.\nThe balance of an account.\nA single lock on a balance. There can be many of these on …\nA balance was set by root.\nBalance was altered/dusted during an operation that should …\nSome amount was burned from an account.\nSome debt has been dropped from the Total Issuance.\nHeld balance was burned from an account.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nBeneficiary account must pre-exist.\nDecrease the amount.\nBased on <code>Config</code>. Auto-generated by …\nThe delta cannot be zero.\nSome amount was deposited (e.g. for transaction fees).\nAllows callbacks to other pallets so they can update their …\nAllows callbacks to other pallets so they can update their …\nAn account was removed whose balance was non-zero but …\nHandler for the unbalanced reduction when removing a dust …\nHandler for the unbalanced reduction when removing a dust …\nAn account was created with some free balance.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nValue too low to create account due to existential deposit.\nThe minimum amount required to keep an account open. MUST …\nThe minimum amount required to keep an account open. MUST …\nA vesting schedule already exists for this account.\nTransfer/payment would kill account.\nMutating the account failed unexpectedly. This might lead …\nPaying system transaction fees.\nThe ID type for freezes.\nThe ID type for freezes.\nFreeze locks on account balances.\nSome balance was frozen.\nCan be used to configure the genesis state of this pallet.\nSome balance was placed on hold.\nHolds on account balances.\nThe total units of outstanding deactivated balance in the …\nIncrease the amount.\n<code>Instance1</code> to be used for instantiable pallets defined with …\nBalance too low to send value.\nThe issuance cannot be modified since it is already …\nTotal issuance was increased by <code>amount</code>, creating a credit …\nAccount liquidity restrictions prevent withdrawal.\nSome balance was locked.\nAny liquidity locks on some account balances. NOTE: Should …\nThe maximum number of individual freeze locks that can …\nThe maximum number of individual freeze locks that can …\nThe maximum number of locks that should exist on an …\nThe maximum number of locks that should exist on an …\nThe maximum number of named reserves that can exist on an …\nThe maximum number of named reserves that can exist on an …\nSome amount was minted into an account.\nSome credit was balanced and added to the TotalIssuance.\nAny reason other than paying system transaction fees.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nOpaque, move-only struct with private fields that serves …\nThe <code>Pallet</code> struct, the main type that implements traits …\nOpaque, move-only struct with private fields that serves …\nSimplified reasons for withdrawing balance.\nSome balance was released from hold.\nTotal issuance was decreased by <code>amount</code>, creating a debt to …\nStore named reserved balance.\nThe ID type for reserves.\nThe ID type for reserves.\nSome balance was moved from the reserve of the first …\nSome balance was reserved (moved from free to reserved).\nNamed reserves on some account balances.\nSome amount was restored into an account.\nThe overarching event type.\nThe overarching event type.\nThe overarching freeze reason.\nThe overarching freeze reason.\nThe overarching hold reason.\nThe overarching hold reason.\nSome amount was removed from the account (e.g. for …\nSome amount was suspended from an account (it can be …\nSome balance was thawed.\nNumber of freezes exceed <code>MaxFreezes</code>.\nNumber of holds exceed <code>VariantCountOf&lt;T::RuntimeHoldReason&gt;</code>…\nNumber of named reserves exceed <code>MaxReserves</code>.\nThe total units issued in the system.\nThe <code>TotalIssuance</code> was forcefully changed.\nTransfer succeeded.\nThe <code>transferred</code> balance is placed on hold at the <code>dest</code> …\nA transfer of <code>amount</code> on hold from <code>source</code> to <code>dest</code> was …\nAn unexpected/defensive event was triggered.\nDefensive/unexpected errors/events.\nSome balance was unlocked.\nSome balance was unreserved (moved from reserved to free).\nAn account was upgraded.\nVesting balance too high to send value.\nWeight functions needed for <code>pallet_balances</code>.\nWeight information for extrinsics in this pallet.\nWeight information for extrinsics in this pallet.\nSome amount was withdrawn from the account (e.g. for …\nThe amount which the free balance may not drop below when …\nThe amount of the named reserve.\nBurn the specified liquid free balance from the origin …\nBurn the specified liquid free balance from the origin …\nCheck if <code>who</code> can reserve <code>value</code> from their free balance.\nDeposit some <code>value</code> into the free balance of <code>who</code>, possibly …\nDeposit some <code>value</code> into the free balance of an existing …\nGenerate dev account from derivation(hard) string.\nDerived development accounts(Optional):\nBasic drop handler will just square up the total issuance.\nBasic drop handler will just square up the total issuance.\nEnsure the account <code>who</code> is using the new logic.\nExtra information about this account. The MSB is a flag …\nAdjust the total issuance in a saturating way.\nAdjust the total issuance in a saturating way.\nSet the regular balance of a given account.\nSet the regular balance of a given account.\nExactly as <code>transfer_allow_death</code>, except the origin must be …\nExactly as <code>transfer_allow_death</code>, except the origin must be …\nUnreserve some balance from a user by force.\nUnreserve some balance from a user by force.\nNon-reserved part of the balance which the account holder …\nGet the free balance of an account.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe amount that <code>free + reserved</code> may not drop below when …\nAn identifier for this lock. Only one lock may be in …\nThe identifier for the named reserve.\nPublic function to get the inactive issuance.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPublic function to access the Locks storage.\nForce the new free balance of a target account <code>who</code> to some …\nCreate a new positive imbalance from a balance.\nCreate a new negative imbalance from a balance.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nIf true, then the lock remains in effect even for payment …\nMove the reserved balance of one account into the balance …\nMove the reserved balance of one account into the balance …\nMove <code>value</code> from the free balance from <code>who</code> to their …\nMove <code>value</code> from the free balance from <code>who</code> to a named …\nBalance which is has active holds on it and may not be …\nGet the reserved balance of an account.\nPublic function to access the reserves storage.\nSlash a target account <code>who</code>, returning the negative …\nSlash from reserved balance, returning the negative …\nSlash from reserved balance, returning the negative …\nPublic function to get the total issuance.\nTransfer the entire transferable balance from the caller …\nTransfer the entire transferable balance from the caller …\nTransfer some liquid free balance to another account.\nTransfer some liquid free balance to another account.\nSame as the <code>transfer_allow_death</code> call, but with a check …\nSame as the <code>transfer_allow_death</code> call, but with a check …\nUnreserve some funds, returning any amount that was unable …\nUnreserve some funds, returning any amount that was unable …\nUpgrade a specified account.\nUpgrade a specified account.\nGet the balance of an account that can be used for …\nGet the balance of an account that can be used for paying …\nAutogenerated weights for <code>pallet_balances</code>\nWithdraw some free balance from an account, respecting …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe Balances pallet example of storing the balance of an …\nThe means of storing the balances of an account.\nThe balance of an account.\nThe balance of an account.\nA balance was set by root.\nBalance was altered/dusted during an operation that should …\nSome amount was burned from an account.\nSome debt has been dropped from the Total Issuance.\nHeld balance was burned from an account.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nBeneficiary account must pre-exist.\nBased on <code>Config</code>. Auto-generated by …\nThe delta cannot be zero.\nSome amount was deposited (e.g. for transaction fees).\nAllows callbacks to other pallets so they can update their …\nAllows callbacks to other pallets so they can update their …\nAn account was removed whose balance was non-zero but …\nHandler for the unbalanced reduction when removing a dust …\nHandler for the unbalanced reduction when removing a dust …\nAn account was created with some free balance.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nValue too low to create account due to existential deposit.\nThe minimum amount required to keep an account open. MUST …\nThe minimum amount required to keep an account open. MUST …\nA vesting schedule already exists for this account.\nTransfer/payment would kill account.\nMutating the account failed unexpectedly. This might lead …\nThe ID type for freezes.\nThe ID type for freezes.\nFreeze locks on account balances.\nSome balance was frozen.\nCan be used to configure the genesis state of this pallet.\nSome balance was placed on hold.\nHolds on account balances.\nThe total units of outstanding deactivated balance in the …\n<code>Instance1</code> to be used for instantiable pallets defined with …\nBalance too low to send value.\nThe issuance cannot be modified since it is already …\nTotal issuance was increased by <code>amount</code>, creating a credit …\nAccount liquidity restrictions prevent withdrawal.\nSome balance was locked.\nAny liquidity locks on some account balances. NOTE: Should …\nThe maximum number of individual freeze locks that can …\nThe maximum number of individual freeze locks that can …\nThe maximum number of locks that should exist on an …\nThe maximum number of locks that should exist on an …\nThe maximum number of named reserves that can exist on an …\nThe maximum number of named reserves that can exist on an …\nSome amount was minted into an account.\nSome credit was balanced and added to the TotalIssuance.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nSome balance was released from hold.\nTotal issuance was decreased by <code>amount</code>, creating a debt to …\nThe ID type for reserves.\nThe ID type for reserves.\nSome balance was moved from the reserve of the first …\nSome balance was reserved (moved from free to reserved).\nNamed reserves on some account balances.\nSome amount was restored into an account.\nThe overarching event type.\nThe overarching event type.\nThe overarching freeze reason.\nThe overarching freeze reason.\nThe overarching hold reason.\nThe overarching hold reason.\nSome amount was removed from the account (e.g. for …\nSome amount was suspended from an account (it can be …\nSome balance was thawed.\nNumber of freezes exceed <code>MaxFreezes</code>.\nNumber of holds exceed <code>VariantCountOf&lt;T::RuntimeHoldReason&gt;</code>…\nNumber of named reserves exceed <code>MaxReserves</code>.\nThe total units issued in the system.\nThe <code>TotalIssuance</code> was forcefully changed.\nTransfer succeeded.\nThe <code>transferred</code> balance is placed on hold at the <code>dest</code> …\nA transfer of <code>amount</code> on hold from <code>source</code> to <code>dest</code> was …\nAn unexpected/defensive event was triggered.\nDefensive/unexpected errors/events.\nSome balance was unlocked.\nSome balance was unreserved (moved from reserved to free).\nAn account was upgraded.\nVesting balance too high to send value.\nWeight information for extrinsics in this pallet.\nWeight information for extrinsics in this pallet.\nSome amount was withdrawn from the account (e.g. for …\nBurn the specified liquid free balance from the origin …\nDefault implementations of <code>DefaultConfig</code>, which can be …\nDerived development accounts(Optional):\nAdjust the total issuance in a saturating way.\nSet the regular balance of a given account.\nExactly as <code>transfer_allow_death</code>, except the origin must be …\nUnreserve some balance from a user by force.\nTransfer the entire transferable balance from the caller …\nTransfer some liquid free balance to another account.\nSame as the <code>transfer_allow_death</code> call, but with a check …\nUpgrade a specified account.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_balances</code> using the Substrate node and …\nWeight functions needed for <code>pallet_balances</code>.\nStorage: <code>System::Account</code> (r:1 w:1) Proof: <code>System::Account</code> (…\nStorage: <code>System::Account</code> (r:1 w:1) Proof: <code>System::Account</code> (…\nStorage: <code>System::Account</code> (r:2 w:2) Proof: <code>System::Account</code> (…\nStorage: <code>System::Account</code> (r:1 w:1) Proof: <code>System::Account</code> (…\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>System::Account</code> (r:1 w:1) Proof: <code>System::Account</code> (…\nStorage: <code>System::Account</code> (r:1 w:1) Proof: <code>System::Account</code> (…\nStorage: <code>System::Account</code> (r:1 w:1) Proof: <code>System::Account</code> (…\nStorage: <code>System::Account</code> (r:999 w:999) Proof: …\nContains a variant per dispatchable extrinsic that this …\nThe call was already whitelisted; No-Op.\nThe call was not whitelisted.\nConfiguration trait of this pallet.\nRequired origin for dispatching whitelisted call with root …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe weight of the decoded call was higher than the witness.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe handler of pre-images.\nThe overarching call type.\nThe overarching event type.\nThe preimage of the call hash could not be loaded.\nThe call could not be decoded.\nWeight functions needed for <code>pallet_whitelist</code>.\nThe weight information for this pallet.\nRequired origin for whitelisting a call.\nStorage type is <code>StorageMap</code> with key type <code>T :: Hash</code> and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>dispatch_whitelisted_call</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>remove_whitelisted_call</code>.\nCreate a call with the variant <code>whitelist_call</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for <code>pallet_whitelist</code>\nContains a variant per dispatchable extrinsic that this …\nThe call was already whitelisted; No-Op.\nThe call was not whitelisted.\nConfiguration trait of this pallet.\nRequired origin for dispatching whitelisted call with root …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe weight of the decoded call was higher than the witness.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe handler of pre-images.\nThe overarching call type.\nThe overarching event type.\nThe preimage of the call hash could not be loaded.\nThe call could not be decoded.\nThe weight information for this pallet.\nRequired origin for whitelisting a call.\nStorage type is <code>StorageMap</code> with key type <code>T :: Hash</code> and …\nWeights for <code>pallet_whitelist</code> using the Substrate node and …\nWeight functions needed for <code>pallet_whitelist</code>.\nStorage: <code>Whitelist::WhitelistedCall</code> (r:1 w:1) Proof: …\nStorage: <code>Whitelist::WhitelistedCall</code> (r:1 w:1) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Whitelist::WhitelistedCall</code> (r:1 w:1) Proof: …\nStorage: <code>Whitelist::WhitelistedCall</code> (r:1 w:1) Proof: …\nThe <code>ConsensusEngineId</code> of AuRa.\nAbridged version of <code>HrmpChannel</code> (from the <code>Hrmp</code> parachains …\nAll balance information for an account.\nData to be associated with an account (other than …\nSome way of identifying an account on the chain. We …\nThe user account identifier type for the runtime.\nThe AccountId used across the system.\nAggregate message origin for the <code>MessageQueue</code> pallet.\nThe message was already processed.\nA unit struct which can be converted into a <code>Location</code> of …\nA thread-safe reference-counting pointer. ‘Arc’ stands …\nA <code>Vec</code> of <code>Asset</code>s.\nBridged messages, each message is: <code>BridgeMessage</code>\nThe message data format is unknown (e.g. unrecognised …\nBalance of an account.\nThe basic call filter to use in Origin. All origins are …\nThe Block type used by the runtime. This is used by …\nMaximum number of block number to block hash mappings to …\nThe maximum length of a block (in bytes).\nType alias for the <code>BlockNumber</code> associated type of system …\nBlock &amp; extrinsics weights: base values and limits.\nBlock weight limits &amp; base values configuration.\nNumbers which have upper and lower bounds\nA bounded slice.\nRuntime call type, as in <code>frame_system::Config::Call</code>\n…\nA message from the runtime to the consensus engine. This …\nInfallible conversion trait. Generic over both source and …\nMeans of converting a location into an account identifier.\nThe message data is bad (e.g. decoding returns an error).\nThe origin of an inbound message.\nDownward messages that already processed by parachains, …\nDownward messages, each message is: …\nThe weight of runtime database operations the runtime can …\n<code>?</code> formatting.\nDerive macro generating an impl of the trait <code>Debug</code>.\nTrait that allows zero-copy read of value-references from …\nDerive <code>parity_scale_codec::Decode</code> for struct and enum.\nUsed for immutable dereferencing operations, like <code>*v</code>.\nGeneric header digest.\nDigest item that is able to encode/decode ‘system’ …\nThis is the legacy return type of <code>Dispatchable</code>. It is …\nA lazy call (module function and argument values) that can …\nSomething that should be called when a downward message is …\nTrait that allows zero-copy write of value-references to …\nDerive <code>parity_scale_codec::Encode</code> and …\nA marker trait that tells the compiler that a type encode …\nCan enqueue messages for multiple origins.\nContains the error value\n<code>Error</code> is a trait representing the basic expectations for …\nErrors that can happen when attempting to execute an …\nWeight information for the transaction extensions of this …\nA trait for querying a single value from a type.\nHorizontal messages, each message is: …\nHeader hash type\nThe output of the <code>Hashing</code> function.\nA hash map implemented with quadratic probing and SIMD …\nHashing algorithm\nThe hashing system (algorithm) being used in the runtime …\nParachain head data included in the chain.\nSomething which fulfills the abstract idea of a Substrate …\nThe size of the page; this implies the maximum message …\nThe message came from the para-chain itself.\nThe pallet hooks trait. This is merely an umbrella trait …\nA type that uniquely identifies an HRMP channel. An HRMP …\nFlag indicating if global variables have been initialized …\nThe maximum amount of weight (if any) to be used from …\nThe messages that are passed by the collator to the …\nAn opaque set of information attached to the transaction. …\nThe available weight was insufficient to execute the …\nMost recent <code>HeadData</code> of each parachain, encoded.\nA value which is initialized on the first access.\nWeight limit imposed of the inner value.\nA relative path between state-bearing consensus systems.\nConverting trait to take a source type and convert to …\nThe maximum number of consumers allowed on a single …\nItems implementing <code>MaxEncodedLen</code> have a statically known …\nDerive <code>parity_scale_codec::MaxEncodedLen</code> for struct and …\nThe maximal length any enqueued message may have.\nThe maximum number of stale pages (i.e. of overweight …\nProcessor for a message.\nConfiguration trait of this pallet.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe migrator that is used to run Multi-Block-Migrations.\nA mutual exclusion primitive useful for protecting shared …\nThis stores the number of previous transactions associated …\nThe referenced message was not found.\nHeader number.\nContains the success value\nSee <code>Hooks::on_finalize</code>.\nSee <code>Hooks::on_idle</code>.\nSee <code>Hooks::on_initialize</code>.\nA function that is invoked when an account has been …\nHandler for when a new account has just been created.\nWhat to do if the runtime wants to change the code to …\nThe transport from where a message originates.\nMethods available on <code>frame_system::Config::RuntimeOrigin</code>.\nSome other thing. Unsupported and experimental.\nAn unspecified error.\nMessage processing was not attempted because it was not …\nAddresses a specific overweight message.\nParachains Ids a the Network\nTrait suitable for typical cryptographic PKI key pair type.\nProvides information about the pallet setup in the runtime.\nThe caller origin, overarching type of all pallets origins.\nThe message originated from this parachain.\nUnique identifier of a parachain.\nThe inherent data that is passed by the collator to the …\nContains a variant per dispatchable extrinsic that this …\nThe <code>Pallet</code> struct, the main type that implements traits …\nA unit struct which can be converted into a <code>Location</code> of …\nThe message came from the relay-chain.\nThe validation data provides information about how to …\nZero-sized type used to mark things that “act like” …\nAdditional information that is returned by <code>dispatch</code>. Can …\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly before …\nA pre-runtime digest.\nCan process messages from a specific origin.\nErrors that can happen when attempting to process a …\nThe type used to represent proof of possession and …\nThe type which is used to encode a public key.\nCode to be called when a message queue changes - either …\nThe queue is paused and no message can be executed from it.\nQueried by the pallet to check whether a queue can be …\nAnother call is currently ongoing and prevents this call …\nA mutable memory location with dynamically checked borrow …\nThe block number type used by Polkadot. 32-bits will allow …\nThe block number type used by Polkadot. 32-bits will allow …\nBuilds a sproof (portmanteau of ‘spoof’ and ‘proof’…\nThe aggregated <code>RuntimeCall</code> type.\nAn indication for the light clients that the runtime …\nThe overarching event type.\nThe aggregated event type of the runtime.\nEvery function call from your runtime has an origin, which …\nThe <code>RuntimeOrigin</code> type used by dispatchable calls.\nThe aggregated <code>RuntimeTask</code> type.\nThe designated SS58 prefix of this chain.\nPut a Seal on it. This is only used by native code, and is …\nThe type used to (minimally) encode the data required to …\nCan service queues and execute overweight messages.\nThe amount of weight (if any) which should be provided to …\nThe message came from a sibling para-chain.\nThe type used to represent a signature. Can be created …\nAll migrations that should run in the next runtime upgrade.\nPage/heap size type.\nUnit type wrapper that represents a slot.\nThe message could not be processed for reaching the stack …\nStruct containing data needed for a storage.\nConfiguration trait of this pallet.\nThe <code>Pallet</code> struct, the main type that implements traits …\nWeight information for the extrinsics of this pallet.\nThe resulting type after dereferencing.\nStruct that helps with tests where either dispatchables or …\nStruct that keeps account’s id and balance\nDefault <code>Args</code> provided by xcm-emulator to be stored in a …\nAuxiliar struct to help creating a new <code>Test</code> instance\nType alias for Externalities implementation used in tests.\nContains a variant per dispatchable extrinsic that this …\nUpward messages, each message is: <code>(from_para_id, msg)</code>\nInbound upward message.\nIdentifies a UMP queue inside the <code>MessageQueue</code> pallet.\nNo weight limit imposed.\nThe message format is unsupported (e.g. old XCM version).\nA double-ended queue implemented with a growable ring …\nGet the chain’s in-code version.\nWeight information for extrinsics in this pallet.\nAn optional weight limit.\nMeters consumed weight and a hard limit for the maximal …\nA hash type for identifying messages.\nSomething that should be called for each batch of messages …\nThe queue wants to give up its current processing slot.\nDefines an additive identity element for <code>Self</code>.\nAdd a filter to the origin.\nReturns a reference to the underlying allocator.\nMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …\nReturns a pair of slices which contain, in order, the …\nReturns a raw pointer to the underlying data in this cell.\nExtract the signer from the message if it is a <code>Signed</code> …\nExtract the signer from the message if it is a <code>Signed</code> …\nExtract the signer from the message if it is a <code>Signed</code> …\nExtract the signer from the message if it is a <code>Signed</code> …\nExtract the signer from the message if it is a <code>Signed</code> …\nExtract the signer from the message if it is a <code>Signed</code> …\nExtract the signer from the message if it is a <code>Signed</code> …\nExtract a reference to the signer, if that’s what the …\nExtract a reference to the signer, if that’s what the …\nExtract a reference to the signer, if that’s what the …\nExtract a reference to the signer, if that’s what the …\nExtract a reference to the signer, if that’s what the …\nExtract a reference to the signer, if that’s what the …\nExtract a reference to the signer, if that’s what the …\nReturns a pair of slices which contain, in order, the …\nExtract a reference to the system origin, if that’s what …\nExtract a reference to the system origin, if that’s what …\nExtract a reference to the system origin, if that’s what …\nExtract a reference to the system origin, if that’s what …\nExtract a reference to the system origin, if that’s what …\nExtract a reference to the system origin, if that’s what …\nExtract a reference to the system origin, if that’s what …\nExecutes all dispatchables and assertions in order from …\nPanic if an expression doesn’t evaluate to <code>Ok</code>.\nAsserts that a single unique topic ID exists across all …\nProvides a reference to the back element, or <code>None</code> if the …\nProvides a mutable reference to the back element, or <code>None</code> …\nStorage backend.\nBase weight of block execution.\nBinary searches this <code>VecDeque</code> for a given element. If the …\nBinary searches this <code>VecDeque</code> with a comparator function.\nBinary searches this <code>VecDeque</code> with a key extraction …\nDo a Blake2 256-bit hash and return result.\nImmutably borrows the wrapped value.\nMutably borrows the wrapped value.\nGet a reference to the caller (<code>CallerTrait</code> impl).\nReturns the number of elements the map can hold without …\nReturns the number of elements the deque can hold without …\nChildren trie storage data. Key does not include prefix, …\nClears the map, removing all key-value pairs. Keeps the …\nClears the deque, removing all values.\nClear the poisoned state from a mutex.\nPanics\nOverwrites the contents of <code>self</code> with a clone of the …\nPanics\nPanics\nContains the collator peer ID, which is later sent by the …\nReturns <code>true</code> if the deque contains an element equal to the …\nReturns <code>true</code> if the map contains a value for the specified …\nMake conversion.\nConvert the <code>location</code> into <code>Some</code> account ID, or <code>None</code> if not …\nPrint the pages in each queue and the messages in each …\nAttempt to deserialise the value from input.\nDeconstructs a <code>ParachainInherentData</code> instance.\nCreates an empty <code>HashMap&lt;K, V, S&gt;</code>, with the <code>Default</code> value …\nCreates an empty deque.\nCreates a <code>RefCell&lt;T&gt;</code>, with the <code>Default</code> value for T.\nCreates a <code>Mutex&lt;T&gt;</code>, with the <code>Default</code> value for T.\nCreates a new lazy value using <code>Default</code> as the initializing …\nDereferences the value.\nDereferences the value.\nDerive a child key from a series of given junctions.\nReturns a reference to the digest.\nGet a mutable reference to the digest.\nActually dispatch this call and return the result of it.\nTry to execute a single message that was marked as …\nEnsure the correctness of state of this pallet.\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nReturns some mutable reference to the inner value if it is …\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns some reference to the inner value if it is of type …\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nDownward messages in the order they were sent.\nClears the map, returning all key-value pairs as an …\nRemoves the specified range from the deque in bulk, …\nSCALE encode this type to bytes, possibly with the help of …\nSCALE encode this type to bytes, possibly with the help of …\nEnqueue a single <code>message</code> from a specific <code>origin</code>.\nEnqueue multiple <code>messages</code> from a specific <code>origin</code>.\nGets the given key’s corresponding entry in the map for …\nPanics\nExecute a single overweight message.\nExecute an overweight message.\nExecutes a message that could not be executed by …\nExecutes a message that could not be executed by …\nExecutes a message that could not be executed by …\nExtensions.\nCreates an iterator which uses a closure to determine if …\nReturns a reference to the extrinsics root.\nReturns the contents of the “front” slice as returned …\nFilter the call if caller is not root, if false is …\nExtra information about this account. The MSB is a flag …\nUtilities for formatting and printing <code>String</code>s.\nFormats the value using the given formatter.\nForces the evaluation of this lazy value and returns a …\nForces the evaluation of this lazy value and returns a …\nNon-reserved part of the balance which the account holder …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>[(K, V); N]</code> into a <code>HashMap&lt;K, V&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTurn a <code>Vec&lt;T&gt;</code> into a <code>VecDeque&lt;T&gt;</code>.\nReturns the argument unchanged.\nConverts a <code>[T; N]</code> into a <code>VecDeque&lt;T&gt;</code>.\nReturns the argument unchanged.\nCreates a new <code>RefCell&lt;T&gt;</code> containing the given value.\nCreates a new mutex in an unlocked state ready for use. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a <code>HashMap&lt;K, V&gt;</code> from an iterator of key-value …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nReturns the KeyPair from the English BIP39 seed <code>phrase</code>, or …\nReturns the KeyPair from the English BIP39 seed <code>phrase</code>, or …\nReturns the KeyPair from the English BIP39 seed <code>phrase</code>, or …\nReturns the KeyPair from the English BIP39 seed <code>phrase</code>, or …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate new key pair from the provided <code>seed</code>.\nGenerate new key pair from the provided <code>seed</code>.\nGenerate new key pair from the provided <code>seed</code>.\nGenerate new key pair from the provided <code>seed</code>.\nMake a new key pair from secret seed material. The slice …\nInterprets the string <code>s</code> in order to generate a key pair.\nInterprets the string <code>s</code> in order to generate a key pair.\nInterprets the string <code>s</code> in order to generate a key pair.\nInterprets the string <code>s</code> in order to generate a key pair.\nInterprets the string <code>s</code> in order to generate a key Pair. …\nInterprets the string <code>s</code> in order to generate a key Pair. …\nInterprets the string <code>s</code> in order to generate a key Pair. …\nInterprets the string <code>s</code> in order to generate a key Pair. …\nProvides a reference to the front element, or <code>None</code> if the …\nProvides a mutable reference to the front element, or <code>None</code> …\nThe amount that <code>free + reserved</code> may not drop below when …\nPanics\nGenerate new secure (random) key pair.\nGenerate new secure (random) key pair.\nGenerate new secure (random) key pair.\nGenerate new secure (random) key pair.\nGenerate new secure (random) key pair and provide the …\nGenerate new secure (random) key pair and provide the …\nGenerate new secure (random) key pair and provide the …\nGenerate new secure (random) key pair and provide the …\nReturn the current value.\nReturns a reference to the value corresponding to the key.\nProvides a reference to the element at the given index.\nReturns a reference to the value if initialized, or <code>None</code> …\nReturns the contained value by cloning it.\nAttempts to get mutable references to <code>N</code> values in the map …\nAttempts to get mutable references to <code>N</code> values in the map …\nReturns the key-value pair corresponding to the supplied …\nReturns a mutable reference to the value corresponding to …\nProvides a mutable reference to the element at the given …\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the value if initialized, …\nInterprets the string <code>s</code> in order to generate a public key …\nPanics\nHandle some incoming DMP messages (note these are …\nHandle some incoming XCMP messages (note these are the big …\nReturns the hash of the header.\nReturns the hash of the header.\nReturns the hash of the header.\nReturns the hash of the header.\nReturns a reference to the map’s <code>BuildHasher</code>.\nHRMP messages grouped by channels. The messages in the …\nReturns a reference to the value corresponding to the …\nInserts a key-value pair into the map.\nInserts an element at <code>index</code> within the deque, shifting all …\nInserts a topic ID for a specific chain and asserts it …\nCheck the integrity of this pallet’s configuration.\nCheck the integrity of this pallet’s configuration.\nCheck the integrity of this pallet’s configuration.\nCheck the integrity of this pallet’s configuration.\nCheck the integrity of this pallet’s configuration.\nCheck the integrity of this pallet’s configuration.\nCheck the integrity of this pallet’s configuration.\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume <code>self</code> and return the caller.\nConsumes the <code>RefCell</code>, returning the wrapped value.\nConsumes this mutex, returning the underlying data.\nConsumes this <code>LazyLock</code> returning the stored value.\nCreates a consuming iterator, that is, one that moves each …\nConsumes the deque into a front-to-back iterator yielding …\nCreates a consuming iterator visiting all the keys in …\nExtract the signer from the message if it is a <code>Signed</code> …\nExtract the signer from the message if it is a <code>Signed</code> …\nExtract the signer from the message if it is a <code>Signed</code> …\nExtract the signer from the message if it is a <code>Signed</code> …\nExtract the signer from the message if it is a <code>Signed</code> …\nExtract the signer from the message if it is a <code>Signed</code> …\nExtract the signer from the message if it is a <code>Signed</code> …\nCreates a consuming iterator visiting all the values in …\nReturns <code>true</code> if the inner type is the same as <code>T</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns <code>true</code> if the map contains no elements.\nReturns <code>true</code> if the deque is empty.\nDetermines whether the mutex is poisoned.\nReturns <code>true</code> if <code>self</code> is equal to the additive identity.\nAn iterator visiting all key-value pairs in arbitrary …\nReturns a front-to-back iterator.\nAn iterator visiting all key-value pairs in arbitrary …\nReturns a front-to-back iterator that returns mutable …\nAn iterator visiting all keys in arbitrary order. The …\nPanics\nReturns the number of elements in the map.\nReturns the number of elements in the deque.\nAcquires a mutex, blocking the current thread until it is …\nA list of logs in the digest.\nPanics\nRearranges the internal storage of this deque so it is one …\nMaximal total weight consumed by all kinds of extrinsics …\nThe maximum number of messages that can be pending in the …\nUpper bound, in bytes, of the maximum encoded size of this …\nThe maximum message size that could be put into the …\nThe maximum legal size of a POV block, in bytes.\nThe maximum total size of the messages that can be pending …\nReturns the largest finite number this type can represent\nReturns the smallest finite number this type can represent\nA head of the Message Queue Chain for this channel. Each …\nThe current number of messages pending in the channel. …\nCreates new header.\nCreates a new <code>Test</code> instance.\nCreates an empty <code>HashMap</code>.\nCreates an empty deque.\nCreates a new <code>RefCell</code> containing <code>value</code>.\nCreates a new mutex in an unlocked state ready for use.\nCreates a new lazy value with the given initializing …\nCreates an empty deque.\nCreate with system none origin and …\nReturns a reference to the header number.\nImplementing this function on a pallet allows you to …\nImplementing this function on a pallet allows you to …\nImplementing this function on a pallet allows you to …\nImplementing this function on a pallet allows you to …\nImplementing this function on a pallet allows you to …\nImplementing this function on a pallet allows you to …\nImplementing this function on a pallet allows you to …\nBlock finalization hook. This is called at the very end of …\nBlock finalization hook. This is called at the very end of …\nBlock finalization hook. This is called at the very end of …\nBlock finalization hook. This is called at the very end of …\nBlock finalization hook. This is called at the very end of …\nBlock finalization hook. This is called at the very end of …\nBlock finalization hook. This is called at the very end of …\nSee <code>Hooks::on_finalize</code>.\nSee <code>Hooks::on_finalize</code>.\nSee <code>Hooks::on_idle</code>.\nSee <code>Hooks::on_idle</code>.\nHook to consume a block’s idle time. This will run when …\nHook to consume a block’s idle time. This will run when …\nHook to consume a block’s idle time. This will run when …\nHook to consume a block’s idle time. This will run when …\nHook to consume a block’s idle time. This will run when …\nHook to consume a block’s idle time. This will run when …\nHook to consume a block’s idle time. This will run when …\nSee <code>Hooks::on_initialize</code>.\nSee <code>Hooks::on_initialize</code>.\nBlock initialization hook. This is called at the very …\nBlock initialization hook. This is called at the very …\nBlock initialization hook. This is called at the very …\nBlock initialization hook. This is called at the very …\nBlock initialization hook. This is called at the very …\nBlock initialization hook. This is called at the very …\nBlock initialization hook. This is called at the very …\nA hook to run logic after inherent application.\nA hook to run logic after inherent application.\nA hook to run logic after inherent application.\nA hook to run logic after inherent application.\nA hook to run logic after inherent application.\nA hook to run logic after inherent application.\nA hook to run logic after inherent application.\nHook executed when a code change (aka. a “runtime upgrade…\nHook executed when a code change (aka. a “runtime upgrade…\nHook executed when a code change (aka. a “runtime upgrade…\nHook executed when a code change (aka. a “runtime upgrade…\nHook executed when a code change (aka. a “runtime upgrade…\nHook executed when a code change (aka. a “runtime upgrade…\nHook executed when a code change (aka. a “runtime upgrade…\nThe para id of the current parachain.\nCreate new implementations of the <code>Get</code> trait.\nReturns a reference to the parent hash.\nThe parent head-data.\nThe number of parent junctions at the beginning of this …\nPanics\nReturns the index of the partition point according to the …\nWeight limits for extrinsics of given dispatch class.\nRemoves the last element from the deque and returns it, or …\nRemoves and returns the last element from the deque if the …\nRemoves the first element and returns it, or <code>None</code> if the …\nRemoves and returns the first element from the deque if …\nExecute some post-checks after a runtime upgrade.\nExecute some post-checks after a runtime upgrade.\nExecute some post-checks after a runtime upgrade.\nExecute some post-checks after a runtime upgrade.\nExecute some post-checks after a runtime upgrade.\nExecute some post-checks after a runtime upgrade.\nExecute some post-checks after a runtime upgrade.\nExecute some pre-checks prior to a runtime upgrade.\nExecute some pre-checks prior to a runtime upgrade.\nExecute some pre-checks prior to a runtime upgrade.\nExecute some pre-checks prior to a runtime upgrade.\nExecute some pre-checks prior to a runtime upgrade.\nExecute some pre-checks prior to a runtime upgrade.\nExecute some pre-checks prior to a runtime upgrade.\nProcess the given message, using no more than the …\nProvides type-based access to context intended for error …\nGet the public key.\nAppends an element to the back of the deque.\nPrepends an element to the deque.\nCreates an iterator that covers the specified range in the …\nCreates an iterator that covers the specified mutable …\nFill <code>buf</code> with the contents of the “front” slice as …\nRemove a page which has no more messages remaining to be …\nThe para that acts as the recipient in this channel.\nA storage proof of a predefined set of keys from the …\nContains the relay parent header and its descendants. This …\nThe relay-chain block number this is in the context of.\nThe relay-chain block storage root this is in the context …\nRemoves a key from the map, returning the value at the key …\nRemoves and returns the element at <code>index</code> from the deque. …\nRemoves a key from the map, returning the stored key and …\nReplaces the wrapped value with a new one, returning the …\nReplaces the contained value with <code>value</code>, and returns the …\nReplaces the wrapped value with a new one computed from <code>f</code>, …\nReserves capacity for at least <code>additional</code> more elements to …\nReserves capacity for at least <code>additional</code> more elements to …\nReserves the minimum capacity for at least <code>additional</code> more …\nBalance which is has active holds on it and may not be …\nReset origin filters to default one, i.e …\nModifies the deque in-place so that <code>len()</code> is equal to …\nModifies the deque in-place so that <code>len()</code> is equal to …\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nCreate with system root origin and …\nRotates the double-ended queue <code>n</code> places to the left.\nRotates the double-ended queue <code>n</code> places to the right.\nThe para that acts as the sender in this channel.\nService all message queues in some fair manner.\nSets the contained value.\nSet the current time.\nStores an assertion in a particular Chain\nStores a call in a particular Chain, this will later be …\nReplace the caller with caller from the other origin\nReplace the caller with caller from the other origin\nReplace the caller with caller from the other origin\nReplace the caller with caller from the other origin\nReplace the caller with caller from the other origin\nReplace the caller with caller from the other origin\nReplace the caller with caller from the other origin\nReplace the caller with caller from the other origin\nReplace the caller with caller from the other origin\nStores a dispatchable in a particular Chain\nSets the extrinsic root.\nSets the header number.\nSets the parent hash.\nSets the state root.\nSet the current validation data.\nSets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.\nSets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.\nSets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.\nSets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.\nSets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.\nSets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.\nSets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.\nSets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.\nSets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.\nShrinks the capacity of the map with a lower limit. It …\nShrinks the capacity of the deque with a lower bound.\nShrinks the capacity of the map as much as possible. It …\nShrinks the capacity of the deque as much as possible.\nSign a message.\nCreate with system signed origin and …\nReturns the lower-level source of this error, if any.\nReturns an iterator starting with the current error and …\nSplits the deque into two at the given index.\nSimple sr25519 (Schnorr-Ristretto) API.\nReturns a reference to the state root.\nState version to use during tests.\nSwaps elements at indices <code>i</code> and <code>j</code>.\nSwaps the wrapped value of <code>self</code> with the wrapped value of …\nRemoves an element from anywhere in the deque and returns …\nRemoves an element from anywhere in the deque and returns …\nAny remaining unprocessed messages should happen only …\nTakes the wrapped value, leaving <code>Default::default()</code> in its …\nReturn a vec filled with raw data.\nTop trie storage data.\nThe total balance in this account including any that is …\nThe total size in bytes of all message payloads in the …\nShortens the deque, keeping the first <code>len</code> elements and …\nShortens the deque, keeping the last <code>len</code> elements and …\nImmutably borrows the wrapped value, returning an error if …\nMutably borrows the wrapped value, returning an error if …\nImmutably borrows the wrapped value, returning an error if …\nTries to insert a key-value pair into the map, and returns …\nAttempts to acquire this lock.\nTries to reserve capacity for at least <code>additional</code> more …\nTries to reserve capacity for at least <code>additional</code> more …\nTries to reserve the minimum capacity for at least …\nExecute the sanity checks of this pallet, per block.\nExecute the sanity checks of this pallet, per block.\nExecute the sanity checks of this pallet, per block.\nExecute the sanity checks of this pallet, per block.\nExecute the sanity checks of this pallet, per block.\nExecute the sanity checks of this pallet, per block.\nExecute the sanity checks of this pallet, per block.\nDo something with the caller, consuming self but returning …\nCreates an empty deque with space for at least <code>capacity</code> …\nReturns the name of a type as a string slice.\nUndo the effect of leaked guards on the borrow state of …\nAn iterator visiting all values in arbitrary order. The …\nAn iterator visiting all values mutably in arbitrary order.\nVerify a signature on a message. Returns true if the …\nCreates an empty <code>HashMap</code> with at least the specified …\nCreates an empty deque with space for at least <code>capacity</code> …\nCreates an empty <code>HashMap</code> with at least the specified …\nCreates an empty deque with space for at least <code>capacity</code> …\nCreates an empty <code>HashMap</code> which will use the given hash …\nReturns the additive identity element of <code>Self</code>, <code>0</code>.\nContains the error value\nThe main error of array-bytes.\nConvert the given type to hex.\nFound the invalid character at <code>index</code>.\nThe length must not be odd.\nThe data can not fit the array/slice length well.\nContains the success value\nFailed to parse the hex number from hex string.\nThe main result of array-bytes.\nTry to convert the given hex to a specific type.\nFailed to parse the hex number from hex string.\n<code>AsRef&lt;[u8]&gt;</code> to <code>String</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nConvert <code>Self</code> to hex with the given prefix.\nJust like <code>hex2bytes</code> but to a fixed length array.\nJust like <code>hex2array</code> but without the checking.\n<code>AsRef&lt;[u8]&gt;</code> to <code>Vec&lt;u8&gt;</code>.\nJust like <code>hex2bytes</code> but without checking.\n<code>AsRef&lt;[u8]&gt;</code> to <code>&amp;[u8]</code>.\nJust like <code>hex2slice</code> but without checking.\nConvert hex bytes to hex string.\nJust like <code>hex_bytes2hex_str</code> but without the checking.\nTry to convert <code>AsRef&lt;[u8]&gt;</code> to <code>T</code> directly, where …\nJust like <code>hex_into</code> but without the checking.\nTry to convert <code>AsRef&lt;[u8]&gt;</code> to <code>T</code> directly, where …\nJust like <code>hex_n_into</code> but without the checking.\nCalls <code>U::from(self)</code>.\nPrefixes the given element to the given array/slice/vector …\n<code>&amp;[T]</code> to <code>[T; N]</code>.\nJust like <code>slice2array</code> but without the checking.\nConvert <code>&amp;[T]</code> to a type directly.\nJust like <code>slice_n_into</code> but without the checking.\nSuffixes the given element to the given array/slice/vector …\nTry to convert <code>Self</code> from hex.\n<code>Vec&lt;T&gt;</code> to <code>[T; N]</code>.\nJust like <code>vec2array</code> but without the checking.\nConvert <code>Vec&lt;T&gt;</code> to a type directly.\nJust like <code>vec_n_into</code> but without the checking.\nThe invalid character.\nExpected length.\nThe invalid character’s index.\nPossible alignments returned by <code>Formatter::align</code>\nThis structure represents a safely precompiled version of …\n<code>b</code> formatting.\nIndication that contents should be center-aligned.\n<code>?</code> formatting.\nDerive macro generating an impl of the trait <code>Debug</code>.\nSpecifies whether the <code>Debug</code> trait should use …\nA struct to help with <code>fmt::Debug</code> implementations.\nA struct to help with <code>fmt::Debug</code> implementations.\nA struct to help with <code>fmt::Debug</code> implementations.\nA struct to help with <code>fmt::Debug</code> implementations.\nA struct to help with <code>fmt::Debug</code> implementations.\nFormat trait for an empty format, <code>{}</code>.\nContains the error value\nThe error type which is returned from formatting a message …\nConfiguration for formatting.\nOptions for formatting.\nImplements <code>fmt::Debug</code> and <code>fmt::Display</code> using a function.\nIndication that contents should be left-aligned.\nUse lower-case hexadecimal integers for the <code>Debug</code> trait …\n<code>e</code> formatting.\n<code>x</code> formatting.\nRepresents the <code>-</code> flag.\n<code>o</code> formatting.\nContains the success value\nRepresents the <code>+</code> flag.\n<code>p</code> formatting.\nThe type returned by formatter methods.\nIndication that contents should be right-aligned.\nThe signedness of a <code>Formatter</code> (or of a <code>FormattingOptions</code>).\nUse upper-case hexadecimal integers for the <code>Debug</code> trait …\n<code>E</code> formatting.\n<code>X</code> formatting.\nA trait for writing or formatting into Unicode-accepting …\nReturns a flag indicating what form of alignment was …\nSets or removes the alignment.\nDetermines if the <code>#</code> flag was specified.\nSets or unsets the <code>#</code> flag.\nGets the formatted string, if it has no arguments to be …\nCreates a <code>Formatter</code> that writes its output to the given …\nSpecifies whether the <code>Debug</code> trait should use …\nCreates a <code>DebugList</code> builder designed to assist with …\nCreates a <code>DebugMap</code> builder designed to assist with …\nCreates a <code>DebugSet</code> builder designed to assist with …\nCreates a <code>DebugStruct</code> builder designed to assist with …\nCreates a <code>DebugTuple</code> builder designed to assist with …\nSame as <code>FormattingOptions::new()</code>.\nAdds the contents of an iterator of entries to the set …\nAdds the contents of an iterator of entries to the list …\nAdds the contents of an iterator of entries to the map …\nAdds a new entry to the set output.\nAdds a new entry to the list output.\nAdds a new entry to the map output.\nAdds a new entry to the set output.\nAdds a new entry to the list output.\nAdds a new field to the generated struct output.\nAdds a new field to the generated tuple struct output.\nAdds a new field to the generated struct output.\nAdds a new field to the generated tuple struct output.\nReturns the character used as ‘fill’ whenever there is …\nSets the fill character.\nFinishes output and returns any error encountered.\nFinishes output and returns any error encountered.\nFinishes output and returns any error encountered.\nFinishes output and returns any error encountered.\nFinishes output and returns any error encountered.\nMarks the struct as non-exhaustive, indicating to the …\nMarks the tuple struct as non-exhaustive, indicating to …\nMarks the set as non-exhaustive, indicating to the reader …\nMarks the list as non-exhaustive, indicating to the reader …\nMarks the map as non-exhaustive, indicating to the reader …\nReturns flags for formatting.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nTakes an <code>Arguments</code> struct and returns the resulting …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a type whose <code>fmt::Debug</code> and <code>fmt::Display</code> impls are …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the current alignment.\nReturns the current <code>#</code> flag.\nReturns the current precision.\nReturns the current fill character.\nReturns the current precision.\nReturns the current sign (the <code>+</code> or the <code>-</code> flag).\nReturns the current <code>0</code> flag.\nReturns the current width.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdds the key part of a new entry to the map output.\nAdds the key part of a new entry to the map output.\nCreates a new formatter with given <code>FormattingOptions</code>.\nConstruct a new <code>FormatterBuilder</code> with the supplied <code>Write</code> …\nReturns the formatting options this formatter corresponds …\nTakes a string slice and emits it to the internal buffer …\nPerforms the correct padding for an integer which has …\nReturns the optionally specified precision for numeric …\nSets or removes the precision.\nReturns the sign of this formatter (<code>+</code> or <code>-</code>).\nSets or removes the sign (the <code>+</code> or the <code>-</code> flag).\nDetermines if the <code>0</code> flag was specified.\nSets or unsets the <code>0</code> flag.\nDetermines if the <code>-</code> flag was specified.\nDetermines if the <code>+</code> flag was specified.\nAdds the value part of a new entry to the map output.\nAdds the value part of a new entry to the map output.\nReturns the optionally specified integer width that the …\nSets or removes the width.\nCreates a new formatter based on this one with given …\nTakes an output stream and an <code>Arguments</code> struct that can be …\nWrites a <code>char</code> into this writer, returning whether the …\nGlue for usage of the <code>write!</code> macro with implementors of …\nGlue for usage of the <code>write!</code> macro with implementors of …\nWrites a string slice into this writer, returning whether …\nWrites some data to the underlying buffer contained within …\nWhether to allow block authors to create multiple blocks …\nFind the authority ID of the Aura authority who authored …\nThe current authority set.\nThe identifier type for an authority.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe current slot of this block.\nA way to check whether a given validator is disabled and …\nCan be used to configure the genesis state of this pallet.\nThe maximum number of authorities that the pallet can hold.\nA slot duration provider which infers the slot duration …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe slot duration Aura should run with, expressed in …\nReturn current authorities length.\nChange authorities.\nEnsure the correctness of the state of this pallet.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nInitial authorities.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMigrations for the AURA pallet.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nDetermine the Aura slot-duration based on the Timestamp …\nRemove the <code>LastTimestamp</code> storage value.\nWhether to allow block authors to create multiple blocks …\nThe current authority set.\nThe identifier type for an authority.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe current slot of this block.\nA way to check whether a given validator is disabled and …\nCan be used to configure the genesis state of this pallet.\nThe maximum number of authorities that the pallet can hold.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe slot duration Aura should run with, expressed in …\nThe key type ID for parachain assignment key.\nAbort the upgrade process. There is something wrong with …\nAbridged version of <code>HostConfiguration</code> (from the …\nAbridged version of <code>HrmpChannel</code> (from the <code>Hrmp</code> parachains …\nAlias to the opaque account ID type for this chain, …\nType of the signer.\nThe type for looking up accounts. We don’t expect more …\nAlias to the public key used for this chain, actually a …\nA minor offence when a validator disputed a valid block. …\nMeans of signature verification of an application key.\nFor approval and dispute request.\nAn approval vote from the approval checking phase.\nAn approval vote from the new version. We can’t create …\nA vote of approval on a candidate.\nA vote of approval for multiple candidates.\nApproval voting configuration parameters\nA message sent by a parachain to promote the reputation of …\nApproved PeerId type. PeerIds in polkadot should typically …\nThe public key of a keypair used by a validator for …\nThe full keypair used by a validator for determining …\nCandidate’s acceptance limitations for asynchronous …\nAn authority discovery authority identifier.\nA bitfield concerning availability of backed candidates.\nA backed (or backable, depending on context) candidate.\nFor backing requests.\nA seconded statement on a candidate from the backing phase.\nA valid statement on a candidate from the backing phase.\nThe balance of an account. 128-bits (or 38 significant …\nBlake2-256 Hash implementation.\nBlock type.\nBlock ID.\nThe block number type used by Polkadot. 32-bits will allow …\nThis candidate receipt was backed in the most recent block.\nCommitments made in a <code>CandidateReceipt</code>. Many of these are …\nA unique descriptor of the candidate receipt.\nA type representing the version of the candidate …\nAn event concerning a candidate.\nUnit type wrapper around <code>Hash</code> that represents a candidate …\nThis candidate receipt was included and became a parablock …\nThe index of the candidate in the list of candidates fully …\nA candidate-receipt at version 2.\nThis candidate receipt was not made available in time and …\nA <em>checked</em> set of dispute statements.\nA set of <em>checked</em> dispute statements.\nIndex of an availability chunk.\nAn offset in the relay chain claim queue.\nIdentity that collators use.\nA Parachain collator keypair.\nSignature on candidate’s block data by a collator.\nCommittedCandidateReceiptError construction errors.\nA candidate-receipt with commitments directly included.\nStatements that can be made about parachain candidates. …\nA consensus log item for polkadot validation. To be used …\nThe unique (during session) index of a core.\nThe core index in commitments doesn’t match the one in …\nA strictly increasing sequence number, typically this …\nThe state of a particular availability core.\nThe default claim queue offset to be used if it’s not …\nDefault value for <code>SchedulerParams.lookahead</code>\nSupercedes the old ‘SlashingOffenceKind’ enum.\nThe entire state of a dispute.\nA statement about a candidate, to be used within the …\nA set of statements about a specific candidate.\nA message sent from the relay-chain down to a parachain.\nDuplicated UMP signal.\nA param is duplicated.\nAn ECDSA/SECP256k1 signature.\nAn Ed25519 signature.\nThis helper trait ensures that we can encode <code>Statement</code> as …\nAn ECDSA/SECP256k1 signature but with a different address …\nThe different executor parameters for changing the …\nPossible inconsistencies of executor params.\nDeterministically serialized execution environment …\nUnit type wrapper around <code>Hash</code> that represents an execution …\nUnit type wrapper around <code>Hash</code> that represents a hash of …\nAn explicit statement issued as part of a dispute.\nAn explicit statement issued as part of a dispute.\nAn explicit attestation. This corresponds to issuance of a …\nAn explicit statement on a candidate issued as part of a …\nA medium offence when a validator approved an invalid block\nA severe offence when a validator backed an invalid block …\nGovernance requests to auto-approve every candidate …\nThe core was not occupied to begin with.\nThe core is currently free and there is nothing scheduled. …\nApply the pending code change. The parablock that is built …\nThe unique (during session) index of a validator group.\nA helper data-type for tracking validator-group rotations.\nA hash of some data used by the relay chain.\nIdentify by block header hash.\nAbstraction around hashing\nParachain head data included in the chain.\nHeader type.\nA type that uniquely identifies an HRMP channel. An HRMP …\nUnique identifier of a parachain.\nImplicit validity attestation by issuing. This corresponds …\nA wrapped version of <code>DownwardMessage</code>. The difference is …\nAn HRMP message seen from the perspective of a recipient.\nThe candidate occupying the core was made available and …\nTwo param values are incompatible or senseless when put …\nIncrement a counter metric by value.\nIncrement a counter metric with labels by value.\n<code>IndexedVec</code> struct indexed by type specific indices.\nParachains inherent-data passed into the runtime by a …\nA type representing the version of the candidate …\nAn invalid statement, of the given kind.\nThe specified core index is invalid.\nDifferent kinds of statements of invalidity on a candidate.\nThe Ethereum signature is invalid.\nThe core selector or claim queue offset is invalid.\nAn invalid statement was made for a claim.\nBacking votes threshold used from the host prior to …\nThe ID of the first publicly registrable parachain.\nMaximum compressed code size we support right now. At the …\nMaximum head data size we support right now.\nMaximum PoV size we support right now.\nCompressed or not the wasm blob can never be less than 9 …\nMaximum number of memory pages (64KiB bytes per page) the …\nAn instant or duration in time.\nA set of dispute statements.\nA trait to allow changing the descriptor field values in …\nThe parachain is not assigned to any core at specified …\nNo permission to execute the call.\nBit indices in the <code>HostConfiguration.node_features</code> that …\nIndex of a transaction in the relay chain. 32-bit should …\nIdentify by block number.\nDefault queue size we use for the on-demand order book.\nMaximum for maximum queue size.\nObserve histogram value\nThe core is currently occupied.\nInformation about a core which is currently occupied.\nAn assumption being made about the state of an occupied …\nAn HRMP message seen from the perspective of a sender.\nThe hash type produced.\nA param value exceeds its limitation.\nUnique identifier for the Parachains Inherent\nThe key type ID for a parachain validator key.\nA parachain scheduled a code upgrade.\nA parachain upgraded its code.\nA claim on authoring the next block for a given parathread …\nAn entry tracking a claim to ensure it does not pass the …\nThe validation data provides information about how to …\nFor prechecking requests.\nMax. amount of memory the preparation worker is allowed to …\nFor execution and heads-up requests.\nThere is an upgrade restriction and there are no details …\nA statement from the specified validator whether the given …\nType discriminator for PVF execution.\nPVF execution timeouts, in millisecond. Always ensure that …\nType discriminator for PVF preparation.\nPVF preparation timeouts, in millisecond. Always ensure …\nA signal to revert the block number in the same chain as …\nA metric label.\nA metric label value.\nA set of metric label values.\nA set of metric labels.\nRuntime metric operations.\nRuntime metric update event.\nThe core is currently free, with a para scheduled and …\nInformation about a core which is currently occupied.\nScheduler configuration parameters. All coretime/ondemand …\nScraped runtime backing votes and resolved disputes.\nProposal of a parachain candidate.\nA message sent by a parachain to select the core the …\nSimple index type with which we can count sessions.\nInformation about validator sets of a session.\nAlias to type for a signature for a transaction on the …\nSigned data with signature already verified.\nA bitfield signed by a particular validator about the …\nA set of signed availability bitfields. Should be sorted …\nA signed compact statement, suitable to be sent to the …\nThe signer has no claim.\nA type returned by runtime with current session index and …\nUnit type wrapper that represents a slot.\nAn Sr25519 signature.\nWasm logical stack size limit (max. number of Wasm values …\nExecutor machine stack size limit, in bytes. If …\nThe candidate occupying the core timed out and freed the …\nThe allowed number of <code>UMPSignal</code> messages in the queue was …\nThe claim queue mapped by parachain id.\nSignals that a parachain can send to the relay chain via …\nIf the parachain runtime started sending ump signals, v1 …\nSeparator between <code>XCM</code> and <code>UMPSignal</code>.\nCould not decode UMP signal.\nUnchecked signed data, can be converted to <code>Signed</code> by …\nA signed bitfield with signature not yet checked.\nA set of unchecked signed availability bitfields. Should …\nA signed compact statement, with signature not yet checked.\nAn unknown version.\nUnknown version.\nA struct that the relay-chain communicates to a parachain …\nA possible upgrade restriction that prevents a parachain …\nA message from a parachain to its Relay Chain.\nThe old candidate descriptor version.\nThe new <code>CandidateDescriptorV2</code>.\nA valid statement, of the given kind.\nState that a parachain candidate is valid.\nDifferent kinds of statements of validity on  a candidate.\nParachain validation code.\nUnit type wrapper around <code>Hash</code> that represents the …\nIdentity that parachain validators use when signing …\nIndex of the validator is used as a lightweight …\nA Parachain validator keypair.\nSignature with which parachain validators sign blocks.\nAn either implicit or explicit attestation to the validity …\nCustom validity errors used in Polkadot while validating …\nEnables WASM bulk memory proposal\n<code>true</code> if the subject passed pre-checking and <code>false</code> …\nAll the validators actively participating in parachain …\nHow many ancestors of a relay parent are allowed to build …\nThe assignment keys for validators.\nAsynchronous backing parameters.\nA bitfield with 1 bit for each validator in the set. <code>1</code> …\nBacked candidates for inclusion in the block.\nSet of backing validators for each candidate, represented …\nSigned bitfields by validators about availability.\nThe maximum number of validators <code>f</code> which may safely be …\nThe descriptor of the candidate occupying the core.\nThe candidate hash.\nThe candidate referenced by this set.\nThe hash of the candidate occupying the core.\nVerify the backing of the given candidate.\nThe claim.\nDEPRECATED: see: …\nThe commitments of the candidate receipt.\nThe hash of the encoded commitments made as a result of …\nThe block number at which the dispute concluded on-chain.\nThe message payload.\nThe message payload.\nThe descriptor of the candidate.\nThe descriptor of the candidate.\nA chain-specific digest of data useful for light clients …\nValidators’ authority discovery keys for the session in …\nThe amount of sessions to keep for disputes.\nSets of dispute votes for inclusion,\nOn-chain-recorded set of disputes. Note that the above …\nAdjust the configured needed backing votes with the size …\nConvert Self into T, then encode T.\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nThe group assigned to distribute availability pieces of …\nHow often groups rotate. 0 means never.\nHow often parachain groups should be rotated across …\nThe head-data produced as a result of execution.\nThe block header.\nHorizontal messages sent by the parachain.\nThe maximum number of outbound HRMP messages can be sent …\nThe mark which specifies the block number up to which all …\nThe amount of blocks ahead to schedule paras.\nThe maximum number of candidates <code>approval-voting</code> can vote …\nDeprecated and no longer used by the runtime. Removal is …\nThe maximum number of para blocks between the para head in …\nThe maximum number of messages that can be pending in the …\nThe maximum validation code size, in bytes.\nThe maximum head-data size, in bytes.\nThe maximum message size that could be put into the …\nThe maximum legal size of a POV block, in bytes.\nThe maximum total size of the messages that can be pending …\nThe maximum number of messages that a candidate can …\nThe maximum size of an upward message that can be sent by …\nTotal number of individual messages allowed in the …\nTotal size of messages allowed in the parachain -&gt; …\nThe maximum number of validators to have per core.\nThe name of the metric.\nA head of the Message Queue Chain for this channel. Each …\nThe actual downward message to processes.\nThe current number of messages pending in the channel. …\nThe number of availability cores used by the protocol …\nThe number of delay tranches in total.\nThe number of validators needed to approve a block.\nNew validation code.\nIf this core is freed by availability, this is the …\nIf this core is freed by being timed-out, this is the …\nHow many slots (BABE / SASSAFRAS) must pass before an …\nThe current block number.\nHow many cores are managed by the coretime chain.\nThe block number.\nThe relay-chain block number this began occupying the core …\nThe minimum amount needed to claim a slot in the spot …\nHow quickly the fee rises in reaction to increased …\nThe maximum queue size of the pay as you go module.\nThe target utilization of the spot price queue in …\nThe operation applied to the metric.\nThe ordered Patricia tree root of the given <code>input</code>.\nThe ID of a para scheduled.\nAvailability timeout for a block on a core, measured in …\nThe parent hash.\nHash of the parent.\nThe parent head-data.\nThe parent block header. Used for checking state proofs.\nThe number of messages processed from the DMQ.\nA secure random seed for the session, gathered from BABE.\nThe para that will get this message in its downward …\nThe para that acts as the recipient in this channel.\nThe relay-chain block number this is in the context of.\nThe relay-chain block storage root this is in the context …\nThe number of samples we do of <code>relay_vrf_modulo</code>.\nNumber of retries\nThe para that acts as the sender in this channel.\nThe block number at which these messages were put into the …\nThe block number at which this message was sent. …\nThe session index of the candidate.\nThe session index of the candidate.\nThe session in which the block was included.\nCurrent session index.\nThe index of a session during which this statement is …\nThe block number where the session started.\nSet the core index of the descriptor.\nSet the erasure root of the descriptor.\nSet the para head of the descriptor.\nSet the <code>ParaId</code> of the descriptor.\nSet the PVD of the descriptor.\nSet the PoV hash of the descriptor.\nSet the relay parent of the descriptor.\nSet the reserved2 field of the descriptor.\nSet the session index of the descriptor.\nSet the validation code hash of the descriptor.\nSet the version field of the descriptor.\nUtility function for skipping the ump signals.\nThe block number at which the dispute started on-chain.\nThe state trie merkle root\nStatements about the candidate.\nThe validation code hash that was checked.\nThe supermajority threshold of validators which represents …\nThe relay-chain block this will time-out at, if any.\nThe total size in bytes of all message payloads in the …\nReturns a mapping between the para id and the core indices …\nThe Patricia tree root of the given mapping.\nDeprecated and no longer used by the runtime. Removal is …\nMessages destined to be interpreted by the Relay chain …\nWhether the candidate is valid\nThe minimum period, in blocks, between which parachains …\nThe delay, in blocks, before a validation upgrade is …\nValidators in shuffled ordering - these are the validator …\nThe index of the validator from which this statement …\nValidators in canonical ordering.\nA bitfield indicating all validators against the candidate.\nA bitfield indicating all validators for the candidate.\nVerify a signature. Return <code>true</code> if signature is valid for …\nThe zeroth delay tranche width.\nThe core index as found in the commitments.\nThe core index as found in the descriptor.\nFurther information for debugging purposes\nThis is a fatal errors\nSCALE CODEC encoded object – the name should allow the …\nDebug or Display call, this is most-likely a print-able …\nNice to now info\nDescribes the level of verbosity of a span or event.\nA handle representing a span, with the capability to enter …\nThe lowest level, keeping track of minute detail\nThis is a warning you should be aware of\nThe fieldname for the wasm-originated name\nThe fieldname for the wasm-originated target\nThe identifier we are using to inject the wasm events in …\nSpan or Event Attributes\nThe name of a field provided as the argument name when …\nA list of <code>WasmFieldName</code>s in the order provided\nThe Tracing Level – the user can filter by this\nMetadata provides generic information about the specific …\nA parameter value provided to the span/event\nA list of <code>WasmFieldName</code>s with the given <code>WasmValue</code> (if …\nMacro for capturing logs during test execution.\nConstructs an event at the debug level.\nConstructs a span at the debug level.\nconvert the given Attributes to an event and emit it using …\nCreate an empty entry\nCreate an empty entry\nEnter a span.\nConstructs an event at the error level.\nConstructs a span at the error level.\nConstructs a new <code>Event</code>.\nThe list of fields specified in the call\nthe Values provided\nThe file this was emitted from – useful for debugging;  …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nConstructs an event at the info level.\nConstructs a span at the info level.\nInit a tracing subscriber for logging in tests.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether this is a call  to <code>span!</code> or <code>event!</code>\nIterate over the fields\nThe level of this entry\nThe specific line number in the file – useful for …\nthe metadata of the location\nThe module path;  <code>&amp;&#39;static str</code> converted to bytes\nThe name given to <code>event!</code>/<code>span!</code>, <code>&amp;&#39;static str</code> converted to …\nthe parent, if directly specified – otherwise assume …\nConstructs a new span.\nThe given target to <code>event!</code>/<code>span!</code> – or module-name, …\nConstructs an event at the trace level.\nConstructs a span at the trace level.\nTry to init a simple tracing subscriber with log …\nConstructs an event at the warn level.\nConstructs a span at the warn level.\nRuns given code within a tracing span, measuring it’s …\nA reusable log capturing struct for unit tests. Captures …\nChecks if the captured logs contain a specific substring.\nFlushes the internal buffer (no-op in this implementation).\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRetrieves the captured logs as a <code>String</code>.\nInitialises a log capture utility for testing, with …\nCalls <code>U::from(self)</code>.\nProvides a <code>MakeWriter</code> implementation for <code>tracing_subscriber</code>…\nCreates a new <code>LogCapture</code> instance with an internal buffer.\nWrites log data into the internal buffer.\nReturns a clone of the internal buffer for use in …\n<code>RUST_LOG</code> is the default environment variable used by …\nThe maximum verbosity level that is enabled by a <code>Subscriber</code>…\nA <code>Layer</code> which filters spans and events based on a set of …\nA <code>Subscriber</code> that logs formatted representations of <code>tracing</code>…\nA composable handler for <code>tracing</code> events.\nA shared, reusable store for spans.\nAdd a filtering directive to this <code>EnvFilter</code>.\nComposes this layer around the given <code>Layer</code>, returning a …\nErases the type of this <code>Layer</code>, returning a <code>Box</code>ed <code>dyn Layer</code> …\nReturns a builder that can be used to configure a new …\nReturns a new <code>SubscriberBuilder</code> for configuring a format …\nReturns <code>true</code> if this layer is interested in a span or …\nReturns <code>true</code> if this <code>EnvFilter</code> would enable the provided …\nThis is intentionally not implemented, as recording events …\nCalled before <code>on_event</code>, to determine if <code>on_event</code> should be …\nUtilities for working with fields and field visitors.\n<code>Layer</code>s that control which spans and events are enabled by …\nA <code>Subscriber</code> for formatting and logging <code>tracing</code> data.\nReturns a new <code>SubscriberBuilder</code> for configuring a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a new <code>EnvFilter</code> from the value of the <code>RUST_LOG</code> …\nReturns a new <code>EnvFilter</code> from the value of the given …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Layer</code> trait, a composable abstraction for building …\nReturns an optional hint of the highest verbosity level …\nReturns a new <code>EnvFilter</code> from the directives in the given …\nReturns a new format subscriber with the default …\nNotifies this layer that the span with the given ID has …\nInforms the filter that the span with the provided <code>id</code> was …\nNotifies this layer that a span with the given ID was …\nInforms the filter that the span with the provided <code>id</code> was …\nNotifies this layer that an event has occurred.\nNotifies this layer that the span with the given ID was …\nInforms the filter that the span with the provided <code>id</code> was …\nNotifies this layer that a span with the ID <code>span</code> recorded …\nNotifies this layer that a span ID has been cloned, and …\nPerforms late initialization when attaching a <code>Layer</code> to a …\nNotifies this layer that a new span was constructed with …\nInforms the filter that a new span was created.\nNotifies this layer that a span with the given <code>Id</code> recorded …\nInforms the filter that the span with the provided <code>id</code> …\nPerforms late initialization when installing this layer as …\nThe <code>tracing-subscriber</code> prelude.\nThis is intentionally not implemented, as recording fields …\nRegisters a new callsite with this layer, returning …\nStorage for span data shared by multiple <code>Layer</code>s.\nWrapper for a <code>Layer</code> to allow it to be dynamically reloaded.\nDecrements the reference count of the span with the given …\nReturns a new <code>EnvFilter</code> from the value of the <code>RUST_LOG</code> …\nReturns a new <code>EnvFilter</code> from the value of the given …\nReturns a new <code>EnvFilter</code> from the directives in the given …\nExtension traits and other utilities to make working with …\nCombines <code>self</code> with a <code>Filter</code>, returning a <code>Filtered</code> layer.\nComposes this <code>Layer</code> with the given <code>Subscriber</code>, returning a …\nExtension trait providing <code>MakeVisitor</code> combinators.\nExtension trait implemented for all <code>MakeVisitor</code> …\nCreates new visitors.\nExtension trait implemented by types which can be recorded …\nVisits typed values.\nExtension trait implemented by visitors to indicate that …\nA visitor that produces output once it has visited a set …\nExtension trait implemented by visitors to indicate that …\nThe visitor type produced by this <code>MakeVisitor</code>.\n<code>MakeVisitor</code> wrappers for working with <code>fmt::Debug</code> fields.\nWraps <code>self</code> so that any <code>fmt::Debug</code> fields are recorded …\nWraps <code>self</code> so that any <code>fmt::Debug</code> fields are recorded …\nA <code>MakeVisitor</code> wrapper that separates formatted fields with …\nWraps <code>self</code> so that when fields are formatted to a writer, …\nWraps <code>self</code> so that when fields are formatted to a writer, …\n<code>MakeVisitor</code> wrappers for working with <code>fmt::Display</code> fields.\nWraps <code>self</code> so that any string fields named “message” …\nWraps <code>self</code> so that any string fields named “message” …\nCompletes the visitor, returning any output.\nMake a new visitor for the provided <code>target</code>.\nRecord all the fields in <code>self</code> with the provided <code>visitor</code>.\nVisit a value implementing <code>fmt::Debug</code>.\nVisit a set of fields, and return the output of finishing …\nVisits all fields in <code>fields</code> with a new visitor constructed …\nReturns the formatter that this visitor writes to.\nReturns the writer that this visitor writes to.\nA visitor wrapper that ensures any <code>fmt::Debug</code> fields are …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nWraps the provided visitor so that any <code>fmt::Debug</code> fields …\nVisit a string value.\nA <code>MakeVisitor</code> wrapper that wraps a visitor that writes …\nA visitor wrapper that inserts a delimiter after the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a new <code>MakeVisitor</code> implementation that wraps <code>inner</code> …\nReturns a new <code>Visit</code> implementation that wraps <code>inner</code> so that\nA visitor wrapper that ensures any strings named “message…\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns a new <code>MakeVisitor</code> implementation that will wrap …\nVisit a string value.\nIndicates that a field name specified in a filter …\nA builder for constructing new <code>EnvFilter</code>s.\nA single filtering directive.\nA filter implemented by a closure or function pointer that …\nA <code>Layer</code> which filters spans and events based on a set of …\nExtension trait adding combinators for combining <code>Filter</code>.\nA filter implemented by a closure or function pointer that …\nUniquely identifies an individual <code>Filter</code> instance in the …\nA <code>Layer</code> that wraps an inner <code>Layer</code> and adds a <code>Filter</code> which …\nIndicates that an error occurred while parsing a <code>EnvFilter</code> …\nA filter comparable to a verbosity <code>Level</code>.\nIndicates that a string could not be parsed to a valid …\nIndicates that a string could not be parsed as a filtering …\nA filter that enables or disables spans and events based …\nCombines this <code>Filter</code> with another <code>Filter</code> s so that spans …\nBoxes <code>self</code>, erasing its concrete type.\nFilter combinators\nReturns the default level for this filter, if one is set.\nConstructs a <code>DynFilterFn</code> from a function or closure that …\nBorrows the <code>Filter</code> used by this layer.\nConstructs a <code>FilterFn</code>, from a function or closure that …\nMutably borrows the <code>Filter</code> used by this layer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a new <code>EnvFilter</code> from the directives in the …\nReturns a new <code>EnvFilter</code> from the directives in the …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nBorrows the inner <code>Layer</code> wrapped by this <code>Filtered</code> layer.\nMutably borrows the inner <code>Layer</code> wrapped by this <code>Filtered</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over the target-<code>LevelFilter</code> pairs in …\nConstructs a <code>Filter</code> from a function or closure that …\nConstructs a <code>FilterFn</code> from a function or closure that …\nWraps the provided <code>Layer</code> so that it is filtered by the …\nReturns a new <code>Targets</code> filter.\nInverts <code>self</code>, returning a filter that enables spans and …\nCombines two <code>Filter</code>s so that spans and events are enabled …\nReturns a new <code>EnvFilter</code> from the directives in the given …\nReturns a new <code>EnvFilter</code> from the directives in the given …\nA filter that enables or disables spans and events based …\nReturns a new <code>EnvFilter</code> from the directives in the …\nAdds a function for filtering callsites to this filter.\nSets the default level to enable for spans and events …\nSets a default [filtering directive] that will be added to …\nSets the name of the environment variable used by the …\nSets the highest verbosity <code>Level</code> the filter function will …\nSets the highest verbosity <code>Level</code> the filter function will …\nSets whether span field values can be matched with regular …\nEnables spans and events with targets starting with the …\nAdds targets from an iterator of target-<code>LevelFilter</code> pairs …\nReturns whether a target-<code>Level</code> pair would be enabled by …\nCombines two <code>Filter</code>s so that spans and events are enabled …\nInverts the result of a <code>Filter</code>.\nCombines two <code>Filter</code>s so that spans and events are enabled …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn owning iterator over the target-level pairs of a <code>Targets</code>…\nA borrowing iterator over the target-level pairs of a …\nA filter that enables or disables spans and events based …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProvides the current span context to a formatter.\nA type that can format a tracing <code>Event</code> to a <code>Writer</code>.\nA type that can format a set of fields to a <code>Writer</code>.\nA formatted representation of a span’s fields stored in …\nA <code>Subscriber</code> that logs formatted representations of <code>tracing</code>…\nA <code>Layer</code> that logs formatted representations of <code>tracing</code> …\nA type that can create <code>io::Write</code> instances.\nA <code>Subscriber</code> that logs formatted representations of <code>tracing</code>…\nConfigures and constructs <code>Subscriber</code>s.\nA writer intended to support <code>libtest</code>’s output capturing …\nThe concrete <code>io::Write</code> implementation returned by …\nRecord additional field(s) on an existing span.\nReturns a new <code>format::Writer</code> for writing to this …\nSets the layer being built to use a less verbose formatter.\nSets the subscriber being built to use a less verbose …\nReturns the current span for this formatter.\nSets the event formatter that the layer being built will …\nSets the event formatter that the subscriber being built …\nReturns an iterator over the stored data for all the spans …\nReturns <code>true</code> if an active span exists for the given <code>Id</code>.\nReturns the field formatter configured by the subscriber …\nThe formatted fields of a span.\nFinish the builder, returning a new <code>FmtSubscriber</code>.\nReturns a new <code>SubscriberBuilder</code> for configuring a …\nSets the field formatter that the layer being built will …\nSets the field formatter that the subscriber being built …\nFormatters for logging <code>tracing</code> events.\nReturns the default configuration for an [event formatter].\nWrite a log message for <code>Event</code> in <code>Context</code> to the given …\nFormat the provided <code>fields</code> to the provided <code>Writer</code>, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nInstall a global tracing subscriber that listens for …\nInstall this Subscriber as the global default.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a new formatting layer that can be composed with …\nSets whether to write errors from <code>FormatEvent</code> to the …\nSets whether to write errors from <code>FormatEvent</code> to the …\nReturns stored data for the span that the wrapped …\nReturns an instance of <code>Writer</code>.\nReturns a <code>Writer</code> for writing data from the span or event …\nUpdates the event formatter by applying a function to the …\nUpdates the event formatter by applying a function to the …\nUpdates the field formatter by applying a function to the …\nUpdates the field formatter by applying a function to the …\nUpdates the <code>MakeWriter</code> by applying a function to the …\nUpdates the <code>MakeWriter</code> by applying a function to the …\nReturns metadata for the span with the given <code>id</code>, if it …\nReturns a new <code>Layer</code> with the default configuration.\nReturns a new <code>FormattedFields</code>.\nReturns a new <code>TestWriter</code> with the default configuration.\nReturns stored data for the parent span of the event …\nSets the layer being built to use an excessively pretty, …\nSets the subscriber being built to use an excessively …\nReturns a <code>Handle</code> that may be used to reload the …\nSets whether this layer should use ANSI terminal formatting\nReturns stored data for the span with the given <code>id</code>, if it …\nReturns an iterator over the stored data for all the spans …\nFormatters for event timestamps.\nReturns a new <code>SystemTime</code> timestamp provider.\nInstall a global tracing subscriber that listens for …\nInstall this Subscriber as the global default if one is …\nVisits every span in the current context with a closure.\nSets whether or not the formatter emits ANSI terminal …\nSets whether or not the formatter emits ANSI terminal …\nSets the <code>EnvFilter</code> that the subscriber will use to …\nSets whether or not an event’s source code file path is …\nSets whether or not an event’s source code file path is …\nConfigures the subscriber being built to allow filter …\nSets whether or not an event’s level is displayed.\nSets whether or not an event’s level is displayed.\nSets whether or not an event’s source code line number is\nSets whether or not an event’s source code line number is\nSets the maximum verbosity level that will be enabled by …\nConfigures how synthesized events are emitted at points in …\nConfigures how synthesized events are emitted at points in …\nSets whether or not an event’s target is displayed.\nSets whether or not an event’s target is displayed.\nConfigures the layer to support <code>libtest</code>’s output …\nConfigures the subscriber to support <code>libtest</code>’s output …\nSets whether or not the thread ID of the current thread is …\nSets whether or not the thread ID of the current thread is …\nSets whether or not the name of the current thread is …\nSets whether or not the name of the current thread is …\nUse the given <code>timer</code> for span and event timestamps.\nUse the given <code>timer</code> for log message timestamps.\nSets the <code>MakeWriter</code> that the layer being built will use to …\nSets the <code>MakeWriter</code> that the subscriber being built will …\nDo not emit timestamps with spans and event.\nDo not emit timestamps with log messages.\nAbstractions for creating <code>io::Write</code> instances.\nBorrows the writer for this <code>Layer</code>.\nMutably borrows the writer for this <code>Layer</code>.\none event per enter/exit of a span\none event when the span is dropped\nMarker for <code>Format</code> that indicates that the compact log …\nThe default <code>FormatFields</code> implementation.\nThe visitor produced by <code>DefaultFields</code>’s <code>MakeVisitor</code> …\none event per enter of a span\none event per exit of a span\nevents at all points (new, enter, exit, drop)\nA <code>FormatFields</code> implementation that formats fields by …\nThe visitor produced by <code>FieldFn</code>’s <code>MakeVisitor</code> …\nConfigures what points in the span lifecycle are logged as …\nA pre-configured event formatter.\nA type that can format a tracing <code>Event</code> to a <code>Writer</code>.\nA type that can format a set of fields to a <code>Writer</code>.\nMarker for <code>Format</code> that indicates that the default log …\none event when span is created\nspans are ignored (this is the default)\nAn excessively pretty, human-readable event formatter.\nAn excessively pretty, human-readable <code>MakeVisitor</code> …\nThe visitor produced by <code>Pretty</code>’s <code>MakeVisitor</code> …\nA writer to which formatted representations of spans and …\nRecord additional field(s) on an existing span.\nReturn a new <code>Writer</code> that mutably borrows <code>self</code>.\nUse a less verbose output format.\nReturns a <code>FormatFields</code> implementation that formats fields …\nReturns the default configuration for an [event formatter].\nWrite a log message for <code>Event</code> in <code>Context</code> to the given …\nFormat the provided <code>fields</code> to the provided <code>Writer</code>, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns <code>true</code> if ANSI escape codes may be used to add colors\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>Writer</code> from any type that implements …\nReturns a new default visitor that formats to the provided …\nReturns a new default <code>PrettyFields</code> implementation.\nReturns a new default visitor that formats to the provided …\nReturns a new default <code>FormatFields</code> implementation.\nUse an excessively pretty, human-readable output format.\nEnable ANSI encoding for formatted fields.\nEnable ANSI terminal colors for formatted output.\nSets whether or not an event’s source code file path is …\nSets whether or not an event’s level is displayed.\nSets whether or not an event’s source code line number is\nSets whether the event’s source code location is …\nSets whether or not the source code location from which an …\nSets whether or not an event’s target is displayed.\nSets whether or not the thread ID of the current thread is …\nSets whether or not the name of the current thread is …\nUse the given <code>timer</code> for log message timestamps.\nDo not emit timestamps with log messages.\nWrites a <code>char</code> into this writer, returning whether the …\nGlue for usage of the <code>write!</code> macro with <code>Writer</code>s.\nWrites a string slice into this <code>Writer</code>, returning whether …\nA type that can measure and format the current time.\nFormats the current time using a fixed offset and a …\nRetrieve and print the current wall-clock time.\nRetrieve and print the relative elapsed wall-clock time …\nFormats the current UTC time using a formatter from the …\nMeasure and write out the current time.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a formatter that formats the current UTC time …\nReturns a formatter that formats the current time using …\nReturns a formatter that formats the current [UTC time] in …\nReturns a new <code>SystemTime</code> timestamp provider.\nReturns a new <code>Uptime</code> timestamp provider.\nA writer of type <code>A</code>.\nA writer of type <code>A</code>.\nImplements <code>std::io::Write</code> for an <code>Arc</code> where <code>&amp;W: Write</code>.\nA writer of type <code>B</code>.\nA writer of type <code>B</code>.\nA writer that erases the specific <code>io::Write</code> and <code>MakeWriter</code> …\nA writer that is one of two types implementing <code>io::Write</code>.\nA type that can create <code>io::Write</code> instances.\nExtension trait adding combinators for working with types …\nA type implementing <code>io::Write</code> for a <code>MutexGuard</code> where the …\nA writer which may or may not be enabled.\nCombines a <code>MakeWriter</code> that returns an <code>OptionalWriter</code> with …\nCombines two types implementing <code>MakeWriter</code> (or …\nA writer intended to support <code>libtest</code>’s output capturing …\nA <code>MakeWriter</code> combinator that wraps a <code>MakeWriter</code> with a …\nA <code>MakeWriter</code> combinator that only returns an enabled writer…\nA <code>MakeWriter</code> combinator that only returns an enabled writer…\nThe concrete <code>io::Write</code> implementation returned by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an instance of <code>Writer</code>.\nReturns a <code>Writer</code> for writing data from the span or event …\nConstructs a <code>BoxMakeWriter</code> wrapping a type implementing …\nWraps the provided <code>MakeWriter</code> with a maximum <code>Level</code>, so …\nWraps the provided <code>MakeWriter</code> with a minimum <code>Level</code>, so …\nWraps <code>make</code> with the provided <code>filter</code>, returning a <code>MakeWriter</code>…\nCombines\nCombines two types implementing <code>MakeWriter</code>, returning a …\nReturns a disabled writer.\nReturns an enabled writer of type <code>T</code>.\nRepresents information about the current context provided …\nA per-<code>Layer</code> filter that determines whether a span or event …\nA layer that does nothing.\nA composable handler for <code>tracing</code> events.\nA <code>Subscriber</code> composed of a <code>Subscriber</code> wrapped by one or …\nExtension trait adding a <code>with(Layer)</code> combinator to …\nReturns an <code>Interest</code> indicating whether this layer will …\nReturns the wrapped subscriber’s view of the current …\nReturns some reference to this <code>Subscriber</code> value if it is …\nReturns <code>true</code> if this layer is interested in a span or …\nReturns whether the wrapped subscriber would enable the …\nRecords the provided <code>event</code> with the wrapped subscriber.\nCalled before the filtered [<code>Layer]&#39;s [</code>on_event…\nReturns an iterator over the stored data for all the spans …\nReturns a <code>SpanRef</code> for the parent span of the given <code>Event</code>, …\nReturns <code>true</code> if an active span exists for the given <code>Id</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.\nReturns stored data for the span that the wrapped …\nReturns an optional hint of the highest verbosity level …\nReturns metadata for the span with the given <code>id</code>, if it …\nReturns a new <code>Identity</code> layer.\nNotifies this filter that a span with the given ID has …\nNotifies this filter that a span with the given ID was …\nNotifies this filter that a span with the given ID was …\nNotifies this filter that a new span was constructed with …\nNotifies this filter that a span with the given <code>Id</code> …\nReturns stored data for the span with the given <code>id</code>, if it …\nReturns an iterator over the stored data for all the spans …\nExtension trait adding utility methods for subscriber …\nExtension trait adding combinators for working with types …\nA composable handler for <code>tracing</code> events.\nExtension trait adding a <code>with(Layer)</code> combinator to …\nExtension trait providing <code>MakeVisitor</code> combinators.\nExtension trait implemented by types which can be recorded …\nCombines <code>self</code> with another type implementing <code>MakeWriter</code>, …\nCombines <code>self</code> with another type implementing <code>MakeWriter</code>, …\nComposes this layer around the given <code>Layer</code>, returning a …\nComposes this layer around the given <code>Layer</code>, returning a …\nErases the type of this <code>Layer</code>, returning a <code>Box</code>ed <code>dyn Layer</code> …\nErases the type of this <code>Layer</code>, returning a <code>Box</code>ed <code>dyn Layer</code> …\nReturns <code>true</code> if this layer is interested in a span or …\nReturns <code>true</code> if this layer is interested in a span or …\nCalled before <code>on_event</code>, to determine if <code>on_event</code> should be …\nCalled before <code>on_event</code>, to determine if <code>on_event</code> should be …\nAttempts to set <code>self</code> as the global default subscriber in …\nAttempts to set <code>self</code> as the global default subscriber in …\nNotifies this layer that the span with the given ID has …\nNotifies this layer that the span with the given ID has …\nNotifies this layer that a span with the given ID was …\nNotifies this layer that a span with the given ID was …\nNotifies this layer that an event has occurred.\nNotifies this layer that an event has occurred.\nNotifies this layer that the span with the given ID was …\nNotifies this layer that the span with the given ID was …\nNotifies this layer that a span with the ID <code>span</code> recorded …\nNotifies this layer that a span with the ID <code>span</code> recorded …\nNotifies this layer that a span ID has been cloned, and …\nNotifies this layer that a span ID has been cloned, and …\nPerforms late initialization when attaching a <code>Layer</code> to a …\nPerforms late initialization when attaching a <code>Layer</code> to a …\nNotifies this layer that a new span was constructed with …\nNotifies this layer that a new span was constructed with …\nNotifies this layer that a span with the given <code>Id</code> recorded …\nNotifies this layer that a span with the given <code>Id</code> recorded …\nPerforms late initialization when installing this layer as …\nPerforms late initialization when installing this layer as …\nCombines <code>self</code> with another type implementing <code>MakeWriter</code>, …\nCombines <code>self</code> with another type implementing <code>MakeWriter</code>, …\nRecord all the fields in <code>self</code> with the provided <code>visitor</code>.\nRegisters a new callsite with this layer, returning …\nRegisters a new callsite with this layer, returning …\nSets <code>self</code> as the default subscriber in the current scope, …\nSets <code>self</code> as the default subscriber in the current scope, …\nAttempts to set <code>self</code> as the global default subscriber in …\nAttempts to set <code>self</code> as the global default subscriber in …\nWraps <code>self</code> with the provided <code>layer</code>.\nWraps <code>self</code> with the provided <code>layer</code>.\nCombines <code>self</code> with a <code>Filter</code>, returning a <code>Filtered</code> layer.\nCombines <code>self</code> with a <code>Filter</code>, returning a <code>Filtered</code> layer.\nWraps <code>self</code> with a predicate that takes a span or event’s …\nWraps <code>self</code> with a predicate that takes a span or event’s …\nWraps <code>self</code> and returns a <code>MakeWriter</code> that will only write …\nWraps <code>self</code> and returns a <code>MakeWriter</code> that will only write …\nWraps <code>self</code> and returns a <code>MakeWriter</code> that will only write …\nWraps <code>self</code> and returns a <code>MakeWriter</code> that will only write …\nComposes this <code>Layer</code> with the given <code>Subscriber</code>, returning a …\nComposes this <code>Layer</code> with the given <code>Subscriber</code>, returning a …\nSpan data stored in a <code>Registry</code>.\nThe type of span data stored in this registry.\nAn immutable, read-only reference to a Span’s extensions.\nAn mutable reference to a Span’s extensions.\nProvides access to stored span data.\nA shared, reusable store for spans.\nAn iterator over the parents of a span, ordered from leaf …\nAn iterator over the parents of a span, ordered from root …\nA stored representation of data associated with a span.\nA reference to [span data] and the associated registry.\nReturns a reference to this span’s <code>Extensions</code>.\nReturns a reference to this span’s <code>Extensions</code>.\nReturns a mutable reference to this span’s <code>Extensions</code>.\nReturns a mutable reference to this span’s <code>Extensions</code>.\nReturns a list of fields defined by the span.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nFlips the order of the iterator, so that it is ordered …\nImmutably borrows a type previously inserted into this …\nGet a mutable reference to a type previously inserted on …\nReturns this span’s ID.\nReturns this span’s ID.\nInsert a type into this <code>Extensions</code>.")