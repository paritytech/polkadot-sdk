searchState.loadedDescShard("yet_another_parachain_runtime", 2, "Get a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn the current head of the message queue chain. This …\nHRMP messages grouped by channels. The messages in the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance initialized to <code>hash</code>.\nA storage proof of a predefined set of keys from the …\nContains the relay parent header and its descendants. This …\nLegacy ParachainInherentData that is kept around for …\nThe inherent data that is passed by the collator to the …\nDownward messages in the order they were sent.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nHRMP messages grouped by channels. The messages in the …\nCalls <code>U::from(self)</code>.\nA storage proof of a predefined set of keys from the …\nStorage weight reclaim mechanism.\n<code>StorageWeightReclaimer</code> is a mechanism for manually …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the current storage proof size from the host side.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>StorageWeightReclaimer</code> instance and …\nCreate a new <code>StorageWeightReclaim</code> instance.\nCheck the consumed storage weight and add the reclaimed …\nThe identifier for the <code>timestamp</code> inherent.\nThe inherent data provider for the timestamp.\nThe type of the inherent.\nCreate the inherent data.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate <code>Self</code> from the given relay chain slot and slot …\nCalls <code>U::from(self)</code>.\nProvide the inherent data into the given <code>inherent_data</code>.\nChargeWeightInFungibles trait, which converts a given …\nXcm router which recognises the <code>Parent</code> destination and …\nProvides an implementation of <code>WeightTrader</code> to charge for …\nCharges for execution in the first asset of those selected …\nImplementation of <code>xcm_builder::EnsureDelivery</code> which helps …\nXCM fee depositor to which we implement the <code>TakeRevenue</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBlock is in chain\nProvides an implementation of the <code>RelayChainInterface</code> …\nBlock status is unknown, listener can be used to wait for …\nBuilds a relay chain interface by constructing a full …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance of <code>RelayChainInProcessInterface</code>\nWait for a given relay chain block in an async way.\nThe block number type used by Polkadot. 32-bits will allow …\nA candidate-receipt with commitments directly included.\nThe unique (during session) index of a core.\nThe state of a particular availability core.\nContains the error value\nThe core was not occupied to begin with.\nThe core is currently free and there is nothing scheduled. …\nA wrapped version of <code>DownwardMessage</code>. The difference is …\nAn HRMP message seen from the perspective of a recipient.\nThe candidate occupying the core was made available and …\nThe core is currently occupied.\nAn assumption being made about the state of an occupied …\nContains the success value\nA handle used to communicate with the <code>Overseer</code>.\nA hash of some data used by the relay chain.\nHeader type.\nUnique identifier of a parachain.\nThe validation data provides information about how to …\nTrait that provides all necessary methods for interaction …\nThe core is currently free, with a para scheduled and …\nSimple index type with which we can count sessions.\nStorage value.\nThe candidate occupying the core timed out and freed the …\nUnit type wrapper around <code>Hash</code> that represents the …\nIdentity that parachain validators use when signing …\nYields information on all availability cores as relevant …\nGet the hash of the current best block.\nInform the <code>Overseer</code> that some block was finalized.\nInform the <code>Overseer</code> that that some block was imported.\nHelper function to call an arbitrary runtime API using a …\nCall an arbitrary runtime api. The input and output are …\nGet the receipt of the first candidate pending …\nGet the receipts of all candidates pending availability …\nFetch the claim queue.\nThe commitments of the candidate receipt.\nDoes this committed candidate receipt corresponds to the …\nThe message payload.\nThe descriptor of the candidate.\nA chain-specific digest of data useful for light clients …\nThe merkle root of the extrinsics.\nGet a stream of finality notifications.\nGet the hash of the finalized block.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nFetch a storage item by key.\nComputes the hash of the committed candidate receipt.\nFetch the block header of a given hash or height, if it …\nGet a stream of import block notifications.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the synchronization service is undergoing major …\nIs this core state <code>Self::Occupied</code>?\nThe maximum legal size of a POV block, in bytes.\nThe actual downward message to processes.\nCreate a new <code>Handle</code>.\nGet a stream of new best block notifications.\nThe block number.\nGet a handle to the overseer.\nReturns the scheduled <code>ParaId</code> for the core or <code>None</code> if …\nThe parent hash.\nThe parent head-data.\nPerforms checks on the UMP signals and returns them.\nYields the persisted validation data for the given <code>ParaId</code> …\nGenerate a storage read proof.\nThe relay-chain block number this is in the context of.\nThe relay-chain block storage root this is in the context …\nReturns channels contents for each inbound HRMP channel …\nReturns the whole contents of the downward message queue …\nFetch the scheduling lookahead value.\nSend some message with normal priority to one of the …\nSend a message not providing an origin.\nSend some message with the specified priority to one of …\nThe block number at which these messages were put into the …\nThe block number at which this message was sent. …\nReturns the session index expected at a child of the block.\nThe state trie merkle root\nTell <code>Overseer</code> to shutdown.\nTransforms this into a plain <code>CandidateReceipt</code>.\nReturns the validation code hash for the given <code>para_id</code> …\nFetch a vector of current validators.\nGet the runtime version of the relay chain.\nWait for a block with the given hash to be in the …\nWait for a block with a given hash in the relay chain.\nApproval voting configuration parameters\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nClient that maps RPC methods and deserializes results\nRelayChainRpcInterface is used to interact with a full …\nA parsed URL record.\nReturn the serialization of this URL.\nReturn the authority of this URL as an ASCII string.\nReturns information regarding the current epoch.\nCall a call to <code>state_call</code> rpc method.\nSame as <code>call_remote_runtime_function</code> but work on encoded …\nReturn whether this URL is a cannot-be-a-base URL, meaning …\nGet hash of n-th block.\nGet hash of last finalized block.\nGet hash of the n-th block in the canon chain.\nGet header at specified hash\nEntry point to create <code>RelayChainRpcClient</code> and start a …\nSerialize with Serde using the internal representation of …\nIf this URL has a host and it is a domain name (not an IP …\nReturn this URL’s fragment identifier, if any.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert a directory name as <code>std::path::Path</code> into an URL in …\nConvert a file name as <code>std::path::Path</code> into an URL in the …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a stream of new best relay chain headers\nGet a stream of finalized relay chain headers\nGet a stream of all imported relay chain headers\nReturn whether the URL has an ‘authority’, which can …\nEquivalent to <code>url.host().is_some()</code>.\nReturn the parsed representation of the host for this URL. …\nReturn the string representation of the host (domain or IP …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the serialization of this URL.\nReturn whether the URL is special (has a special scheme)\nParse a string as an URL, with this URL as the base URL.\nCreates a relative URL if possible, with this URL as the …\nReturn a default <code>ParseOptions</code> that can fully configure the …\nReturn the origin of this URL (…\nReturns the persisted validation data for the given <code>ParaId</code> …\nYields information on all availability cores as relevant …\nGet a vector of events concerning candidates that occurred …\nGet the receipt of a candidate pending availability. This …\nGet the receipt of all candidates pending availability.\nChecks if the given validation outputs pass the acceptance …\nReturns all onchain disputes.\nGet all the pending inbound messages in the downward …\nGet the contents of all channels addressed to the given …\nReturns a merkle proof of a validator session key in a …\nGet the minimum number of backing votes for a candidate.\nScrape dispute relevant from on-chain, backing votes and …\nYields the persisted validation data for the given <code>ParaId</code> …\nReturns code hashes of PVFs that require pre-checking by …\nGet the executor parameters for the given session, if …\nReturns the session index expected at a child of the block.\nGet the session info for the given session, if stored.\nSubmits a PVF pre-checking statement into the transaction …\nSubmits an unsigned extrinsic to slash validators who lost …\nReturns a list of validators that lost a past session …\nFetch the validation code used by a para, making the given …\nGet the validation code from its hash.\nFetch the hash of the validation code used by a para, …\nReturns the validator groups and rotation info localized …\nGet the current validators.\nParse an absolute URL from a string.\nParse an absolute URL from a string and add params to its …\nReturn the password for this URL, if any, as a …\nReturn the path for this URL, as a percent-encoded ASCII …\nUnless this URL is cannot-be-a-base, return an iterator of …\nReturn an object with methods to manipulate this URL’s …\nReturn the port number for this URL, if any.\nReturn the port number for this URL, or the default port …\nReturn this URL’s query string, if any, as a …\nParse the URL’s query string, if any, as …\nManipulate this URL’s query string, viewed as a sequence …\nGet runtime version\nReturn the scheme of this URL, lower-cased, as an ASCII …\nSerialize with Serde using the internal representation of …\nChange this URL’s fragment identifier.\nChange this URL’s host.\nChange this URL’s host to the given IP address.\nChange this URL’s password.\nChange this URL’s path.\nChange this URL’s port number.\nChange this URL’s query string. If <code>query</code> is <code>None</code>, this …\nChange this URL’s scheme.\nChange this URL’s username.\nResolve a URL’s host and port number to <code>SocketAddr</code>.\nGet read proof for <code>storage_keys</code>\nRetrieve storage item at <code>storage_key</code>\nGet system health information\nAssuming the URL is in the <code>file</code> scheme or similar, convert …\nReturn the username for this URL (typically the empty …\nWait for a given relay chain block\nA chain-specific digest of data useful for light clients …\nThe merkle root of the extrinsics.\nReturns a stream that will yield finalized heads for the …\nReturns a stream that will yield best heads for the given …\nThe block number.\nThe parent hash.\nReturns a stream over pending candidates for the parachain …\nThe state trie merkle root\nBuilds a sproof (portmanteau of ‘spoof’ and ‘proof’…\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe para id of the current parachain.\nReturns a mutable reference to HRMP channel metadata for a …\nReturns a mutable reference to HRMP channel metadata for a …\nThe default XCM version to set in genesis config.\nHelper function used in tests to build the genesis storage …\nnote: $asset needs to be prefunded outside this function\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSome way of identifying an account on the chain. We …\nAn opaque 32-byte cryptographic identifier.\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nAggregate message origin for the <code>MessageQueue</code> pallet.\nEither an amount of a single fungible asset, or a single …\nMeans of identifying one asset class from another.\nThe given asset is not handled.\nThe Origin Register does not contain a valid value for …\nBalance of an account.\nScalar type for representing balance of an account.\nThe XCM did not pass the barrier condition for execution.\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\n<code>Instance1</code> to be used for instantiable pallets defined with …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nExecution completed successfully; given weight was used.\nTrait that allows zero-copy read of value-references from …\nDerive <code>parity_scale_codec::Decode</code> for struct and enum.\nThe given message cannot be translated into a format …\nSomething that should be called when a downward message is …\nWrapper around the encoded and decoded versions of a value.\nTrait that allows zero-copy write of value-references to …\nDerive <code>parity_scale_codec::Encode</code> and …\nExecution did not start due to an error. We use …\nAn Ethereum network specified by its chain ID.\nAttempt to send a message greater than the maximum …\nRecursion stack limit reached\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nThe message was unable to be exported.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees were required which the origin could not pay.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA global network capable of externalizing its own …\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nA type that uniquely identifies an HRMP channel. An HRMP …\nExecution started, but did not complete successfully due to…\nTrait for providing balance-inspection access to a set of …\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nA relative path between state-bearing consensus systems.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nSome other error with locking.\nUsed by <code>Transact</code> to indicate that the given weight limit …\nThe given pallet’s name is different to that expected.\nOrigin should just be the native dispatch origin …\nA global identifier of a data structure existing within …\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nThe unambiguous child.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nThe provided pallet index was not found.\nThe message originated from this parachain.\nUnique identifier of a parachain.\nAn indexed parachain belonging to and operated by the …\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nThe Polkadot Bulletin chain.\n<code>MultiLocation</code> value failed to be reanchored.\nOrigin should just be the standard account-based origin …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nToo many assets matched the given asset filter.\nDestination is routable, but there is some issue with the …\nUsed by the <code>Trap</code> instruction to force an error …\nInbound upward message.\nIdentifies a UMP queue inside the <code>MessageQueue</code> pallet.\nThe universal location of the local consensus is improper.\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nDestination is known to be unroutable.\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nThe given pallet’s version has an incompatible version …\nA single XCM message, together with its version code.\nExecution of the XCM would potentially result in a greater …\nMeters consumed weight and a hard limit for the maximal …\nThe weight of an XCM message is not computable ahead of …\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nOrigin should be interpreted as an XCM native origin and …\nA minimized version of <code>pallet_xcm_bridge_hub::Call</code> that …\nError codes used in XCM. The first errors codes have …\nA version of XCM.\nSomething that should be called for each batch of messages …\nThe total amount of issuance in the system excluding those …\nThe total amount of issuance in the system excluding those …\nProvides an API similar to <code>AsRef</code> that provides access to …\nPanic if an expression doesn’t evaluate to <code>Ok</code>.\nReturns <code>true</code> if an <code>asset</code> exists.\nGet the balance of <code>who</code> which does not include funds which …\nReturns <code>true</code> if the <code>asset</code> balance of <code>who</code> may be increased …\nReturns <code>Failed</code> if the <code>asset</code> balance of <code>who</code> may not be …\nChecks if the XCM is decodable. Consequently, it checks …\n<code>pallet_xcm_bridge_hub::Call::close_bridge</code>\nAttempt to deserialise the value from input.\nAttempt to deserialize the value from input into a …\nAttempt to deserialize the value from input into a …\nTo prevent Out of Memory errors on the <code>DownwardMessageQueue</code>…\nConvert self to an owned vector.\nConvert self to an owned vector.\nConvert self to an owned vector.\nConvert self to a slice and append it to the destination.\nConvert self to a slice and append it to the destination.\nConvert self to a slice and append it to the destination.\nReturns the fixed encoded size of the type.\nReturns the fixed encoded size of the type.\nCalculates the encoded size.\nCalculates the encoded size.\nCalculates the encoded size.\nDecode the inner encoded value and store it. Returns a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe fungibility of the asset, which contains either the …\nHandle some incoming DMP messages (note these are …\nHandle some incoming XCMP messages (note these are the big …\nThe overall asset identity (aka <em>class</em>, in the case of a …\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAccess the encoded data.\nThe minimum balance any single account may have.\nCreate a new instance from its raw inner byte value.\n<code>pallet_xcm_bridge_hub::Call::open_bridge</code>\nThe number of parent junctions at the beginning of this …\nThe para that acts as the recipient in this channel.\nGet the maximum amount that <code>who</code> can withdraw/transfer …\nThe para that acts as the sender in this channel.\nIf possible give a hint of expected size of the encoding.\nIf possible give a hint of expected size of the encoding.\nIf possible give a hint of expected size of the encoding.\nAttempt to skip the encoded value from input.\nAttempt to skip the encoded value from input.\nMove the decoded value out or (if not present) decode …\nGet the total amount of funds whose ultimate beneficial …\nThe total amount of issuance in the system.\nProvides an API similar to <code>TryInto</code> that allows fallible …\nConvert self to a slice and then invoke the given closure …\nConvert self to a slice and then invoke the given closure …\nConvert self to a slice and then invoke the given closure …\nHelper method to build a XCM with a <code>Transact</code> instruction …\nHelper method to build a XCM with a <code>Transact</code> instruction …\nThe EIP-155 chain ID.\nUniversal <code>InteriorLocation</code> from the bridged consensus.\nUniversal <code>InteriorLocation</code> from the bridged consensus.\nThe number of messages that we may prune in a single call.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe downward messages addressed for a certain para.\nThe message being sent exceeds the configured max message …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nAn error sending a downward message.\nThe destination is unknown.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe downward messages addressed for a certain para.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe channel is already confirmed.\nThe channel from the sender to the origin doesn’t exist.\nThe recipient already has the maximum number of allowed …\nContains a variant per dispatchable extrinsic that this …\nCanceling is requested by neither the sender nor recipient …\nHRMP channel closed.\nThe channel between these two chains cannot be authorized.\nThe origin that can perform “force” actions on …\nThe channel close request is already requested.\nThe channel to be closed doesn’t exist.\nThe origin tries to close a channel where it is neither …\nConfiguration trait of this pallet.\nAn interface for reserving deposits for opening channels.\nThe default channel size and capacity to use when opening …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nPreopen the given HRMP channels.\nMaximum bound that can be set for inbound channels.\nSame as <code>HRMP_MAX_INBOUND_CHANNELS_BOUND</code>, but for outbound …\nThis mapping tracks how many open channel requests were …\nA metadata of an HRMP channel.\nStorage for the messages for each channel. Invariant: …\nMaintains a mapping that can be used to answer the …\nAn HRMP channel was opened via Root origin.\nHRMP channel data associated with each para. Invariant:\nA set of pending HRMP close channel requests that are …\nStorage type is <code>StorageValue</code> with value type …\nStorage type is <code>StorageMap</code> with key type <code>ParaId</code> and value …\nIngress/egress indexes allow to find all the senders and …\nA description of a request to open an HRMP channel.\nThis mapping tracks how many open channel requests are …\nThe set of pending HRMP open channel requests.\nStorage type is <code>StorageValue</code> with value type …\nAn HRMP channel was opened with a system chain.\nThe HRMP watermark associated with each para. Invariant:\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nOpen HRMP channel accepted.\nAn HRMP channel request sent by the receiver was canceled …\nAn HRMP channel’s deposits were updated.\nOpen HRMP channel requested.\nCannot cancel an HRMP open channel request because it is …\nThe channel already exists\nThere is already a request to open the same channel.\nThe requested capacity exceeds the global limit.\nThe open request doesn’t exist.\nThe recipient is not a valid para.\nThe sender already has the maximum number of allowed …\nThe open request requested the message size that exceeds …\nThe sender tried to open a channel to themselves.\nThe requested capacity is zero.\nThe requested maximum message size is 0.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe outer event type.\nA weight info that is only suitable for testing.\nMeans of converting an <code>Xcm</code> into a <code>VersionedXcm</code>. This …\nSomething that provides the weight of this pallet.\nThe provided witness data is wrong.\nNOTE: this field is deprecated. Channel open requests …\nAccept a pending open channel request from the given …\nIndicates if this request was confirmed by the recipient.\nEstablish a bidirectional HRMP channel between a parachain …\nEstablish a bidirectional HRMP channel between a parachain …\nEstablish an HRMP channel between two system chains. If …\nEstablish an HRMP channel between two system chains. If …\nThis extrinsic triggers the cleanup of all the HRMP …\nThis extrinsic triggers the cleanup of all the HRMP …\nOpen a channel from a <code>sender</code> to a <code>recipient</code> <code>ParaId</code>. …\nOpen a channel from a <code>sender</code> to a <code>recipient</code> <code>ParaId</code>. …\nForce process HRMP close channel requests.\nForce process HRMP close channel requests.\nForce process HRMP open channel requests.\nForce process HRMP open channel requests.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAccept a pending open channel request from the given …\nAccept a pending open channel request from the given …\nThis cancels a pending open channel request. It can be …\nThis cancels a pending open channel request. It can be …\nInitiate unilateral closing of a channel. The origin must …\nInitiate unilateral closing of a channel. The origin must …\nInitiate opening a channel from a parachain to a given …\nInitiate opening a channel from a parachain to a given …\nInitiate opening a channel from a parachain to a given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum number of messages that can be pending in the …\nThe maximum number of messages that can be pending in the …\nThe maximum message size that could be put into the …\nThe maximum message size that could be put into the …\nThe maximum total size of the messages that can be pending …\nThe maximum total size of the messages that can be pending …\nA head of the Message Queue Chain for this channel. Each …\nThe current number of messages pending in the channel. …\nCreate a call with the variant …\nCreate a call with the variant <code>establish_system_channel</code>.\nCreate a call with the variant <code>force_clean_hrmp</code>.\nCreate a call with the variant <code>force_open_hrmp_channel</code>.\nCreate a call with the variant <code>force_process_hrmp_close</code>.\nCreate a call with the variant <code>force_process_hrmp_open</code>.\nCreate a call with the variant <code>hrmp_accept_open_channel</code>.\nCreate a call with the variant <code>hrmp_cancel_open_request</code>.\nCreate a call with the variant <code>hrmp_close_channel</code>.\nCreate a call with the variant <code>hrmp_init_open_channel</code>.\nCreate a call with the variant <code>poke_channel_deposits</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nUpdate the deposits held for an HRMP channel to the latest …\nUpdate the deposits held for an HRMP channel to the latest …\nThe amount that the recipient supplied as a deposit when …\nThe amount that the sender supplied at the time of …\nThe amount that the sender supplied as a deposit when …\nThe total size in bytes of all message payloads in the …\nThe channel is already confirmed.\nThe channel from the sender to the origin doesn’t exist.\nThe recipient already has the maximum number of allowed …\nContains a variant per dispatchable extrinsic that this …\nCanceling is requested by neither the sender nor recipient …\nHRMP channel closed.\nThe channel between these two chains cannot be authorized.\nThe origin that can perform “force” actions on …\nThe channel close request is already requested.\nThe channel to be closed doesn’t exist.\nThe origin tries to close a channel where it is neither …\nConfiguration trait of this pallet.\nAn interface for reserving deposits for opening channels.\nThe default channel size and capacity to use when opening …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nPreopen the given HRMP channels.\nThis mapping tracks how many open channel requests were …\nStorage for the messages for each channel. Invariant: …\nMaintains a mapping that can be used to answer the …\nAn HRMP channel was opened via Root origin.\nHRMP channel data associated with each para. Invariant:\nA set of pending HRMP close channel requests that are …\nStorage type is <code>StorageValue</code> with value type …\nStorage type is <code>StorageMap</code> with key type <code>ParaId</code> and value …\nIngress/egress indexes allow to find all the senders and …\nThis mapping tracks how many open channel requests are …\nThe set of pending HRMP open channel requests.\nStorage type is <code>StorageValue</code> with value type …\nAn HRMP channel was opened with a system chain.\nThe HRMP watermark associated with each para. Invariant:\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nOpen HRMP channel accepted.\nAn HRMP channel request sent by the receiver was canceled …\nAn HRMP channel’s deposits were updated.\nOpen HRMP channel requested.\nCannot cancel an HRMP open channel request because it is …\nThe channel already exists\nThere is already a request to open the same channel.\nThe requested capacity exceeds the global limit.\nThe open request doesn’t exist.\nThe recipient is not a valid para.\nThe sender already has the maximum number of allowed …\nThe open request requested the message size that exceeds …\nThe sender tried to open a channel to themselves.\nThe requested capacity is zero.\nThe requested maximum message size is 0.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe outer event type.\nMeans of converting an <code>Xcm</code> into a <code>VersionedXcm</code>. This …\nSomething that provides the weight of this pallet.\nThe provided witness data is wrong.\nEstablish a bidirectional HRMP channel between a parachain …\nEstablish an HRMP channel between two system chains. If …\nThis extrinsic triggers the cleanup of all the HRMP …\nOpen a channel from a <code>sender</code> to a <code>recipient</code> <code>ParaId</code>. …\nForce process HRMP close channel requests.\nForce process HRMP open channel requests.\nAccept a pending open channel request from the given …\nThis cancels a pending open channel request. It can be …\nInitiate unilateral closing of a channel. The origin must …\nInitiate opening a channel from a parachain to a given …\nUpdate the deposits held for an HRMP channel to the latest …\nThe holdings of a specific account for a specific asset.\nThe status of an asset account.\nAccounts were destroyed for given asset.\nThe asset-account already exists.\nData concerning an approval.\nAn approval for account <code>delegate</code> was cancelled by <code>owner</code>.\nThe amount of funds that must be reserved when creating a …\nThe amount of funds that must be reserved when creating a …\nApproved balance transfers. First balance is the amount …\nApprovals were destroyed for given asset.\n(Additional) funds have been approved for transfer to a …\nDetails of an asset.\nThe amount of funds that must be reserved for a …\nThe amount of funds that must be reserved for a …\nThe basic amount of funds that must be reserved for an …\nThe basic amount of funds that must be reserved for an …\nSome asset <code>asset_id</code> was frozen.\nIdentifier for the class of asset.\nIdentifier for the class of asset.\nWrapper around <code>Self::AssetId</code> to use in dispatchable call …\nWrapper around <code>Self::AssetId</code> to use in dispatchable call …\nThe min_balance of an asset has been updated by the asset …\nThe asset is not present in storage.\nThe asset is not live, and likely being destroyed.\nThe asset is not sufficient and thus does not have a …\nAssetStatus holds the current state of the asset. It could …\nAn asset has had its attributes changed by the <code>Force</code> …\nSome asset <code>asset_id</code> was thawed.\nTrait with callbacks that are executed after successful …\nAuto-increment the <code>NextAssetId</code> when an asset is created.\nThe asset ID must be equal to the <code>NextAssetId</code>.\nInvalid metadata given.\nInvalid witness data given.\nThe units in which we record balances.\nThe units in which we record balances.\nAccount balance must be greater than or equal to the …\nThis trait indicates a balance that is <em>on hold</em> for an …\nConverts a balance value into an asset balance based on …\nHelper trait for benchmarks.\nHelper trait for benchmarks.\nAsset account cannot receive and transfer the assets.\nSome account <code>who</code> was blocked.\nSome assets were destroyed.\nContains a variant per dispatchable extrinsic that this …\nCallback action resulted in error\nCallback methods for asset state change (e.g. asset …\nCallback methods for asset state change (e.g. asset …\nConfiguration trait of this pallet.\nA consumer reference was used to create this account.\nA consumer reference was used to create this account.\nThe asset cannot be destroyed because some accounts for …\nThe asset cannot be destroyed because some accounts for …\nPossible errors when converting between external and asset …\nStandard asset class creation is only allowed if the …\nSome asset class was created.\nThe currency mechanism.\nBased on <code>Config</code>. Auto-generated by …\nSome other <code>AccountId</code> has placed a deposit to make this …\nSome other <code>AccountId</code> has placed a deposit to make this …\nThe account holder has placed a deposit to exist within an …\nThe account holder has placed a deposit to exist within an …\nA deposit was placed for this account to exist, but it has …\nA deposit was placed for this account to exist, but it has …\nSome assets were deposited (e.g. for transaction fees).\nAn asset class was destroyed.\nThe asset is currently being destroyed, and all actions …\nAn asset class is in the process of being destroyed.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe reason for an account’s existence within an asset …\nAdditional data to be stored with an account’s asset …\nAdditional data to be stored with an account’s asset …\nA mutator type allowing inspection and possible …\nSome asset class was force-created.\nThe origin which may forcibly create or destroy an asset …\nA hook to allow a per-asset, per-account minimum balance …\nA hook to allow a per-asset, per-account minimum balance …\nWhether the asset is frozen for non-admin transfers.\nAsset account cannot transfer the assets.\nSome account <code>who</code> was frozen.\nThe origin account is frozen.\nTrait for allowing a minimum balance on the account to be …\nCan be used to configure the genesis state of this pallet.\nA hook to inspect a per-asset, per-account balance that is …\nA hook to inspect a per-asset, per-account balance that is …\nThe asset ID is already taken.\nThe asset status is not the expected status.\n<code>Instance1</code> to be used for instantiable pallets defined with …\nSome assets were issued.\nAsset account can receive and transfer the assets.\nThe asset is active and able to be used.\nThe asset is a live asset and is actively being used. …\nMetadata of an asset.\nMetadata has been cleared for an asset.\nThe basic amount of funds that must be reserved when …\nThe basic amount of funds that must be reserved when …\nThe additional funds that must be reserved for the number …\nThe additional funds that must be reserved for the number …\nNew metadata has been set for an asset.\nThe external minimum balance must not be zero.\nMinimum balance should be non-zero.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe asset ID enforced for the next asset creation, if any …\nThe account to alter does not exist.\nThe asset-account doesn’t have an associated deposit.\nThe signing account has no permission to do the operation.\nThe asset should be frozen before the given operation.\nThe owner changed.\nThe <code>Pallet</code> struct, the main type that implements traits …\nMax number of items to destroy per <code>destroy_accounts</code> and …\nMax number of items to destroy per <code>destroy_accounts</code> and …\nThe overarching event type.\nThe overarching event type.\nThe maximum length of a name or symbol stored on-chain.\nThe maximum length of a name or symbol stored on-chain.\nThe asset class is <code>sufficient</code> for account existence.\nThe asset class is <code>sufficient</code> for account existence.\nThe management team changed.\nSome account <code>who</code> was thawed.\nSome account <code>who</code> was created with a deposit from <code>depositor</code>.\nSome assets were transferred.\nAn <code>amount</code> was transferred in its entirety from <code>owner</code> to …\nNo approval exists that would allow the transfer.\nUnable to increment the consumer reference counters on the …\nThe given asset ID is unknown.\nWeight functions needed for <code>pallet_assets</code>.\nWeight information for extrinsics in this pallet.\nWeight information for extrinsics in this pallet.\nSome assets were withdrawn from the account (e.g. for …\nThe operation would result in funds being burned.\nThe source account would not survive the transfer and it …\nReturns all the non-zero balances for all assets of the …\nThe total number of accounts.\nGenesis accounts: id, account_id, balance\nReturn the extra “sid-car” data for <code>id</code>/<code>who</code>, or <code>None</code> if …\nCan thaw tokens, force transfers and burn tokens from any …\nThe amount of funds approved for the balance transfer from …\nThe total number of approvals.\nApprove an amount of asset for transfer by a delegated …\nApprove an amount of asset for transfer by a delegated …\nReturns an iterator of the assets in existence.\nGenesis assets: id, owner, is_sufficient, min_balance\nGet the asset <code>id</code> balance of <code>who</code>, or zero if the …\nThe account’s balance.\nThe account’s balance.\nReturn the held balance.\nAssets pallet benchmarking.\nLess than the amount specified needs be debited by the …\nLess than the amount specified needs be debited by the …\nDisallow further unprivileged transfers of an asset <code>id</code> to …\nDisallow further unprivileged transfers of an asset <code>id</code> to …\nReduce the balance of <code>who</code> by as much as possible up to …\nReduce the balance of <code>who</code> by as much as possible up to …\nAny additional funds debited (due to minimum balance …\nCancel all of some asset approved for delegated transfer …\nCancel all of some asset approved for delegated transfer …\nClear the metadata for an asset.\nClear the metadata for an asset.\nCommit any changes to storage.\nCheck if an account with the given asset ID and account …\nReturn a value that indicates if there are registered …\nReturn a value that indicates if there are registered …\nIssue a new class of fungible assets from a public origin.\nIssue a new class of fungible assets from a public origin.\nIndicates that asset with <code>id</code> was successfully created by …\nThe number of decimals this asset uses to represent one …\nThe balance deposited for this asset. This pays for the …\nThe amount reserved on the owner’s account to hold this …\nThe balance deposited for this metadata.\nDestroy all accounts associated with a given asset.\nDestroy all accounts associated with a given asset.\nDestroy all approvals associated with a given asset up to …\nDestroy all approvals associated with a given asset up to …\nIndicates that asset with <code>id</code> has just been destroyed\nCalled after an account has been removed.\nCalled after an account has been removed.\nCreates an approval from <code>owner</code> to spend <code>amount</code> of asset <code>id</code> …\nReduces the asset <code>id</code> balance of <code>source</code> by some <code>amount</code> and …\nReduces the asset <code>id</code> balance of <code>owner</code> by some <code>amount</code> and …\nAdditional “sidecar” data, in case some other pallet …\nAdditional “sidecar” data, in case some other pallet …\nComplete destroying asset and unreserve currency.\nComplete destroying asset and unreserve currency.\nAlter the attributes of a given asset.\nAlter the attributes of a given asset.\nCancel all of some asset approved for delegated transfer …\nCancel all of some asset approved for delegated transfer …\nClear the metadata for an asset.\nClear the metadata for an asset.\nIssue a new class of fungible assets from a privileged …\nIssue a new class of fungible assets from a privileged …\nForce the metadata for an asset to some value.\nForce the metadata for an asset to some value.\nMove some assets from one account to another.\nMove some assets from one account to another.\nDisallow further unprivileged transfers of an asset <code>id</code> …\nDisallow further unprivileged transfers of an asset <code>id</code> …\nDisallow further unprivileged transfers for the asset …\nDisallow further unprivileged transfers for the asset …\nCan freeze tokens.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn the frozen balance.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if blocked.\nReturns <code>true</code> if frozen or blocked.\nWhether the asset metadata may be changed by a non Force …\nIf <code>true</code>, then any account with this asset is given a …\nCan mint tokens.\nThe debited account must stay alive at the end of the …\nThe debited account must stay alive at the end of the …\nGet the asset <code>id</code> balance of <code>who</code> if the asset-account …\nGet the total supply of an asset <code>id</code> if the asset exists.\nGenesis metadata: id, name, symbol, decimals\nThe ED for virtual accounts.\nMint assets of a particular class.\nMint assets of a particular class.\nThe user friendly name of this asset. Limited in length by …\nCreate a call with the variant <code>approve_transfer</code>.\nCreate a call with the variant <code>block</code>.\nCreate a call with the variant <code>burn</code>.\nCreate a call with the variant <code>cancel_approval</code>.\nCreate a call with the variant <code>clear_metadata</code>.\nCreate a call with the variant <code>create</code>.\nCreate a call with the variant <code>destroy_accounts</code>.\nCreate a call with the variant <code>destroy_approvals</code>.\nCreate a call with the variant <code>finish_destroy</code>.\nCreate a call with the variant <code>force_asset_status</code>.\nCreate a call with the variant <code>force_cancel_approval</code>.\nCreate a call with the variant <code>force_clear_metadata</code>.\nCreate a call with the variant <code>force_create</code>.\nCreate a call with the variant <code>force_set_metadata</code>.\nCreate a call with the variant <code>force_transfer</code>.\nCreate a call with the variant <code>freeze</code>.\nCreate a call with the variant <code>freeze_asset</code>.\nCreate a call with the variant <code>mint</code>.\nCreate a call with the variant <code>refund</code>.\nCreate a call with the variant <code>refund_other</code>.\nCreate a call with the variant <code>set_metadata</code>.\nCreate a call with the variant <code>set_min_balance</code>.\nCreate a call with the variant <code>set_team</code>.\nCreate a call with the variant <code>start_destroy</code>.\nCreate a call with the variant <code>thaw</code>.\nCreate a call with the variant <code>thaw_asset</code>.\nCreate a call with the variant <code>touch</code>.\nCreate a call with the variant <code>touch_other</code>.\nCreate a call with the variant <code>transfer</code>.\nCreate a call with the variant <code>transfer_all</code>.\nCreate a call with the variant <code>transfer_approved</code>.\nCreate a call with the variant <code>transfer_keep_alive</code>.\nCreate a call with the variant <code>transfer_ownership</code>.\nGenesis <code>NextAssetId</code>.\nCan change <code>owner</code>, <code>issuer</code>, <code>freezer</code> and <code>admin</code> accounts.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe reason for the existence of the account.\nThe reason for the existence of the account.\nReturn the deposit (if any) of an asset account or a …\nReturn the deposit (if any) of an asset account or a …\nReturn the deposit (if any) of a target asset account. …\nReturn the deposit (if any) of a target asset account. …\nRevert any changes, even those already committed by <code>self</code> …\nSet the metadata for an asset.\nSet the metadata for an asset.\nSets the minimum balance of an asset.\nSets the minimum balance of an asset.\nChange the Issuer, Admin and Freezer of an asset.\nChange the Issuer, Admin and Freezer of an asset.\nStart the process of destroying a fungible asset class.\nStart the process of destroying a fungible asset class.\nThe status of the account.\nThe status of the asset\nThe status of the account.\nThe total number of accounts for which we have placed a …\nThe total supply across all accounts.\nThe ticker symbol for this asset. Limited in length by …\nAllow unprivileged transfers to and from an account again.\nAllow unprivileged transfers to and from an account again.\nAllow unprivileged transfers for the asset again.\nAllow unprivileged transfers for the asset again.\nConvert the given balance value into an asset balance …\nGet the total supply of an asset <code>id</code>.\nCreate an asset account for non-provider assets.\nCreate an asset account for non-provider assets.\nCreate an asset account for <code>who</code>.\nCreate an asset account for <code>who</code>.\nMove some assets from the sender account to another.\nMove some assets from the sender account to another.\nTransfer the entire transferable balance from the caller …\nTransfer the entire transferable balance from the caller …\nTransfer some asset balance from a previously delegated …\nTransfer some asset balance from a previously delegated …\nMove some assets from the sender account to another, …\nMove some assets from the sender account to another, …\nChange the Owner of an asset.\nChange the Owner of an asset.\nAutogenerated weights for <code>pallet_assets</code>\nSet <code>NextAssetId</code> to the value of <code>ID</code> if <code>NextAssetId</code> does not …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe holdings of a specific account for a specific asset.\nAccounts were destroyed for given asset.\nThe asset-account already exists.\nAn approval for account <code>delegate</code> was cancelled by <code>owner</code>.\nThe amount of funds that must be reserved when creating a …\nThe amount of funds that must be reserved when creating a …\nApproved balance transfers. First balance is the amount …\nApprovals were destroyed for given asset.\n(Additional) funds have been approved for transfer to a …\nDetails of an asset.\nThe amount of funds that must be reserved for a …\nThe amount of funds that must be reserved for a …\nThe basic amount of funds that must be reserved for an …\nThe basic amount of funds that must be reserved for an …\nSome asset <code>asset_id</code> was frozen.\nIdentifier for the class of asset.\nIdentifier for the class of asset.\nWrapper around <code>Self::AssetId</code> to use in dispatchable call …\nWrapper around <code>Self::AssetId</code> to use in dispatchable call …\nThe min_balance of an asset has been updated by the asset …\nThe asset is not live, and likely being destroyed.\nAn asset has had its attributes changed by the <code>Force</code> …\nSome asset <code>asset_id</code> was thawed.\nThe asset ID must be equal to the <code>NextAssetId</code>.\nInvalid metadata given.\nInvalid witness data given.\nThe units in which we record balances.\nThe units in which we record balances.\nAccount balance must be greater than or equal to the …\nHelper trait for benchmarks.\nHelper trait for benchmarks.\nSome account <code>who</code> was blocked.\nSome assets were destroyed.\nContains a variant per dispatchable extrinsic that this …\nCallback action resulted in error\nCallback methods for asset state change (e.g. asset …\nCallback methods for asset state change (e.g. asset …\nConfiguration trait of this pallet.\nThe asset cannot be destroyed because some accounts for …\nThe asset cannot be destroyed because some accounts for …\nStandard asset class creation is only allowed if the …\nSome asset class was created.\nThe currency mechanism.\nBased on <code>Config</code>. Auto-generated by …\nSome assets were deposited (e.g. for transaction fees).\nAn asset class was destroyed.\nAn asset class is in the process of being destroyed.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nAdditional data to be stored with an account’s asset …\nAdditional data to be stored with an account’s asset …\nSome asset class was force-created.\nThe origin which may forcibly create or destroy an asset …\nA hook to allow a per-asset, per-account minimum balance …\nA hook to allow a per-asset, per-account minimum balance …\nSome account <code>who</code> was frozen.\nThe origin account is frozen.\nCan be used to configure the genesis state of this pallet.\nA hook to inspect a per-asset, per-account balance that is …\nA hook to inspect a per-asset, per-account balance that is …\nThe asset ID is already taken.\nThe asset status is not the expected status.\n<code>Instance1</code> to be used for instantiable pallets defined with …\nSome assets were issued.\nThe asset is a live asset and is actively being used. …\nMetadata of an asset.\nMetadata has been cleared for an asset.\nThe basic amount of funds that must be reserved when …\nThe basic amount of funds that must be reserved when …\nThe additional funds that must be reserved for the number …\nThe additional funds that must be reserved for the number …\nNew metadata has been set for an asset.\nMinimum balance should be non-zero.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe asset ID enforced for the next asset creation, if any …\nThe account to alter does not exist.\nThe asset-account doesn’t have an associated deposit.\nThe signing account has no permission to do the operation.\nThe asset should be frozen before the given operation.\nThe owner changed.\nThe <code>Pallet</code> struct, the main type that implements traits …\nMax number of items to destroy per <code>destroy_accounts</code> and …\nMax number of items to destroy per <code>destroy_accounts</code> and …\nThe overarching event type.\nThe overarching event type.\nThe maximum length of a name or symbol stored on-chain.\nThe maximum length of a name or symbol stored on-chain.\nThe management team changed.\nSome account <code>who</code> was thawed.\nSome account <code>who</code> was created with a deposit from <code>depositor</code>.\nSome assets were transferred.\nAn <code>amount</code> was transferred in its entirety from <code>owner</code> to …\nNo approval exists that would allow the transfer.\nUnable to increment the consumer reference counters on the …\nThe given asset ID is unknown.\nWeight information for extrinsics in this pallet.\nWeight information for extrinsics in this pallet.\nSome assets were withdrawn from the account (e.g. for …\nThe operation would result in funds being burned.\nThe source account would not survive the transfer and it …\nGenesis accounts: id, account_id, balance\nApprove an amount of asset for transfer by a delegated …\nGenesis assets: id, owner, is_sufficient, min_balance\nDisallow further unprivileged transfers of an asset <code>id</code> to …\nReduce the balance of <code>who</code> by as much as possible up to …\nCancel all of some asset approved for delegated transfer …\nClear the metadata for an asset.\nDefault implementations of <code>DefaultConfig</code>, which can be …\nIssue a new class of fungible assets from a public origin.\nDestroy all accounts associated with a given asset.\nDestroy all approvals associated with a given asset up to …\nComplete destroying asset and unreserve currency.\nAlter the attributes of a given asset.\nCancel all of some asset approved for delegated transfer …\nClear the metadata for an asset.\nIssue a new class of fungible assets from a privileged …\nForce the metadata for an asset to some value.\nMove some assets from one account to another.\nDisallow further unprivileged transfers of an asset <code>id</code> …\nDisallow further unprivileged transfers for the asset …\nGenesis metadata: id, name, symbol, decimals\nMint assets of a particular class.\nGenesis <code>NextAssetId</code>.\nReturn the deposit (if any) of an asset account or a …\nReturn the deposit (if any) of a target asset account. …\nSet the metadata for an asset.\nSets the minimum balance of an asset.\nChange the Issuer, Admin and Freezer of an asset.\nStart the process of destroying a fungible asset class.\nAllow unprivileged transfers to and from an account again.\nAllow unprivileged transfers for the asset again.\nCreate an asset account for non-provider assets.\nCreate an asset account for <code>who</code>.\nMove some assets from the sender account to another.\nTransfer the entire transferable balance from the caller …\nTransfer some asset balance from a previously delegated …\nMove some assets from the sender account to another, …\nChange the Owner of an asset.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_assets</code> using the Substrate node and …\nWeight functions needed for <code>pallet_assets</code>.\nStorage: <code>Assets::Approvals</code> (r:1 w:0) Proof: …\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Account</code> (r:1 w:0) Proof: <code>Assets::Account</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:0) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:0) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:0) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:0) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:0) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Account</code> (r:1 w:1) Proof: <code>Assets::Account</code> (…\nStorage: <code>Assets::Account</code> (r:1 w:1) Proof: <code>Assets::Account</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:0) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:0) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:0) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Account</code> (r:1 w:1) Proof: <code>Assets::Account</code> (…\nStorage: <code>Assets::Account</code> (r:1 w:1) Proof: <code>Assets::Account</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nStorage: <code>Assets::Asset</code> (r:1 w:1) Proof: <code>Assets::Asset</code> (…\nThe message was already processed and cannot be processed …\nThe state of a queue as represented by a book of its pages.\nThe index of the first and last (non-empty) pages.\nThe <code>BookState</code> of this pallet.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nAllows to force the processing head to a specific queue.\nThe size of the page; this implies the maximum message …\nThe maximal heap size of a page.\nThe maximum amount of weight (if any) to be used from …\nThere is temporarily not enough weight to continue …\nConverts a <code>sp_core::Get</code> with returns a type that can be …\nData encoded and prefixed to the encoded <code>MessageItem</code>.\nProvides a <code>sp_core::Get</code> to access the <code>MEL</code> of a …\nCalculates the maximum message length and exposed it …\nThe maximal message length.\nThe maximal encoded origin length.\nThe maximum number of stale pages (i.e. of overweight …\nThe <code>MessageOrigin</code> of this pallet.\nProcessor for a message.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nA single link in the double-linked Ready Ring list.\nThe referenced message could not be found.\nPage to be reaped does not exist.\nPage is not reapable because it has items remaining to be …\nHandler code for when the items in a queue change.\nMessage placed in overweight queue.\nA page of messages. Pages always contain at least one item.\nThe <code>Page</code> of this pallet.\nThis page was reaped.\nThe map of page indices to pages.\nThe <code>Pallet</code> struct, the main type that implements traits …\nMessage is processed.\nMessage discarded due to an error in the <code>MessageProcessor</code> …\nCode to be called when a message queue changes - either …\nThe queue is paused and no message can be executed from it.\nQueried by the pallet to check whether a queue can be …\nThe message is queued for future execution.\nAnother call is in progress and needs to finish before …\nThe overarching event type.\nThe origin at which we should begin servicing.\nThe amount of weight (if any) which should be provided to …\nPage/heap size type.\nThis message is temporarily unprocessable.\nWeight functions needed for <code>pallet_message_queue</code>.\nWeight information for extrinsics in this pallet.\nExecute an overweight message.\nSet the <code>ServiceHead</code> to <code>origin</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStd setup helpers for testing and benchmarking.\nCreate a call with the variant <code>execute_overweight</code>.\nCreate a call with the variant <code>reap_page</code>.\nNote that the queue <code>id</code> now has <code>item_count</code> items in it, …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nRemove a page which has no more messages remaining to be …\nAutogenerated weights for <code>pallet_message_queue</code>\nThe error that occurred.\nThe <code>blake2_256</code> hash of the message.\nThe <code>blake2_256</code> hash of the message.\nThe <code>blake2_256</code> hash of the message.\nThe index of the page.\nThe index of the message within the page.\nThe queue of the message.\nThe queue of the message.\nThe queue of the message.\nThe queue of the page.\nThe page of the message.\nWhether the message was processed.\nHow much weight was used to process the message.\nConverts <code>Self</code> into a <code>Weight</code> by using <code>Self</code> for all …\nMocked message origin for testing.\nProcesses any message and consumes …\nAssert the last event that was emitted.\nCheck that the Ready Ring consists of <code>queues</code> in that exact …\nReturns a page filled with empty messages and the number …\nBuild a ring with three queues: <code>Here</code>, <code>There</code> and …\nCreate an empty book.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns a full page of messages with their index as …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKnit a queue into the ready-ring and write it back to …\nCreate a message from the given data.\nCreate a page from a single message.\nProvide a setup for <code>bump_service_head</code>.\nCreate a book with a single message of one byte.\nUnknit a queue into the ready-ring and write it back to …\nThe message was already processed and cannot be processed …\nThe index of the first and last (non-empty) pages.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe size of the page; this implies the maximum message …\nThe maximum amount of weight (if any) to be used from …\nThere is temporarily not enough weight to continue …\nThe maximum number of stale pages (i.e. of overweight …\nProcessor for a message.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe referenced message could not be found.\nPage to be reaped does not exist.\nPage is not reapable because it has items remaining to be …\nMessage placed in overweight queue.\nThis page was reaped.\nThe map of page indices to pages.\nThe <code>Pallet</code> struct, the main type that implements traits …\nMessage is processed.\nMessage discarded due to an error in the <code>MessageProcessor</code> …\nCode to be called when a message queue changes - either …\nThe queue is paused and no message can be executed from it.\nQueried by the pallet to check whether a queue can be …\nThe message is queued for future execution.\nAnother call is in progress and needs to finish before …\nThe overarching event type.\nThe origin at which we should begin servicing.\nThe amount of weight (if any) which should be provided to …\nPage/heap size type.\nThis message is temporarily unprocessable.\nWeight information for extrinsics in this pallet.\nExecute an overweight message.\nRemove a page which has no more messages remaining to be …\nThe error that occurred.\nThe <code>blake2_256</code> hash of the message.\nThe <code>blake2_256</code> hash of the message.\nThe <code>blake2_256</code> hash of the message.\nThe index of the page.\nThe index of the message within the page.\nThe queue of the message.\nThe queue of the message.\nThe queue of the message.\nThe queue of the page.\nThe page of the message.\nWhether the message was processed.\nHow much weight was used to process the message.\nWeights for <code>pallet_message_queue</code> using the Substrate node …\nWeight functions needed for <code>pallet_message_queue</code>.\nStorage: <code>MessageQueue::ServiceHead</code> (r:1 w:1) Proof: …\nStorage: <code>MessageQueue::BookStateFor</code> (r:1 w:1) Proof: …\nStorage: <code>MessageQueue::BookStateFor</code> (r:1 w:1) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>MessageQueue::ServiceHead</code> (r:1 w:0) Proof: …\nStorage: <code>MessageQueue::BookStateFor</code> (r:2 w:2) Proof: …\nStorage: <code>MessageQueue::BookStateFor</code> (r:1 w:1) Proof: …\nStorage: <code>MessageQueue::Pages</code> (r:1 w:1) Proof: …\nStorage: <code>MessageQueue::Pages</code> (r:1 w:1) Proof: …\nStorage: <code>MessageQueue::BookStateFor</code> (r:0 w:1) Proof: …\nStorage: <code>MessageQueue::BookStateFor</code> (r:1 w:1) Proof: …\nStorage: <code>MessageQueue::BookStateFor</code> (r:1 w:0) Proof: …\nThe given account is not an identifiable sovereign account …\nThe origin that is allowed to call privileged operations …\nThe latest supported version that we advertise. Generally …\n<code>target</code> removed alias authorization for <code>aliaser</code>.\nAn <code>aliaser</code> location was authorized by <code>target</code> to alias it, …\nThe alias to remove authorization for was not found.\n<code>target</code> removed all alias authorizations.\nThe location is invalid since it already has a …\nThe given asset is not handled.\nSome assets have been claimed from an asset trap\nSome assets have been placed in an asset trap.\nExecution of an XCM message was attempted.\nThe funds are held as storage deposit for an authorized …\nA means of providing some cost while Authorized Aliasers …\nFilter for <code>(origin: Location, target: Location)</code> to find …\nThe given location could not be used (e.g. because it …\nThe Origin Register does not contain a valid value for …\nThe version of the <code>Versioned</code> value used is not able to be …\nThe XCM did not pass the barrier condition for execution.\nContains a variant per dispatchable extrinsic that this …\nCould not check-out the assets for teleportation to the …\nCould not re-anchor the assets to declare the fees for the …\nConfiguration trait of this pallet.\nA lockable currency.\nThe <code>Asset</code> matcher for <code>Currency</code>.\nAn implementation of <code>Get&lt;u32&gt;</code> which just returns the …\nThe destination <code>Location</code> provided cannot be inverted.\nThe given message cannot be translated into a format …\nThe assets to be sent are empty.\n<code>EnsureOrigin</code> implementation succeeding with a <code>Location</code> …\n<code>EnsureOrigin</code> implementation succeeding with a <code>Location</code> …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nAttempt to send a message greater than the maximum …\nRecursion stack limit reached\nRequired origin for executing XCM messages, including the …\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nExpiry block number is in the past.\nThe message was unable to be exported.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees were required which the origin could not pay.\nThe operation required fees to be paid which the initiator …\nFees were paid from a location for an operation (often for …\nThe message execution fails the filter.\nCan be used to configure the genesis state of this pallet.\nA reason for this pallet placing a hold on funds.\nThe given operation would lead to an overflow of the …\nThe unlock operation cannot succeed because there are …\nInvalid asset, reserve chain could not be determined for …\nInvalid asset, do not support remote asset reserves with …\nThe location parameter is not a valid value for the …\nOrigin is invalid for sending.\nExpected query response has been received but the querier …\nExpected query response has been received but the expected …\nExpected query response has been received but the origin …\nExpected query response has been received but the expected …\nFilter for <code>Location</code> to find those which represent a strict …\nFilter for <code>Location</code> to find those which represent a voice …\nLocal XCM execution incomplete.\nLocal XCM execution incomplete with the actual XCM error …\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nSome other error with locking.\nA remote lock with the corresponding data could not be …\nThe owner does not own (all) of the asset that they wish …\nThe maximum number of distinct locations allowed as …\nThe maximum number of local XCM locks that a single …\nThe maximum number of consumers a single remote lock may …\nUsed by <code>Transact</code> to indicate that the given weight limit …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe given pallet’s name is different to that expected.\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nThe referenced subscription could not be found.\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nQuery response has been received and query is removed. The …\nQuery response has been received and query is removed. The …\nQuery response has been received and query is removed. …\nQuery response has been received and query is removed. The …\nA given location which had a version change subscription …\nA given location which had a version change subscription …\nAn arithmetic overflow happened.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe provided pallet index was not found.\nThe query was sent but no response has yet been received.\nAn XCM message failed to process.\nThe status of a query.\nA response has been received.\n<code>MultiLocation</code> value failed to be reanchored.\nThe ID type for local consumers of remote locks.\nIt comes as an expected response from an XCM location.\nQuery response has been received and is ready for taking …\nReceived query response has been read and removed.\nThe runtime <code>Call</code> type.\nThe overarching event type.\nThe runtime <code>Origin</code> type.\nAn XCM message failed to send.\nThere was some other issue (i.e. not to do with routing) …\nRequired origin for sending XCM messages. If successful, …\nAn XCM message was sent.\nHow to get an <code>AccountId</code> value from a <code>Location</code>, useful for …\nThe supported version of a location has been changed. This …\nfallback implementation\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nToo many assets matched the given asset filter.\nToo many assets have been attempted for transfer.\nToo many locations authorized to alias origin.\nThe asset owner has too many locks on the asset.\nToo many assets with different reserve locations have been …\nDestination is routable, but there is some issue with the …\nUsed by the <code>Trap</code> instruction to force an error …\nThe assets which we consider a given origin is trusted if …\nThe universal location of the local consensus is improper.\nQuery response received which does not match a registered …\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nThis chain’s Universal Location.\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nThe desired destination was unreachable, generally because …\nDestination is known to be unroutable.\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nThe message’s weight could not be determined.\nAn XCM version change notification message has been …\nThe given pallet’s version has an incompatible version …\nA XCM version migration finished.\nThe query is for an ongoing version notification …\nWe have requested that a remote chain send us XCM version …\nA remote has requested XCM version change notification …\nWe have requested that a remote chain stops sending us XCM …\nMeans of measuring the weight consumed by an XCM message …\nWeight information for extrinsics in this pallet.\nExecution of the XCM would potentially result in a greater …\nThe weight of an XCM message is not computable ahead of …\nIt comes from somewhere in the XCM space wanting to …\nOur XCM filter which messages to be executed using …\nSomething to execute an XCM message.\nA simple passthrough where we reuse the <code>Location</code>-typed XCM …\nOur XCM filter which messages to be reserve-transferred …\nThe type used to actually dispatch an XCM to its …\nOur XCM filter which messages to be teleported using the …\nAuthorize another <code>aliaser</code> location to alias into the local …\nAuthorize another <code>aliaser</code> location to alias into the local …\nTotal amount of the asset held by the remote lock.\nAmount of the remote lock in use by consumers. Returns <code>None</code>…\nThe existing asset traps.\nReturns locations allowed to alias into and act as <code>target</code>.\nClaims assets trapped on this pallet because of leftover …\nClaims assets trapped on this pallet because of leftover …\nLocal consumers of the remote lock with a consumer …\nEnsure the correctness of the state of this pallet.\nDry-runs <code>call</code> with the given <code>origin</code>.\nDry-runs <code>xcm</code> with the given <code>origin_location</code>.\nEnsure that the origin <code>o</code> represents an XCM response origin.\nEnsure that the origin <code>o</code> represents an XCM (<code>Transact</code>) …\nExecute an XCM message from a local, signed, origin.\nExecute an XCM message from a local, signed, origin.\nSet a safe XCM version (the version that XCM should be …\nSet a safe XCM version (the version that XCM should be …\nAsk a location to notify us regarding their XCM version …\nAsk a location to notify us regarding their XCM version …\nSet or unset the global suspension state of the XCM …\nSet or unset the global suspension state of the XCM …\nRequire that a particular destination should no longer …\nRequire that a particular destination should no longer …\nExtoll that a particular destination can be communicated …\nExtoll that a particular destination can be communicated …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGiven an <code>origin</code> and a <code>target</code>, returns if the <code>origin</code> …\nReturn true if a location is subscribed to XCM version …\nGiven an Asset and a Location, returns if the provided …\nGiven an Asset and a Location, returns if the asset can be …\nTransfer some assets from the local chain to the …\nTransfer some assets from the local chain to the …\nTeleport some assets from the local chain to some …\nTeleport some assets from the local chain to some …\nThe location which holds the original lock.\nCreate a call with the variant <code>add_authorized_alias</code>.\nCreate a call with the variant <code>claim_assets</code>.\nCreate a call with the variant <code>execute</code>.\nCreate a call with the variant <code>force_default_xcm_version</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>force_suspension</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>force_xcm_version</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>limited_teleport_assets</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>remove_authorized_alias</code>.\nCreate a call with the variant <code>reserve_transfer_assets</code>.\nCreate a call with the variant <code>send</code>.\nCreate a call with the variant <code>teleport_assets</code>.\nCreate a call with the variant <code>transfer_assets</code>.\nCreate a call with the variant …\nAttempt to create a new query ID and register it as a …\nAttempt to create a new query ID and register it as a …\nThe owner of the locked asset.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe ongoing queries.\nGiven a list of asset ids, returns the correct API …\nGiven a <code>destination</code> and XCM <code>message</code>, return assets to be …\nComputes the weight cost using the provided <code>WeightTrader</code>. …\nRemove all previously authorized <code>aliaser</code>s that can alias …\nRemove all previously authorized <code>aliaser</code>s that can alias …\nRemove a previously authorized <code>aliaser</code> from the list of …\nRemove a previously authorized <code>aliaser</code> from the list of …\nTo check the status of the query, use <code>fn query()</code> passing …\nConsume <code>message</code> and return another which is equivalent to …\nRequest that <code>dest</code> informs us of its version.\nTransfer some assets from the local chain to the …\nTransfer some assets from the local chain to the …\nThe default version to encode outgoing XCM messages with.\nRelay an XCM <code>message</code> from a given <code>interior</code> location in …\nStart notifying <code>location</code> should the XCM version of this …\nStop notifying <code>location</code> should the XCM change. This is a …\nThe default versioned locations to support at genesis.\nRemoves response when ready and emits Event::ResponseTaken …\nTeleport some assets from the local chain to some …\nTeleport some assets from the local chain to some …\nTransfer some assets from the local chain to the …\nTransfer some assets from the local chain to the …\nTransfer assets from the local chain to the destination …\nTransfer assets from the local chain to the destination …\nRequest that <code>dest</code> ceases informing us of its version.\nThe <code>QueryResponse</code> XCM must have this value as the <code>querier</code> …\nThe <code>QueryResponse</code> XCM must have this origin to be …\nTrait that must be implemented by runtime to be able to …\nHelper that ensures successful delivery for …\nPallet we’re benchmarking here.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGets an asset that can be handled by the AssetTransactor.\nCalls <code>U::from(self)</code>.\nA <code>Location</code> that can be reached via <code>XcmRouter</code>. Used only in …\nA <code>(Asset, Location)</code> pair representing asset and the …\nSets up a complex transfer (usually consisting of a …\nA <code>(Asset, Location)</code> pair representing asset and the …\nWhen adding a new XCM version, we need to run this …\nUtilities for handling XCM version migration for the …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nVersion checked migration to v1.\nNamed with the ‘VersionUnchecked’-prefix because …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe given account is not an identifiable sovereign account …\nThe origin that is allowed to call privileged operations …\nThe latest supported version that we advertise. Generally …\n<code>target</code> removed alias authorization for <code>aliaser</code>.\nAn <code>aliaser</code> location was authorized by <code>target</code> to alias it, …\nThe alias to remove authorization for was not found.\n<code>target</code> removed all alias authorizations.\nThe location is invalid since it already has a …\nSome assets have been claimed from an asset trap\nSome assets have been placed in an asset trap.\nExecution of an XCM message was attempted.\nThe funds are held as storage deposit for an authorized …\nA means of providing some cost while Authorized Aliasers …\nThe given location could not be used (e.g. because it …\nThe version of the <code>Versioned</code> value used is not able to be …\nContains a variant per dispatchable extrinsic that this …\nCould not check-out the assets for teleportation to the …\nCould not re-anchor the assets to declare the fees for the …\nConfiguration trait of this pallet.\nA lockable currency.\nThe <code>Asset</code> matcher for <code>Currency</code>.\nAn implementation of <code>Get&lt;u32&gt;</code> which just returns the …\nThe destination <code>Location</code> provided cannot be inverted.\nThe assets to be sent are empty.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nRequired origin for executing XCM messages, including the …\nExpiry block number is in the past.\nThe operation required fees to be paid which the initiator …\nFees were paid from a location for an operation (often for …\nThe message execution fails the filter.\nCan be used to configure the genesis state of this pallet.\nA reason for this pallet placing a hold on funds.\nThe unlock operation cannot succeed because there are …\nInvalid asset, reserve chain could not be determined for …\nInvalid asset, do not support remote asset reserves with …\nOrigin is invalid for sending.\nExpected query response has been received but the querier …\nExpected query response has been received but the expected …\nExpected query response has been received but the origin …\nExpected query response has been received but the expected …\nLocal XCM execution incomplete.\nLocal XCM execution incomplete with the actual XCM error …\nA remote lock with the corresponding data could not be …\nThe owner does not own (all) of the asset that they wish …\nThe maximum number of distinct locations allowed as …\nThe maximum number of local XCM locks that a single …\nThe maximum number of consumers a single remote lock may …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe referenced subscription could not be found.\nQuery response has been received and query is removed. The …\nQuery response has been received and query is removed. The …\nQuery response has been received and query is removed. …\nQuery response has been received and query is removed. The …\nA given location which had a version change subscription …\nA given location which had a version change subscription …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe query was sent but no response has yet been received.\nAn XCM message failed to process.\nThe status of a query.\nA response has been received.\nThe ID type for local consumers of remote locks.\nIt comes as an expected response from an XCM location.\nQuery response has been received and is ready for taking …\nReceived query response has been read and removed.\nThe runtime <code>Call</code> type.\nThe overarching event type.\nThe runtime <code>Origin</code> type.\nAn XCM message failed to send.\nThere was some other issue (i.e. not to do with routing) …\nRequired origin for sending XCM messages. If successful, …\nAn XCM message was sent.\nHow to get an <code>AccountId</code> value from a <code>Location</code>, useful for …\nThe supported version of a location has been changed. This …\nToo many assets have been attempted for transfer.\nToo many locations authorized to alias origin.\nThe asset owner has too many locks on the asset.\nToo many assets with different reserve locations have been …\nThe assets which we consider a given origin is trusted if …\nQuery response received which does not match a registered …\nThis chain’s Universal Location.\nThe desired destination was unreachable, generally because …\nThe message’s weight could not be determined.\nAn XCM version change notification message has been …\nA XCM version migration finished.\nThe query is for an ongoing version notification …\nWe have requested that a remote chain send us XCM version …\nA remote has requested XCM version change notification …\nWe have requested that a remote chain stops sending us XCM …\nMeans of measuring the weight consumed by an XCM message …\nWeight information for extrinsics in this pallet.\nIt comes from somewhere in the XCM space wanting to …\nOur XCM filter which messages to be executed using …\nSomething to execute an XCM message.\nOur XCM filter which messages to be reserve-transferred …\nThe type used to actually dispatch an XCM to its …\nOur XCM filter which messages to be teleported using the …\nAuthorize another <code>aliaser</code> location to alias into the local …\nTotal amount of the asset held by the remote lock.\nClaims assets trapped on this pallet because of leftover …\nLocal consumers of the remote lock with a consumer …\nExecute an XCM message from a local, signed, origin.\nSet a safe XCM version (the version that XCM should be …\nAsk a location to notify us regarding their XCM version …\nSet or unset the global suspension state of the XCM …\nRequire that a particular destination should no longer …\nExtoll that a particular destination can be communicated …\nTransfer some assets from the local chain to the …\nTeleport some assets from the local chain to some …\nThe location which holds the original lock.\nThe owner of the locked asset.\nRemove all previously authorized <code>aliaser</code>s that can alias …\nRemove a previously authorized <code>aliaser</code> from the list of …\nTransfer some assets from the local chain to the …\nThe default version to encode outgoing XCM messages with.\nThe default versioned locations to support at genesis.\nTeleport some assets from the local chain to some …\nTransfer some assets from the local chain to the …\nTransfer assets from the local chain to the destination …\nThe <code>QueryResponse</code> XCM must have this value as the <code>querier</code> …\nThe <code>QueryResponse</code> XCM must have this origin to be …\n@title XCM Precompile Interface @notice A low-level …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nContainer for all the <code>IXcm</code> function calls.\nAll the selectors of this enum.\n@notice Weight v2 used for measurement for an XCM execution\n@notice Executes an XCM message locally on the current …\n@notice Executes an XCM message locally on the current …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n@custom:property The size of the proof needed to execute …\n@custom:property The computational time used to execute …\n@notice Sends an XCM message to another parachain or …\n@notice Sends an XCM message to another parachain or …\n@notice Estimates the <code>Weight</code> required to execute a given …\n@notice Estimates the <code>Weight</code> required to execute a given …\nFinds the message ID of the first <code>XcmPallet::Sent</code> event in …\n<code>WrapVersion</code> implementation which attempts to always …\n<code>WrapVersion</code> implementation which attempts to always …\n<code>WrapVersion</code> implementation which attempts to always …\n<code>WrapVersion</code> implementation which attempts to always …\n<code>WrapVersion</code> implementation which attempts to always …\nWrapper around the encoded and decoded versions of a value.\nCheck and return the <code>Version</code> that should be used for the …\nUsed to get the version out of a versioned type.\nAttempt to convert <code>self</code> into a particular version of …\nThe maximal number of instructions in an XCM before …\nMaximum nesting level for XCM decoding.\nA version of XCM.\nA single <code>Asset</code> value, together with its version code.\nA single version’s <code>AssetId</code> value, together with its …\nA single <code>MultiAssets</code> value, together with its version code.\nA single <code>InteriorLocation</code> value, together with its version …\nA single <code>Junction</code> value, together with its version code.\nA single <code>Location</code> value, together with its version code.\nA single <code>NetworkId</code> value, together with its version code.\nA single version’s <code>Response</code> value, together with its …\nA single XCM message, together with its version code.\nConvert an <code>Xcm</code> datum into a <code>VersionedXcm</code>, based on a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume <code>self</code> and return same value expressed the latest …\nConsume <code>self</code> and return same value expressed the latest …\nConsume <code>self</code> and return same value expressed in some …\nVersion 3 of the Cross-Consensus Message format data …\nVersion 4 of the Cross-Consensus Message format data …\nVersion 5 of the Cross-Consensus Message format data …\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nThe unambiguous administration body (for Polkadot, an …\nAlter the current Origin to another given origin.\nAll assets in Holding.\nAll assets in Holding, up to <code>u32</code> individual assets …\nAll assets in Holding of a given fungibility and ID.\nAll assets in Holding of a given fungibility and ID up to …\nA unit struct which can be converted into a <code>Location</code> of …\nA unit struct which can be converted into a <code>Location</code> of …\nAccess to all the instructions\nA 16-byte fixed-length datum.\nA 32-byte fixed-length datum.\nA 4-byte fixed-length datum.\nAn 8-byte fixed-length datum.\nEither an amount of a single fungible asset, or a single …\nSet asset claimer for all the trapped assets during the …\n<code>Asset</code> collection, defined either by a number of <code>Assets</code> or …\nLocation to identify an asset.\nA general identifier for an instance of a non-fungible …\nThe given asset is not handled.\nMatches assets based on inner <code>AssetFilter</code> and tags them …\nA <code>Vec</code> of <code>Asset</code>s.\nSome assets.\nNo less than the given proportion of members of the body.\nThe Origin Register does not contain a valid value for …\nThe XCM did not pass the barrier condition for execution.\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\nAn identifier of a pluralistic body.\nA part of a pluralistic body.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nExecution completed successfully; given weight was used.\nThe unambiguous defense body (for Polkadot, an opinion on …\nSpecify the filter as being everything contained by the …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe given message cannot be translated into a format that …\nThe given message cannot be translated into a format …\nThe status of a dispatch attempt using <code>Transact</code>.\nContains the error value\nContains the error value\nError codes used in XCM. The first errors codes have …\nExecution did not start due to an error. We use …\nType to return in case of an error.\nAn Ethereum network specified by its chain ID.\nMessage could not be sent due to its size exceeding the …\nAttempt to send a message greater than the maximum …\nRecursion stack limit reached\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nExecutes inner <code>xcm</code> with origin set to the provided …\nType of XCM message executor.\nThe outcome of an XCM instruction.\nThe unambiguous executive body (for Polkadot, this would …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nNeed to explicitly state it won’t pay for fees\nThe message was unable to be exported.\nSend a message on to Non-Local Consensus system.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees needed to be paid in order to send the message and …\nFees were required which the origin could not pay.\nA given number of members of the body, out of some larger …\nClassification of whether an asset is fungible or not, …\nA fungible asset; we record a number of units, as a <code>u128</code> …\nThe asset is fungible.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA global network capable of externalizing its own …\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nExecution started, but did not complete successfully due to…\nAn indexed body.\nA compact index. Technically this could be greater than …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nInitiates cross-chain transfer as follows:\nCross-Consensus Message: A message from one consensus …\nXCM error and the index of the instruction that caused it.\nThe index of an instruction in an XCM.\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nThe unambiguous judicial body (this doesn’t exist on …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nThe unambiguous legislative body (for Polkadot, this could …\nWeight limit imposed of the inner value.\nThe holding register was loaded, now to buy execution\nA relative path between state-bearing consensus systems.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nLock the locally held asset and prevent further transfer …\nSome other error with locking.\nMaximum number of items we expect in a single <code>Assets</code> value.\nMaximum size of the encoded error code coming from a …\nUsed by <code>Transact</code> to indicate that the given weight limit …\nA given number of members of the body.\nA needed argument is <code>None</code> when it should be <code>Some</code>.\nA named body.\nMore than the given proportion of members of the body.\nThe given pallet’s name is different to that expected.\nOrigin should just be the native dispatch origin …\nA global identifier of a data structure existing within …\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nA non-fungible asset. We record the instance identifier in …\nThe asset is not fungible.\nThe message and destination combination was not recognized …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nNo response. Serves as a neutral default.\nContains the success value\nContains the success value\nThe unambiguous child.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nThe provided pallet index was not found.\nThe index, instance name, pallet name and version of some …\nAn indexed parachain belonging to and operated by the …\nA unit struct which can be converted into a <code>Location</code> of …\nA tuple struct which can be converted into a <code>Location</code> of …\nTakes an asset, uses it to pay for execution and puts the …\nYou need to pay for execution\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nThe Polkadot Bulletin chain.\nAn identifier for a query.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nInformation regarding the composition of a query response.\nThe genesis hash of the Rococo testnet. Used to identify …\n<code>MultiLocation</code> value failed to be reanchored.\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nreserve-transfer assets matching <code>AssetFilter</code> to a specific …\nreserve-transfer assets matching <code>AssetFilter</code> to a specific …\nResponse data to a query.\nError result value when attempting to send an XCM message.\nResult value when attempting to send an XCM message.\nUtility for sending an XCM message to a given location.\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet hints for XCM execution.\nSet the Topic Register.\nOrigin should just be the standard account-based origin …\nAsk the destination system to respond with the most recent …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nThe unambiguous technical body (for Polkadot, this would …\nteleport assets matching <code>AssetFilter</code> to a specific …\nIntermediate value which connects the two phases of the …\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nToo many assets matched the given asset filter.\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nDestination is routable, but there is some issue with the …\nDestination is routable, but there is some issue with the …\nUsed by the <code>Trap</code> instruction to force an error …\nAlways throws an error of type <code>Trap</code>.\nThe unambiguous treasury body (for Polkadot, an opinion on …\nThe universal location of the local consensus is improper.\nUndefined - used if the non-fungible asset class has only …\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nThe only body in its context.\nSet the Origin Register to be some child of the Universal …\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nNo weight limit imposed.\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nDestination is known to be unroutable. This is considered …\nDestination is known to be unroutable.\nCancel the effect of a previous <code>SubscribeVersion</code> …\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nAn XCM version.\nThe given pallet’s version has an incompatible version …\nThe body’s declaration, under whatever means it decides.\nThe genesis hash of the Westend testnet. Used to identify …\nAn optional weight limit.\nExecution of the XCM would potentially result in a greater …\nThe weight of an XCM message is not computable ahead of …\nSpecify the filter as the given <code>WildAsset</code> wildcard.\nA wildcard representing a set of assets.\nClassification of whether an asset is fungible or not.\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nOrigin should be interpreted as an XCM native origin and …\nType used to build XCM programs\nA trait for types that track state inside the XcmBuilder\nContextual data pertaining to a specific list of XCM …\nA hash type for identifying messages.\nDeduct some <code>fees</code> to the sovereign account of the given …\nActually carry out the delivery operation for a previously …\nThe destination to which the query response message should …\nThe XCM error itself.\nThe fungibility of the asset, which contains either the …\nThe overall asset identity (aka <em>class</em>, in the case of a …\nThe index of the intruction that caused the error.\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nThe <code>max_weight</code> field of the <code>QueryResponse</code> message.\nThe identity of the XCM; this may be a hash of its …\nThe current value of the Origin register of the <code>XCVM</code>.\nThe number of parent junctions at the beginning of this …\nIf it fails, returns the index of the problematic …\nThe <code>query_id</code> field of the <code>QueryResponse</code> message.\nMutate <code>self</code> so that it represents the same location from …\nConsume <code>self</code> and return a new value representing the same …\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe current value of the Topic register of the <code>XCVM</code>.\nCheck whether the given <code>_message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe EIP-155 chain ID.\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nThe unambiguous administration body (for Polkadot, an …\nAlter the current Origin to another given origin.\nAll assets in Holding.\nAll assets in Holding, up to <code>u32</code> individual assets …\nAll assets in Holding of a given fungibility and ID.\nAll assets in Holding of a given fungibility and ID up to …\nA unit struct which can be converted into a <code>Location</code> of …\nA unit struct which can be converted into a <code>Location</code> of …\nAccess to all the instructions\nA 16-byte fixed-length datum.\nA 32-byte fixed-length datum.\nA 4-byte fixed-length datum.\nAn 8-byte fixed-length datum.\nEither an amount of a single fungible asset, or a single …\n<code>Asset</code> collection, defined either by a number of <code>Assets</code> or …\nLocation to identify an asset.\nA general identifier for an instance of a non-fungible …\nThe given asset is not handled.\nA <code>Vec</code> of <code>Asset</code>s.\nSome assets.\nNo less than the given proportion of members of the body.\nThe Origin Register does not contain a valid value for …\nThe XCM did not pass the barrier condition for execution.\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\nAn identifier of a pluralistic body.\nA part of a pluralistic body.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nExecution completed successfully; given weight was used.\nThe unambiguous defense body (for Polkadot, an opinion on …\nSpecify the filter as being everything contained by the …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe given message cannot be translated into a format …\nThe given message cannot be translated into a format that …\nThe status of a dispatch attempt using <code>Transact</code>.\nContains the error value\nContains the error value\nError codes used in XCM. The first errors codes have …\nExecution did not start due to the given error.\nType to return in case of an error.\nAn Ethereum network specified by its chain ID.\nAttempt to send a message greater than the maximum …\nMessage could not be sent due to its size exceeding the …\nRecursion stack limit reached\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nType of XCM message executor.\nThe outcome of an XCM instruction.\nThe unambiguous executive body (for Polkadot, this would …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nNeed to explicitly state it won’t pay for fees\nThe message was unable to be exported.\nSend a message on to Non-Local Consensus system.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees needed to be paid in order to send the message and …\nFees were required which the origin could not pay.\nA given number of members of the body, out of some larger …\nClassification of whether an asset is fungible or not, …\nA fungible asset; we record a number of units, as a <code>u128</code> …\nThe asset is fungible.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA global network capable of externalizing its own …\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nExecution started, but did not complete successfully due …\nAn indexed body.\nA compact index. Technically this could be greater than …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nCross-Consensus Message: A message from one consensus …\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nThe unambiguous judicial body (this doesn’t exist on …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nThe unambiguous legislative body (for Polkadot, this could …\nWeight limit imposed of the inner value.\nThe holding register was loaded, now to buy execution\nA relative path between state-bearing consensus systems.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nLock the locally held asset and prevent further transfer …\nSome other error with locking.\nMaximum number of items we expect in a single <code>Assets</code> value.\nMaximum size of the encoded error code coming from a …\nUsed by <code>Transact</code> to indicate that the given weight limit …\nA given number of members of the body.\nA needed argument is <code>None</code> when it should be <code>Some</code>.\nA named body.\nMore than the given proportion of members of the body.\nThe given pallet’s name is different to that expected.\nOrigin should just be the native dispatch origin …\nA global identifier of a data structure existing within …\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nA non-fungible asset. We record the instance identifier in …\nThe asset is not fungible.\nThe message and destination combination was not recognized …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nNo response. Serves as a neutral default.\nContains the success value\nContains the success value\nThe unambiguous child.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nThe provided pallet index was not found.\nThe index, instance name, pallet name and version of some …\nAn indexed parachain belonging to and operated by the …\nA unit struct which can be converted into a <code>Location</code> of …\nA tuple struct which can be converted into a <code>Location</code> of …\nYou need to pay for execution\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nThe Polkadot Bulletin chain.\nAn identifier for a query.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nInformation regarding the composition of a query response.\n<code>MultiLocation</code> value failed to be reanchored.\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nResponse data to a query.\nThe Rococo testnet Relay-chain.\nError result value when attempting to send an XCM message.\nResult value when attempting to send an XCM message.\nUtility for sending an XCM message to a given location.\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nOrigin should just be the standard account-based origin …")