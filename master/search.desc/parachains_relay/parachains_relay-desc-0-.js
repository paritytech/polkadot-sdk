searchState.loadedDescShard("parachains_relay", 0, "Finality proofs synchronization pipeline.\nParachain which headers we are syncing here.\nRelay chain which is storing parachain heads in its <code>paras</code> …\nTarget chain (either relay or para) which wants to know …\nParachain head with given hash is available at the source …\nParachain header availability at a certain chain.\nThere’s no parachain header at the relay chain.\nSource client used in parachain heads synchronization loop.\nTarget client used in parachain heads synchronization loop.\nTransaction tracker to track submitted transactions.\nThe client can not report actual parachain head at this …\nReturn available header.\nGet best block id.\nGet best finalized source relay chain block id. If …\nReturns <code>Ok(true)</code> if client is in synced state.\nGet free source <strong>relay</strong> headers submission interval, if it …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturn prefix that will be used by default to expose …\nGet parachain head id at given block.\nGet parachain head id at given block.\nGet parachain head proof at given block.\nRelay single parachain head.\nRun parachain heads synchronization.\nSubmit parachain heads proof.\nParachains sync metrics.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate and register parachains loop metrics.\nUpdate best block number at source.\nUpdate best block number at target.")