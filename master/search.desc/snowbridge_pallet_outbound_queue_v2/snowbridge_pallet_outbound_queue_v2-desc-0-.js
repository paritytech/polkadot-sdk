searchState.loadedDescShard("snowbridge_pallet_outbound_queue_v2", 0, "Pallet for committing outbound messages for delivery to …\nHelpers for implementing runtime api\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nImplementation for <code>frame_support::traits::ProcessMessage</code>\nImplementation for …\nAutogenerated weights for <code>snowbridge-pallet-outbound-queue</code>\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe default RewardKind discriminator for rewards allocated …\nThe <code>Error</code> enum of this pallet.\nEthereum NetworkId\nThe <code>Event</code> enum of this pallet\nMeasures the maximum gas used to execute a command on …\nAddress of the Gateway contract\nThe pallet is halted\nInvalid Channel\nInvalid Envelope\nInvalid Gateway\nPending nonce does not exist\nMax bytes in a message payload\nMax number of messages processed per block\nMessage will be committed at the end of current block. …\nDelivery Proof received\nMessage was not committed due to being overweight or the …\nMessage has been queued and will be processed in the future\nMessage was not committed due to some failure condition, …\nThe message is too large\nSome messages have been committed\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe current nonce for the messages\nSet OperatingMode\nThe <code>Pallet</code> struct, the main type that implements traits …\nPending orders to relay\nReward discriminator type.\nRelayer reward payment.\nReward payment failed\nMessage verification error\nThe verifier for delivery proof from Ethereum\nWeight information for extrinsics in this pallet\nConvert a weight value into a deductible fee based.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>submit_delivery_receipt</code>.\nProcess a delivery receipt from a relayer, to allocate the …\nAuto-generated docs-only module listing all (public and …\nnumber of committed messages\nThe error that was returned.\nID of the message\nID of the message, if known (e.g. if a message is corrupt, …\nThe message\nThe nonce assigned to this message\nThe payload of the message. Useful for debugging purposes …\nThe payload of the message. Useful for debugging purposes …\nThe error that was returned.\nMerkle root of the committed messages\nWarning: Doc-Only\nHashes of the ABI-encoded messages in the <code>Messages</code> storage …\nMessages to be committed in the current block. This …\nThe current nonce for the messages\nPending orders to relay\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA generated merkle proof.\nPending order\nThe block number in which the message was committed\nThe fee in Ether provided by the user to incentivize …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLeaf content (hashed).\nIndex of the leaf the proof is for (0-based).\nThe nonce used to identify the message\nNumber of leaves in the original tree.\nProof items (does not contain the leaf hash, nor the root …\nRoot hash of generated merkle tree.\nWeight functions needed for …")