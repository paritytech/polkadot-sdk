searchState.loadedDescShard("polkadot_core_primitives", 0, "Core Polkadot types.\nAlias to the opaque account ID type for this chain, …\nThe type for looking up accounts. We don’t expect more …\nAlias to the public key used for this chain, actually a …\nThe balance of an account. 128-bits (or 38 significant …\nBlake2-256 Hash implementation.\nBlock type.\nBlock ID.\nThe block number type used by Polkadot. 32-bits will allow …\nUnit type wrapper around <code>Hash</code> that represents a candidate …\nIdentifier for a chain. 32-bit should be plenty.\nA message sent from the relay-chain down to a parachain.\nAn ECDSA/SECP256k1 signature.\nAn Ed25519 signature.\nA hash of some data used by the relay chain.\nIdentify by block header hash.\nAbstraction around hashing\nHeader type.\nA wrapped version of <code>DownwardMessage</code>. The difference is …\nAn HRMP message seen from the perspective of a recipient.\nAn instant or duration in time.\nIndex of a transaction in the relay chain. 32-bit should …\nIdentify by block number.\nAn HRMP message seen from the perspective of a sender.\nThe hash type produced.\nThe information that goes alongside a …\nAlias to type for a signature for a transaction on the …\nAn Sr25519 signature.\nOpaque, encoded, unchecked extrinsic. Simple blob to hold …\nThe message payload.\nThe message payload.\nA chain-specific digest of data useful for light clients …\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nProduce the hash of some byte-slice.\nProduce the hash of some codec-encodable value.\nThe block header.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe actual downward message to processes.\nThe block number.\nThe ordered Patricia tree root of the given <code>input</code>.\nThe parent hash.\nThe para that will get this message in its downward …\nThe block number at which these messages were put into the …\nThe block number at which this message was sent. …\nThe state trie merkle root\nThe Patricia tree root of the given mapping.\n<code>V2</code> primitives.")