searchState.loadedDescShard("sp_consensus_slots", 0, "Primitives for slots-based consensus engines.\nRepresents an equivocation proof. An equivocation happens …\nUnit type wrapper that represents a slot.\nA slot duration defined in milliseconds.\nReturns <code>self</code> as <code>core::time::Duration</code>.\nReturns <code>self</code> as a <code>u64</code> representing the duration in …\nThe first header involved in the equivocation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitialize from the given milliseconds.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new slot by calculating it from the given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the authority id of the equivocator.\nSaturating addition.\nSaturating subtraction.\nThe second header involved in the equivocation.\nThe slot at which the equivocation happened.\nTimestamp of the start of the slot.")