searchState.loadedDescShard("pallet_message_queue", 0, "Generalized Message Queue Pallet\nThe state of a queue as represented by a book of its pages.\nThe <code>BookState</code> of this pallet.\nThe maximal heap size of a page.\nConverts a <code>sp_core::Get</code> with returns a type that can be …\nData encoded and prefixed to the encoded <code>MessageItem</code>.\nProvides a <code>sp_core::Get</code> to access the <code>MEL</code> of a …\nCalculates the maximum message length and exposed it …\nThe maximal message length.\nThe maximal encoded origin length.\nThe <code>MessageOrigin</code> of this pallet.\nA single link in the double-linked Ready Ring list.\nHandler code for when the items in a queue change.\nA page of messages. Pages always contain at least one item.\nThe <code>Page</code> of this pallet.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStd setup helpers for testing and benchmarking.\nNote that the queue <code>id</code> now has <code>item_count</code> items in it, …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for <code>pallet_message_queue</code>\nConverts <code>Self</code> into a <code>Weight</code> by using <code>Self</code> for all …\nMocked message origin for testing.\nProcesses any message and consumes …\nAssert the last event that was emitted.\nCheck that the Ready Ring consists of <code>queues</code> in that exact …\nReturns a page filled with empty messages and the number …\nBuild a ring with three queues: <code>Here</code>, <code>There</code> and …\nCreate an empty book.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns a full page of messages with their index as …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKnit a queue into the ready-ring and write it back to …\nCreate a message from the given data.\nCreate a page from a single message.\nProvide a setup for <code>bump_service_head</code>.\nCreate a book with a single message of one byte.\nUnknit a queue into the ready-ring and write it back to …\nThe message was already processed and cannot be processed …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe size of the page; this implies the maximum message …\nThe maximum amount of weight (if any) to be used from …\nThere is temporarily not enough weight to continue …\nThe maximum number of stale pages (i.e. of overweight …\nProcessor for a message.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe referenced message could not be found.\nPage to be reaped does not exist.\nPage is not reapable because it has items remaining to be …\nMessage placed in overweight queue.\nThis page was reaped.\nThe <code>Pallet</code> struct, the main type that implements traits …\nMessage is processed.\nMessage discarded due to an error in the <code>MessageProcessor</code> …\nCode to be called when a message queue changes - either …\nThe queue is paused and no message can be executed from it.\nQueried by the pallet to check whether a queue can be …\nThe message is queued for future execution.\nAnother call is in progress and needs to finish before …\nThe overarching event type.\nThe amount of weight (if any) which should be provided to …\nPage/heap size type.\nThis message is temporarily unprocessable.\nWeight information for extrinsics in this pallet.\nPrint the pages in each queue and the messages in each …\nAuto-generated docs-only module listing all defined …\nTry to execute a single message that was marked as …\nEnsure the correctness of state of this pallet.\nExecute an overweight message.\nExecute a single overweight message.\nExecute an overweight message.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>execute_overweight</code>.\nCreate a call with the variant <code>reap_page</code>.\nRemove a page which has no more messages remaining to be …\nRemove a page which has no more messages remaining to be …\nAuto-generated docs-only module listing all (public and …\nThe error that occurred.\nThe <code>blake2_256</code> hash of the message.\nThe <code>blake2_256</code> hash of the message.\nThe <code>blake2_256</code> hash of the message.\nThe index of the page.\nThe index of the message within the page.\nThe queue of the message.\nThe queue of the message.\nThe queue of the message.\nThe queue of the page.\nThe page of the message.\nWhether the message was processed.\nHow much weight was used to process the message.\nExecute an overweight message.\nRemove a page which has no more messages remaining to be …\nThe index of the first and last (non-empty) pages.\nThe map of page indices to pages.\nThe origin at which we should begin servicing.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_message_queue</code> using the Substrate node …\nWeight functions needed for <code>pallet_message_queue</code>.\nStorage: <code>MessageQueue::ServiceHead</code> (r:1 w:1) Proof: …\nStorage: <code>MessageQueue::BookStateFor</code> (r:1 w:1) Proof: …\nStorage: <code>MessageQueue::BookStateFor</code> (r:1 w:1) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>MessageQueue::ServiceHead</code> (r:1 w:0) Proof: …\nStorage: <code>MessageQueue::BookStateFor</code> (r:2 w:2) Proof: …\nStorage: <code>MessageQueue::BookStateFor</code> (r:1 w:1) Proof: …\nStorage: <code>MessageQueue::Pages</code> (r:1 w:1) Proof: …\nStorage: <code>MessageQueue::Pages</code> (r:1 w:1) Proof: …\nStorage: <code>MessageQueue::BookStateFor</code> (r:0 w:1) Proof: …\nStorage: <code>MessageQueue::BookStateFor</code> (r:1 w:1) Proof: …")