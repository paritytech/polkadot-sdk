searchState.loadedDescShard("snowbridge_pallet_inbound_queue_v2", 0, "Inbound Queue\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for <code>snowbridge_inbound_queue</code>\nAccountId to Location converter\nAssetHub parachain ID.\nContains a variant per dispatchable extrinsic that this …\nCannot reachor a foreign ERC-20 asset location.\nConfiguration trait of this pallet.\nThe default RewardKind discriminator for rewards allocated …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe operation required fees to be paid which the initiator …\nAddress of the Gateway contract.\nPallet is halted\nAccount could not be converted to bytes\nCannot convert location\nInvalid foreign ERC-20 token ID\nMessage channel is invalid\nFee provided is invalid.\nMessage came from an invalid outbound channel on the …\nMessage has an invalid envelope.\nInvalid network specified\nMessage has an unexpected nonce.\nMessage has an invalid payload.\nThe max nonce for the type has been reached\nConvert a command from Ethereum to an XCM message.\nA message was received from Ethereum\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nStorageMap used for encoding a SparseBitmapImpl that …\nThe current operating mode of the pallet.\nSet OperatingMode\nThe <code>Pallet</code> struct, the main type that implements traits …\nReward discriminator type.\nRelayer reward payment.\nThere was some other issue (i.e. not to do with routing) …\nKeep track of tips added for a message as an additional …\nThe desired destination was unreachable, generally because …\nMessage verification error\nThe verifier for inbound messages from Ethereum.\nHandler for XCM fees.\nXCM message sender.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>set_operating_mode</code>.\nCreate a call with the variant <code>submit</code>.\nHalt or resume all pallet operations. May only be called …\nHalt or resume all pallet operations. May only be called …\nAuto-generated docs-only module listing all (public and …\nSubmit an inbound message originating from the Gateway …\nSubmit an inbound message originating from the Gateway …\nID of the XCM message which was forwarded to the final …\nThe message nonce\nHalt or resume all pallet operations. May only be called …\nSubmit an inbound message originating from the Gateway …\nStorageMap used for encoding a SparseBitmapImpl that …\nThe current operating mode of the pallet.\nKeep track of tips added for a message as an additional …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeight functions needed for ethereum_beacon_client.")