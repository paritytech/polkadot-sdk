searchState.loadedDescShard("sp_version", 0, "Substrate runtime version\nThe identity of a particular API interface that the …\nA vector of pairs of <code>ApiId</code> and a <code>u32</code> for version.\nBorrowed data.\nReturns the version of the native runtime.\nSomething that can provide the runtime version at a given …\nThe version of the native runtime.\nOwned data.\nRuntime version. This should not be thought of as classic …\nDifferent possible state version.\nOld state version, no value nodes.\nNew state version can use value nodes.\nReturns the api version found for api with <code>id</code>.\nList of supported API “features” along with their …\n<code>authoring_version</code> is the version of the authorship …\nCheck if this version matches other version for authoring …\nAuthoring runtimes (<code>spec_version</code>s) that this native …\nCheck if this version matches other version for calling …\nReturns the version of the <code>Core</code> runtime api.\nCreate a vector of Api declarations.\nDeprecated <code>Cow::Borrowed()</code> wrapper.\n<code>Decode</code> while giving a “version hint”\nProvides functionality to embed a <code>RuntimeVersion</code> as custom …\nReturns the state version to use for Extrinsics root.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCheck if the given api with <code>api_id</code> is implemented and the …\nName of the implementation of the spec. This is of little …\nVersion of the implementation of the specification.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the version of the native runtime.\nReturns the version of runtime at the given block.\nBasic runtime version info.\nAn attribute that accepts a version declaration of a …\nIdentifies the different Substrate runtimes. There’ll be …\nVersion of the runtime specification.\nIf defined, values in state of size bigger or equal to …\nReturns state version to use for update.\nVersion of the system implementation used by this runtime. …\nAll existing calls (dispatchables) are fully compatible …\nEmbed the given <code>version</code> to the given <code>wasm</code> blob.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.")