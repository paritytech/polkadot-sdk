searchState.loadedDescShard("pallet_revive", 0, "Revive Pallet\nThe mapper to be used if the account id is <code>AccountId32</code>.\nMap between the native chain account id <code>T</code> and an Ethereum …\nSpecifies a maximum allowable balance for a deposit.\nThe transaction increased storage consumption.\nReference to an existing code hash or a new wasm module.\nResult type of a <code>bare_code_upload</code> call.\nThe result of successfully uploading a contract.\nDetermines whether events should be collected during …\nThe possible errors that can happen querying the storage …\nResult type of a <code>bare_call</code> or <code>bare_instantiate</code> call as …\nDetermines whether debug messages will be collected.\nThe given address doesn’t point to a contract.\nContains the error value\nContains the error value\nError type of a <code>eth_transact</code> call.\nThe result of the execution of a <code>eth_transact</code> call.\nOutput of a contract call or instantiation which ran to …\nThe code hash of an on-chain wasm blob.\nResult type of a <code>get_storage</code> call.\nThe result of a successful contract instantiation.\nStorage key cannot be decoded from the provided input data.\nContains the success value\nContains the success value\nThe transaction reduced storage consumption.\nThe API used to dry-run contract interactions.\nSkip event collection.\nSkip collection of debug messages.\nThe amount of balance that was either charged or refunded …\nDocumentation of the syscalls (host functions) available …\nAllows bypassing all balance transfer checks.\nCollect events.\nCollect debug messages.\nA wasm module as raw bytes.\nThe address of the new contract.\nStores the address of the current contract into the …\nIf the amount of deposit (this type) is constrained by a …\nStores the <em>free</em> balance of the current account into the …\nReturns the free balance of the given <code>[H160]</code> address, …\nStores the <em>free</em> balance of the supplied address into the …\nReturns the simulated ethereum <code>BASEFEE</code> value. See …\nStores the block hash at given block height into the …\nStores the current block number of the current contract …\nMake a call to another contract. See …\nPerform a call from a specified account to a given …\nCall into the chain extension provided by the chain if any.\nStores the input passed by the caller into the supplied …\nStores the U256 value at given call input <code>offset</code> into the …\nReturns the total size of the contract call input data. …\nCall some dispatchable of the runtime. See […\nStores the address of the caller into the supplied buffer. …\nChecks whether the caller of the current contract is the …\nChecks whether the caller of the current contract is root. …\nA mechanism for runtime authors to augment the …\nReturns the chain ID. See …\nReturns how much balance is charged or <code>0</code> in case of a …\nClear the value at the given key in the contract storage. …\nRetrieve the code hash for a specified contract address. …\nThe key under which the new code is stored.\nRetrieve the code size for a given contract address. See …\nChecks whether there is a value stored under the given key.\nDetermine the address of a contract using CREATE semantics.\nDetermine the address of a contract using the CREATE2 …\nThe execution return value.\nBuffer passed along by <code>seal_return</code>. Empty when <code>seal_return</code> …\nEmit a custom debug message. See …\nAn optional debug message. This message is only filled …\nExecute code in the context (storage, caller, value) of …\nThe deposit that was reserved at the caller. Is zero when …\nDeposit a contract event with the data buffer and optional …\nRecovers the ECDSA public key from the given message hash …\nCalculates Ethereum address from the ECDSA compressed …\nThe weight and deposit equivalent in EVM Gas.\nPerform an Ethereum call.\nThe events that were emitted during execution. It is an …\nTypes, and traits to integrate pallet-revive with EVM.\nFlags passed along by <code>seal_return</code>. Empty when <code>seal_return</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nHow much weight was consumed during execution.\nReturns the block ref_time limit. See …\nReturns the simulated ethereum <code>GASPRICE</code> value. See …\nHow much weight is required as gas limit in order to …\nThe amount of gas that was necessary to execute the …\nStores the immutable data into the supplied buffer. See …\nRetrieve the value under the given key from storage. See …\nQuery a given storage key in a given contract.\nComputes the BLAKE2 128-bit hash on the given input buffer.\nComputes the BLAKE2 256-bit hash on the given input buffer.\nComputes the KECCAK 256-bit hash on the given input buffer.\nComputes the SHA2 256-bit hash on the given input buffer. …\nInstantiate a contract with the specified code hash. See …\nInstantiate a new contract.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks whether a specified address belongs to a contract. …\nReturns true if the <code>account_id</code> is useable as an origin.\nAdds a new delegate dependency to the contract. See …\nCreate a stateful mapping for <code>account_id</code>\nStores the minimum balance (a.k.a. existential deposit) …\nReturns the nonce of the given <code>[H160]</code> address.\nNoop function used to benchmark the time it takes to …\nLoad the latest block timestamp into the supplied buffer …\nStores the address of the call stack origin into the …\nRetrieve the code hash of the currently executing contract.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nReturns the amount of ref_time left. See …\nThe execution result of the wasm code.\nThe output of the called constructor.\nStores data returned by the last call, starting from <code>offset</code>…\nStores the length of the data returned by the last call …\nThis is essentially a saturating signed add.\nThis is essentially a saturating signed sub.\nCease contract execution and save a data buffer as a …\nReplace the contract code at the specified address with …\nAttaches the supplied immutable data to the currently …\nSet the value at the given key in the contract storage. …\nVerify a sr25519 signature See …\nHow much balance was paid by the origin into the contract…\nStorage deposit charged.\nRetrieve and remove the value under the given key from …\nRemove the calling account and transfer remaining <strong>free</strong> …\nShared utilities for testing contracts. This is not part …\nConvert an ethereum address to a native account id.\nConvert an account id to an ethereum adress.\nSame as <code>Self::to_account_id</code> but always returns the …\nRemoves the delegate dependency from the contract. see …\nRemove the mapping in order to reclaim the deposit.\nUpload new code without instantiating a contract from it.\nStores the value transferred along with this …\nStores the amount of weight left into the supplied buffer. …\nStores the price for the specified amount of weight into …\nAutogenerated weights for <code>pallet_revive</code>\nExecute an XCM program locally, using the contract’s …\nSend an XCM program from the contract to the specified …\nData to be associated with an account (other than …\nThe user account identifier type for the runtime.\nThe basic call filter to use in Origin. All origins are …\nThe Block type used by the runtime. This is used by …\nMaximum number of block number to block hash mappings to …\nThe maximum length of a block (in bytes).\nBlock &amp; extrinsics weights: base values and limits.\nA trait used to extend the set of contract callable …\nThe chain extensions returns the supplied value to its …\nThe weight of runtime database operations the runtime can …\nThis type is used to describe a storage change when …\nThe control does <strong>not</strong> return to the calling contract.\nGrants the chain extension access to its parameters and …\nContains the error value\nAn interface that provides access to the external …\nWeight information for the transaction extensions of this …\nThe output of the <code>Hashing</code> function.\nThe hashing system (algorithm) being used in the runtime …\nThe extensions globally unique identifier.\nConverting trait to take a source type and convert to …\nThe maximum number of consumers allowed on a single …\nThe migrator that is used to run Multi-Block-Migrations.\nThis stores the number of previous transactions associated …\nContains the success value\nA function that is invoked when an account has been …\nHandler for when a new account has just been created.\nWhat to do if the runtime wants to change the code to …\nProvides information about the pallet setup in the runtime.\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly before …\nIf this bit is set all changes made by the contract …\nA <code>ChainExtension</code> that can be composed with other …\nResult that returns a <code>DispatchError</code> on error.\nDetermines the exit behaviour and return value of a chain …\nFlags used by a contract to customize exit behaviour.\nThe aggregated <code>RuntimeCall</code> type.\nThe aggregated event type of the runtime.\nThe <code>RuntimeOrigin</code> type used by dispatchable calls.\nThe aggregated <code>RuntimeTask</code> type.\nThe designated SS58 prefix of this chain.\nAll migrations that should run in the next runtime upgrade.\nConfiguration trait of this pallet.\nWeight information for the extrinsics of this pallet.\nGet the chain’s in-code version.\nReturns a reference to the account id of the current …\nReturns a reference to the <code>H160</code> address of the current …\nReturns a reference to the <code>H160</code> address of the current …\nAdjust a previously charged amount down to its actual …\nReturns the set containing all flags.\nAppend a string to the debug buffer.\nReturns the balance of the current contract.\nReturns the balance of the supplied account.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the block hash at the given <code>block_number</code> or <code>None</code> if\nReturns the current block number.\nHow many bytes were added to storage.\nHow many bytes were removed from storage.\nCall (possibly transferring some amount of funds) into the …\nCall the chain extension logic.\nCall some dispatchable and return the result.\nReturns the caller.\nCheck if the caller of the current contract is the origin …\nCheck if the caller is origin, and this origin is root.\nCharges <code>diff</code> from the meter.\nCharge the passed <code>amount</code> of weight from the overall limit.\nReturns the code hash of the contract for the given <code>address</code>…\nReturns the code size of the contract at the given <code>address</code> …\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nTests sometimes need to modify and inspect the contract …\nReturns <code>true</code> if debug message recording is enabled. …\nDecrement the reference count of a stored code by one.\nExecute code in the current frame.\nDeposit an event with the given topics.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nRecovers ECDSA compressed public key based on signature …\nReturns Ethereum address from the ECDSA compressed public …\nReturns an empty set of flags.\nDetermines whether chain extensions are enabled for this …\nGrants access to the execution environment of the current …\nThe chain extension id within the <code>id</code> passed by a contract.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe function id within the <code>id</code> passed by a contract.\nGet an immutable reference to the nested gas meter.\nGet a mutable reference to the nested gas meter.\nReturns the immutable data of the current contract.\nReturns the storage entry of the executing account by the …\nReturns <code>Some(len)</code> (in bytes) if a storage item exists at …\nReturns the transient storage entry of the executing …\nReturns <code>Some(len)</code> (in bytes) if a transient storage item …\nReturns the price for the specified amount of weight.\nThe length of the input as passed in as <code>input_len</code>.\nReturns the number of times the specified contract exists …\nInserts the specified flags in-place.\nInstantiate a contract from the given code.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nCheck if a contract lives at the specified <code>address</code>.\nReturns <code>true</code> if no flags are currently stored.\nCheck if running in read-only context.\nHow many storage items were added to storage.\nHow many storage items were removed from storage.\nReturns an immutable reference to the output of the last …\nReturns a mutable reference to the output of the last …\nAdds a delegate dependency to <code>ContractInfo</code>’s …\nReturns the number of locked delegate dependencies.\nReturns the maximum allowed size of a storage item.\nReturns the minimum balance that is required for creating …\nCreates a new environment for consumption by a chain …\nReturns the complement of this set of flags.\nReturns the timestamp of the current block\nReturn the origin of the whole call stack.\nReturns the code hash of the contract being executed.\nReads <code>min(max_len, in_len)</code> from contract memory.\nReads and decodes a type with a dynamic size from contract …\nReads `min(buffer.len(), in_len) from contract memory.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nSets new code hash and immutable data for an existing …\nSet the the immutable data of the current contract.\nSets the storage entry by the given key to the specified …\nSets the transient storage entry for the given key to the …\nVerify a sr25519 signature.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nTransfer all funds to <code>beneficiary</code> and delete the contract.\nToggles the specified flags in-place.\nGet a mutable reference to the transient storage. Useful …\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nRemoves a delegate dependency from <code>ContractInfo</code>’s …\nCalculate how much of a charge or refund results from …\nReturns the value transferred along with this call.\nWrite the supplied buffer to contract memory.\nThe function which is executed when a contract is called.\nProvides an interface for intercepting contract calls.\nDefines a span of execution for a contract call.\nThe type of <code>CallSpan</code> that is created by this trait.\nThe constructor function which is executed on deployment …\nUmbrella trait for all interfaces that serves for …\nContains the error value\nOutput of a contract call or instantiation which ran to …\nDescribes the different functions that can be exported by …\nContains the success value\nDefines methods to capture contract calls, enabling …\nCalled just after the execution of a contract.\nBuffer passed along by <code>seal_return</code>. Empty when <code>seal_return</code> …\nThe contract did revert all storage changes.\nFlags passed along by <code>seal_return</code>. Empty when <code>seal_return</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAllows to intercept contract calls and decide whether they …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new call span to encompass the upcoming contract …\nAccess list\nAccess list entry\nA simple account that can sign transactions\nBlock object\nBlock number or tag\nBlock number, tag, or block hash\nBlock tag <code>earliest</code>: The lowest numbered block the client …\nBlock tag\nBlock tag\nBloom hash type with 256 bytes (2048 bits) size.\nNot syncing Should always return false if not syncing.\n<code>u8</code> wrapper type for encoding and decoding hex strings\n<code>Vec&lt;u8&gt;</code> wrapper type for encoding and decoding hex strings\n<code>[u8; 256]</code> wrapper type for encoding and decoding hex …\n<code>[u8; 8]</code> wrapper type for encoding and decoding hex strings\nConversion from decimal string error\nThe error type for parsing numbers from strings.\nA list of error categories encountered when parsing …\nTransaction object generic to all types\nFixed-size uninterpreted hash type with 16 bytes (128 …\nFixed-size uninterpreted hash type with 20 bytes (160 …\nFixed-size uninterpreted hash type with 32 bytes (256 …\nBlock hash\nTransaction hashes\nFixed-size uninterpreted hash type with 64 bytes (512 …\nA character in the input string is not valid for the given …\nChar not from range 0-9\nThe input length is not valid for the given radix.\nValue does not fit into type\nlog\nMaximum value.\nMaximum value.\nMaximum value.\nMaximum value.\nReceipt information\nSyncing progress\nSyncing progress\nSyncing status\nTransaction value for type identifier: 2\nTransaction value for type identifier: 1\nTransaction value for type identifier: 3\nTransaction value for type identifier: 0\nSigned 1559 Transaction\nEIP-1559 transaction.\nSigned 2930 Transaction\nEIP-2930 transaction.\nSigned 4844 Transaction\nEIP-4844 transaction.\nTransaction information\nFull transactions\nSigned Legacy Transaction\nLegacy transaction.\nTransaction type identifier: 2\nTransaction type identifier: 1\nTransaction type identifier: 3\nTransaction type identifier: 0\nLittle-endian large integer type 128-bit unsigned integer.\nLittle-endian large integer type 256-bit unsigned integer.\nBlock number\nBlock number\nLittle-endian large integer type 512-bits unsigned integer.\nLittle-endian large integer type Unsigned 64-bit integer.\nThe given radix is not supported.\nValidator withdrawal\nComputes the absolute difference between self and other.\nComputes the absolute difference between self and other.\nComputes the absolute difference between self and other.\nComputes the absolute difference between self and other.\naccessList EIP-2930 access list\naccessList EIP-2930 access list\naccessList EIP-2930 access list\naccessList EIP-2930 access list\nGet the <code>H160</code> address of the account.\naddress\nrecipient address for withdrawal value\nvalue contained in withdrawal\nConvert to Byte\nConvert to Byte\nConvert to Byte\nConvert to Byte\nExtracts a byte slice containing the entire fixed hash.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nReturns a mutable raw pointer to the value.\nReturns a mutable raw pointer to the value.\nReturns a mutable raw pointer to the value.\nReturns a mutable raw pointer to the value.\nReturns a mutable raw pointer to the value.\nReturns a mutable raw pointer to the value.\nReturns a mutable raw pointer to the value.\nReturns a mutable raw pointer to the value.\nReturns a mutable raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturns a constant raw pointer to the value.\nConversion to u128 with overflow checking\nConversion to u128 with overflow checking\nConversion to u128 with overflow checking\nConversion to u32 with overflow checking\nConversion to u32 with overflow checking\nConversion to u32 with overflow checking\nConversion to u32 with overflow checking\nConversion to u64 with overflow checking\nConversion to u64 with overflow checking\nConversion to u64 with overflow checking\nConversion to u64 with overflow checking\nConversion to usize with overflow checking\nConversion to usize with overflow checking\nConversion to usize with overflow checking\nConversion to usize with overflow checking\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nBase fee per gas\nReturn if specific bit is set.\nReturn if specific bit is set.\nReturn if specific bit is set.\nReturn if specific bit is set.\nReturn the least number of bits needed to represent the …\nReturn the least number of bits needed to represent the …\nReturn the least number of bits needed to represent the …\nReturn the least number of bits needed to represent the …\nblob gas price The actual value per gas deducted from the …\nBlob gas used\nblob gas used The amount of blob gas used for this …\nblobVersionedHashes List of versioned blob hashes …\nblobVersionedHashes List of versioned blob hashes …\nblobs Raw blob data.\nblock hash\nblock hash\nblock hash\nblock number\nblock number\nblock number\nReturn specific byte. Byte 0 is the least significant …\nReturn specific byte. Byte 0 is the least significant …\nReturn specific byte. Byte 0 is the least significant …\nReturn specific byte. Byte 0 is the least significant …\nchainId Chain ID that this transaction is valid on.\nchainId Chain ID that this transaction is valid on.\nchainId Chain ID that this transaction is valid on.\nchainId Chain ID that this transaction is valid on.\nchainId Chain ID that this transaction is valid on.\nChecked addition. Returns <code>None</code> if overflow occurred.\nChecked addition. Returns <code>None</code> if overflow occurred.\nChecked addition. Returns <code>None</code> if overflow occurred.\nChecked addition. Returns <code>None</code> if overflow occurred.\nChecked division. Returns <code>None</code> if <code>other == 0</code>.\nChecked division. Returns <code>None</code> if <code>other == 0</code>.\nChecked division. Returns <code>None</code> if <code>other == 0</code>.\nChecked division. Returns <code>None</code> if <code>other == 0</code>.\nChecked multiplication. Returns <code>None</code> if overflow occurred.\nChecked multiplication. Returns <code>None</code> if overflow occurred.\nChecked multiplication. Returns <code>None</code> if overflow occurred.\nChecked multiplication. Returns <code>None</code> if overflow occurred.\nChecked negation. Returns <code>None</code> unless <code>self == 0</code>.\nChecked negation. Returns <code>None</code> unless <code>self == 0</code>.\nChecked negation. Returns <code>None</code> unless <code>self == 0</code>.\nChecked negation. Returns <code>None</code> unless <code>self == 0</code>.\nChecked exponentiation. Returns <code>None</code> if overflow occurred.\nChecked exponentiation. Returns <code>None</code> if overflow occurred.\nChecked exponentiation. Returns <code>None</code> if overflow occurred.\nChecked exponentiation. Returns <code>None</code> if overflow occurred.\nChecked modulus. Returns <code>None</code> if <code>other == 0</code>.\nChecked modulus. Returns <code>None</code> if <code>other == 0</code>.\nChecked modulus. Returns <code>None</code> if <code>other == 0</code>.\nChecked modulus. Returns <code>None</code> if <code>other == 0</code>.\nChecked subtraction. Returns <code>None</code> if overflow occurred.\nChecked subtraction. Returns <code>None</code> if overflow occurred.\nChecked subtraction. Returns <code>None</code> if overflow occurred.\nChecked subtraction. Returns <code>None</code> if overflow occurred.\ncontract address The contract address created, if the …\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\ncumulative gas used The sum of gas used by this …\nCurrent block\ndata\nDecode the Ethereum transaction from bytes.\nDifficulty\nReturns a pair <code>(self / other, self % other)</code>.\nReturns a pair <code>(self / other, self % other)</code>.\nReturns a pair <code>(self / other, self % other)</code>.\nReturns a pair <code>(self / other, self % other)</code>.\nGet a signed transaction payload with a dummy 65 bytes …\neffective gas price The actual value per gas deducted from …\nSCALE encode this type to bytes, possibly with the help of …\nSCALE encode this type to bytes, possibly with the help of …\nSCALE encode this type to bytes, possibly with the help of …\nSCALE encode this type to bytes, possibly with the help of …\nExcess blob gas\nCreate <code>10**n</code> as this type.\nCreate <code>10**n</code> as this type.\nCreate <code>10**n</code> as this type.\nCreate <code>10**n</code> as this type.\nExtra data\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nConstructs a hash type from the given bytes array of fixed …\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given bytes array of fixed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a hash type from the given bytes array of fixed …\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nConstructs a hash type from the given bytes array of fixed …\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a hash type from the given bytes array of fixed …\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a hash type from the given bytes array of fixed …\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given bytes array of fixed …\nReturns the argument unchanged.\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given bytes array of fixed …\nReturns the argument unchanged.\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given bytes array of fixed …\nReturns the argument unchanged.\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nfrom address\nfrom\nfrom address\nConverts from big endian representation bytes in memory.\nConverts from big endian representation bytes in memory.\nConverts from big endian representation bytes in memory.\nConverts from big endian representation bytes in memory.\nConvert from a decimal string.\nConvert from a decimal string.\nConvert from a decimal string.\nConvert from a decimal string.\nConverts from little endian representation bytes in memory.\nConverts from little endian representation bytes in memory.\nConverts from little endian representation bytes in memory.\nConverts from little endian representation bytes in memory.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new account from a secret\nCreate a new <code>GenericTransaction</code> from a signed transaction.\nExtract the unsigned transaction from a signed transaction.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreates a hash type instance from the given string.\nCreates a hash type instance from the given string.\nCreates a hash type instance from the given string.\nCreates a hash type instance from the given string.\nCreates a hash type instance from the given string.\nCreates a hash type instance from the given string.\nCreates a hash type instance from the given string.\nCreates a hash type instance from the given string.\nCreates a hash type instance from the given string.\nConverts a string slice in a given base to an integer. …\nConverts a string slice in a given base to an integer. …\nConverts a string slice in a given base to an integer. …\nConverts a string slice in a given base to an integer. …\nCreate a new <code>GenericTransaction</code> from a unsigned …\nMultiplies two 128-bit integers to produce full 256-bit …\nMultiplies two 256-bit integers to produce full 512-bit …\ngas limit\ngas limit\ngas limit\ngas limit\ngas limit\nGas limit\ngas price The gas price willing to be paid by the sender …\ngas price The effective gas price paid by the sender in …\ngas price The gas price willing to be paid by the sender …\ngas price The gas price willing to be paid by the sender …\nGas used\ngas used The amount of gas used for this specific …\nHash\ntransaction hash\nHighest block\nConditional compilation depending on whether …\nindex of withdrawal\ninput data\ninput data\ninput data\ninput data\ninput data\nCompute the highest <code>n</code> such that <code>n * n &lt;= self</code>.\nCompute the highest <code>n</code> such that <code>n * n &lt;= self</code>.\nCompute the highest <code>n</code> such that <code>n * n &lt;= self</code>.\nCompute the highest <code>n</code> such that <code>n * n &lt;= self</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the transaction was successful.\nReturns <code>true</code> if no bits are set.\nReturns <code>true</code> if no bits are set.\nReturns <code>true</code> if no bits are set.\nWhether this is zero.\nReturns <code>true</code> if no bits are set.\nReturns <code>true</code> if no bits are set.\nWhether this is zero.\nWhether this is zero.\nWhether this is zero.\nReturns <code>true</code> if no bits are set.\nReturns <code>true</code> if no bits are set.\nReturns <code>true</code> if no bits are set.\nReturns <code>true</code> if no bits are set.\nReturns the corresponding <code>FromStrRadixErrKind</code> for this …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the size of this hash in bytes.\nReturns the size of this hash in bytes.\nReturns the size of this hash in bytes.\nReturns the size of this hash in bytes.\nReturns the size of this hash in bytes.\nReturns the size of this hash in bytes.\nReturns the size of this hash in bytes.\nReturns the size of this hash in bytes.\nReturns the size of this hash in bytes.\nlog index\nlogs\nBloom filter\nlogs bloom\nLow 2 words (u128)\nLow 2 words (u128)\nLow 2 words (u128)\nConversion to u32\nConversion to u32\nConversion to u32\nConversion to u32\nLow word (u64)\nLow word (u64)\nLow word (u64)\nLow word (u64)\nmax fee per blob gas The maximum total fee per gas the …\nmax fee per blob gas The maximum total fee per gas the …\nmax fee per gas The maximum total fee per gas the sender …\nmax fee per gas The maximum total fee per gas the sender …\nmax fee per gas The maximum total fee per gas the sender …\nmax priority fee per gas Maximum fee per gas the sender is …\nmax priority fee per gas Maximum fee per gas the sender is …\nmax priority fee per gas Maximum fee per gas the sender is …\nThe maximum value which can be inhabited by this type.\nThe maximum value which can be inhabited by this type.\nThe maximum value which can be inhabited by this type.\nThe maximum value which can be inhabited by this type.\nCoinbase\nMix hash\nInitialize a new Receipt\nCreate a new <code>TransactionInfo</code> from a receipt and a signed …\nNonce\nnonce\nnonce\nnonce\nnonce\nnonce\nNumber\nOne (multiplicative identity) of this type.\nOne (multiplicative identity) of this type.\nOne (multiplicative identity) of this type.\nOne (multiplicative identity) of this type.\nAddition which overflows and returns a flag if it does.\nAddition which overflows and returns a flag if it does.\nAddition which overflows and returns a flag if it does.\nAddition which overflows and returns a flag if it does.\nMultiply with overflow, returning a flag if it does.\nMultiply with overflow, returning a flag if it does.\nMultiply with overflow, returning a flag if it does.\nMultiply with overflow, returning a flag if it does.\nNegation with overflow.\nNegation with overflow.\nNegation with overflow.\nNegation with overflow.\nFast exponentiation by squaring. Returns result and …\nFast exponentiation by squaring. Returns result and …\nFast exponentiation by squaring. Returns result and …\nFast exponentiation by squaring. Returns result and …\nSubtraction which underflows and returns a flag if it does.\nSubtraction which underflows and returns a flag if it does.\nSubtraction which underflows and returns a flag if it does.\nSubtraction which underflows and returns a flag if it does.\nParent Beacon Block Root\nParent block hash\nFast exponentiation by squaring …\nFast exponentiation by squaring …\nFast exponentiation by squaring …\nFast exponentiation by squaring …\nr\nr\nr\nr\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content …\nCreate a new hash with cryptographically random content …\nCreate a new hash with cryptographically random content …\nCreate a new hash with cryptographically random content …\nCreate a new hash with cryptographically random content …\nCreate a new hash with cryptographically random content …\nCreate a new hash with cryptographically random content …\nCreate a new hash with cryptographically random content …\nCreate a new hash with cryptographically random content …\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value using the …\nAssign <code>self</code> to a cryptographically random value using the …\nAssign <code>self</code> to a cryptographically random value using the …\nAssign <code>self</code> to a cryptographically random value using the …\nAssign <code>self</code> to a cryptographically random value using the …\nAssign <code>self</code> to a cryptographically random value using the …\nAssign <code>self</code> to a cryptographically random value using the …\nAssign <code>self</code> to a cryptographically random value using the …\nAssign <code>self</code> to a cryptographically random value using the …\nGet the raw 65 bytes signature from the signed transaction.\nReceipts root\nRecover the Ethereum address, from a signed transaction.\nremoved\nReturns a new fixed hash where all bits are set to the …\nReturns a new fixed hash where all bits are set to the …\nReturns a new fixed hash where all bits are set to the …\nReturns a new fixed hash where all bits are set to the …\nReturns a new fixed hash where all bits are set to the …\nReturns a new fixed hash where all bits are set to the …\nReturns a new fixed hash where all bits are set to the …\nReturns a new fixed hash where all bits are set to the …\nReturns a new fixed hash where all bits are set to the …\nstate root The post-transaction state root. Only specified …\nRuntime types for integrating <code>pallet-revive</code> with the EVM.\ns\ns\ns\ns\nAddition which saturates at the maximum value (Self::MAX).\nAddition which saturates at the maximum value (Self::MAX).\nAddition which saturates at the maximum value (Self::MAX).\nAddition which saturates at the maximum value (Self::MAX).\nMultiplication which saturates at the maximum value..\nMultiplication which saturates at the maximum value..\nMultiplication which saturates at the maximum value..\nMultiplication which saturates at the maximum value..\nSubtraction which saturates at zero.\nSubtraction which saturates at zero.\nSubtraction which saturates at zero.\nSubtraction which saturates at zero.\nOmmers hash\nSign a transaction.\nEncode the Ethereum transaction into bytes.\nBlock size\nStarting block\nState root\nstatus Either 1 (success) or 0 (failure). Only specified …\nGet the substrate <code>AccountId32</code> of the account.\nTimestamp\nto address\nto Address of the receiver or null in a contract creation …\nto address\nto address\nto address\nto address\nConvert to big-endian bytes.\nConvert to big-endian bytes.\nConvert to big-endian bytes.\nConvert to big-endian bytes.\nReturns the inner bytes array.\nReturns the inner bytes array.\nReturns the inner bytes array.\nReturns the inner bytes array.\nReturns the inner bytes array.\nReturns the inner bytes array.\nReturns the inner bytes array.\nReturns the inner bytes array.\nReturns the inner bytes array.\nConvert to little-endian bytes.\nConvert to little-endian bytes.\nConvert to little-endian bytes.\nConvert to little-endian bytes.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\ntopics\nTotal difficulty\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\ntransaction hash\ntransaction hash\ntransaction index\ntransaction index\ntransaction index\nTransactions root\nTry to convert from Byte\nTry to convert from Byte\nTry to convert from Byte\nTry to convert from Byte\nConvert to a <code>TransactionUnsigned</code>.\ntype\ntype\ntype\ntype\ntype\ntype\nUncles\nReturn the bytes to be signed by the private key.\nv For backwards compatibility, <code>v</code> is optionally provided as …\nv For backwards compatibility, <code>v</code> is optionally provided as …\nv\nindex of validator that generated withdrawal\nConvert to u8\nConvert to u8\nConvert to u8\nConvert to u8\nvalue\nvalue\nvalue\nvalue\nvalue\nCreate a signed transaction from an <code>TransactionUnsigned</code> …\nWithdrawals\nWithdrawals root\nWrite to the slice in big-endian format.\nWrite to the slice in big-endian format.\nWrite to the slice in big-endian format.\nWrite to the slice in big-endian format.\nyParity The parity (0 for even, 1 for odd) of the y-value …\nyParity The parity (0 for even, 1 for odd) of the y-value …\nyParity The parity (0 for even, 1 for odd) of the y-value …\nReturns a new zero-initialized fixed hash.\nReturns a new zero-initialized fixed hash.\nReturns a new zero-initialized fixed hash.\nZero (additive identity) of this type.\nReturns a new zero-initialized fixed hash.\nReturns a new zero-initialized fixed hash.\nZero (additive identity) of this type.\nZero (additive identity) of this type.\nZero (additive identity) of this type.\nReturns a new zero-initialized fixed hash.\nReturns a new zero-initialized fixed hash.\nReturns a new zero-initialized fixed hash.\nReturns a new zero-initialized fixed hash.\nThe Runtime configuration.\nEthExtra convert an unsigned <code>crate::Call::eth_transact</code> …\nThe Runtime’s transaction extension. It should include …\nThe EVM gas price. This constant is used by the proxy to …\nWraps <code>generic::UncheckedExtrinsic</code> to support checking …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet the transaction extension to apply to an unsigned …\nCalls <code>U::from(self)</code>.\nConvert the unsigned <code>crate::Call::eth_transact</code> into a …\nTried to map an account that is already mapped.\nAn <code>AccountID32</code> account tried to interact with the pallet …\nUse either valid type is <code>address::AccountId32Mapper</code> or …\nDeposit for creating an address mapping in <code>AddressSuffix</code>.\nFailed to convert a U256 to a Balance.\nThe program contains a basic block that is larger than …\nThe code blob supplied is larger than …\nContains a variant per dispatchable extrinsic that this …\nFilter that is applied to calls dispatched by contracts.\nFilter that is applied to calls dispatched by contracts.\nA contract was called either by a plain account or another …\nCan not add a delegate dependency to the code hash of the …\nType that allows the runtime authors to add new host …\nType that allows the runtime authors to add new host …\nThe EIP-155 chain ID.\nThe EIP-155 chain ID.\nThe percentage of the storage deposit that should be held …\nThe percentage of the storage deposit that should be held …\nCode removal was denied because the code is still in use …\nNo code info could be found at the supplied code hash.\nNo code could be found at the supplied code hash.\nThe contract failed to compile or is missing the correct …\nA code with the specified hash was removed.\nCode with the specified hash has been stored.\nThe Pallet has reserved it for storing code on-chain.\nConfiguration trait of this pallet.\nA contract’s code was updated.\nA custom event emitted by the contract.\nNo contract was found at the specified address.\nThe contract ran to completion but decided to revert its …\nContract trapped during execution.\nThe fungible in which fees are paid and contract balances …\nFor most production chains, it’s recommended to use the …\nFor most production chains, it’s recommended to use the …\nFailed to convert an EVM balance to a native balance.\nInput passed to a contract API function failed to decode …\nBased on <code>Config</code>. Auto-generated by …\nA contract delegate called a code hash.\nThe contract already depends on the given delegate …\nThe dependency was not found in the contract’s delegate …\nThe amount of balance a caller has to pay for each byte of …\nThe amount of balance a caller has to pay for each byte of …\nThe amount of balance a caller has to pay for each storage …\nThe amount of balance a caller has to pay for each storage …\nA contract with the same AccountId already exists.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nPolkaVM failed during code execution. Probably due to a …\nA reason for the pallet contracts placing a hold on funds.\n<code>seal_call</code> forwarded this contracts input. It therefore is …\nOrigin allowed to instantiate code.\nOrigin allowed to instantiate code.\nContract deployed by address at the specified address.\nInvalid combination of flags supplied to <code>seal_call</code> or …\nImmutable data can only be set during deploys and only be …\nThe program contains an invalid instruction.\nInvalid schedule supplied, e.g. with zero weight of a …\nInvalid storage flags were passed to one of the storage …\nThe contract tried to call a syscall which does not exist …\nPerforming a call was denied because the calling depth …\nThe contract has reached its maximum number of delegate …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe ratio between the decimal representation of the native …\nThe ratio between the decimal representation of the native …\nThe chain does not provide a chain extension. Calling the …\nA buffer outside of sandbox memory was passed to a …\nThe executed contract exhausted its gas limit.\nCan not add more data to transient storage.\nThe amount of memory in bytes that relay chain validators …\nThe amount of memory in bytes that relay chain validators …\nThe <code>Pallet</code> struct, the main type that implements traits …\nA contract called into the runtime which then called back …\nA call tried to invoke a contract that is flagged as …\nThe overarching call type.\nThe overarching call type.\nThe overarching event type.\nThe overarching event type.\nOverarching hold reason.\nOverarching hold reason.\nThe amount of memory in bytes that parachain nodes a lot …\nThe amount of memory in bytes that parachain nodes a lot …\nA contract attempted to invoke a state modifying API while …\nThe static memory consumption of the blob will be larger …\nMore storage was created than allowed by the storage …\nOrigin doesn’t have enough balance to pay the required …\nThe Pallet has reserved it for storage deposit.\nSome funds have been transferred and held as storage …\nSome storage deposit funds have been transferred and …\nContract has been removed.\nA contract self destructed in its constructor.\nTermination of a contract is not allowed while the …\nThe time implementation used to supply timestamps to …\nThe time implementation used to supply timestamps to …\nThe amount of topics passed to <code>seal_deposit_events</code> exceeds …\nPerforming the requested transfer failed. Probably because …\nMake contract callable functions marked as <code>#[unstable]</code> …\nMake contract callable functions marked as <code>#[unstable]</code> …\nOrigin allowed to upload code.\nOrigin allowed to upload code.\nThe size defined in <code>T::MaxValueSize</code> was exceeded.\nDescribes the weights of the dispatchables of this module …\nDescribes the weights of the dispatchables of this module …\nUsed to answer contracts’ queries regarding the current …\nUsed to answer contracts’ queries regarding the current …\nFailed to decode the XCM program.\nA type that exposes XCM APIs, allowing contracts to …\nA type that exposes XCM APIs, allowing contracts to …\nA generalized version of <code>Self::call</code>.\nA version of <code>Self::eth_transact</code> used to dry-run Ethereum …\nA generalized version of <code>Self::instantiate</code> or …\nA generalized version of <code>Self::upload_code</code>.\nMakes a call to an account, optionally transferring some …\nMakes a call to an account, optionally transferring some …\nContainer for different types that implement <code>DefaultConfig</code>`…\nDispatch an <code>call</code> with the origin set to the callers …\nDispatch an <code>call</code> with the origin set to the callers …\nAuto-generated docs-only module listing all defined …\nA raw EVM transaction, typically dispatched by an Ethereum …\nA raw EVM transaction, typically dispatched by an Ethereum …\nGet the balance with EVM decimals of the given <code>address</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nQuery storage of a specified contract under a specified …\nInstantiates a contract from a previously deployed wasm …\nInstantiates a contract from a previously deployed wasm …\nInstantiates a new contract from the supplied <code>code</code> …\nInstantiates a new contract from the supplied <code>code</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister the callers account id so that it can be used in …\nRegister the callers account id so that it can be used in …\nCreate a call with the variant <code>call</code>.\nCreate a call with the variant <code>dispatch_as_fallback_account</code>…\nCreate a call with the variant <code>eth_transact</code>.\nCreate a call with the variant <code>instantiate</code>.\nCreate a call with the variant <code>instantiate_with_code</code>.\nCreate a call with the variant <code>map_account</code>.\nCreate a call with the variant <code>remove_code</code>.\nCreate a call with the variant <code>set_code</code>.\nCreate a call with the variant <code>unmap_account</code>.\nCreate a call with the variant <code>upload_code</code>.\nRemove the code stored under <code>code_hash</code> and refund the …\nRemove the code stored under <code>code_hash</code> and refund the …\nPrivileged function that changes the code of an existing …\nPrivileged function that changes the code of an existing …\nAuto-generated docs-only module listing all (public and …\nUnregister the callers account id in order to free the …\nUnregister the callers account id in order to free the …\nUpload new <code>code</code> without instantiating a contract from it.\nUpload new <code>code</code> without instantiating a contract from it.\nThe account that received the contracts remaining balance\nThe caller of the <code>contract</code>.\nThe code hash that was delegate called.\nThe contract that was terminated.\nThe contract that emitted the event.\nThe contract that has been updated.\nThe contract that was called.\nThe contract that performed the delegate call and hence in …\nData supplied by the contract. Metadata generated during …\nNew code hash that was set for the contract.\nPrevious code hash of the contract.\nA list of topics used to index the event. Number of topics …\nA type providing default configurations for this pallet in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMakes a call to an account, optionally transferring some …\nDispatch an <code>call</code> with the origin set to the callers …\nA raw EVM transaction, typically dispatched by an Ethereum …\nInstantiates a contract from a previously deployed wasm …\nInstantiates a new contract from the supplied <code>code</code> …\nRegister the callers account id so that it can be used in …\nRemove the code stored under <code>code_hash</code> and refund the …\nPrivileged function that changes the code of an existing …\nUnregister the callers account id in order to free the …\nUpload new <code>code</code> without instantiating a contract from it.\nMap a Ethereum address to its original <code>AccountId32</code>.\nA mapping from a contract’s code hash to its code info.\nThe code associated with a given account.\nEvicted contracts that await child trie deletion.\nA pair of monotonic counters used to track the latest …\nThe immutable data associated with a given account.\nA mapping from a contract’s code hash to its code.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn opaque 32-byte cryptographic identifier.\nEve is a non ee account and hence needs a stateful mapping.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate a new instance from its raw inner byte value.\nA builder to construct a bare_call call\nA builder to construct a bare_instantiate call\nA builder to construct a call call\nA builder to construct a instantiate call\nA builder to construct a instantiate_with_code call\nCreate a <code>BareCallBuilder</code> with default values.\nCreate a <code>BareInstantiateBuilder</code> with default values.\nBuild the instantiate_with_code call\nBuild the instantiate call\nBuild the bare_instantiate call\nBuild the call call\nBuild the bare_call call\nBuild the instantiate call and unwrap the account id.\nBuild the instantiate call and unwrap the result.\nBuild the call and unwrap the result.\nCreate a <code>CallBuilder</code> with default values.\nSet the code\nSet the code\nSet the code_hash\nSet the collect_events\nSet the collect_events\nSet the data\nSet the data\nSet the data\nSet the data\nSet the data\nSet the debug\nSet the debug\nSet the dest\nSet the dest\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSet the gas_limit\nSet the gas_limit\nSet the gas_limit\nSet the gas_limit\nSet the gas_limit\nCreate an <code>InstantiateBuilder</code> with default values.\nCreate an <code>InstantiateWithCodeBuilder</code> with default values.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the origin\nSet the origin\nSet the origin\nSet the origin\nSet the origin\nSet the salt\nSet the salt\nSet the salt\nSet the storage_deposit_limit\nSet the storage_deposit_limit\nSet the storage_deposit_limit\nSet the storage_deposit_limit\nSet the storage_deposit_limit\nSet the value\nSet the value\nSet the value\nSet the value\nSet the value\nWeights for <code>pallet_revive</code> using the Substrate node and …\nWeight functions needed for <code>pallet_revive</code>.\nStorage: <code>Revive::AddressSuffix</code> (r:2 w:0) Proof: …\nStorage: <code>Revive::AddressSuffix</code> (r:2 w:0) Proof: …\nStorage: <code>SafeMode::EnteredUntil</code> (r:1 w:0) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Revive::CodeInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Revive::CodeInfoOf</code> (r:1 w:1) Proof: …\nThe range of component <code>r</code> is <code>[0, 5000]</code>.\nCalls <code>U::from(self)</code>.\nStorage: <code>Revive::CodeInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Revive::AddressSuffix</code> (r:1 w:1) Proof: …\nThe range of component <code>r</code> is <code>[0, 1600]</code>.\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Revive::DeletionQueueCounter</code> (r:1 w:0) Proof: …\nStorage: <code>Revive::CodeInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Revive::AddressSuffix</code> (r:1 w:0) Proof: …\nStorage: <code>System::BlockHash</code> (r:1 w:0) Proof: …\nStorage: <code>Revive::AddressSuffix</code> (r:1 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 262144]</code>.\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 448]</code>.\nStorage: <code>Revive::ContractInfoOf</code> (r:1 w:0) Proof: …\nStorage: <code>Revive::ContractInfoOf</code> (r:1 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 448]</code>.\nThe range of component <code>n</code> is <code>[0, 262140]</code>.\nThe range of component <code>i</code> is <code>[0, 262144]</code>.\nStorage: <code>Revive::ContractInfoOf</code> (r:1 w:0) Proof: …\nThe range of component <code>t</code> is <code>[0, 4]</code>. The range of component …\nStorage: <code>Revive::ImmutableDataOf</code> (r:1 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 448]</code>.\nThe range of component <code>n</code> is <code>[0, 262144]</code>.\nThe range of component <code>n</code> is <code>[0, 262144]</code>.\nThe range of component <code>n</code> is <code>[0, 262144]</code>.\nThe range of component <code>n</code> is <code>[0, 262144]</code>.\nStorage: <code>Revive::CodeInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Revive::ContractInfoOf</code> (r:1 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 262140]</code>.\nStorage: <code>Revive::CodeInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Revive::ImmutableDataOf</code> (r:0 w:1) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 448]</code>. The range of …\nThe range of component <code>n</code> is <code>[0, 261889]</code>.\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 448]</code>.\nStorage: <code>Revive::AddressSuffix</code> (r:1 w:0) Proof: …\nStorage: <code>Revive::ContractInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Revive::CodeInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Balances::Holds</code> (r:1 w:1) Proof: <code>Balances::Holds</code> (…\nStorage: <code>Revive::CodeInfoOf</code> (r:1 w:1) Proof: …")