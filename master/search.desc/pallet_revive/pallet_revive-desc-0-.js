searchState.loadedDescShard("pallet_revive", 0, "Revive Pallet\nThe mapper to be used if the account id is <code>AccountId32</code>.\nMap between the native chain account id <code>T</code> and an Ethereum …\nSpecifies a maximum allowable balance for a deposit.\nBlock weight limits &amp; base values configuration.\nThe transaction increased storage consumption.\nReference to an existing code hash or a new vm module.\nResult type of a <code>bare_code_upload</code> call.\nThe result of successfully uploading a contract.\nThe possible errors that can happen querying the storage …\nResult type of a <code>bare_call</code> or <code>bare_instantiate</code> call as …\nPrecision used for converting between Native and EVM …\nA bundle of static information collected from the …\nThe given address doesn’t point to a contract.\nContains the error value\nContains the error value\nError type of a <code>eth_transact</code> call.\nThe result of the execution of a <code>eth_transact</code> call.\nExact conversion without any rounding.\nOutput of a contract call or instantiation which ran to …\nThe code hash of an on-chain vm binary blob.\nResult type of a <code>get_storage</code> call.\nFixed-size uninterpreted hash type with 20 bytes (160 …\nFixed-size uninterpreted hash type with 32 bytes (256 …\nThe result of a successful contract instantiation.\nStorage key cannot be decoded from the provided input data.\nThe maximal weight in all dimensions.\nMaximum value.\nContains the success value\nContains the success value\nThe type of origins supported by the contracts pallet.\nThe transaction reduced storage consumption.\nThe API used to dry-run contract interactions.\nConversion that rounds up to the nearest whole number.\nThe amount of balance that was either charged or refunded …\nDocumentation of the syscalls (host functions) available …\nAn account mapper that can be used for testing u64 account …\nLittle-endian large integer type 256-bit unsigned integer.\nAllows bypassing all balance transfer checks.\nA vm module as raw bytes.\nComputes the absolute difference between self and other.\nReturns the AccountId of a Signed Origin or an error if …\nConstant version of Add for <code>proof_size</code> component with u64.\nConstant version of Add for <code>ref_time</code> component with u64.\nThe address of the new contract.\nStores the address of the current contract into the …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nExtracts a byte slice containing the entire fixed hash.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nReturns a mutable raw pointer to the value.\nReturns a mutable raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturns a constant raw pointer to the value.\nConversion to u128 with overflow checking\nConversion to u32 with overflow checking\nConversion to u64 with overflow checking\nConversion to usize with overflow checking\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nIf the amount of deposit (this type) is constrained by a …\nStores the <em>free</em> balance of the current account into the …\nReturns the free balance of the given <code>[H160]</code> address, …\nStores the <em>free</em> balance of the supplied address into the …\nBase weight of block execution.\nReturns the simulated ethereum <code>BASEFEE</code> value. See …\nReturn if specific bit is set.\nReturn the least number of bits needed to represent the …\nStores the current block author into the supplied buffer. …\nThe address of the validator that produced the current …\nReturns the block gas limit.\nStores the block hash at given block height into the …\nStores the current block number of the current contract …\nStart constructing new <code>BlockWeights</code> object.\nReturn specific byte. Byte 0 is the least significant …\nMake a call to another contract. See …\nPerform a call from a specified account to a given …\nStores the input passed by the caller into the supplied …\nStores the U256 value at given call input <code>offset</code> into the …\nReturns the total size of the contract call input data. …\nWeight of this transaction’s call.\nStores the address of the caller into the supplied buffer. …\nChecks whether the caller of the current contract is the …\nChecks whether the caller of the current contract is root. …\nReturns the chain ID. See …\nReturns how much balance is charged or <code>0</code> in case of a …\nTry to increase <code>self</code> by <code>amount</code> via checked addition.\nChecked <code>Weight</code> addition. Computes <code>self + rhs</code>, returning …\nChecked addition. Returns <code>None</code> if overflow occurred.\nChecked <code>Weight</code> scalar division. Computes …\nChecked division. Returns <code>None</code> if <code>other == 0</code>.\nCalculates how many <code>other</code> fit into <code>self</code>.\nChecked <code>Weight</code> scalar multiplication. Computes …\nChecked multiplication. Returns <code>None</code> if overflow occurred.\nChecked negation. Returns <code>None</code> unless <code>self == 0</code>.\nChecked exponentiation. Returns <code>None</code> if overflow occurred.\nTry to reduce <code>self</code> by <code>amount</code> via checked subtraction.\nChecked modulus. Returns <code>None</code> if <code>other == 0</code>.\nChecked <code>Weight</code> subtraction. Computes <code>self - rhs</code>, returning …\nChecked subtraction. Returns <code>None</code> if overflow occurred.\nClass of this transaction.\nClear the value at the given key in the contract storage. …\nRetrieve the code hash for a specified contract address. …\nThe key under which the new code is stored.\nRetrieve the code size for a given contract address. See …\nChecks whether there is a value stored under the given key.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nDetermine the address of a contract using CREATE semantics.\nDetermine the address of a contract using the CREATE2 …\nThe execution return value.\nBuffer passed along by <code>seal_return</code>. Empty when <code>seal_return</code> …\nExecute code in the context (storage, caller, value) of …\nThe deposit that was reserved at the caller. Is zero when …\nDeposit a contract event with the data buffer and optional …\nThe contract did revert all storage changes.\nConstant version of Div with u64.\nReturns a pair <code>(self / other, self % other)</code>.\nCalculates Ethereum address from the ECDSA compressed …\nSCALE encode this type to bytes, possibly with the help of …\nSCALE encode this type to bytes, possibly with the help of …\nThe weight and deposit equivalent in EVM Gas.\nPerform an Ethereum call.\nTypes, and traits to integrate pallet-revive with EVM.\nCreate <code>10**n</code> as this type.\nWeight of this transaction’s extension.\nFlags passed along by <code>seal_return</code>. Empty when <code>seal_return</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a hash type from the given bytes array of fixed …\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given bytes array of fixed …\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new Signed Caller from an AccountId.\nConstruct <code>Weight</code> from the same weight for all parts.\nConverts from big endian representation bytes in memory.\nConvert from a decimal string.\nConverts from little endian representation bytes in memory.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nConstruct <code>Weight</code> from weight parts, namely reference time …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreates a new Origin from a <code>RuntimeOrigin</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreates a hash type instance from the given string.\nCreates a hash type instance from the given string.\nConverts a string slice in a given base to an integer. …\nMultiplies two 256-bit integers to produce full 512-bit …\nHow much weight was consumed during execution.\nReturns the block ref_time limit. See …\nReturns the simulated ethereum <code>GASPRICE</code> value. See …\nReturns the gas price.\nHow much weight is required as gas limit in order to …\nThe amount of gas that was necessary to execute the …\nGet per-class weight settings.\nStores the immutable data into the supplied buffer. See …\nRetrieve the value under the given key from storage. See …\nQuery a given storage key in a given contract.\nReads the storage at a fixed 256-bit key and writes back a …\nQuery a given variable-sized storage key in a given …\nComputes the BLAKE2 128-bit hash on the given input buffer.\nComputes the BLAKE2 256-bit hash on the given input buffer.\nComputes the KECCAK 256-bit hash on the given input buffer.\nThis macro wraps substrate’s <code>impl_runtime_apis!</code> and …\nInstantiate a contract with the specified code hash. See …\nInstantiate a new contract.\nCompute the highest <code>n</code> such that <code>n * n &lt;= self</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks whether a specified address belongs to a contract. …\nReturns true if the passed account id is controlled by an …\nReturns true if the <code>account_id</code> is usable as an origin.\nWhether this is zero.\nReturns <code>true</code> if no bits are set.\nReturns <code>true</code> if no bits are set.\nReturns the number of leading zeros in the binary …\nReturns the size of this hash in bytes.\nReturns the size of this hash in bytes.\nLow 2 words (u128)\nConversion to u32\nLow word (u64)\nCreate a stateful mapping for <code>account_id</code>\nGet the aggressive max of <code>self</code> and <code>other</code> weight.\nMaximal total weight consumed by all kinds of extrinsics …\nThe maximum value which can be inhabited by this type.\nGet the conservative min of <code>self</code> and <code>other</code> weight.\nStores the minimum balance (a.k.a. existential deposit) …\nConstant version of Mul with u64.\nReturns the nonce of the given <code>[H160]</code> address.\nNoop function used to benchmark the time it takes to …\nLoad the latest block timestamp into the supplied buffer …\nOne (multiplicative identity) of this type.\nStores the address of the call stack origin into the …\nAddition which overflows and returns a flag if it does.\nMultiply with overflow, returning a flag if it does.\nNegation with overflow.\nFast exponentiation by squaring. Returns result and …\nSubtraction which underflows and returns a flag if it does.\nRetrieve the code hash of the currently executing contract.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nDoes this transaction pay fees.\nWeight limits for extrinsics of given dispatch class.\nFast exponentiation by squaring …\nExposes types that can be used to extend <code>pallet_revive</code> …\nReturn the storage size part of the weight.\nReturn a mutable reference to the storage size part of the …\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content …\nCreate a new hash with cryptographically random content …\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value using the …\nAssign <code>self</code> to a cryptographically random value using the …\nReturn the reference time part of the weight.\nReturns the amount of ref_time left. See …\nReturn a mutable reference to the reference time part of …\nReturns a new fixed hash where all bits are set to the …\nReturns a new fixed hash where all bits are set to the …\nThe execution result of the vm binary code.\nThe output of the called constructor.\nStores data returned by the last call, starting from <code>offset</code>…\nStores the length of the data returned by the last call …\nIncrement <code>Weight</code> by <code>amount</code> via saturating addition.\nSaturating <code>Weight</code> addition. Computes <code>self + rhs</code>, …\nAddition which saturates at the maximum value (Self::MAX).\nThis is essentially a saturating signed add.\nSaturating <code>Weight</code> scalar division. Computes …\nSaturating <code>Weight</code> scalar multiplication. Computes …\nMultiplication which saturates at the maximum value..\nSaturating <code>Weight</code> scalar exponentiation. Computes …\nReduce <code>Weight</code> by <code>amount</code> via saturating subtraction.\nSaturating <code>Weight</code> subtraction. Computes <code>self - rhs</code>, …\nSubtraction which saturates at zero.\nThis is essentially a saturating signed sub.\nCease contract execution and save a data buffer as a …\nReplace the contract code at the specified address with …\nAttaches the supplied immutable data to the currently …\nSet the storage size part of the weight.\nSet the reference time part of the weight.\nSet the value at the given key in the contract storage. …\nSets the storage at a fixed 256-bit key with a fixed …\nCreate new weights definition, with both <code>Normal</code> and …\nVerify a sr25519 signature See …\nHow much balance was paid by the origin into the contract…\nStorage deposit charged.\nConstant version of Sub for <code>proof_size</code> component with u64.\nConstant version of Sub for <code>ref_time</code> component with u64.\nRetrieve and remove the value under the given key from …\nRemove the calling account and transfer remaining <strong>free</strong> …\nShared utilities for testing contracts. This is not part …\nConvert an ethereum address to a native account id.\nRetrieves the account id for a specified contract address.\nConvert an account id to an ethereum address.\nConvert to big-endian bytes.\nSame as <code>Self::to_account_id</code> but always returns the …\nReturns the inner bytes array.\nReturns the inner bytes array.\nConvert to little-endian bytes.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the weight used by this extrinsic’s extension …\nTraces the execution of an entire block and returns call …\nDry run and return the trace of the given call.\nTraces the execution of a specific transaction within a …\nReturns the number of trailing zeros in the binary …\nTry to add some <code>other</code> weight while upholding the <code>limit</code>.\nRemove the mapping in order to reclaim the deposit.\nUpload new code without instantiating a contract from it.\nVerifies correctness of this <code>BlockWeights</code> object.\nStores the value transferred along with this …\nStores the amount of weight left into the supplied buffer. …\nStores the price for the specified amount of weight into …\nAutogenerated weights for <code>pallet_revive</code>\nCreate a sensible default weights system given only …\nWrite to the slice in big-endian format.\nReturn a <code>Weight</code> where all fields are zero.\nZero (additive identity) of this type.\nReturns a new zero-initialized fixed hash.\nReturns a new zero-initialized fixed hash.\nAccess list\nAccess list entry\nA simple account that can sign transactions\nAddress\nAddress(es)\nhex encoded address\nAddresses\nBlock object\nBlock hash\nBlock number\nBlock number or tag\nBlock number, tag, or block hash\nBlock tag <code>earliest</code>: The lowest numbered block the client …\nBlock tag\nBlock tag\nBloom hash type with 256 bytes (2048 bits) size.\nNot syncing Should always return false if not syncing.\n<code>u8</code> wrapper type for encoding and decoding hex strings\n<code>Vec&lt;u8&gt;</code> wrapper type for encoding and decoding hex strings\n<code>[u8; 256]</code> wrapper type for encoding and decoding hex …\n<code>[u8; 8]</code> wrapper type for encoding and decoding hex strings\nA regular call.\nA call trace.\nA log emitted during a call.\nA smart contract execution call trace.\nA Tracer that reports logs and nested call traces …\nA tracer that traces calls.\nA tracer that traces calls.\nThe configuration for the call tracer.\nThe type of call that was executed.\nA delegate call.\nThe diff mode returns the differences between the …\nfilter\nFilter results\nFilter Topic List Entry\nFilter Topics\nConversion from decimal string error\nThe error type for parsing numbers from strings.\nA list of error categories encountered when parsing …\nEncodes/Decodes EVM gas values.\nTransaction object generic to all types\nFixed-size uninterpreted hash type with 16 bytes (128 …\nFixed-size uninterpreted hash type with 20 bytes (160 …\nFixed-size uninterpreted hash type with 32 bytes (256 …\nFixed-size uninterpreted hash type with 64 bytes (512 …\nnew block or transaction hashes\nTransaction hashes\nInput of a <code>GenericTransaction</code>\nA character in the input string is not valid for the given …\nChar not from range 0-9\nThe input length is not valid for the given radix.\nValue does not fit into type\nlog\nnew logs\nMaximum value.\nMaximum value.\nMaximum value.\nMultiple Topic Match\nA prestate trace.\nThe Prestate mode returns the accounts necessary to …\nA prestate Trace\nThe info of a prestate trace.\nA tracer that traces the prestate.\nA tracer that traces the prestate.\nA tracer that traces the prestate.\nThe configuration for the prestate tracer.\nReceipt information\nSingle Topic Match\nA read-only call.\nSyncing progress\nSyncing progress\nSyncing status\nTransaction value for type identifier: 2\nTransaction value for type identifier: 1\nTransaction value for type identifier: 3\nTransaction value for type identifier: 0\nA Trace\nA composite tracer.\nTracer configuration used to trace calls.\nThe type of tracer to use. Only “callTracer” is …\nSigned 1559 Transaction\nEIP-1559 transaction.\nSigned 2930 Transaction\nEIP-2930 transaction.\nSigned 4844 Transaction\nEIP-4844 transaction.\nTransaction information\nFull transactions\nSigned Legacy Transaction\nLegacy transaction.\nA transaction trace\nTransaction type identifier: 2\nTransaction type identifier: 1\nTransaction type identifier: 3\nTransaction type identifier: 0\nLittle-endian large integer type 128-bit unsigned integer.\nLittle-endian large integer type 256-bit unsigned integer.\nBlock number\nLittle-endian large integer type 512-bits unsigned integer.\nLittle-endian large integer type Unsigned 64-bit integer.\nThe given radix is not supported.\nValidator withdrawal\nComputes the absolute difference between self and other.\nComputes the absolute difference between self and other.\nComputes the absolute difference between self and other.\naccessList EIP-2930 access list\naccessList EIP-2930 access list\naccessList EIP-2930 access list\naccessList EIP-2930 access list\nGet the <code>H160</code> address of the account.\nThe address of the contract that emitted the log.\nAddress(es)\naddress\nrecipient address for withdrawal value\nvalue contained in withdrawal\nConvert to Byte\nConvert to Byte\nConvert to Byte\nConvert to Byte\nExtracts a byte slice containing the entire fixed hash.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a mutable byte slice containing the entire fixed …\nReturns the encoded values of the specified weight and …\nReturns the encoded values of the specified weight and …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nReturns a mutable raw pointer to the value.\nReturns a mutable raw pointer to the value.\nReturns a mutable raw pointer to the value.\nReturns a mutable raw pointer to the value.\nReturns a mutable raw pointer to the value.\nReturns a mutable raw pointer to the value.\nReturns a mutable raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturns a constant raw pointer to the value.\nGet a mutable trait‐object reference to the inner tracer.\nConversion to u128 with overflow checking\nConversion to u128 with overflow checking\nConversion to u32 with overflow checking\nConversion to u32 with overflow checking\nConversion to u32 with overflow checking\nConversion to u64 with overflow checking\nConversion to u64 with overflow checking\nConversion to u64 with overflow checking\nConversion to usize with overflow checking\nConversion to usize with overflow checking\nConversion to usize with overflow checking\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nThe balance of the account.\nBase fee per gas\nAn array of block base fees per gas.\nReturn if specific bit is set.\nReturn if specific bit is set.\nReturn if specific bit is set.\nReturn the least number of bits needed to represent the …\nReturn the least number of bits needed to represent the …\nReturn the least number of bits needed to represent the …\nblob gas price The actual value per gas deducted from the …\nBlob gas used\nblob gas used The amount of blob gas used for this …\nblobVersionedHashes List of versioned blob hashes …\nblobVersionedHashes List of versioned blob hashes …\nblobs Raw blob data.\nRestricts the logs returned to the single block\nblock hash\nblock hash\nblock hash\nblock number\nblock number\nblock number\nReturn specific byte. Byte 0 is the least significant …\nReturn specific byte. Byte 0 is the least significant …\nReturn specific byte. Byte 0 is the least significant …\nType of call.\nList of sub-calls.\nchainId Chain ID that this transaction is valid on.\nchainId Chain ID that this transaction is valid on.\nchainId Chain ID that this transaction is valid on.\nchainId Chain ID that this transaction is valid on.\nchainId Chain ID that this transaction is valid on.\nChecked addition. Returns <code>None</code> if overflow occurred.\nChecked addition. Returns <code>None</code> if overflow occurred.\nChecked addition. Returns <code>None</code> if overflow occurred.\nChecked division. Returns <code>None</code> if <code>other == 0</code>.\nChecked division. Returns <code>None</code> if <code>other == 0</code>.\nChecked division. Returns <code>None</code> if <code>other == 0</code>.\nChecked multiplication. Returns <code>None</code> if overflow occurred.\nChecked multiplication. Returns <code>None</code> if overflow occurred.\nChecked multiplication. Returns <code>None</code> if overflow occurred.\nChecked negation. Returns <code>None</code> unless <code>self == 0</code>.\nChecked negation. Returns <code>None</code> unless <code>self == 0</code>.\nChecked negation. Returns <code>None</code> unless <code>self == 0</code>.\nChecked exponentiation. Returns <code>None</code> if overflow occurred.\nChecked exponentiation. Returns <code>None</code> if overflow occurred.\nChecked exponentiation. Returns <code>None</code> if overflow occurred.\nChecked modulus. Returns <code>None</code> if <code>other == 0</code>.\nChecked modulus. Returns <code>None</code> if <code>other == 0</code>.\nChecked modulus. Returns <code>None</code> if <code>other == 0</code>.\nChecked subtraction. Returns <code>None</code> if overflow occurred.\nChecked subtraction. Returns <code>None</code> if overflow occurred.\nChecked subtraction. Returns <code>None</code> if overflow occurred.\nThe code of the contract account.\nCollect the traces and return them.\nCollect the traces and return them.\nCollect the traces and return them.\nThe tracer type.\ncontract address The contract address created, if the …\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\ncumulative gas used The sum of gas used by this …\nCurrent block\nThe log’s data.\ndata\nDecodes the weight and deposit from the encoded gas value. …\nDecode the Ethereum transaction from bytes.\nDecodes and retrieves the reason for a revert from the …\nWhether to include the diff mode in the trace.\nDifficulty\nWhether to include code in the trace.\nWhether to include storage in the trace.\nReturns a pair <code>(self / other, self % other)</code>.\nReturns a pair <code>(self / other, self % other)</code>.\nReturns a pair <code>(self / other, self % other)</code>.\nGet a signed transaction payload with a dummy 65 bytes …\neffective gas price The actual value per gas deducted from …\nReturns an empty trace.\nReturns an empty trace.\nEncodes all components (deposit limit, weight reference …\nSCALE encode this type to bytes, possibly with the help of …\nSCALE encode this type to bytes, possibly with the help of …\nThe error message if the call failed.\nExcess blob gas\nCreate <code>10**n</code> as this type.\nCreate <code>10**n</code> as this type.\nCreate <code>10**n</code> as this type.\nExtra data\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given bytes array of fixed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a hash type from the given bytes array of fixed …\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a hash type from the given bytes array of fixed …\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nConstructs a hash type from the given bytes array of fixed …\nReturns the argument unchanged.\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nConstructs a hash type from the given bytes array of fixed …\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given bytes array of fixed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a hash type from the given bytes array of fixed …\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAddress of the sender.\nfrom address\nfrom\nfrom address\nConverts from big endian representation bytes in memory.\nConverts from big endian representation bytes in memory.\nConverts from big endian representation bytes in memory.\nfrom block\nConvert from a decimal string.\nConvert from a decimal string.\nConvert from a decimal string.\nConverts from little endian representation bytes in memory.\nConverts from little endian representation bytes in memory.\nConverts from little endian representation bytes in memory.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new account from a secret\nCreate a new <code>GenericTransaction</code> from a signed transaction.\nExtract the unsigned transaction from a signed transaction.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreates a hash type instance from the given string.\nCreates a hash type instance from the given string.\nCreates a hash type instance from the given string.\nCreates a hash type instance from the given string.\nCreates a hash type instance from the given string.\nCreates a hash type instance from the given string.\nCreates a hash type instance from the given string.\nConverts a string slice in a given base to an integer. …\nConverts a string slice in a given base to an integer. …\nConverts a string slice in a given base to an integer. …\nCreate a new <code>GenericTransaction</code> from a unsigned …\nMultiplies two 128-bit integers to produce full 256-bit …\nAmount of gas provided for the call.\ngas limit\ngas limit\ngas limit\ngas limit\ngas limit\nGas limit\ngas price The gas price willing to be paid by the sender …\ngas price The effective gas price paid by the sender in …\ngas price The gas price willing to be paid by the sender …\ngas price The gas price willing to be paid by the sender …\nAmount of gas used.\nGas used\ngas used The amount of gas used for this specific …\nAn array of block gas used ratios. These are calculated as …\nHash\ntransaction hash\nHighest block\nConditional compilation depending on whether …\nindex of withdrawal\nCall input data.\ninput data\ninput data\ninput data\ninput data\ninput data\nCompute the highest <code>n</code> such that <code>n * n &lt;= self</code>.\nCompute the highest <code>n</code> such that <code>n * n &lt;= self</code>.\nCompute the highest <code>n</code> such that <code>n * n &lt;= self</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee <code>Vec::is_empty</code>\nReturns <code>true</code> if the transaction was successful.\nReturns <code>true</code> if no bits are set.\nReturns <code>true</code> if no bits are set.\nReturns <code>true</code> if no bits are set.\nWhether this is zero.\nReturns <code>true</code> if no bits are set.\nReturns <code>true</code> if no bits are set.\nWhether this is zero.\nWhether this is zero.\nReturns <code>true</code> if no bits are set.\nReturns <code>true</code> if no bits are set.\nReturns the corresponding <code>FromStrRadixErrKind</code> for this …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the size of this hash in bytes.\nReturns the size of this hash in bytes.\nReturns the size of this hash in bytes.\nReturns the size of this hash in bytes.\nReturns the size of this hash in bytes.\nReturns the size of this hash in bytes.\nReturns the size of this hash in bytes.\nlog index\nList of logs emitted during the call.\nlogs\nBloom filter\nlogs bloom\nLow 2 words (u128)\nLow 2 words (u128)\nConversion to u32\nConversion to u32\nConversion to u32\nLow word (u64)\nLow word (u64)\nLow word (u64)\nmax fee per blob gas The maximum total fee per gas the …\nmax fee per blob gas The maximum total fee per gas the …\nmax fee per gas The maximum total fee per gas the sender …\nmax fee per gas The maximum total fee per gas the sender …\nmax fee per gas The maximum total fee per gas the sender …\nmax priority fee per gas Maximum fee per gas the sender is …\nmax priority fee per gas Maximum fee per gas the sender is …\nmax priority fee per gas Maximum fee per gas the sender is …\nThe maximum value which can be inhabited by this type.\nThe maximum value which can be inhabited by this type.\nThe maximum value which can be inhabited by this type.\nCoinbase\nMix hash\nInitialize a new Receipt\nCreate a new <code>TransactionInfo</code> from a receipt and a signed …\nCreate a new <code>CallTracer</code> instance.\nCreate a new <code>PrestateTracer</code> instance.\nThe nonce of the account.\nNonce\nnonce\nnonce\nnonce\nnonce\nnonce\nNumber\nLowest number block of the returned range.\nOne (multiplicative identity) of this type.\nOne (multiplicative identity) of this type.\nOne (multiplicative identity) of this type.\nWhether to only include the top-level calls in the trace.\nReturn data.\nAddition which overflows and returns a flag if it does.\nAddition which overflows and returns a flag if it does.\nAddition which overflows and returns a flag if it does.\nMultiply with overflow, returning a flag if it does.\nMultiply with overflow, returning a flag if it does.\nMultiply with overflow, returning a flag if it does.\nNegation with overflow.\nNegation with overflow.\nNegation with overflow.\nFast exponentiation by squaring. Returns result and …\nFast exponentiation by squaring. Returns result and …\nFast exponentiation by squaring. Returns result and …\nSubtraction which underflows and returns a flag if it does.\nSubtraction which underflows and returns a flag if it does.\nSubtraction which underflows and returns a flag if it does.\nParent Beacon Block Root\nParent block hash\nPosition of the log relative to subcalls within the same …\nFast exponentiation by squaring …\nFast exponentiation by squaring …\nFast exponentiation by squaring …\nr\nr\nr\nr\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content …\nCreate a new hash with cryptographically random content …\nCreate a new hash with cryptographically random content …\nCreate a new hash with cryptographically random content …\nCreate a new hash with cryptographically random content …\nCreate a new hash with cryptographically random content …\nCreate a new hash with cryptographically random content …\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value using the …\nAssign <code>self</code> to a cryptographically random value using the …\nAssign <code>self</code> to a cryptographically random value using the …\nAssign <code>self</code> to a cryptographically random value using the …\nAssign <code>self</code> to a cryptographically random value using the …\nAssign <code>self</code> to a cryptographically random value using the …\nAssign <code>self</code> to a cryptographically random value using the …\nGet the raw 65 bytes signature from the signed transaction.\nReceipts root\nRecover the Ethereum address, from a signed transaction.\nremoved\nReturns a new fixed hash where all bits are set to the …\nReturns a new fixed hash where all bits are set to the …\nReturns a new fixed hash where all bits are set to the …\nReturns a new fixed hash where all bits are set to the …\nReturns a new fixed hash where all bits are set to the …\nReturns a new fixed hash where all bits are set to the …\nReturns a new fixed hash where all bits are set to the …\nThe revert reason, if the call reverted.\nA two-dimensional array of effective priority fees per gas …\nstate root The post-transaction state root. Only specified …\nRuntime types for integrating <code>pallet-revive</code> with the EVM.\ns\ns\ns\ns\nAddition which saturates at the maximum value (Self::MAX).\nAddition which saturates at the maximum value (Self::MAX).\nAddition which saturates at the maximum value (Self::MAX).\nMultiplication which saturates at the maximum value..\nMultiplication which saturates at the maximum value..\nMultiplication which saturates at the maximum value..\nSubtraction which saturates at zero.\nSubtraction which saturates at zero.\nSubtraction which saturates at zero.\nSerializes a map of <code>K -&gt; Option&lt;V&gt;</code>, omitting any entries …\nOmmers hash\nSign a transaction.\nEncode the Ethereum transaction into bytes.\nBlock size\nStarting block\nReturns the pre and post trace info.\nState root\nstatus Either 1 (success) or 0 (failure). Only specified …\nThe storage of the contract account.\nGet the substrate <code>AccountId32</code> of the account.\nTimeout for the tracer.\nTimestamp\nAddress of the receiver.\nto address\nto Address of the receiver or null in a contract creation …\nto address\nto address\nto address\nto address\nConvert to big-endian bytes.\nConvert to big-endian bytes.\nConvert to big-endian bytes.\nto block\nGet the input as <code>Bytes</code>.\nReturns the inner bytes array.\nReturns the inner bytes array.\nReturns the inner bytes array.\nReturns the inner bytes array.\nReturns the inner bytes array.\nReturns the inner bytes array.\nReturns the inner bytes array.\nConvert to little-endian bytes.\nConvert to little-endian bytes.\nConvert to little-endian bytes.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nGet the input as <code>Vec&lt;u8&gt;</code>.\nThe topics used to index the log.\nTopics\ntopics\nTotal difficulty\nThe trace of the transaction.\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\ntransaction hash\ntransaction hash\ntransaction index\ntransaction index\ntransaction index\nTransactions root\nTry to convert from Byte\nTry to convert from Byte\nTry to convert from Byte\nTry to convert from Byte\nConvert to a <code>TransactionUnsigned</code>.\nThe transaction hash.\ntype\ntype\ntype\ntype\ntype\ntype\nUncles\nExtract the unsigned transaction from a signed transaction.\nReturn the bytes to be signed by the private key.\nv For backwards compatibility, <code>v</code> is optionally provided as …\nv For backwards compatibility, <code>v</code> is optionally provided as …\nv\nindex of validator that generated withdrawal\nConvert to u8\nConvert to u8\nConvert to u8\nConvert to u8\nAmount of value transferred.\nvalue\nvalue\nvalue\nvalue\nvalue\nWhether to include logs in the trace.\nCreate a signed transaction from an <code>TransactionUnsigned</code> …\nWithdrawals\nWithdrawals root\nWrite to the slice in big-endian format.\nWrite to the slice in big-endian format.\nWrite to the slice in big-endian format.\nyParity The parity (0 for even, 1 for odd) of the y-value …\nyParity The parity (0 for even, 1 for odd) of the y-value …\nyParity The parity (0 for even, 1 for odd) of the y-value …\nReturns a new zero-initialized fixed hash.\nReturns a new zero-initialized fixed hash.\nReturns a new zero-initialized fixed hash.\nZero (additive identity) of this type.\nReturns a new zero-initialized fixed hash.\nReturns a new zero-initialized fixed hash.\nZero (additive identity) of this type.\nZero (additive identity) of this type.\nReturns a new zero-initialized fixed hash.\nReturns a new zero-initialized fixed hash.\nThe state after the call. It only contains the specific …\nThe state before the call. The accounts in the <code>pre</code> field …\nThe Runtime configuration.\nEthExtra convert an unsigned <code>crate::Call::eth_transact</code> …\nThe Runtime’s transaction extension. It should include …\nWraps <code>generic::UncheckedExtrinsic</code> to support checking …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet the transaction extension to apply to an unsigned …\nCalls <code>U::from(self)</code>.\nConvert the unsigned <code>crate::Call::eth_transact</code> into a …\nTried to map an account that is already mapped.\nAn <code>AccountID32</code> account tried to interact with the pallet …\nUse either valid type is <code>address::AccountId32Mapper</code> or …\nDeposit for creating an address mapping in <code>OriginalAccount</code>.\nFailed to convert a U256 to a Balance.\nThe program contains a basic block that is larger than …\nThe code blob supplied is larger than …\nContains a variant per dispatchable extrinsic that this …\nCan not add a delegate dependency to the code hash of the …\nThe EIP-155 chain ID.\nThe EIP-155 chain ID.\nThe percentage of the storage deposit that should be held …\nThe percentage of the storage deposit that should be held …\nCode removal was denied because the code is still in use …\nNo code info could be found at the supplied code hash.\nNo code could be found at the supplied code hash.\nThe contract failed to compile or is missing the correct …\nThe Pallet has reserved it for storing code on-chain.\nConfiguration trait of this pallet.\nA custom event emitted by the contract.\nNo contract was found at the specified address.\nThe contract ran to completion but decided to revert its …\nContract trapped during execution.\nThe fungible in which fees are paid and contract balances …\nFailed to convert an EVM balance to a native balance.\nInput passed to a contract API function failed to decode …\nBased on <code>Config</code>. Auto-generated by …\nThe contract already depends on the given delegate …\nThe dependency was not found in the contract’s delegate …\nThe amount of balance a caller has to pay for each byte of …\nThe amount of balance a caller has to pay for each byte of …\nThe amount of balance a caller has to pay for each storage …\nThe amount of balance a caller has to pay for each storage …\nA contract with the same AccountId already exists.\nThe <code>Error</code> enum of this pallet.\nEncode and decode Ethereum gas values. Only valid value is …\nEncode and decode Ethereum gas values. Only valid value is …\nThe <code>Event</code> enum of this pallet\nPolkaVM failed during code execution. Probably due to a …\nFind the author of the current block.\nFind the author of the current block.\nCan be used to configure the genesis state of this pallet.\nA reason for the pallet contracts placing a hold on funds.\n<code>seal_call</code> forwarded this contracts input. It therefore is …\nOrigin allowed to instantiate code.\nOrigin allowed to instantiate code.\nInvalid combination of flags supplied to <code>seal_call</code> or …\nThe transaction used to dry-run a contract is invalid.\nImmutable data can only be set during deploys and only be …\nThe program contains an invalid instruction.\nInvalid schedule supplied, e.g. with zero weight of a …\nInvalid storage flags were passed to one of the storage …\nThe contract tried to call a syscall which does not exist …\nPerforming a call was denied because the calling depth …\nThe contract has reached its maximum number of delegate …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe ratio between the decimal representation of the native …\nThe ratio between the decimal representation of the native …\nA buffer outside of sandbox memory was passed to a …\nThe executed contract exhausted its gas limit.\nCan not add more data to transient storage.\nThe amount of memory in bytes that relay chain validators …\nThe amount of memory in bytes that relay chain validators …\nThe <code>Pallet</code> struct, the main type that implements traits …\nType that allows the runtime authors to add new host …\nType that allows the runtime authors to add new host …\nA contract called into the runtime which then called back …\nA call tried to invoke a contract that is flagged as …\nThe refcount of a code either over or underflowed.\nThe overarching call type.\nThe overarching call type.\nThe overarching event type.\nThe overarching event type.\nOverarching hold reason.\nOverarching hold reason.\nThe amount of memory in bytes that parachain nodes a lot …\nThe amount of memory in bytes that parachain nodes a lot …\nA contract attempted to invoke a state modifying API while …\nThe static memory consumption of the blob will be larger …\nMore storage was created than allowed by the storage …\nOrigin doesn’t have enough balance to pay the required …\nThe Pallet has reserved it for storage deposit.\nA contract self destructed in its constructor.\nTermination of a contract is not allowed while the …\nThe time implementation used to supply timestamps to …\nThe time implementation used to supply timestamps to …\nThe amount of topics passed to <code>seal_deposit_events</code> exceeds …\nPerforming the requested transfer failed. Probably because …\nMake contract callable functions marked as <code>#[unstable]</code> …\nMake contract callable functions marked as <code>#[unstable]</code> …\nUnsupported precompile address\nOrigin allowed to upload code.\nOrigin allowed to upload code.\nThe size defined in <code>T::MaxValueSize</code> was exceeded.\nDescribes the weights of the dispatchables of this module …\nDescribes the weights of the dispatchables of this module …\nUsed to answer contracts’ queries regarding the current …\nUsed to answer contracts’ queries regarding the current …\nA generalized version of <code>Self::call</code>.\nA generalized version of <code>Self::instantiate</code> or …\nA generalized version of <code>Self::upload_code</code>.\nThe address of the validator that produced the current …\nMakes a call to an account, optionally transferring some …\nMakes a call to an account, optionally transferring some …\nContainer for different types that implement <code>DefaultConfig</code>`…\nDispatch an <code>call</code> with the origin set to the callers …\nDispatch an <code>call</code> with the origin set to the callers …\nAuto-generated docs-only module listing all defined …\nDry-run Ethereum calls.\nA raw EVM transaction, typically dispatched by an Ethereum …\nA raw EVM transaction, typically dispatched by an Ethereum …\nGet the balance with EVM decimals of the given <code>address</code>.\nGet the block gas limit.\nConvert a substrate fee into a gas value, using the fixed …\nConvert a weight to a gas value.\nGet the gas price.\nGet the nonce for the given <code>address</code>.\nBuild an EVM tracer from the given tracer type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nQuery storage of a specified contract under a specified …\nQuery storage of a specified contract under a specified …\nInstantiates a contract from a previously deployed vm …\nInstantiates a contract from a previously deployed vm …\nInstantiates a new contract from the supplied <code>code</code> …\nInstantiates a new contract from the supplied <code>code</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister the callers account id so that it can be used in …\nRegister the callers account id so that it can be used in …\nGenesis mapped accounts\nCreate a call with the variant <code>call</code>.\nCreate a call with the variant <code>dispatch_as_fallback_account</code>…\nCreate a call with the variant <code>eth_transact</code>.\nCreate a call with the variant <code>instantiate</code>.\nCreate a call with the variant <code>instantiate_with_code</code>.\nCreate a call with the variant <code>map_account</code>.\nCreate a call with the variant <code>remove_code</code>.\nCreate a call with the variant <code>set_code</code>.\nCreate a call with the variant <code>unmap_account</code>.\nCreate a call with the variant <code>upload_code</code>.\nPrepare a dry run for the given account.\nRemove the code stored under <code>code_hash</code> and refund the …\nRemove the code stored under <code>code_hash</code> and refund the …\nPrivileged function that changes the code of an existing …\nPrivileged function that changes the code of an existing …\nAuto-generated docs-only module listing all (public and …\nUnregister the callers account id in order to free the …\nUnregister the callers account id in order to free the …\nUpload new <code>code</code> without instantiating a contract from it.\nUpload new <code>code</code> without instantiating a contract from it.\nThe contract that emitted the event.\nData supplied by the contract. Metadata generated during …\nA list of topics used to index the event. Number of topics …\nA type providing default configurations for this pallet in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMakes a call to an account, optionally transferring some …\nDispatch an <code>call</code> with the origin set to the callers …\nA raw EVM transaction, typically dispatched by an Ethereum …\nInstantiates a contract from a previously deployed vm …\nInstantiates a new contract from the supplied <code>code</code> …\nRegister the callers account id so that it can be used in …\nRemove the code stored under <code>code_hash</code> and refund the …\nPrivileged function that changes the code of an existing …\nUnregister the callers account id in order to free the …\nUpload new <code>code</code> without instantiating a contract from it.\nA mapping from a contract’s code hash to its code info.\nThe code associated with a given account.\nEvicted contracts that await child trie deletion.\nA pair of monotonic counters used to track the latest …\nThe immutable data associated with a given account.\nMap a Ethereum address to its original <code>AccountId32</code>.\nA mapping from a contract’s code hash to its code.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeight of calling <code>seal_address</code>.\nUsed by <code>Precompile</code> in order to declare at which addresses …\nWeight of calling <code>seal_balance</code>.\nWeight of calling <code>seal_balance_of</code>.\nWeight of calling <code>seal_base_fee</code>.\nWeight of calling <code>Blake2F</code> precompile for the given number …\nWeight of calling <code>seal_block_author</code>.\nWeight of calling <code>seal_block_hash</code>.\nWeight of calling <code>seal_block_number</code>.\nWeight of calling <code>Bn128Add</code> precompile\nWeight of calling <code>Bn128Add</code> precompile\nWeight of calling <code>Bn128Pairing</code> precompile for the given …\nBase weight of calling <code>seal_call</code>.\nWeight of calling <code>seal_call_data_copy</code>.\nWeight of calling `seal_call_data_load``.\nWeight of calling <code>seal_call_data_size</code>.\nWeight per byte that is cloned by supplying the <code>CLONE_INPUT</code>…\nWeight of the transfer performed during a call.\nWeight of calling <code>seal_caller</code>.\nWeight of calling <code>seal_caller_is_origin</code>.\nWeight of calling <code>caller_is_root</code>.\nWeight of calling <code>seal_clear_storage</code> per cleared byte.\nWeight of calling <code>seal_clear_transient_storage</code> per cleared …\nWeight of calling <code>seal_code_hash</code>.\nWeight of calling <code>seal_code_size</code>.\nWeight of calling <code>seal_contains_storage</code> per byte of the …\nWeight of calling <code>seal_contains_transient_storage</code> per byte …\nWeight charged for copying data from the sandbox.\nWeight charged for copying data to the sandbox.\nWeight of calling <code>seal_delegate_call</code> for the given input …\nWeight of calling <code>seal_deposit_event</code> with the given number …\nThis type is used to describe a storage change when …\nWeight of calling <code>ECERecover</code> precompile.\nWeight of calling <code>ecdsa_to_eth_address</code>\nA pre-compile can error in the same way that a real …\nDon’t encode anything into the output buffer. Just trap.\nError returned by contract execution.\nEnvironment functions which are available to all …\nEnvironment functions which are available to pre-compiles …\nThe pre-compile will only be called for a single address.\nWeight of calling <code>seal_gas_limit</code>.\nWeight of calling <code>seal_gas_price</code>.\nWeight of calling <code>get_immutable_dependency</code>\nWeight of calling <code>seal_get_storage</code> with the specified size …\nWeight of calling <code>seal_get_transient_storage</code> with the …\nFixed-size uninterpreted hash type with 20 bytes (160 …\nFixed-size uninterpreted hash type with 32 bytes (256 …\nDefines whether this pre-compile needs a contract info …\nWeight of calling <code>seal_hash_blake2_128</code> for the given input …\nWeight of calling <code>seal_hash_blake2_256</code> for the given input …\nWeight of calling <code>seal_hash_keccak_256</code> for the given input …\nWeight of calling <code>Sha256</code> precompile for the given input …\nBase Weight of calling a host function.\nWeight of calling <code>Identity</code> precompile for the given number …\nWeight of calling <code>seal_instantiate</code> for the given input …\nThe Solidity ABI definition of this pre-compile.\nWeight of calling <code>seal_is_contract</code>.\nDefines at which addresses this pre-compile exists.\nWeight of calling <code>seal_minimum_balance</code>.\nWeight of calling <code>Modexp</code> precompile\nWeight of calling <code>seal_now</code>.\nWeight of calling <code>seal_origin</code>.\nWeight of calling <code>seal_own_code_hash</code>.\nAn error generated by Solidity itself.\nType that can be implemented in other crates to extend the …\nWeight charged by a precompile.\nWeight of calling a precompile.\nWeight of reading and decoding the input to a precompile.\nWeight of calling a precompile that has a contract info.\nThe pre-compile will be called for multiple addresses.\nWeight of calling <code>seal_ref_time_left</code>.\nWeight of calling <code>seal_return_data_size</code>.\nThis is the same as a contract writing <code>revert(&quot;I reverted&quot;)</code>…\nWeight of calling <code>Ripemd160</code> precompile for the given input …\nWeight of calling <code>seal_set_code_hash</code>\nWeight of calling <code>set_immutable_dependency</code>\nWeight of calling <code>seal_set_storage</code> for the given storage …\nWeight of calling <code>seal_set_transient_storage</code> for the given …\nWeight of calling <code>seal_sr25519_verify</code> for the given input …\nYour runtime.\nWeight of calling <code>seal_take_storage</code> for the given size.\nWeight of calling <code>seal_take_transient_storage</code> for the …\nWeight of calling <code>seal_terminate</code>.\nWeight of calling <code>seal_to_account_id</code>.\nThis trait represents a token that can be used for …\nLittle-endian large integer type 256-bit unsigned integer.\nWeight of calling <code>seal_value_transferred</code>.\nWeight of calling <code>seal_weight_left</code>.\nWeight of calling <code>seal_weight_to_fee</code>.\nAbsorb the remaining gas of a nested meter after we are …\nReturns a reference to the account id of the current …\nReturns a reference to the <code>H160</code> address of the current …\nReturns a reference to the <code>H160</code> address of the current …\nAdjust a previously charged amount down to its actual …\nReturns the balance of the current contract.\nReturns the balance of the supplied account.\nReturns the author of the current block.\nReturns the block hash at the given <code>block_number</code> or <code>None</code> if\nReturns the current block number.\nHow many bytes were added to storage.\nHow many bytes were removed from storage.\nCall (possibly transferring some amount of funds) into the …\nEntry point for your pre-compile when …\nEntry point for your pre-compile when …\nReturns the caller.\nCheck if the caller of the current contract is the origin …\nCheck if the caller is origin, and this origin is root.\nCharges the gas meter with the given weight.\nCharges the gas meter with the given weight.\nAccount for used gas.\nCharges <code>diff</code> from the meter.\nReturns the code hash of the contract for the given <code>address</code>…\nReturns the code size of the contract at the given <code>address</code> …\nTests sometimes need to modify and inspect the contract …\nDeposit an event with the given topics.\nRecovers ECDSA compressed public key based on signature …\nReturns Ethereum address from the ECDSA compressed public …\nThe amount of gas in terms of engine gas.\nThe reason why the execution failed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns how much gas was spent\nReturns how much gas left from the initial budget.\nGet an immutable reference to the nested gas meter.\nGet a mutable reference to the nested gas meter.\nReturns the amount of gas that is required to run the same …\nReturns the storage entry of the executing account by the …\nReturns <code>Some(len)</code> (in bytes) if a storage item exists at …\nReturns the transient storage entry of the executing …\nReturns <code>Some(len)</code> (in bytes) if a transient storage item …\nReturns the price for the specified amount of weight.\nReturns true if this token is expected to influence the …\nReturns true if this token is expected to influence the …\nInstantiate a contract from the given code.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTurn this GasMeter into a DispatchResult that contains the …\nCheck if a contract lives at the specified <code>address</code>.\nCheck if running in read-only context.\nHow many storage items were added to storage.\nHow many storage items were removed from storage.\nReturns an immutable reference to the output of the last …\nReturns a mutable reference to the output of the last …\nReturns the maximum allowed size of a storage item.\nReturns the minimum balance that is required for creating …\nCreate a new gas meter for a nested call by removing gas …\nCreate a new gas meter by removing <em>all</em> the gas from the …\nReturns the timestamp of the current block in seconds.\nReturn the origin of the whole call stack.\nOrigin of the error.\nTypes to run a pre-compile during testing or benchmarking.\nSets the storage entry by the given key to the specified …\nSets the transient storage entry for the given key to the …\nVerify a sr25519 signature.\nHand over the gas metering responsibility from the …\nHand over the gas metering responsibility from this meter …\nReturns the account id for the given <code>address</code>.\nGet a mutable reference to the transient storage. Useful …\nCalculate how much of a charge or refund results from …\nReturns the value transferred along with this call.\nReturn the amount of gas that should be taken by this …\nA builder used to prepare a contract call.\nAn instantiated and deployed contract.\nFixed-size uninterpreted hash type with 32 bytes (256 …\nLittle-endian large integer type 256-bit unsigned integer.\nA vm binary module ready to be put on chain.\nGet the <code>ContractInfo</code> of the <code>addr</code> or an error if it no …\nReturns <code>true</code> iff all storage entries related to code …\nReturns <code>true</code> iff no storage entry related to code storage …\nGet the call’s contract.\nGet the call’s input data.\nReturn a contract code that does nothing.\nSame as <code>Self::dummy</code> but uses <code>replace_with</code> to make the code …\nBuild the call stack.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet the <code>ContractInfo</code> of this contract or an error if it no …\nA contract code that does unaligned memory accessed in a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSetup a new call for the given module.\nCreate new contract and use a default account id as …\nA contract code that calls the “noop” host function in …\nConvenience function to run pre-compiles for testing or …\nPrepare a call to the module.\nSet the contract’s balance.\nSet the balance of the contract to the supplied amount.\nSet the call’s input data.\nSet the call’s origin.\nSet the meter’s storage deposit limit.\nSet the transient storage size.\nSame as as <code>with_num_instructions</code> but based on the blob …\nStore the supplied storage items into this contracts …\nCreate new contract and use the supplied <code>caller</code> as …\nCreate new contract and use an account id derived from the …\nA contract code of specified number of instructions that …\nCreate a new contract with the supplied storage item count …\nCreate a new contract with the specified unbalanced …\nAn opaque 32-byte cryptographic identifier.\nEve is a non ee account and hence needs a stateful mapping …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate a new instance from its raw inner byte value.\nA builder to construct a bare_call call\nA builder to construct a bare_instantiate call\nA builder to construct a call call\nA builder to construct a instantiate call\nA builder to construct a instantiate_with_code call\nCreate a <code>BareCallBuilder</code> with default values.\nCreate a <code>BareInstantiateBuilder</code> with default values.\nBuild the instantiate_with_code call\nBuild the instantiate call\nBuild the bare_instantiate call\nBuild the call call\nBuild the bare_call call\nBuild the instantiate call and unwrap the account id.\nBuild the instantiate call and unwrap the result.\nBuild the call and unwrap the result.\nCreate a <code>CallBuilder</code> with default values.\nSet the code\nSet the code\nSet the code_hash\nSet the data\nSet the data\nSet the data\nSet the data\nSet the data\nSet the dest\nSet the dest\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSet the gas_limit\nSet the gas_limit\nSet the gas_limit\nSet the gas_limit\nSet the gas_limit\nCreate an <code>InstantiateBuilder</code> with default values.\nCreate an <code>InstantiateWithCodeBuilder</code> with default values.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the origin\nSet the origin\nSet the origin\nSet the origin\nSet the origin\nSet the salt\nSet the salt\nSet the salt\nSet the storage_deposit_limit\nSet the storage_deposit_limit\nSet the storage_deposit_limit\nSet the storage_deposit_limit\nSet the storage_deposit_limit\nSet the value\nSet the value\nSet the value\nSet the value\nSet the value\nDefines methods to trace contract interactions.\nCalled when a balance is read\nCalled before a contract call is executed\nCalled after a contract call is executed\nCalled when a contract call terminates with an error\nRecord a log event\nCalled when storage read is called\nCalled when storage write is called\nTrace the execution of the given closure.\nRegister an address that should be traced.\nWeights for <code>pallet_revive</code> using the Substrate node and …\nWeight functions needed for <code>pallet_revive</code>.\nStorage: <code>Revive::OriginalAccount</code> (r:2 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 1200]</code>.\nThe range of component <code>n</code> is <code>[0, 20]</code>.\nStorage: <code>Revive::OriginalAccount</code> (r:2 w:0) Proof: …\nStorage: <code>Revive::OriginalAccount</code> (r:2 w:0) Proof: …\nStorage: <code>SafeMode::EnteredUntil</code> (r:1 w:0) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 262144]</code>.\nStorage: <code>Revive::CodeInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Revive::CodeInfoOf</code> (r:1 w:1) Proof: …\nThe range of component <code>r</code> is <code>[0, 10000]</code>.\nThe range of component <code>r</code> is <code>[0, 100000]</code>.\nCalls <code>U::from(self)</code>.\nStorage: <code>Revive::OriginalAccount</code> (r:1 w:1) Proof: …\nThe range of component <code>r</code> is <code>[0, 1600]</code>.\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Revive::DeletionQueueCounter</code> (r:1 w:0) Proof: …\nStorage: <code>Revive::CodeInfoOf</code> (r:1 w:1) Proof: …\nThe range of component <code>n</code> is <code>[0, 262144]</code>.\nStorage: <code>Revive::OriginalAccount</code> (r:1 w:0) Proof: …\nStorage: <code>Session::Validators</code> (r:1 w:0) Proof: …\nStorage: <code>System::BlockHash</code> (r:1 w:0) Proof: …\nStorage: <code>Revive::OriginalAccount</code> (r:1 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 262144]</code>.\nStorage: <code>Revive::ContractInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 416]</code>.\nStorage: <code>Revive::ContractInfoOf</code> (r:1 w:0) Proof: …\nStorage: <code>Revive::ContractInfoOf</code> (r:1 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 416]</code>.\nThe range of component <code>n</code> is <code>[0, 262140]</code>.\nStorage: <code>Revive::ContractInfoOf</code> (r:1 w:0) Proof: …\nThe range of component <code>t</code> is <code>[0, 4]</code>. The range of component …\nStorage: <code>Revive::ImmutableDataOf</code> (r:1 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 416]</code>.\nThe range of component <code>n</code> is <code>[0, 262144]</code>.\nThe range of component <code>n</code> is <code>[0, 262144]</code>.\nThe range of component <code>n</code> is <code>[0, 262144]</code>.\nStorage: <code>Revive::CodeInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Revive::ContractInfoOf</code> (r:1 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 262140]</code>.\nStorage: <code>Revive::CodeInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Revive::ImmutableDataOf</code> (r:0 w:1) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 416]</code>. The range of …\nThe range of component <code>n</code> is <code>[0, 261889]</code>.\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 416]</code>.\nStorage: <code>Revive::OriginalAccount</code> (r:1 w:0) Proof: …\nStorage: <code>Revive::OriginalAccount</code> (r:1 w:0) Proof: …\nStorage: <code>Revive::ContractInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 262144]</code>.\nStorage: <code>Balances::Holds</code> (r:1 w:1) Proof: <code>Balances::Holds</code> (…\nStorage: <code>Revive::CodeInfoOf</code> (r:1 w:1) Proof: …")