searchState.loadedDescShard("pallet_transaction_storage", 0, "Transaction storage pallet. Indexes transactions and …\nMaximum bytes that can be stored in one transaction.\nState data for a stored transaction.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for <code>pallet_transaction_storage</code>\nAttempted to call <code>store</code> outside of block execution.\nStorage type is <code>StorageValue</code> with value type …\nStorage fee per byte.\nContains a variant per dispatchable extrinsic that this …\nCount indexed chunks for each block.\nConfiguration trait of this pallet.\nThe fungible type for this pallet.\nDouble proof check in the block.\nAttempting to store empty transaction\nStorage fee per transaction.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nHandler for the unbalanced decrease when fees are burned.\nCan be used to configure the genesis state of this pallet.\nA reason for this pallet placing a hold on funds.\nProof failed verification.\nMaximum number of indexed transactions in the block.\nMaximum data set in a single transaction in bytes.\nMissing storage proof.\nUnable to verify proof because state data is missing.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nInvalid configuration.\nThe <code>Pallet</code> struct, the main type that implements traits …\nWas the proof checked in this block?\nStorage proof was successfully checked.\nStorage proof was not checked in the block.\nRenewed data under specified index.\nRenewed extrinsic is not found.\nA dispatchable call.\nThe overarching event type.\nThe overarching runtime hold reason.\nThe funds are held as deposit for the used storage.\nStorage period for data in blocks. Should match …\nStored data under specified index.\nToo many transactions in the block.\nTransaction is too large.\nCollection of transaction metadata by block number.\nProof was not expected in this block.\nWeight information for extrinsics in this pallet.\nGet ByteFee storage information from outside of this …\nCheck storage proof for block number …\nCheck storage proof for block number …\nAuto-generated docs-only module listing all defined …\nGet EntryFee storage information from outside of this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>check_proof</code>.\nCreate a call with the variant <code>renew</code>.\nCreate a call with the variant <code>store</code>.\nRenew previously stored data. Parameters are the block …\nRenew previously stored data. Parameters are the block …\nAuto-generated docs-only module listing all (public and …\nIndex and store data off chain. Minimum data size is 1 …\nIndex and store data off chain. Minimum data size is 1 …\nGet transaction storage information from outside of this …\nCheck storage proof for block number …\nRenew previously stored data. Parameters are the block …\nIndex and store data off chain. Minimum data size is 1 …\nWarning: Doc-Only\nStorage fee per byte.\nCount indexed chunks for each block.\nStorage fee per transaction.\nWas the proof checked in this block?\nStorage period for data in blocks. Should match …\nCollection of transaction metadata by block number.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_transaction_storage</code> using the Substrate …\nWeight functions needed for <code>pallet_transaction_storage</code>.\nStorage: <code>TransactionStorage::ProofChecked</code> (r:1 w:1) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>TransactionStorage::Transactions</code> (r:1 w:0) Proof: …\nStorage: <code>TransactionStorage::ByteFee</code> (r:1 w:0) Proof: …")