searchState.loadedDescShard("pallet_people", 0, "People Pallet\nPeople transaction extensions.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nTypes for Proof-of-Personhood system.\nAutogenerated weights for pallet_ranked_collective\nTransaction extension to transform an origin into a …\nInformation required to transform an origin into a …\nThe signed origin will be transformed using account to …\nThe none origin will be transformed using proof.\nThe signed origin will be transformed using account to …\nThe none origin will be transformed using signature.\nInfo returned by validate to prepare in the <code>AsPerson</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContexts which may validly have an account alias behind it …\nThe account is already in use under another alias.\nConversion of an account ID to a contextual alias.\nAssociation of an account ID to a personal ID.\nThe number of people currently included in a ring.\nAlias &lt;-&gt; Account is already set and up to date.\nConversion of a contextual alias to an account ID.\nHelper for benchmarks.\nContains a variant per dispatchable extrinsic that this …\nNumber of chunks per page.\nPaginated collection of static chunks used by the …\nConfiguration trait of this pallet.\nCould not push member into the ring.\nAn mutating session could not be started.\nTrait allowing cryptographic proof of membership without …\nKeeps track of the ring index currently being populated.\nGuard to ensure that the given origin is a person. The …\nGuard to ensure that the given origin is a person. The …\nGuard to ensure that the given origin is a person. The …\nGuard to ensure that the given origin is a person.\nGuard to ensure that the given origin is a person.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCan be used to configure the genesis state of this pallet.\nThe root cannot be finalized as there are still unpushed …\nThe account is not known.\nThe context is not a member of those allowed to have …\nInvalid state for attempted key migration.\nThe onboarding size must not exceed the maximum ring size.\nThe proof is invalid.\nRing cannot be merged if it’s the top ring.\nThe signature is invalid.\nSuspension indices provided are invalid.\nKey already in use by another person.\nInvalid suspension of a key belonging to a person whose …\nA map of all the people who have declared their intent to …\nThe old key was not found when expected.\nThe current individuals we recognise, but not necessarily …\nMaximum number of people included in a ring before a new …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe next free and never reserved personal ID.\nThe given person has no associated key.\nThere are not yet any members of our personhood set.\nAn mutating action was queued when there was no mutation …\nThe supplied identifier does not represent a person.\nPersonhood cannot be resumed if it is not suspended.\nPaginated collection of people public keys ready to be …\nMaximum number of people included in an onboarding queue …\nMaximum number of people queued before onboarding to a …\nThe <code>Pallet</code> struct, the main type that implements traits …\nA map of all rings which currently have pending …\nThe current individuals we recognise, but not necessarily …\nAn individual has had their personhood recognised again …\nPersonal Id was not reserved.\nPersonal Id was not reserved or not already recognized.\nPersonal Id has never been reserved.\nAn individual has had their personhood recognised and …\nKeeps track of the page indices of the head and tail of …\nCandidates’ reserved identities which we track.\nRing cannot be merged if it’s not below 1/2 capacity.\nHint for the maximum number of people that can be included …\nBoth the keys that are included in built rings and the …\nStores the meta information for each ring, the number of …\nThe state of the pallet regarding the actions that are …\nThe current individuals we recognise.\nThe runtime event type.\nThe record is already using this key.\nThe root is still fresh.\nPersonhood is suspended.\nCannot merge rings while a suspension session is in …\nRing cannot be built while there are suspensions pending.\nCall is too late or too early.\nToo many members have been pushed.\nWeight information for extrinsics in this pallet.\nThe amount of block number tolerance we allow for a setup …\nBuild a ring root by including registered people.\nBuild a ring root by including registered people.\nAuto-generated docs-only module listing all defined …\nEnsure that the origin <code>o</code> represents an extrinsic (i.e. …\nEnsure that the origin <code>o</code> represents a person. Returns <code>Ok</code> …\nEnsure that the origin <code>o</code> represents an extrinsic (i.e. …\nEnsure that the origin <code>o</code> represents a person. Returns <code>Ok</code> …\nEnsure that the origin <code>o</code> represents an extrinsic (i.e. …\nEnsure that the origin <code>o</code> represents a person. On success …\nRecognize a set of people without any additional checks.\nRecognize a set of people without any additional checks.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMerge the people in two rings into a single, new ring. In …\nMerge the people in two rings into a single, new ring. In …\nMigrate the key for a person who was onboarded and is …\nMigrate the key for a person who was onboarded and is …\nMigrate the key for a person who is currently onboarding. …\nMigrate the key for a person who is currently onboarding. …\nCreate a call with the variant <code>build_ring_manual</code>.\nCreate a call with the variant <code>force_recognize_personhood</code>.\nCreate a call with the variant <code>merge_rings</code>.\nCreate a call with the variant <code>migrate_included_key</code>.\nCreate a call with the variant <code>migrate_onboarding_key</code>.\nCreate a call with the variant <code>onboard_people_manual</code>.\nCreate a call with the variant <code>set_alias_account</code>.\nCreate a call with the variant <code>set_onboarding_size</code>.\nCreate a call with the variant <code>set_personal_id_account</code>.\nCreate a call with the variant <code>under_alias</code>.\nCreate a call with the variant <code>unset_alias_account</code>.\nCreate a call with the variant <code>unset_personal_id_account</code>.\nOnboard people into a ring by taking their keys from the …\nOnboard people into a ring by taking their keys from the …\nFetch the keys in a ring along with stored inclusion …\nThis transaction is refunded if successful and no alias …\nThis transaction is refunded if successful and no alias …\nForce set the onboarding size for new people. This call …\nForce set the onboarding size for new people. This call …\nSet a personal id account.\nSet a personal id account.\nAuto-generated docs-only module listing all (public and …\nDispatch a call under an alias using the <code>account &lt;-&gt; alias</code> …\nDispatch a call under an alias using the <code>account &lt;-&gt; alias</code> …\nRemove the mapping from a particular alias to its …\nRemove the mapping from a particular alias to its …\nUnset the personal id account.\nUnset the personal id account.\nBuild a ring root by including registered people.\nRecognize a set of people without any additional checks.\nMerge the people in two rings into a single, new ring. In …\nMigrate the key for a person who was onboarded and is …\nMigrate the key for a person who is currently onboarding. …\nOnboard people into a ring by taking their keys from the …\nThis transaction is refunded if successful and no alias …\nForce set the onboarding size for new people. This call …\nSet a personal id account.\nDispatch a call under an alias using the <code>account &lt;-&gt; alias</code> …\nRemove the mapping from a particular alias to its …\nUnset the personal id account.\nConversion of an account ID to a contextual alias.\nAssociation of an account ID to a personal ID.\nThe number of people currently included in a ring.\nConversion of a contextual alias to an account ID.\nPaginated collection of static chunks used by the …\nKeeps track of the ring index currently being populated.\nA map of all the people who have declared their intent to …\nThe current individuals we recognise, but not necessarily …\nThe next free and never reserved personal ID.\nPaginated collection of people public keys ready to be …\nMaximum number of people queued before onboarding to a …\nA map of all rings which currently have pending …\nThe current individuals we recognise, but not necessarily …\nKeeps track of the page indices of the head and tail of …\nCandidates’ reserved identities which we track.\nHint for the maximum number of people that can be included …\nBoth the keys that are included in built rings and the …\nStores the meta information for each ring, the number of …\nThe state of the pallet regarding the actions that are …\nThe current individuals we recognise.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe rings can accept new people sequentially if the …\nCoordinates within the rings for a person that was …\nAfter mutations to the member set, any pending key …\nA semaphore counting the number of entities making changes …\nCoordinates within the onboarding queue for a person that …\nRecord of personhood.\nAn alias <code>Alias</code> used in a specific ring revision.\nA contextual alias <code>ContextualAlias</code> used in a specific ring …\nThe overarching state of all people rings regarding the …\nThe state of a person’s key within the pallet along with …\nInformation about the current key inclusion status in a …\nThe person is suspended and isn’t part of any ring or …\nAn optional privileged account that can send transaction …\nReturns whether the state allows only incremental …\nMove out of a key migration state.\nMove out of a mutation state.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe number of keys that have already been baked in.\nAn intermediate value if the ring is not full.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the state allows the pending key …\nReturns whether the state allows mutating the member set …\nThe revision index of the ring.\nReturns the index of the ring if this person is included.\nThe ring root for the current ring.\nReturns whether the person is included in a ring and is …\nMove to a mutation state.\nReturns whether the person is suspended and has no …\nThe number of keys in the ring.\nWeight functions needed for pallet_ranked_collective.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.")