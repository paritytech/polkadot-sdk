searchState.loadedDescShard("pallet_bags_list", 0, "Made with <em>Substrate</em>, for <em>Polkadot</em>.\nIn this example, assuming each node has an equal id and …\nImplementation of a “bags list”: a semi-sorted list …\nThe migrations of this pallet.\nMock runtime for pallet-bags-lists tests.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for <code>pallet_bags_list</code>\nA Bag is a doubly-linked list of ids, where each id is …\nA duplicate id has been detected.\nThe <strong>ONLY</strong> entry point of this module. All operations to the …\nThe List is locked, therefore updates cannot happen now.\nA Node is the fundamental element comprising the …\nGiven node id was not found.\nAn Id does not have a greater score than another Id.\nAttempted to place node in front of a node in another bag.\nThe bag this nodes belongs to (public for benchmarks).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a node by id.\nGet the score of the given node,\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>true</code> when this voter is in the wrong bag.\nMigrate the list from one set of thresholds to another.\nGiven a certain score, to which bag does it belong to?\nGet the underlying voter (public fo tests).\nIterate over the nodes in this bag (public for tests).\nRegenerate all of the data from the given ids.\nA struct that migrates all bags lists to contain a score …\nA struct that does not migration, but only checks that the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAll pallets included in the runtime as a nested tuple of …\nAll pallets included in the runtime as a nested tuple of …\nProvides an implementation of <code>PalletInfo</code> to provide …\nThe aggregated runtime call type.\nA reason for placing a freeze on funds.\nA reason for placing a hold on funds.\nAn identifier for each lock placed on funds.\nThe runtime origin type representing the origin of a call.\nA reason for slashing funds.\nAn aggregation of all <code>Task</code> enums across all pallets …\nRuntime query type.\nConvenience function for view functions dispatching and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert to runtime origin with caller being system signed …\nConvert to runtime origin, using as filter: …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nOptionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nCreate with system none origin and …\nKill/reset the value to whatever was set at first.\nKill/reset the value to whatever was set at first.\nKill/reset the value to whatever was set at first.\nCreate with system root origin and …\nSet the internal value.\nSet the internal value.\nSet the internal value.\nCreate with system signed origin and …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nThe list of thresholds separating the various bags.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\n<code>Instance1</code> to be used for instantiable pallets defined with …\nA error in the list interface implementation.\nA bag stored in storage.\nA single node, within some bag.\nLock all updates to this pallet.\nCould not update a node, because the pallet is locked.\nMaximum number of accounts that may be re-bagged …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nPointer that remembers the next node that will be …\nThe <code>Pallet</code> struct, the main type that implements traits …\nAccounts that failed to be inserted into the bags-list due …\nMoved an account from one bag to another.\nThe overarching event type.\nThe type used to dictate a node position relative to other …\nSomething that provides the scores of ids.\nUpdated the score of some account to the given amount.\nGet the current <code>score</code> of a given account.\nWeight information for extrinsics in this pallet.\nAuto-generated docs-only module listing all defined …\nMove an account from one bag to another, depositing an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEquivalent to <code>ListBags::get</code>, but public. Useful for tests …\nCreate a new [<code>#view_function_struct_ident</code>] instance.\nCreate a call with the variant <code>put_in_front_of</code>.\nCreate a call with the variant <code>put_in_front_of_other</code>.\nCreate a call with the variant <code>rebag</code>.\nCalled during the idle phase of block execution. …\nMove the caller’s Id directly in front of <code>lighter</code>.\nMove the caller’s Id directly in front of <code>lighter</code>.\nSame as <code>Pallet::put_in_front_of</code>, but it can be called by …\nSame as <code>Pallet::put_in_front_of</code>, but it can be called by …\nDeclare that some <code>dislocated</code> account has, through rewards …\nDeclare that some <code>dislocated</code> account has, through rewards …\nGet the current <code>score</code> of a given account.\nAuto-generated docs-only module listing all (public and …\nMove the caller’s Id directly in front of <code>lighter</code>.\nSame as <code>Pallet::put_in_front_of</code>, but it can be called by …\nDeclare that some <code>dislocated</code> account has, through rewards …\nA bag stored in storage.\nA single node, within some bag.\nLock all updates to this pallet.\nPointer that remembers the next node that will be …\nAccounts that failed to be inserted into the bags-list due …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_bags_list</code> using the Substrate node and …\nWeight functions needed for <code>pallet_bags_list</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>VoterList::CounterForListNodes</code> (r:1 w:1) Proof: …\nStorage: <code>VoterList::Lock</code> (r:1 w:0) Proof: <code>VoterList::Lock</code> (…\nStorage: <code>VoterList::Lock</code> (r:1 w:0) Proof: <code>VoterList::Lock</code> (…\nStorage: <code>VoterList::Lock</code> (r:1 w:0) Proof: <code>VoterList::Lock</code> (…")