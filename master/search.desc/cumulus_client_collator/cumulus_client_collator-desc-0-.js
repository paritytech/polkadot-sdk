searchState.loadedDescShard("cumulus_client_collator", 0, "Cumulus Collator implementation for Substrate.\nThe implementation of the Cumulus <code>Collator</code>.\nParameters for <code>start_collator</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nInitialize the collation-related subsystems on the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRelay-chain-driven collators are those whose block …\nThe Cumulus <code>CollatorService</code> is a utility struct for …\nStart the collator.\nStart the collator in a synchronous function.\nA request to author a collation, based on the advancement …\nComplete the request with a collation, if any.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nInitialize the collator with Polkadot’s …\nCalls <code>U::from(self)</code>.\nGet the <code>PersistedValidationData</code> for the request.\nGet the relay parent of the collation request.\nThe <code>CollatorService</code> provides common utilities for …\nUtility functions generally applicable to writing …\nDirectly announce a block on the network.\nInform networking systems that the block should be …\nInform the networking systems that the block should be …\nBuild a full <code>Collation</code> from a given <code>ParachainCandidate</code>. …\nBuild a full <code>Collation</code> from a given <code>ParachainCandidate</code>. …\nChecks the status of the given block hash in the Parachain.\nChecks the status of the given block hash in the Parachain.\nFetch the collation info from the runtime.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate a new instance.")