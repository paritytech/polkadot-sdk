searchState.loadedDescShard("sc_rpc", 0, "Substrate RPC implementation.\nSignifies whether a potentially unsafe RPC should be …\nAllows calling every RPCs.\nGenerates random integers as subscription ID.\nGenerates random strings of length <code>len</code> as subscription ID.\nTask executor that is being used by RPC subscriptions.\nDenies only potentially unsafe RPCs.\nSubstrate block-author/full-node API.\nSubstrate blockchain API.\nReturns <code>Ok(())</code> if the RPCs considered unsafe are safe to …\nImplementation of the <code>DevApiServer</code> trait providing debug …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSubstrate mixnet API.\nCreate a new random string provider.\nSubstrate offchain API.\nSubstrate state API.\nSubstrate statement store API.\nSubstrate system API.\nTesting utils used by the RPC tests.\nJSON-RPC helpers.\nAuthoring API\nRe-export the API for backward compatibility. Client …\nRe-export the API for backward compatibility. Server trait …\nRe-export the API for backward compatibility. Authoring …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nChecks if the keystore has private keys for the given …\nChecks if the keystore has private keys for the given …\nChecks if the keystore has private keys for the given …\nChecks if the keystore has private keys for the given …\nRe-export the API for backward compatibility. Extrinsic …\nInsert a key into the keystore.\nInsert a key into the keystore.\nCalls <code>U::from(self)</code>.\nCollects all the methods and subscriptions defined in the …\nCreate new instance of Authoring API.\nReturns all pending extrinsics, potentially grouped by …\nReturns all pending extrinsics, potentially grouped by …\nRemove given extrinsic from the pool and temporarily ban …\nRemove given extrinsic from the pool and temporarily ban …\nGenerate new session keys and returns the corresponding …\nGenerate new session keys and returns the corresponding …\nSubmit hex-encoded extrinsic for inclusion in block.\nSubmit hex-encoded extrinsic for inclusion in block.\nSubmit an extrinsic to watch.\nSubmit an extrinsic to watch.\nIncorrect extrinsic format.\nKey type ID has an unknown format.\nClient error.\nContains the error value\nAuthor RPC errors.\nInvalid session keys encoding.\nSome random issue with the key store. Shouldn’t happen.\nContains the success value\nTransaction pool error,\nAuthor RPC Result type.\nCall to an unsafe RPC was denied.\nVerification error\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nRaw extrinsic bytes.\nRPC Extrinsic or hash\nThe hash of the extrinsic.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nChain API with subscriptions support.\nClient implementation for the <code>ChainApi</code> RPC API.\nServer trait implementation for the <code>ChainApi</code> RPC API.\nGet header and body of a block.\nGet header and body of a block.\nGet hash of the n-th block in the canon chain.\nGet hash of the n-th block in the canon chain.\nError helpers for Chain RPC module.\nGet hash of the last finalized block in the canon chain.\nGet hash of the last finalized block in the canon chain.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet header.\nGet header.\nCalls <code>U::from(self)</code>.\nCollects all the methods and subscriptions defined in the …\nCreate new state API that works on full node.\nAll head subscription.\nAll head subscription.\nFinalized head subscription.\nFinalized head subscription.\nNew head subscription.\nNew head subscription.\nClient error.\nContains the error value\nChain RPC errors.\nContains the success value\nOther error type.\nChain RPC Result type.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStatistics of a block returned by the <code>dev_getBlockStats</code> …\nThe Dev API. All methods are unsafe.\nServer trait implementation for the <code>DevApi</code> RPC API.\nLength of the block in bytes.\nReexecute the specified <code>block_hash</code> and gather statistics …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCollects all the methods and subscriptions defined in the …\nCreate a new Dev API.\nNumber of extrinsics in the block.\nThe length in bytes of the storage proof after compaction.\nThe length in bytes of the storage proof produced by …\nMixnet API.\nServer trait implementation for the <code>MixnetApi</code> RPC API.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCollects all the methods and subscriptions defined in the …\nCreate a new mixnet API instance.\nSubmit encoded extrinsic over the mixnet for inclusion in …\nOffchain API\nRe-export the API for backward compatibility. Client …\nRe-export the API for backward compatibility. Server trait …\nRe-export the API for backward compatibility. Offchain RPC …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet offchain local storage under given key and prefix.\nGet offchain local storage under given key and prefix.\nCalls <code>U::from(self)</code>.\nCollects all the methods and subscriptions defined in the …\nCreate new instance of Offchain API.\nSet offchain local storage under given key and prefix.\nSet offchain local storage under given key and prefix.\nContains the error value\nOffchain RPC errors.\nContains the success value\nOffchain RPC Result type.\nUnavailable storage kind error.\nCall to an unsafe RPC was denied.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nChild state API with subscriptions support.\nClient implementation for the <code>ChildStateApi</code> RPC API.\nServer trait implementation for the <code>ChildStateApi</code> RPC API.\nChild state backend API.\nClient error.\nState RPC errors.\nProvided block range couldn’t be resolved to a list of …\nProvided count exceeds maximum value.\nReadProof struct returned by the RPC\nState API with subscriptions support.\nClient implementation for the <code>StateApi</code> RPC API.\nServer trait implementation for the <code>StateApi</code> RPC API.\nState backend API.\nCall to an unsafe RPC was denied.\nBlock hash used to generate the proof\nCall runtime method at given block.\nCall a method from the runtime API at a block’s state.\nCall a method from the runtime API at a block’s state.\nState RPC errors.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSubstrate state API helpers.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nReturns the runtime metadata as an opaque blob.\nReturns the runtime metadata as an opaque blob.\nReturns the runtime metadata as an opaque blob.\nCreate new state API that works on full node.\nA proof used to prove that storage entries are included in …\nQuery historical storage entries (by key) starting from a …\nQuery historical storage entries (by key) starting from a …\nQuery historical storage entries (by key) starting from a …\nQuery storage entries (by key) starting at block hash …\nQuery storage entries (by key) at a block hash given as …\nQuery storage entries (by key) at a block hash given as …\nReturns proof of storage for a child key entries at a …\nReturns proof of storage for child key entries at a …\nReturns proof of storage for child key entries at a …\nReturns proof of storage entries at a specific block’s …\nReturns proof of storage entries at a specific block’s …\nReturns proof of storage entries at a specific block’s …\nGet the runtime version.\nGet the runtime version.\nGet the runtime version.\nReturns a child storage entry at a specific block’s …\nReturns a storage entry at a specific block’s state.\nReturns a child storage entry at a specific block’s …\nReturns a storage entry at a specific block’s state.\nReturns a child storage entry at a specific block’s …\nReturns a storage entry at a specific block’s state.\nReturns child storage entries at a specific block’s …\nReturns child storage entries for multiple keys at a …\nReturns child storage entries for multiple keys at a …\nReturns the hash of a child storage entry at a block’s …\nReturns the hash of a storage entry at a block’s state.\nReturns the hash of a child storage entry at a block’s …\nReturns the hash of a storage entry at a block’s state.\nReturns the hash of a child storage entry at a block’s …\nReturns the hash of a storage entry at a block’s state.\nReturns the keys with prefix from a child storage, leave …\nReturns the keys with prefix, leave empty to get all the …\nReturns the keys with prefix from a child storage, leave …\nReturns the keys with prefix, leave empty to get all the …\nReturns the keys with prefix from a child storage, leave …\nReturns the keys with prefix, leave empty to get all the …\nReturns the keys with prefix from a child storage with …\nReturns the keys with prefix with pagination support.\nReturns the keys with prefix from a child storage with …\nReturns the keys with prefix with pagination support. Up …\nReturns the keys with prefix from a child storage with …\nReturns the keys with prefix with pagination support. Up …\nReturns the keys with prefix along with their values, …\nReturns the keys with prefix, leave empty to get all the …\nReturns the keys with prefix, leave empty to get all the …\nReturns the size of a storage entry at a block’s state.\nReturns the size of a child storage entry at a block’s …\nReturns the size of a storage entry at a block’s state.\nReturns the size of a child storage entry at a block’s …\nReturns the size of a child storage entry at a block’s …\nReturns the size of a storage entry at a block’s state.\nNew runtime version subscription\nNew runtime version subscription\nNew runtime version subscription\nNew storage subscription\nNew storage subscription\nNew storage subscription\nTrace storage changes for block\nThe <code>traceBlock</code> RPC provides a way to trace the …\nRe-execute the given block with the tracing targets given …\nThe <code>traceBlock</code> RPC provides a way to trace the …\nDetails of the error message.\nBeginning of the block range.\nMaximum allowed value\nEnd of the block range.\nProvided value\nClient error.\nContains the error value\nState RPC errors.\nProvided block range couldn’t be resolved to a list of …\nProvided count exceeds maximum value.\nContains the success value\nState RPC Result type.\nCall to an unsafe RPC was denied.\nDetails of the error message.\nBeginning of the block range.\nMaximum allowed value\nEnd of the block range.\nProvided value\nReadProof struct returned by the RPC\nBlock hash used to generate the proof\nA proof used to prove that storage entries are included in …\nRe-export the API for backward compatibility. Statement …\nRe-export the API for backward compatibility. Server trait …\nStatement store API\nStatement store internal error.\nCall to an unsafe RPC was denied.\nReturn the data of all known statements which include all …\nReturn all statements, SCALE-encoded.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCollects all the methods and subscriptions defined in the …\nCreate new instance of Offchain API.\nReturn the data of all known statements whose decryption …\nReturn the decrypted data of all known statements whose …\nRemove a statement from the store.\nSubmit a pre-encoded statement.\nThe node is an authority\nThe node is an authority\nSystem RPC errors.\nThe node is a full node\nThe node is a full node\nHealth struct returned by the RPC\nHealth struct returned by the RPC\nMust return the health of the network.\nInternal error.\nMust return the string representation of the addresses we …\nMust return the base58-encoded local <code>PeerId</code>.\nPeer argument is malformatted.\nMust return any potential parse error.\nMust return any potential parse error.\nMust return the list of reserved peers\nMust return the state of the network.\nThe role the node is running as\nThe role the node is running as\nMust return the node role.\nProvided block range couldn’t be resolved to a list of …\nNetwork Peer information\nNetwork Peer information\nMust return information about the peers we are connected …\nRequest to be processed.\nThe state of the syncing of the node.\nThe state of the syncing of the node.\nMust return the state of the node syncing.\nSystem API implementation\nClient implementation for the <code>SystemApi</code> RPC API.\nServer trait implementation for the <code>SystemApi</code> RPC API.\nRunning node’s static details.\nRunning node’s static details.\nCall to an unsafe RPC was denied.\nPeer best block hash\nPeer best block hash\nPeer best block number\nPeer best block number\nChain name.\nChain name.\nThe type of this chain.\nThe type of this chain.\nHeight of the current best block of the node.\nHeight of the current best block of the node.\nSystem RPC module errors.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSubstrate system API helpers.\nHeight of the highest block in the network.\nHeight of the highest block in the network.\nImplementation name.\nImplementation name.\nImplementation version.\nImplementation version.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCollects all the methods and subscriptions defined in the …\nIs the node syncing\nIs the node syncing\nCreates new <code>System</code>.\nPeer ID\nPeer ID\nNumber of connected peers\nNumber of connected peers\nA custom set of properties defined in the chain spec.\nA custom set of properties defined in the chain spec.\nRoles\nRoles\nShould this node have any peers\nShould this node have any peers\nHeight of the block at which syncing started.\nHeight of the block at which syncing started.\nAdds the supplied directives to the current log filter\nAdds the supplied directives to the current log filter\nAdds a reserved peer. Returns the empty string or an …\nAdds a reserved peer. Returns the empty string or an …\nGet the chain’s name. Given as a string identifier.\nGet the chain’s name. Given as a string identifier.\nReturn health status of the node.\nReturn health status of the node.\nReturns the multi-addresses that the local node is …\nReturns the multi-addresses that the local node is …\nReturns the base58-encoded PeerId of the node.\nReturns the base58-encoded PeerId of the node.\nGet the node’s implementation name. Plain old string.\nGet the node’s implementation name. Plain old string.\nReturns current state of the network.\nReturns current state of the network.\nReturns the roles the node is running as.\nReturns the roles the node is running as.\nReturns currently connected peers\nReturns currently connected peers\nGet a custom set of properties as a JSON object, defined …\nGet a custom set of properties as a JSON object, defined …\nRemove a reserved peer. Returns the empty string or an …\nRemove a reserved peer. Returns the empty string or an …\nReturns the list of reserved peers\nReturns the list of reserved peers\nResets the log filter to Substrate defaults\nResets the log filter to Substrate defaults\nReturns the state of the syncing of the node: starting …\nReturns the state of the syncing of the node: starting …\nGet the chain’s type.\nGet the chain’s type.\nGet the node implementation’s version. Should be a …\nGet the node implementation’s version. Should be a …\nContains the error value\nSystem RPC errors.\nInternal error.\nPeer argument is malformatted.\nProvided block range couldn’t be resolved to a list of …\nContains the success value\nSystem RPC Result type.\nCall to an unsafe RPC was denied.\nThe node is an authority\nThe node is a full node\nHealth struct returned by the RPC\nThe role the node is running as\nNetwork Peer information\nThe state of the syncing of the node.\nRunning node’s static details.\nPeer best block hash\nPeer best block number\nChain name.\nThe type of this chain.\nHeight of the current best block of the node.\nHeight of the highest block in the network.\nImplementation name.\nImplementation version.\nIs the node syncing\nPeer ID\nNumber of connected peers\nA custom set of properties defined in the chain spec.\nRoles\nShould this node have any peers\nHeight of the block at which syncing started.\nA task executor that can be used for running RPC tests.\nHelper to create an extension that allows unsafe calls.\nHelper to create an extension that denies unsafe calls.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate a new instance of <code>Self</code>.\nExecutor for testing.\nWrap a future in a timeout a little more concisely\nA simple bounded buffer that will terminate the …\nA trait representing a buffer which may or may not support …\nThe item type that the buffer holds.\nA pending subscription.\nFixed size ring buffer that replaces the oldest item when …\nAn active subscription.\nCompletes when the subscription is closed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new bounded VecDeque.\nCreate a new ring buffer.\nFeed items to the subscription from the underlying stream …\nFeed items to the subscription from the underlying stream …\nFeed items to the subscription from the underlying stream …\nPop the next item from the buffer.\nPush an item to the buffer.\nSend a message on the subscription.\nHelper for spawning non-blocking rpc subscription task.\nGet the subscription id.")