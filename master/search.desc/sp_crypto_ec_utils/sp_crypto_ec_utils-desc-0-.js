searchState.loadedDescShard("sp_crypto_ec_utils", 0, "This crate offers elliptic curves types which are …\n<em>BLS12-377</em> types and host functions.\n<em>BLS12-381</em> types and host functions.\n<em>BW6-761</em> types and host functions.\n<em>Ed-on-BLS12-377</em> types and host functions.\nElliptic Curves host functions to handle some of the …\n<em>BLS12-377</em> definition.\nConfiguration for <em>BLS12-377</em> curve.\nCurve hooks jumping into <code>host_calls</code> host functions.\nReturns the argument unchanged.\nFirst pairing group definitions.\nSecond pairing group definitions.\nInterfaces for working with <em>Arkworks</em> <em>BLS12-377</em> elliptic …\nCalls <code>U::from(self)</code>.\nGroup configuration.\nShort Weierstrass form point affine representation.\nShort Weierstrass form point projective representation.\nShort Weierstrass form point affine representation.\nShort Weierstrass form point projective representation.\nTwisted Edwards form point affine representation.\nTwisted Edwards form point projective representation.\nG1_GENERATOR_X = …\nG1_GENERATOR_Y = …\nTE_GENERATOR_X = …\nTE_GENERATOR_Y = …\n<code>X / Z</code> projection of the affine <code>X</code>\n<code>X / Z</code> projection of the affine <code>X</code>\nX coordinate of the point represented as a field element\n<code>Y / Z</code> projection of the affine <code>Y</code>\n<code>Y / Z</code> projection of the affine <code>Y</code>\nY coordinate of the point represented as a field element\nProjective multiplicative inverse. Will be <code>0</code> only at …\nProjective multiplicative inverse. Will be <code>0</code> only at …\nGroup configuration.\nShort Weierstrass form point affine representation.\nShort Weierstrass form point projective representation.\nG2_GENERATOR_X_C0 = …\nG2_GENERATOR_X_C1 = …\nG2_GENERATOR_Y_C0 = …\nG2_GENERATOR_Y_C1 = …\n<code>X / Z</code> projection of the affine <code>X</code>\n<code>Y / Z</code> projection of the affine <code>Y</code>\nProjective multiplicative inverse. Will be <code>0</code> only at …\nProvides implementations for the extern host functions.\nPairing final exponentiation for <em>BLS12-377.</em>\nMulti scalar multiplication on <em>G1</em> for <em>BLS12-377</em>.\nMulti scalar multiplication on <em>G2</em> for <em>BLS12-377</em>.\nProjective multiplication on <em>G1</em> for <em>BLS12-377</em>.\nProjective multiplication on <em>G2</em> for <em>BLS12-377</em>.\nPairing multi Miller loop for <em>BLS12-377</em>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<em>BLS12-381</em> definition.\nConfiguration for <em>BLS12-381</em> curve.\nCurve hooks jumping into <code>host_calls</code> host functions.\nReturns the argument unchanged.\nFirst pairing group definitions.\nSecond pairing group definitions.\nInterfaces for working with <em>Arkworks</em> <em>BLS12-381</em> elliptic …\nCalls <code>U::from(self)</code>.\nBETA is a non-trivial cubic root of unity in Fq.\nGroup configuration.\nShort Weierstrass form point affine representation.\nShort Weierstrass form point projective representation.\nG1_GENERATOR_X = …\nG1_GENERATOR_Y = …\n<code>X / Z</code> projection of the affine <code>X</code>\n<code>Y / Z</code> projection of the affine <code>Y</code>\nProjective multiplicative inverse. Will be <code>0</code> only at …\nGroup configuration.\nShort Weierstrass form point affine representation.\nShort Weierstrass form point projective representation.\nG2_GENERATOR_X_C0 = …\nG2_GENERATOR_X_C1 = …\nG2_GENERATOR_Y_C0 = …\nG2_GENERATOR_Y_C1 = …\n<code>X / Z</code> projection of the affine <code>X</code>\n<code>Y / Z</code> projection of the affine <code>Y</code>\nProjective multiplicative inverse. Will be <code>0</code> only at …\nProvides implementations for the extern host functions.\nPairing final exponentiation for <em>BLS12-381</em>.\nMulti scalar multiplication on <em>G1</em> for <em>BLS12-381</em>\nMulti scalar multiplication on <em>G2</em> for <em>BLS12-381</em>\nProjective multiplication on <em>G1</em> for <em>BLS12-381</em>.\nProjective multiplication on <em>G2</em> for <em>BLS12-381</em>\nPairing multi Miller loop for <em>BLS12-381</em>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<em>BW6-361</em> definition.\nConfiguration for <em>BW6-361</em> curve.\nCurve hooks jumping into <code>host_calls</code> host functions.\nReturns the argument unchanged.\nFirst pairing group definitions.\nSecond pairing group definitions.\nInterfaces for working with <em>Arkworks</em> <em>BW6-761</em> elliptic …\nCalls <code>U::from(self)</code>.\nGroup configuration.\nShort Weierstrass form point affine representation.\nShort Weierstrass form point projective representation.\nG1_GENERATOR_X = …\nG1_GENERATOR_Y = …\n<code>X / Z</code> projection of the affine <code>X</code>\n<code>Y / Z</code> projection of the affine <code>Y</code>\nProjective multiplicative inverse. Will be <code>0</code> only at …\nGroup configuration.\nShort Weierstrass form point affine representation.\nShort Weierstrass form point projective representation.\nG2_GENERATOR_X = …\nG2_GENERATOR_Y = …\n<code>X / Z</code> projection of the affine <code>X</code>\n<code>Y / Z</code> projection of the affine <code>Y</code>\nProjective multiplicative inverse. Will be <code>0</code> only at …\nProvides implementations for the extern host functions.\nPairing final exponentiation for <em>BW6-761</em>.\nMulti scalar multiplication on <em>G1</em> for <em>BW6-761</em>.\nMulti scalar multiplication on <em>G2</em> for <em>BW6-761</em>.\nProjective multiplication on <em>G1</em> for <em>BW6-761</em>.\nProjective multiplication on <em>G2</em> for <em>BW6-761</em>.\nPairing multi Miller loop for <em>BW6-761</em>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTwisted Edwards form point affine representation.\nGroup configuration.\nTwisted Edwards form point projective representation.\nCurve hooks jumping into <code>host_calls</code> host functions.\nReturns the argument unchanged.\nInterfaces for working with <em>Arkworks</em> <em>Ed-on-BLS12-377</em> …\nCalls <code>U::from(self)</code>.\nX coordinate of the point represented as a field element\nY coordinate of the point represented as a field element\nProvides implementations for the extern host functions.\nTwisted Edwards multi scalar multiplication for …\nTwisted Edwards projective multiplication for …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGroup configuration.\nTwisted Edwards form point affine representation.\nGroup configuration for Twisted Edwards form (equal to …\nTwisted Edwards form point projective representation.\nCurve hooks jumping into <code>host_calls</code> host functions.\nShort Weierstrass form point affine representation.\nGroup configuration for Short Weierstrass form (equal to …\nShort Weierstrass form point projective representation.\nReturns the argument unchanged.\nInterfaces for working with <em>Arkworks</em> …\nCalls <code>U::from(self)</code>.\nX coordinate of the point represented as a field element\n<code>X / Z</code> projection of the affine <code>X</code>\nY coordinate of the point represented as a field element\n<code>Y / Z</code> projection of the affine <code>Y</code>\nProjective multiplicative inverse. Will be <code>0</code> only at …\nProvides implementations for the extern host functions.\nShort Weierstrass multi scalar multiplication for …\nShort Weierstrass projective multiplication for …\nTwisted Edwards multi scalar multiplication for …\nTwisted Edwards projective multiplication for …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")