searchState.loadedDescShard("emulated_integration_tests_common", 0, "The default XCM version to set in genesis config.\nHelper function used in tests to build the genesis storage …\nnote: $asset needs to be prefunded outside this function\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSome way of identifying an account on the chain. We …\nAn opaque 32-byte cryptographic identifier.\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nAggregate message origin for the <code>MessageQueue</code> pallet.\nEither an amount of a single fungible asset, or a single …\nMeans of identifying one asset class from another.\nThe given asset is not handled.\nThe Origin Register does not contain a valid value for …\nBalance of an account.\nScalar type for representing balance of an account.\nThe XCM did not pass the barrier condition for execution.\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\n<code>Instance1</code> to be used for instantiable pallets defined with …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nExecution completed successfully; given weight was used.\nTrait that allows zero-copy read of value-references from …\nDerive <code>parity_scale_codec::Decode</code> for struct and enum.\nThe given message cannot be translated into a format …\nSomething that should be called when a downward message is …\nWrapper around the encoded and decoded versions of a value.\nTrait that allows zero-copy write of value-references to …\nDerive <code>parity_scale_codec::Encode</code> and …\nExecution did not start due to an error. We use …\nAn Ethereum network specified by its chain ID.\nAttempt to send a message greater than the maximum …\nRecursion stack limit reached\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nThe message was unable to be exported.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees were required which the origin could not pay.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA global network capable of externalizing its own …\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nA type that uniquely identifies an HRMP channel. An HRMP …\nExecution started, but did not complete successfully due to…\nTrait for providing balance-inspection access to a set of …\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nA relative path between state-bearing consensus systems.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nSome other error with locking.\nThe maximal weight in all dimensions.\nUsed by <code>Transact</code> to indicate that the given weight limit …\nThe given pallet’s name is different to that expected.\nOrigin should just be the native dispatch origin …\nA global identifier of a data structure existing within …\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nThe unambiguous child.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nThe provided pallet index was not found.\nThe message originated from this parachain.\nUnique identifier of a parachain.\nAn indexed parachain belonging to and operated by the …\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nThe Polkadot Bulletin chain.\n<code>MultiLocation</code> value failed to be reanchored.\nOrigin should just be the standard account-based origin …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nToo many assets matched the given asset filter.\nDestination is routable, but there is some issue with the …\nUsed by the <code>Trap</code> instruction to force an error …\nInbound upward message.\nIdentifies a UMP queue inside the <code>MessageQueue</code> pallet.\nThe universal location of the local consensus is improper.\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nDestination is known to be unroutable.\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nThe given pallet’s version has an incompatible version …\nA single XCM message, together with its version code.\nExecution of the XCM would potentially result in a greater …\nMeters consumed weight and a hard limit for the maximal …\nThe weight of an XCM message is not computable ahead of …\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nOrigin should be interpreted as an XCM native origin and …\nA minimized version of <code>pallet_xcm_bridge_hub::Call</code> that …\nError codes used in XCM. The first errors codes have …\nA version of XCM.\nSomething that should be called for each batch of messages …\nThe total amount of issuance in the system excluding those …\nThe total amount of issuance in the system excluding those …\nConstant version of Add for <code>proof_size</code> component with u64.\nConstant version of Add for <code>ref_time</code> component with u64.\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nCreates a new <code>Location</code> with <code>parents</code> and an empty (<code>Here</code>) …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nMutate <code>self</code> so that it is suffixed with <code>suffix</code>.\nMutate <code>self</code> so that it is suffixed with <code>suffix</code>.\nConsume <code>self</code> and return its value suffixed with <code>suffix</code>.\nProvides an API similar to <code>AsRef</code> that provides access to …\nCasts <code>self</code> into a slice containing <code>Junction</code>s.\nCasts <code>self</code> into a mutable slice containing <code>Junction</code>s.\nPanic if an expression doesn’t evaluate to <code>Ok</code>.\nReturns <code>true</code> if an <code>asset</code> exists.\nReturns the junction at index <code>i</code>, or <code>None</code> if the location …\nReturns the junction at index <code>i</code>, or <code>None</code> if the location …\nReturns a mutable reference to the junction at index <code>i</code>, or …\nReturns a mutable reference to the junction at index <code>i</code>, or …\nGet the balance of <code>who</code> which does not include funds which …\nCheck if the given weight can be consumed.\nReturns <code>true</code> if the <code>asset</code> balance of <code>who</code> may be increased …\nReturns <code>Failed</code> if the <code>asset</code> balance of <code>who</code> may not be …\nReturn the Location subsection identifying the chain that …\nChecks if the XCM is decodable. Consequently, it checks …\nTry to increase <code>self</code> by <code>amount</code> via checked addition.\nChecked <code>Weight</code> addition. Computes <code>self + rhs</code>, returning …\nChecked <code>Weight</code> scalar division. Computes …\nCalculates how many <code>other</code> fit into <code>self</code>.\nChecked <code>Weight</code> scalar multiplication. Computes …\nTry to reduce <code>self</code> by <code>amount</code> via checked subtraction.\nChecked <code>Weight</code> subtraction. Computes <code>self - rhs</code>, returning …\n<code>pallet_xcm_bridge_hub::Call::close_bridge</code>\nConsume some weight and defensively fail if it is over the …\nThe already consumed weight.\nThe ratio of consumed weight to the limit.\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns boolean indicating whether <code>self</code> contains only the …\nDecrements the parent count by 1.\nAttempt to deserialise the value from input.\nAttempt to deserialize the value from input into a …\nConsume some weight and defensively fail if it is over the …\nConstant version of Div with u64.\nTo prevent Out of Memory errors on the <code>DownwardMessageQueue</code>…\nConvert self to an owned vector.\nConvert self to a slice and append it to the destination.\nReturns the fixed encoded size of the type.\nCalculates the encoded size.\nDecode the inner encoded value and store it. Returns a …\nReturns first junction, or <code>None</code> if the location is empty.\nReturns the first interior junction, or <code>None</code> if the …\nExecute a function <code>f</code> on every junction. We use this since …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct <code>Weight</code> from the same weight for all parts.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nConstruct <code>Weight</code> from weight parts, namely reference time …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe fungibility of the asset, which contains either the …\nExtract the network ID treating this value as a universal …\nHandle some incoming DMP messages (note these are …\nHandle some incoming XCMP messages (note these are the big …\nCreates a new <code>Location</code> with 0 parents and a <code>Here</code> interior.\nThe overall asset identity (aka <em>class</em>, in the case of a …\nReturn a reference to the interior field.\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nReturn a mutable reference to the interior field.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAccess the encoded data.\nConvert <code>self</code> into a <code>Location</code> containing <code>n</code> parents.\nConvert <code>self</code> into a <code>Location</code> containing <code>n</code> parents.\nConvert <code>self</code> into a <code>Location</code> containing 0 parents.\nConvert <code>self</code> into a <code>Location</code> containing 0 parents.\nConvert <code>self</code> into a <code>VersionedLocation</code> containing 0 parents.\nConsume <code>self</code> and return the equivalent <code>VersionedLocation</code> …\nTreating <code>self</code> as the universal context, return the …\nWhether the <code>Location</code> has no parents and has a <code>Here</code> …\nReturns true if the given id corresponds to either the …\nReturns a reference iterator over the junctions.\nReturns last junction, or <code>None</code> if the location is empty.\nReturns last junction, or <code>None</code> if the location is empty or …\nReturns the number of junctions in <code>self</code>.\nReturns the number of parents and junctions in <code>self</code>.\nThe limit can ever be accrued.\nChange the limit to the given <code>weight</code>.\nEnsures that self begins with <code>prefix</code> and that it has a …\nEnsures that <code>self</code> has the same number of parents as <code>prefix</code>…\nGet the aggressive max of <code>self</code> and <code>other</code> weight.\nGet the conservative min of <code>self</code> and <code>other</code> weight.\nThe minimum balance any single account may have.\nConstant version of Mul with u64.\nCreates <code>Self</code> with the maximal possible limit for the …\nCreate an <code>Id</code>.\nCreate a new instance from its raw inner byte value.\nCreates a new <code>Location</code> with the given number of parents …\n<code>pallet_xcm_bridge_hub::Call::open_bridge</code>\nCreates a new <code>Location</code> which evaluates to the parent …\nReturns the number of <code>Parent</code> junctions at the beginning of …\nThe number of parent junctions at the beginning of this …\nPrepend a <code>Location</code> to a concrete asset, giving it a new …\nMutate <code>self</code> so that it is prefixed with <code>prefix</code>.\nConsume <code>self</code> and return its value prefixed with <code>prefix</code>.\nReturn the storage size part of the weight.\nReturn a mutable reference to the storage size part of the …\nMutates <code>self</code> to be appended with <code>new</code> or returns an <code>Err</code> …\nMutates <code>self</code> to be prepended with <code>new</code> or returns an <code>Err</code> …\nMutates <code>self</code>, prefixing its interior junctions with <code>new</code>. …\nMutates <code>self</code>, suffixing its interior junctions with <code>new</code>. …\nConsumes <code>self</code> and returns a <code>Junctions</code> prefixed with <code>new</code>, …\nConsumes <code>self</code> and returns a <code>Location</code> prefixed with <code>new</code>, or …\nConsumes <code>self</code> and returns a <code>Junctions</code> suffixed with <code>new</code>, …\nConsumes <code>self</code> and returns a <code>Location</code> suffixed with <code>new</code>, or …\nMutate the location of the asset identifier if concrete, …\nMutate <code>self</code> so that it represents the same location from …\nMutate the location of the asset identifier if concrete, …\nConsume <code>self</code> and return a new value representing the same …\nThe para that acts as the recipient in this channel.\nReclaim the given weight.\nGet the maximum amount that <code>who</code> can withdraw/transfer …\nReturn the reference time part of the weight.\nReturn a mutable reference to the reference time part of …\nConsumes <code>self</code> and returns how <code>viewer</code> would address it …\nThe remaining weight that can still be consumed.\nRemove the <code>NetworkId</code> value.\nRemove the <code>NetworkId</code> value in any <code>Junction</code>s.\nRemove the <code>NetworkId</code> value in any interior <code>Junction</code>s.\nIncrement <code>Weight</code> by <code>amount</code> via saturating addition.\nSaturating <code>Weight</code> addition. Computes <code>self + rhs</code>, …\nSaturating <code>Weight</code> scalar division. Computes …\nSaturating <code>Weight</code> scalar multiplication. Computes …\nSaturating <code>Weight</code> scalar exponentiation. Computes …\nReduce <code>Weight</code> by <code>amount</code> via saturating subtraction.\nSaturating <code>Weight</code> subtraction. Computes <code>self - rhs</code>, …\nThe para that acts as the sender in this channel.\nSet the storage size part of the weight.\nSet the reference time part of the weight.\nRemove any unneeded parents/junctions in <code>self</code> based on the …\nIf possible give a hint of expected size of the encoding.\nAttempt to skip the encoded value from input.\nSplits off the first junction, returning the remaining …\nSplits off the first interior junction, returning the …\nExtract the network ID and the interior consensus …\nSplits off the last junction, returning the remaining …\nSplits off the last interior junction, returning the …\nConstant version of Sub for <code>proof_size</code> component with u64.\nConstant version of Sub for <code>ref_time</code> component with u64.\nMove the decoded value out or (if not present) decode …\nRemoves the first element from <code>self</code>, returning it (or <code>None</code> …\nRemoves the first interior junction from <code>self</code>, returning it\nRemoves the last element from <code>self</code>, returning it (or <code>None</code> …\nRemoves the last element from <code>interior</code>, returning it (or …\nGet the total amount of funds whose ultimate beneficial …\nThe total amount of issuance in the system.\nTry to add some <code>other</code> weight while upholding the <code>limit</code>.\nConsume the given weight after checking that it can be …\nProvides an API similar to <code>TryInto</code> that allows fallible …\nReturns the parent count and the interior <code>Junctions</code> as a …\nConvert self to a slice and then invoke the given closure …\nHow much weight was used by the XCM execution attempt.\nCreates <code>Self</code> from <code>consumed</code> and <code>limit</code>.\nCreates <code>Self</code> from a limit for the maximal consumable …\nTreat <code>self</code> as a universal location and the context of …\nReturn a <code>Weight</code> where all fields are zero.\nThe EIP-155 chain ID.\nUniversal <code>InteriorLocation</code> from the bridged consensus.\nUniversal <code>InteriorLocation</code> from the bridged consensus.\nThe number of messages that we may prune in a single call.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe downward messages addressed for a certain para.\nThe message being sent exceeds the configured max message …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nAn error sending a downward message.\nThe destination is unknown.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe downward messages addressed for a certain para.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe channel is already confirmed.\nThe channel from the sender to the origin doesn’t exist.\nThe recipient already has the maximum number of allowed …\nContains a variant per dispatchable extrinsic that this …\nCanceling is requested by neither the sender nor recipient …\nHRMP channel closed.\nThe channel between these two chains cannot be authorized.\nThe origin that can perform “force” actions on …\nThe channel close request is already requested.\nThe channel to be closed doesn’t exist.\nThe origin tries to close a channel where it is neither …\nConfiguration trait of this pallet.\nAn interface for reserving deposits for opening channels.\nThe default channel size and capacity to use when opening …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nPreopen the given HRMP channels.\nMaximum bound that can be set for inbound channels.\nSame as <code>HRMP_MAX_INBOUND_CHANNELS_BOUND</code>, but for outbound …\nThis mapping tracks how many open channel requests were …\nA metadata of an HRMP channel.\nStorage for the messages for each channel. Invariant: …\nMaintains a mapping that can be used to answer the …\nAn HRMP channel was opened via Root origin.\nHRMP channel data associated with each para. Invariant:\nA set of pending HRMP close channel requests that are …\nStorage type is <code>StorageValue</code> with value type …\nStorage type is <code>StorageMap</code> with key type <code>ParaId</code> and value …\nIngress/egress indexes allow to find all the senders and …\nA description of a request to open an HRMP channel.\nThis mapping tracks how many open channel requests are …\nThe set of pending HRMP open channel requests.\nStorage type is <code>StorageValue</code> with value type …\nAn HRMP channel was opened with a system chain.\nThe HRMP watermark associated with each para. Invariant:\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nOpen HRMP channel accepted.\nAn HRMP channel request sent by the receiver was canceled …\nAn HRMP channel’s deposits were updated.\nOpen HRMP channel requested.\nCannot cancel an HRMP open channel request because it is …\nThe channel already exists\nThere is already a request to open the same channel.\nThe requested capacity exceeds the global limit.\nThe open request doesn’t exist.\nThe recipient is not a valid para.\nThe sender already has the maximum number of allowed …\nThe open request requested the message size that exceeds …\nThe sender tried to open a channel to themselves.\nThe requested capacity is zero.\nThe requested maximum message size is 0.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe outer event type.\nA weight info that is only suitable for testing.\nMeans of converting an <code>Xcm</code> into a <code>VersionedXcm</code>. This …\nSomething that provides the weight of this pallet.\nThe provided witness data is wrong.\nNOTE: this field is deprecated. Channel open requests …\nAccept a pending open channel request from the given …\nIndicates if this request was confirmed by the recipient.\nEstablish a bidirectional HRMP channel between a parachain …\nEstablish a bidirectional HRMP channel between a parachain …\nEstablish an HRMP channel between two system chains. If …\nEstablish an HRMP channel between two system chains. If …\nThis extrinsic triggers the cleanup of all the HRMP …\nThis extrinsic triggers the cleanup of all the HRMP …\nOpen a channel from a <code>sender</code> to a <code>recipient</code> <code>ParaId</code>. …\nOpen a channel from a <code>sender</code> to a <code>recipient</code> <code>ParaId</code>. …\nForce process HRMP close channel requests.\nForce process HRMP close channel requests.\nForce process HRMP open channel requests.\nForce process HRMP open channel requests.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAccept a pending open channel request from the given …\nAccept a pending open channel request from the given …\nThis cancels a pending open channel request. It can be …\nThis cancels a pending open channel request. It can be …\nInitiate unilateral closing of a channel. The origin must …\nInitiate unilateral closing of a channel. The origin must …\nInitiate opening a channel from a parachain to a given …\nInitiate opening a channel from a parachain to a given …\nInitiate opening a channel from a parachain to a given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum number of messages that can be pending in the …\nThe maximum number of messages that can be pending in the …\nThe maximum message size that could be put into the …\nThe maximum message size that could be put into the …\nThe maximum total size of the messages that can be pending …\nThe maximum total size of the messages that can be pending …\nA head of the Message Queue Chain for this channel. Each …\nThe current number of messages pending in the channel. …\nCreate a call with the variant …\nCreate a call with the variant <code>establish_system_channel</code>.\nCreate a call with the variant <code>force_clean_hrmp</code>.\nCreate a call with the variant <code>force_open_hrmp_channel</code>.\nCreate a call with the variant <code>force_process_hrmp_close</code>.\nCreate a call with the variant <code>force_process_hrmp_open</code>.\nCreate a call with the variant <code>hrmp_accept_open_channel</code>.\nCreate a call with the variant <code>hrmp_cancel_open_request</code>.\nCreate a call with the variant <code>hrmp_close_channel</code>.\nCreate a call with the variant <code>hrmp_init_open_channel</code>.\nCreate a call with the variant <code>poke_channel_deposits</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nUpdate the deposits held for an HRMP channel to the latest …\nUpdate the deposits held for an HRMP channel to the latest …\nThe amount that the recipient supplied as a deposit when …\nThe amount that the sender supplied at the time of …\nThe amount that the sender supplied as a deposit when …\nThe total size in bytes of all message payloads in the …\nThe channel is already confirmed.\nThe channel from the sender to the origin doesn’t exist.\nThe recipient already has the maximum number of allowed …\nContains a variant per dispatchable extrinsic that this …\nCanceling is requested by neither the sender nor recipient …\nHRMP channel closed.\nThe channel between these two chains cannot be authorized.\nThe origin that can perform “force” actions on …\nThe channel close request is already requested.\nThe channel to be closed doesn’t exist.\nThe origin tries to close a channel where it is neither …\nConfiguration trait of this pallet.\nAn interface for reserving deposits for opening channels.\nThe default channel size and capacity to use when opening …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nPreopen the given HRMP channels.\nThis mapping tracks how many open channel requests were …\nStorage for the messages for each channel. Invariant: …\nMaintains a mapping that can be used to answer the …\nAn HRMP channel was opened via Root origin.\nHRMP channel data associated with each para. Invariant:\nA set of pending HRMP close channel requests that are …\nStorage type is <code>StorageValue</code> with value type …\nStorage type is <code>StorageMap</code> with key type <code>ParaId</code> and value …\nIngress/egress indexes allow to find all the senders and …\nThis mapping tracks how many open channel requests are …\nThe set of pending HRMP open channel requests.\nStorage type is <code>StorageValue</code> with value type …\nAn HRMP channel was opened with a system chain.\nThe HRMP watermark associated with each para. Invariant:\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nOpen HRMP channel accepted.\nAn HRMP channel request sent by the receiver was canceled …\nAn HRMP channel’s deposits were updated.\nOpen HRMP channel requested.\nCannot cancel an HRMP open channel request because it is …\nThe channel already exists\nThere is already a request to open the same channel.\nThe requested capacity exceeds the global limit.\nThe open request doesn’t exist.\nThe recipient is not a valid para.\nThe sender already has the maximum number of allowed …\nThe open request requested the message size that exceeds …\nThe sender tried to open a channel to themselves.\nThe requested capacity is zero.\nThe requested maximum message size is 0.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe outer event type.\nMeans of converting an <code>Xcm</code> into a <code>VersionedXcm</code>. This …\nSomething that provides the weight of this pallet.\nThe provided witness data is wrong.\nEstablish a bidirectional HRMP channel between a parachain …\nEstablish an HRMP channel between two system chains. If …\nThis extrinsic triggers the cleanup of all the HRMP …\nOpen a channel from a <code>sender</code> to a <code>recipient</code> <code>ParaId</code>. …\nForce process HRMP close channel requests.\nForce process HRMP open channel requests.\nAccept a pending open channel request from the given …\nThis cancels a pending open channel request. It can be …\nInitiate unilateral closing of a channel. The origin must …\nInitiate opening a channel from a parachain to a given …\nUpdate the deposits held for an HRMP channel to the latest …\nSome way of identifying an account on the chain. We …\nAn opaque 32-byte cryptographic identifier.\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nEither an amount of a single fungible asset, or a single …\nLocation to identify an asset.\nMeans of identifying one asset class from another.\nThe given asset is not handled as a fee asset.\nMatches assets based on inner <code>AssetFilter</code> and tags them …\nA <code>Vec</code> of <code>Asset</code>s.\nIt is signed by nobody, the extrinsic is authorized by the …\nThe type that is returned as result from calculation.\nThe balance of an account.\nScalar type for representing balance of an account.\nA bounded vector.\nExecution completed successfully; given weight was used.\n…\nAbstraction over a fungible assets system.\nshould reserve-transfer <code>asset</code> to <code>dest</code>, using <code>dest</code> as …\nA lazy call (module function and argument values) that can …\nThe <code>Pallet</code> struct, the main type that implements traits …\nDefine a handler for when some non-empty <code>AssetsInHolding</code> …\nAPI for dry-running extrinsics and XCM programs to get the …\nExecution did not start due to an error. We use …\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA <code>Dispatchable</code> function (aka transaction) that can carry …\nA global network capable of externalizing its own …\nExecution started, but did not complete successfully due to…\nAn opaque set of information attached to the transaction. …\nTrait for providing balance-inspection access to a set of …\nA single item in a path to describe the relative location …\nWeight limit imposed of the inner value.\nshould reserve-transfer <code>asset</code> to <code>dest</code>, using local chain …\nA relative path between state-bearing consensus systems.\nTrait for providing a basic fungible asset.\nOrigin should just be the native dispatch origin …\nThe opaque token type for an imbalance. This is returned …\nIt is signed by nobody, can be either:\nThe unambiguous child.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn instanced, indexed pallet that forms a constituent part …\nAn indexed parachain belonging to and operated by the …\nA unit struct which can be converted into a <code>Location</code> of …\nA pluralistic body existing within consensus.\nThe opaque token type for an imbalance. This is returned …\nAdditional information that is returned by <code>dispatch</code>. Can …\nOrigin for the System pallet.\nshould reserve-transfer <code>asset</code> to <code>dest</code>, using remote chain …\nreserve-transfer assets matching <code>AssetFilter</code> to a specific …\nreserve-transfer assets matching <code>AssetFilter</code> to a specific …\nThe system itself ordained this dispatch to happen: this …\nEvery function call from your runtime has an origin, which …\nIt is signed by some public key and we provide the …\nOrigin should just be the standard account-based origin …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nteleport assets matching <code>AssetFilter</code> to a specific …\nshould teleport <code>asset</code> to <code>dest</code>\nDefault <code>Args</code> provided by xcm-emulator to be stored in a …\nAuxiliar struct to help creating a new <code>Test</code> instance\nSpecify which type of asset transfer is required for a …\nXCM version not able to be handled.\nAn API part is unsupported.\nNo weight limit imposed.\nDestination is known to be unroutable.\nA single version’s <code>AssetId</code> value, together with its …\nA single <code>MultiAssets</code> value, together with its version code.\nConverting a versioned data structure from one version to …\nA single <code>Location</code> value, together with its version code.\nA single XCM message, together with its version code.\nAn optional weight limit.\nXCM message weight calculation failed.\nA trait that describes the weight to fee calculation.\nOrigin should be interpreted as an XCM native origin and …\nContextual data pertaining to a specific list of XCM …\nA trait of XCM payment API.\nThe total amount of issuance in the system excluding those …\nReturn a <code>BoundedSlice</code> with the content and bound of <code>Self</code>.\nReturns <code>Some</code> with a reference to the <code>AccountId</code> if <code>self</code> is …\nPanic if an expression doesn’t evaluate to <code>Ok</code>.\nReturns <code>true</code> if an <code>asset</code> exists.\nGet the balance of <code>who</code> which does not include funds which …\nGet the bound of the type in <code>usize</code>.\nSame as <code>Vec::resize</code>, but if <code>size</code> is more than <code>Self::bound</code>, …\nReduce the total issuance by <code>amount</code> and return the …\nAttempt to decrease the balance of <code>who</code>, burning the tokens.\nReturns <code>true</code> if the <code>asset</code> balance of <code>who</code> may be increased …\nDetermine whether enqueuing a downward message to a …\nSame result as <code>slash(who, value)</code> (but without the …\nReturns <code>Failed</code> if the <code>asset</code> balance of <code>who</code> may not be …\nExactly the same semantics as <code>Vec::clear</code>.\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReduce the active issuance by some amount.\nAdds up to <code>value</code> to the free balance of <code>who</code>. If <code>who</code> doesn…\nMints <code>value</code> to the free balance of <code>who</code>.\nActually dispatch this call and return the result of it.\nExact same semantics as <code>Vec::drain</code>.\nConsume <code>self</code> and return the inner vec.\nHandler for receiving dropped assets. Returns the weight …\nDry run call V2.\nDry run XCM program\nReturns <code>Ok</code> iff the account is able to make a withdrawal of …\nReturn the first instruction, if any.\nForces the insertion of <code>element</code> into <code>self</code> retaining all …\nForces the insertion of <code>element</code> into <code>self</code> retaining all …\nForces the insertion of <code>s</code> into <code>self</code> truncating first if …\nThe ‘free’ balance of a given account.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new instance of <code>Assets</code> from a <code>Vec&lt;Asset&gt;</code> whose …\nCreate a new instance of <code>Assets</code> from a <code>Vec&lt;Asset&gt;</code> whose …\nThe fungibility of the asset, which contains either the …\nReturn a reference to an item at a specific index or <code>None</code> …\nReturn a <code>DispatchInfo</code>, containing relevant information of …\nExactly the same semantics as <code>slice::get_mut</code>.\nThe overall asset identity (aka <em>class</em>, in the case of a …\nReturn a reference to the inner vec.\nReturns reference to inner <code>AssetFilter</code> ignoring the …\nReturn a reference to the inner value.\nReturn a mutable reference to the inner value.\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUse the value of <code>self</code> along with a <code>fun</code> fungibility …\nConsume self, and return the inner <code>Vec</code>. Henceforth, the …\nConsume <code>self</code> and return the inner vec.\nConsume and return the inner value.\nConsume and return an iterator over the items.\nReturn the only instruction, contained in <code>Self</code>, iff only …\nUse the value of <code>self</code> along with a <code>fun</code> fungibility …\nReturn <code>true</code> if no instructions are held in <code>self</code>.\nReturns true if this collection is full.\nReturns <code>true</code> if <code>self</code> is <code>None</code>, <code>None</code> otherwise.\nReturns <code>true</code> if this definitely represents no asset.\nReturns <code>true</code> if <code>self</code> is <code>Root</code>, <code>None</code> otherwise.\nIncrease the total issuance by <code>amount</code> and return the …\nReturn an iterator over references to the items.\nExactly the same semantics as <code>slice::iter_mut</code>.\nReturn an iterator over mutable references to the items.\nReturn the last instruction, if any.\nExactly the same semantics as <code>slice::last_mut</code>.\nReturn the number of distinct asset instances contained.\nReturn the number of instructions held in <code>self</code>.\nEnsure an account’s free balance equals some value; this …\nMake the parachain reachable for downward messages.\nThe identity of the XCM; this may be a hash of its …\nThe minimum balance any single account may have. This is …\nThe minimum balance any single account may have.\nIncrease the balance of <code>who</code> by exactly <code>amount</code>, minting new …\nCreate <code>Self</code> with no items.\nA new (empty) value.\nCreate an empty instance.\nReturns a <code>TestArgs</code> instance to be used for parachains …\nReturns a <code>TestArgs</code> instance to be used for the Relay Chain …\nReturn the only instruction, contained in <code>Self</code>, iff only …\nConsume and either return <code>self</code> if it contains some …\nThe current value of the Origin register of the <code>XCVM</code>.\nProduce a pair of imbalances that cancel each other out …\nThe number of parent junctions at the beginning of this …\nExactly the same semantics as <code>Vec::pop</code>.\nPrepend a <code>Location</code> to an asset id, giving it a new root …\nPrepend a <code>Location</code> to any concrete asset items, giving it …\nAdd some asset onto the list, saturating. This is quite a …\nReturns a list of acceptable payment assets.\nGet delivery fees for sending a specific <code>message</code> to a …\nConverts a weight into a fee for the specified <code>AssetId</code>.\nReturns a weight needed to execute a XCM.\nEnqueue a downward message to a specific recipient para.\nIncrease the active issuance by some amount, up to the …\nMutate the asset to represent the same value from the …\nGet the maximum amount that <code>who</code> can withdraw/transfer …\nExactly the same semantics as <code>Vec::remove</code>.\nSimilar to deposit_creating, only accepts a …\nSimilar to deposit_creating, only accepts a …\nAttempt to increase the <code>asset</code> balance of <code>who</code> by <code>amount</code>.\nExactly the same semantics as <code>Vec::retain</code>.\nSimple infallible function to force an account to have a …\nSimilar to withdraw, only accepts a <code>PositiveImbalance</code> and …\nAttempt to decrease the <code>asset</code> balance of <code>who</code> by <code>amount</code>.\nDeducts up to <code>value</code> from the combined balance of <code>who</code>, …\nMove the position of an item from one location to another …\nExactly the same semantics as <code>slice::sort</code>.\nExactly the same semantics as <code>slice::sort_by</code>.\nExactly the same semantics as <code>slice::sort_by_key</code>.\nExactly the same semantics as <code>slice::swap_remove</code>.\nThe current value of the Topic register of the <code>XCVM</code>.\nReturns the topic if set, otherwise the message_id.\nThe combined balance of <code>who</code>.\nGet the total amount of funds whose ultimate beneficial …\nThe total amount of issuance in the system.\nThe total amount of issuance in the system.\nTransfer some liquid free balance to another staker.\nTransfer funds from one account into another.\nExactly the same semantics as <code>Vec::truncate</code>.\nConsume and truncate the vector <code>v</code> in order to create a new …\nExactly the same semantics as <code>Vec::append</code>, but returns an …\nExactly the same semantics as <code>Vec::extend</code>, but returns an …\nExactly the same semantics as <code>Vec::insert</code>, but returns an …\nConsumes self and mutates self via the given <code>mutate</code> …\nExactly the same semantics as <code>Vec::push</code>, but returns an <code>Err</code>…\nExactly the same semantics as [<code>Vec::rotate_left</code>], but …\nExactly the same semantics as [<code>Vec::rotate_right</code>], but …\nCalculates the fee from the passed <code>weight</code>.\nPre-allocate <code>capacity</code> items in self.\nAllocate self with the maximum possible capacity.\nConstructor which sets the message ID to the supplied …\nRemoves some free balance from <code>who</code> account for <code>reason</code> if …\nBuilds a <code>pallet_xcm::send</code> call to authorize an upgrade at …\nEncodes a runtime call and returns its H256 hash\nWraps a runtime call in a whitelist preimage call and …\nHelper method to get the fee asset used in multiple assets …\nHelper method to find all <code>Event::Processed</code> IDs from the …\nHelper method to find the ID of the first <code>Event::Processed</code> …\nHelper method to find the message ID of the first …\nHelper method to get the non-fee asset used in multiple …\nHelper method to build a XCM with a <code>Transact</code> instruction …\nHelper method to build a XCM with a <code>Transact</code> instruction …")