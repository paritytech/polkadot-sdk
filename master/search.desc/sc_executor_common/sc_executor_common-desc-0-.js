searchState.loadedDescShard("sc_executor_common", 0, "A set of common definitions that are needed for defining …\nRust executor possible errors.\nThis module allows for inspection and instrumentation, …\nUtilities used by all backends\nDefinitions for a wasm runtime.\nA WASM backtrace.\nFailure to erase the wasm memory.\nContains the error value\nError type.\nInstantiation error.\nAn error message with an attached backtrace.\nContains the success value\nOther error happened.\nResult type alias.\nType for errors occurring during Wasm runtime construction.\nThe backtrace associated with the error message.\nThe string containing the backtrace.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe error message.\nA program blob containing a Substrate runtime.\nGets a reference to the inner PolkaVM program blob, if …\nConverts a WASM memory import into a memory section and …\nScans the wasm blob for the first section with the name …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRun a pass that instrument this module so as to introduce …\nCalls <code>U::from(self)</code>.\nCreate <code>RuntimeBlob</code> from the given WASM or PolkaVM program …\nConsumes this runtime blob and serializes it.\nModifies the blob’s memory section according to the …\nCreate <code>RuntimeBlob</code> from the given WASM or PolkaVM …\nProvides safe memory access interface using an external …\nConstruct a range from an offset to a data length after …\nRead data from a slice of memory into a newly allocated …\nRead data from a slice of memory into a destination buffer.\nWrite data to a slice of memory.\nMemory allocation stats gathered during the lifetime of …\nDefault heap allocation pages.\nDefault heap allocation strategy.\nAllocate the initial heap pages as requested by the wasm …\nDefines the heap pages allocation strategy the wasm …\nAllocate a static number of heap pages.\nA trait that defines an abstract wasm module instance.\nA trait that defines an abstract WASM runtime module.\nThe amount of address space (in bytes) used by the …\nThe current number of bytes allocated.\nThe peak number of bytes ever allocated.\nThe sum of every allocation ever made.\nCall a method on this WASM instance.\nCall an exported method on this WASM instance.\nCall a method on this WASM instance.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance.\nThe number of pages that will be added on top of the …\nThe absolute maximum size of the linear memory (in pages).")