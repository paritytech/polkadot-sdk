searchState.loadedDescShard("pallet_delegated_staking", 0, "Delegated Staking Pallet\nThe log target of this pallet.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nMigrates <code>ProxyDelegator</code> accounts with better entropy than …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAn existing staker cannot perform this action.\nSome corruption in internal state.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nCore staking implementation.\nCurrency type.\nFunds delegated by a delegator.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA reason for placing a hold on funds.\nDelegation conditions are not met.\nReward Destination cannot be same as <code>Agent</code> account.\nUnclaimed delegation funds migrated to delegator.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nNot an existing <code>Agent</code> account.\nThe account cannot perform this operation.\nNot a Delegator account.\nThe account does not have enough funds to perform the …\nOperation not supported by this pallet.\n<code>Agent</code> has no pending slash to be applied.\nHandler for the unbalanced reduction when slashing a …\nThe <code>Pallet</code> struct, the main type that implements traits …\nInjected identifier for the pallet.\nFunds released to a delegator.\nThe overarching event type.\nOverarching hold reason.\nFraction of the slash that is rewarded to the caller of …\nFunds slashed from a delegator.\nFunds held for stake delegation to another account.\nUnapplied pending slash restricts operation on <code>Agent</code>.\nFailed to withdraw amount from Core Staking.\nEffective balance of the <code>Agent</code> account.\nAdd more delegation to the <code>Agent</code> account.\nDelegate given <code>amount</code> of tokens to an <code>Agent</code> account.\nAuto-generated docs-only module listing all defined …\nTake slash <code>amount</code> from agent’s <code>pending_slash</code>counter and …\nOnly used for testing.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nDerive an account from the migrating agent account where …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMigrate delegated funds that are held in <code>proxy_delegator</code> …\nMigrate from a <code>Nominator</code> account to <code>Agent</code> account.\nReturns pending slash of the <code>agent</code>.\nDelegate funds to an <code>Agent</code>.\nRegister an account to become a stake <code>Agent</code>. Sometimes …\nRelease previously delegated funds by delegator to origin.\nRemove <code>Agent</code> registration.\nRemove an account from being an <code>Agent</code>.\nAuto-generated docs-only module listing all (public and …\nWithdraw delegation of <code>delegator</code> to <code>Agent</code>.\nMap of <code>Agent</code> to their <code>Ledger</code>.\nMap of Delegators to their <code>Delegation</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")