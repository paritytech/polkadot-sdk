searchState.loadedDescShard("sc_offchain", 0, "Substrate offchain workers.\nNetworkProvider provides <code>OffchainWorkers</code> with all …\nSpecial type that implements <code>OffchainStorage</code>.\nOffchain DB that implements <code>DbExternalities</code> for …\nThe offchain worker api.\nOptions for <code>OffchainWorkers</code>\nAn offchain workers manager.\nPersistent storage prefix used by the Offchain Worker API …\nCallback to create custom <code>Extension</code>s that should be …\nEnable http requests from offchain workers?\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs the node running as validator?\nProvides access to the keystore.\nProvides access to network information.\nCreates new <code>OffchainWorkers</code>.\nCreate new instance of Offchain DB.\nProvides access to the offchain database.\nStarts the off-chain task for given block header.\nStarts the off-chain task for given block number.\nRun the offchain workers on every block import.\nProvides access to the runtime api.\nProvides access to the transaction pool.")