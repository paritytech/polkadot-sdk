searchState.loadedDescShard("pallet_xcm_bridge_hub_router", 0, "Pallet that may be used instead of …\nCurrent status of the bridge.\nMaximal size of the XCM message that may be sent over …\nThe target that will be used when publishing logs related …\nMinimal delivery fee factor.\nXCM channel status provider that may report whether it is …\nXCM bridge hub router pallet benchmarks.\nCurrent delivery fee factor.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns true if the channel is currently congested.\nBridge congestion flag.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for pallet_xcm_bridge_hub_router\nTrait that must be implemented by runtime to be able to …\nPallet we’re benchmarking here.\nReturns destination which is valid for this router …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nFill up queue so it becomes congested.\nBridge that we are using.\nOrigin of the sibling bridge hub that is allowed to report …\nThe bridged network that this config is for if specified. …\nConfiguration for supported <strong>bridged networks/locations</strong> …\nAdditional fee that is paid for every byte of the outbound …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nDelivery fee factor has been decreased.\nDelivery fee factor has been increased.\nChecks the XCM version for the destination.\nThe <code>Event</code> enum of this pallet\nAsset that is used to paid bridge fee.\n<code>Instance1</code> to be used for instantiable pallets defined with …\nLocal XCM channel manager.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe overarching event type.\nRelative location of the supported sibling bridge hub.\nActual message sender (<code>HRMP</code> or <code>DMP</code>) to the sibling bridge …\nUniversal location of this runtime.\nBenchmarks results from runtime we’re plugged into.\nAn auto-generated getter for <code>Bridge</code>.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThis router needs to implement <code>InspectMessageQueues</code> but …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>report_bridge_status</code>.\nNotification about congested bridge queue.\nNotification about congested bridge queue.\nAuto-generated docs-only module listing all (public and …\nNew value of the <code>DeliveryFeeFactor</code>.\nNew value of the <code>DeliveryFeeFactor</code>.\nNotification about congested bridge queue.\nBridge that we are using.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_xcm_bridge_hub_router</code> that are …\nWeight functions needed for pallet_xcm_bridge_hub_router.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: UNKNOWN KEY …\nStorage: <code>XcmBridgeHubRouter::DeliveryFeeFactor</code> (r:1 w:1)\nStorage: <code>XcmBridgeHubRouter::Bridge</code> (r:1 w:1)")