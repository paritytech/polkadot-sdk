searchState.loadedDescShard("sc_telemetry", 0, "Substrate’s client telemetry is a part of substrate that …\nConsensus DEBUG log level.\nConsensus INFO log level.\nConsensus TRACE log level.\nConsensus WARN log level.\nMessage sent when the connection (re-)establishes.\nContains the error value\nContains the success value\nSubstrate DEBUG log level.\nSubstrate INFO log level.\nHardware and software information for the node.\nA telemetry instance that can be used to send telemetry …\nUsed to create a stream of events with only one event: …\nList of telemetry servers we want to talk to. Contains the …\nHandle to a <code>Telemetry</code>.\nTelemetry worker.\nHandle to the <code>TelemetryWorker</code> thats allows initializing …\nTelemetry message verbosity.\nNode is an authority.\nNode’s chain.\nNode’s configuration.\nThe number of physical CPU cores.\nThe exact CPU model.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nNode’s genesis hash.\nGet a new <code>TelemetryWorkerHandle</code>.\nMake a new clonable handle to this <code>Telemetry</code>. This is used …\nNode’s implementation.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if there are no telemetry endpoints, <code>false</code> …\nWhether the node’s running under a virtual machine.\nThe exact Linux distribution used.\nThe Linux kernel version.\nThe total amount of memory, in bytes.\nNode’s name.\nNode’s network ID.\nCreate a <code>TelemetryEndpoints</code> based on a list of <code>(String, u8)</code>…\nInstantiate a new <code>TelemetryWorker</code> which can run in …\nInstantiate a new <code>Telemetry</code> object.\nGet event stream for telemetry connection established …\nRun the telemetry worker.\nSend telemetry messages.\nInitialize the telemetry with the endpoints provided in …\nNode’s startup time.\nNode’s software and hardware information.\nNode’s ISA.\nNode’s target platform ABI or libc.\nNode’s OS.\nReport a telemetry.\nNode’s version.")