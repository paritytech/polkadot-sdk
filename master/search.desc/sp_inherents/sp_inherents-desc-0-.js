searchState.loadedDescShard("sp_inherents", 0, "Substrate Inherent Extrinsics\nThe result of checking inherents.\nSomething that can create inherent data providers.\nErrors that occur in context of inherents.\nInherent data to include in a block.\nSomething that provides inherent data.\nThe inherent data providers that will be created.\nAn identifier for an inherent.\nDid we encounter a fatal error while checking an inherent?\nAuxiliary to make any given error resolve to …\nConvenience function for creating <code>InherentData</code>.\nConvenience function for creating <code>InherentData</code>.\nCreate the inherent data providers at the given <code>parent</code> …\nIs this a fatal error?\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the data for the requested inherent.\nGet an error out of the result.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into an iterator over all contained errors.\nIs this a fatal error?\nGet the number of inherents in this instance\nCreate a new instance.\nCreate a new instance.\nIs this result ok?\nProvide inherent data that should be included in a block.\nPut data for an inherent into the internal storage.\nPut an error into the result.\nReplace the data for an inherent.\nConvert the given encoded error to a string.")