searchState.loadedDescShard("pallet_meta_tx", 0, "Meta Tx (Meta Transaction) Pallet\nMeta Transaction type.\nThe <code>MetaTx</code> for the given config.\nThis type serves as a marker extension to differentiate …\nA weightless extension to facilitate the bare dispatch …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates new <code>TransactionExtension</code> with implicit meta tx …\nCreate a new meta transaction.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for <code>pallet_meta_tx</code>\nThe meta transactions’s birth block is ancient.\nInvalid proof (e.g. signature).\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nA meta transaction has been dispatched.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nTransaction extension/s for meta transactions.\nThe meta transaction is not yet valid (e.g. nonce too …\nThe meta transaction is invalid.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe overarching event type.\nThe meta transaction is outdated (e.g. nonce too low).\nThe transaction extension did not authorize any origin.\nWeight information for calls in this pallet.\nDispatch a given meta transaction.\nDispatch a given meta transaction.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>dispatch</code>.\nAuto-generated docs-only module listing all (public and …\nDispatch a given meta transaction.\nWeights for <code>pallet_meta_tx</code> using the Substrate node and …\nWeight functions needed for <code>pallet_meta_tx</code>.\nStorage: <code>SafeMode::EnteredUntil</code> (r:1 w:0) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.")