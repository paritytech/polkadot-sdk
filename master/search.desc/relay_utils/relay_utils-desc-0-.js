searchState.loadedDescShard("relay_utils", 0, "Utilities used by different relays.\nBlock number traits shared by all chains that relay is …\nBoth clients are failing, or we just encountered some …\nDelay after connection-related error happened before we’…\nThe error is connection-related error.\nFuture has failed with connection error.\nFuture has failed with non-connection error.\nWhich client has caused error.\nTransaction has been mined and finalized at given block.\nGeneric header Id.\nHeader id, used by the chain.\nTransaction has been lost.\nMax delay after connection-unrelated error happened before …\nError type that can signal connection errors.\nThe error is connection-unrelated error.\nFuture process result.\nDefault relay loop stall timeout. If transactions …\nIt is the source client who has caused error.\nStringified error that may be either connection-related or …\nFuture has been processed successfully.\nIt is the target client who has caused error.\nFuture associated with <code>TransactionTracker</code>, monitoring the …\nFinal status of the tracked transaction.\nTransaction tracker.\nJust like <code>From</code> except that if the source value is too big …\nJust like <code>Into</code> except that if the source value is too big …\nMacro that returns (client, Err(error)) tuple from …\nMacro that returns (client, Err(error)) tuple from …\nReturns Ok(true) if future has succeeded. Returns …\nReturns <code>Ok(())</code> if future has succeeded. Returns …\nCompact format of IDs vector.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn header hash.\nRelayer initialization functions.\nStream that emits item every <code>timeout_ms</code> milliseconds.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if error (maybe) represents connection error.\nReturns true if result is Success.\nCreate new stringified connection error.\nReturn header number.\nProcess result of the future from a client.\nExponential backoff for connection-unrelated errors …\nConvert from a value of <code>T</code> into an equivalent instance of …\nConsume self to return an equivalent value of <code>T</code>.\nWait until transaction is either finalized or …\nContains the error value\nRelay utilities errors.\nInvalid host address was used for exposing Prometheus …\nFailed to request a float value from HTTP service.\nCouldn’t found value in the JSON response.\nContains the success value\nFailed to parse float value from the selected value.\nFailed to parse the response from HTTP service.\nPrometheus error.\nResult type used by relay utilities.\nFailed to select response value from the Json response.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nRelayer version that is provided as metric. Must be set by …\nInitialize Relay logger instance.\nInitialize relay environment.\nA duplicate metric collector has already been registered.\nAn interface for atomics. Used to generically model float …\nAn interface for collecting metrics.\nThe underlying implementation for <code>Counter</code> and <code>IntCounter</code>.\nThe underlying implementation for <code>CounterVec</code> and …\nA atomic float.\nShared reference to <code>f64</code> value that is updated by the …\nMetric that represents float value received from HTTP …\nThe underlying implementation for <code>Gauge</code> and <code>IntGauge</code>.\nThe underlying implementation for <code>GaugeVec</code> and <code>IntGaugeVec</code>.\nGlobal Prometheus metrics.\nA atomic signed integer.\nThe label cardinality was inconsistent.\nInt gauge metric type.\nAn error containing a <code>std::io::Error</code>.\nMetric API.\nUnparsed address that needs to be used to expose …\nPrometheus endpoint MetricsParams.\nAn error message which is only a string.\nA struct that bundles the options for creating most <code>Metric</code> …\nThe error types for prometheus.\nA struct for registering Prometheus collectors, collecting …\nStandalone metric API.\nThe numeric type associated with this atomic.\nA atomic unsigned integer.\nAdd the given value to the gauge. (The value can be …\nInterface and TCP port to be used when exposing Prometheus …\nCollect metrics.\n<code>const_label</code> adds a const label.\n<code>const_labels</code> sets the const labels.\nconst_labels are used to attach fixed labels to this …\nDecrease the gauge by 1.\nDecrement the value by a given amount.\nReturn descriptors for metrics.\nDo not expose metrics.\nCreates metrics params so that metrics are not exposed.\n<code>fq_name</code> returns the fq_name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\n<code>gather</code> calls the Collect method of the registered …\nGet the value.\nReturn the counter value.\nReturn the gauge value.\nhelp provides information about this metric. Mandatory!\nServe HTTP requests at given host.\nIncrease the counter by 1.\nIncrease the gauge by 1.\nIncrement the value by a given amount.\nIncrease the given value to the counter.\nIncrement the value by a given amount with the provided …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn a <code>GenericLocalCounter</code> for single thread usage.\nReturns metric name optionally prefixed with given prefix.\nnamespace, subsystem, and name are components of the …\n<code>namespace</code> sets the namespace.\nnamespace, subsystem, and name are components of the …\nCreate a new atomic value.\nCreate new metric instance with given name and help.\nCreate and register global metrics.\nCreates metrics params from metrics address.\nCreate a <code>GenericCounter</code> with the <code>name</code> and <code>help</code> arguments.\nCreate a <code>GenericGauge</code> with the <code>name</code> and <code>help</code> arguments.\n<code>new</code> creates the Opts with the <code>name</code> and <code>help</code> arguments.\n<code>new</code> creates a Registry.\nCreate a new registry, with optional custom prefix and …\nServe HTTP requests at given port.\n<code>register</code> registers a new <code>Collector</code> to be included in …\nRegister and spawn metric. Metric is only spawned if it is …\nMetrics registry. May be <code>Some(_)</code> if several components …\nRestart the counter, resetting its value back to 0.\nSet the value to the provided value.\nSet the gauge to an arbitrary value.\nSet value of gauge metric.\nGet shared reference to metric value.\nSpawn the self update task that will keep update metric …\nSubtract the given value from the gauge. (The value can be …\n<code>subsystem</code> sets the sub system.\nnamespace, subsystem, and name are components of the …\nStore the value, returning the previous value.\nStores a value into the atomic integer, returning the …\n<code>unregister</code> unregisters the <code>Collector</code> that equals the …\nUpdate metric values.\nMetrics update interval.\n<code>variable_label</code> adds a variable label.\n<code>variable_labels</code> sets the variable labels.\nvariable_labels contains names of labels for which the …\nCreate a <code>GenericCounter</code> with the <code>opts</code> options.\nCreate a <code>GenericGauge</code> with the <code>opts</code> options.\nThe expected number of labels.\nThe actual number of labels.\nBasic blockchain client from relay perspective.\nType of error these clients returns.\nGeneric relay loop.\nRelay loop metrics builder.\nDefault pause between reconnect attempts.\nExpose metrics using address passed at creation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into <code>MetricsParams</code> structure so that metrics …\nAdd relay loop metrics.\nTry to reconnect to source node.\nCustomize delay between reconnect attempts.\nDeal with the clients that have returned connection error.\nTry to reconnect to the source node in an infinite loop …\nReturns generic loop that may be customized and started.\nReturns generic relay loop metrics that may be customized …\nRun relay loop.\nStart building loop metrics using given prefix.")