searchState.loadedDescShard("pallet_xcm", 0, "Pallet to handle XCM messages.\nThe given asset is not handled.\nFilter for <code>(origin: Location, target: Location)</code> to find …\nThe Origin Register does not contain a valid value for …\nThe XCM did not pass the barrier condition for execution.\nThe given message cannot be translated into a format …\n<code>EnsureOrigin</code> implementation succeeding with a <code>Location</code> …\n<code>EnsureOrigin</code> implementation succeeding with a <code>Location</code> …\nAttempt to send a message greater than the maximum …\nRecursion stack limit reached\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nThe message was unable to be exported.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees were required which the origin could not pay.\nThe given operation would lead to an overflow of the …\nThe location parameter is not a valid value for the …\nFilter for <code>Location</code> to find those which represent a strict …\nFilter for <code>Location</code> to find those which represent a voice …\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nSome other error with locking.\nUsed by <code>Transact</code> to indicate that the given weight limit …\nThe given pallet’s name is different to that expected.\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nAn arithmetic overflow happened.\nThe provided pallet index was not found.\n<code>MultiLocation</code> value failed to be reanchored.\nfallback implementation\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nToo many assets matched the given asset filter.\nDestination is routable, but there is some issue with the …\nUsed by the <code>Trap</code> instruction to force an error …\nThe universal location of the local consensus is improper.\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nDestination is known to be unroutable.\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nThe given pallet’s version has an incompatible version …\nExecution of the XCM would potentially result in a greater …\nThe weight of an XCM message is not computable ahead of …\nA simple passthrough where we reuse the <code>Location</code>-typed XCM …\nEnsure that the origin <code>o</code> represents an XCM response origin.\nEnsure that the origin <code>o</code> represents an XCM (<code>Transact</code>) …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nTrait that must be implemented by runtime to be able to …\nHelper that ensures successful delivery for …\nPallet we’re benchmarking here.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGets an asset that can be handled by the AssetTransactor.\nCalls <code>U::from(self)</code>.\nA <code>Location</code> that can be reached via <code>XcmRouter</code>. Used only in …\nA <code>(Asset, Location)</code> pair representing asset and the …\nSets up a complex transfer (usually consisting of a …\nA <code>(Asset, Location)</code> pair representing asset and the …\nWhen adding a new XCM version, we need to run this …\nUtilities for handling XCM version migration for the …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nVersion checked migration to v1.\nNamed with the ‘VersionUnchecked’-prefix because …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe given account is not an identifiable sovereign account …\nThe origin that is allowed to call privileged operations …\nThe latest supported version that we advertise. Generally …\n<code>target</code> removed alias authorization for <code>aliaser</code>.\nAn <code>aliaser</code> location was authorized by <code>target</code> to alias it, …\nThe alias to remove authorization for was not found.\n<code>target</code> removed all alias authorizations.\nThe location is invalid since it already has a …\nSome assets have been claimed from an asset trap\nSome assets have been placed in an asset trap.\nExecution of an XCM message was attempted.\nThe funds are held as storage deposit for an authorized …\nA means of providing some cost while Authorized Aliasers …\nThe given location could not be used (e.g. because it …\nThe version of the <code>Versioned</code> value used is not able to be …\nContains a variant per dispatchable extrinsic that this …\nCould not check-out the assets for teleportation to the …\nCould not re-anchor the assets to declare the fees for the …\nConfiguration trait of this pallet.\nA lockable currency.\nThe <code>Asset</code> matcher for <code>Currency</code>.\nAn implementation of <code>Get&lt;u32&gt;</code> which just returns the …\nThe destination <code>Location</code> provided cannot be inverted.\nThe assets to be sent are empty.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nRequired origin for executing XCM messages, including the …\nExpiry block number is in the past.\nThe operation required fees to be paid which the initiator …\nFees were paid from a location for an operation (often for …\nThe message execution fails the filter.\nCan be used to configure the genesis state of this pallet.\nA reason for this pallet placing a hold on funds.\nThe unlock operation cannot succeed because there are …\nInvalid asset, reserve chain could not be determined for …\nInvalid asset, do not support remote asset reserves with …\nOrigin is invalid for sending.\nExpected query response has been received but the querier …\nExpected query response has been received but the expected …\nExpected query response has been received but the origin …\nExpected query response has been received but the expected …\nLocal XCM execution incomplete.\nLocal XCM execution incomplete with the actual XCM error …\nA remote lock with the corresponding data could not be …\nThe owner does not own (all) of the asset that they wish …\nThe maximum number of distinct locations allowed as …\nThe maximum number of local XCM locks that a single …\nThe maximum number of consumers a single remote lock may …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe referenced subscription could not be found.\nQuery response has been received and query is removed. The …\nQuery response has been received and query is removed. The …\nQuery response has been received and query is removed. …\nQuery response has been received and query is removed. The …\nA given location which had a version change subscription …\nA given location which had a version change subscription …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe query was sent but no response has yet been received.\nAn XCM message failed to process.\nThe status of a query.\nA response has been received.\nThe ID type for local consumers of remote locks.\nIt comes as an expected response from an XCM location.\nQuery response has been received and is ready for taking …\nReceived query response has been read and removed.\nThe runtime <code>Call</code> type.\nThe overarching event type.\nThe runtime <code>Origin</code> type.\nAn XCM message failed to send.\nThere was some other issue (i.e. not to do with routing) …\nRequired origin for sending XCM messages. If successful, …\nAn XCM message was sent.\nHow to get an <code>AccountId</code> value from a <code>Location</code>, useful for …\nThe supported version of a location has been changed. This …\nToo many assets have been attempted for transfer.\nToo many locations authorized to alias origin.\nThe asset owner has too many locks on the asset.\nToo many assets with different reserve locations have been …\nThe assets which we consider a given origin is trusted if …\nQuery response received which does not match a registered …\nThis chain’s Universal Location.\nThe desired destination was unreachable, generally because …\nThe message’s weight could not be determined.\nAn XCM version change notification message has been …\nA XCM version migration finished.\nThe query is for an ongoing version notification …\nWe have requested that a remote chain send us XCM version …\nA remote has requested XCM version change notification …\nWe have requested that a remote chain stops sending us XCM …\nMeans of measuring the weight consumed by an XCM message …\nWeight information for extrinsics in this pallet.\nIt comes from somewhere in the XCM space wanting to …\nOur XCM filter which messages to be executed using …\nSomething to execute an XCM message.\nOur XCM filter which messages to be reserve-transferred …\nThe type used to actually dispatch an XCM to its …\nOur XCM filter which messages to be teleported using the …\nAuthorize another <code>aliaser</code> location to alias into the local …\nAuthorize another <code>aliaser</code> location to alias into the local …\nTotal amount of the asset held by the remote lock.\nAmount of the remote lock in use by consumers. Returns <code>None</code>…\nThe existing asset traps.\nReturns locations allowed to alias into and act as <code>target</code>.\nClaims assets trapped on this pallet because of leftover …\nClaims assets trapped on this pallet because of leftover …\nLocal consumers of the remote lock with a consumer …\nAuto-generated docs-only module listing all defined …\nEnsure the correctness of the state of this pallet.\nDry-runs <code>call</code> with the given <code>origin</code>.\nDry-runs <code>xcm</code> with the given <code>origin_location</code>.\nExecute an XCM message from a local, signed, origin.\nExecute an XCM message from a local, signed, origin.\nSet a safe XCM version (the version that XCM should be …\nSet a safe XCM version (the version that XCM should be …\nAsk a location to notify us regarding their XCM version …\nAsk a location to notify us regarding their XCM version …\nSet or unset the global suspension state of the XCM …\nSet or unset the global suspension state of the XCM …\nRequire that a particular destination should no longer …\nRequire that a particular destination should no longer …\nExtoll that a particular destination can be communicated …\nExtoll that a particular destination can be communicated …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGiven an <code>origin</code> and a <code>target</code>, returns if the <code>origin</code> …\nReturn true if a location is subscribed to XCM version …\nGiven an Asset and a Location, returns if the provided …\nGiven an Asset and a Location, returns if the asset can be …\nTransfer some assets from the local chain to the …\nTransfer some assets from the local chain to the …\nTeleport some assets from the local chain to some …\nTeleport some assets from the local chain to some …\nThe location which holds the original lock.\nCreate a call with the variant <code>add_authorized_alias</code>.\nCreate a call with the variant <code>claim_assets</code>.\nCreate a call with the variant <code>execute</code>.\nCreate a call with the variant <code>force_default_xcm_version</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>force_suspension</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>force_xcm_version</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>limited_teleport_assets</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>remove_authorized_alias</code>.\nCreate a call with the variant <code>reserve_transfer_assets</code>.\nCreate a call with the variant <code>send</code>.\nCreate a call with the variant <code>teleport_assets</code>.\nCreate a call with the variant <code>transfer_assets</code>.\nCreate a call with the variant …\nAttempt to create a new query ID and register it as a …\nAttempt to create a new query ID and register it as a …\nThe owner of the locked asset.\nThe ongoing queries.\nGiven a list of asset ids, returns the correct API …\nGiven a <code>destination</code> and XCM <code>message</code>, return assets to be …\nComputes the weight cost using the provided <code>WeightTrader</code>. …\nRemove all previously authorized <code>aliaser</code>s that can alias …\nRemove all previously authorized <code>aliaser</code>s that can alias …\nRemove a previously authorized <code>aliaser</code> from the list of …\nRemove a previously authorized <code>aliaser</code> from the list of …\nTo check the status of the query, use <code>fn query()</code> passing …\nConsume <code>message</code> and return another which is equivalent to …\nRequest that <code>dest</code> informs us of its version.\nTransfer some assets from the local chain to the …\nTransfer some assets from the local chain to the …\nThe default version to encode outgoing XCM messages with.\nRelay an XCM <code>message</code> from a given <code>interior</code> location in …\nStart notifying <code>location</code> should the XCM version of this …\nStop notifying <code>location</code> should the XCM change. This is a …\nAuto-generated docs-only module listing all (public and …\nThe default versioned locations to support at genesis.\nRemoves response when ready and emits Event::ResponseTaken …\nTeleport some assets from the local chain to some …\nTeleport some assets from the local chain to some …\nTransfer some assets from the local chain to the …\nTransfer some assets from the local chain to the …\nTransfer assets from the local chain to the destination …\nTransfer assets from the local chain to the destination …\nRequest that <code>dest</code> ceases informing us of its version.\nThe <code>QueryResponse</code> XCM must have this value as the <code>querier</code> …\nThe <code>QueryResponse</code> XCM must have this origin to be …\nAuthorize another <code>aliaser</code> location to alias into the local …\nClaims assets trapped on this pallet because of leftover …\nExecute an XCM message from a local, signed, origin.\nSet a safe XCM version (the version that XCM should be …\nAsk a location to notify us regarding their XCM version …\nSet or unset the global suspension state of the XCM …\nRequire that a particular destination should no longer …\nExtoll that a particular destination can be communicated …\nTransfer some assets from the local chain to the …\nTeleport some assets from the local chain to some …\nRemove all previously authorized <code>aliaser</code>s that can alias …\nRemove a previously authorized <code>aliaser</code> from the list of …\nTransfer some assets from the local chain to the …\nWarning: Doc-Only\nTeleport some assets from the local chain to some …\nTransfer some assets from the local chain to the …\nTransfer assets from the local chain to the destination …\nThe existing asset traps.\nMap of authorized aliasers of local origins. Each local …\nThe current migration’s stage, if any.\nFungible assets which we know are locked on this chain.\nThe ongoing queries.\nThe latest available query index.\nIf <code>ShouldRecordXcm</code> is set to true, then the last XCM …\nFungible assets which we know are locked on a remote chain.\nDefault version to encode XCM when latest version of …\nWhether or not incoming XCMs (both executed locally and …\nThe Latest versions that we know various locations support.\nDestinations whose latest XCM version we would like to …\nAll locations that we have requested version notifications …\nThe target locations that are subscribed to our version …\nGlobal suspension state of the XCM executor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n@title XCM Precompile Interface @notice A low-level …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nContainer for all the <code>IXcm</code> function calls.\nAll the selectors of this enum.\n@notice Weight v2 used for measurement for an XCM execution\n@notice Executes an XCM message locally on the current …\n@notice Executes an XCM message locally on the current …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n@custom:property The size of the proof needed to execute …\n@custom:property The computational time used to execute …\n@notice Sends an XCM message to another parachain or …\n@notice Sends an XCM message to another parachain or …\n@notice Estimates the <code>Weight</code> required to execute a given …\n@notice Estimates the <code>Weight</code> required to execute a given …\nFinds the message ID of the first <code>XcmPallet::Sent</code> event in …")