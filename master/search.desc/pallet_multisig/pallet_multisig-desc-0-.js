searchState.loadedDescShard("pallet_multisig", 0, "Multisig pallet\nThe log target of this pallet.\nAn open multisig operation.\nA global extrinsic index, formed as the extrinsic index …\nThe approvals achieved so far, including the depositor. …\nThe amount held in reserve of the <code>depositor</code>, to be …\nThe account who opened it (i.e. the first to approve it).\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe height of the chain at the point in time.\nThe index of the extrinsic at the point in time.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for <code>pallet_multisig</code>\nThe extrinsic when the multisig operation was opened.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCall is already approved by this signatory.\nThe data to be stored is already stored.\nQuery the current block number.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe currency mechanism.\nThe base amount of currency needed to reserve for creating …\nThe amount of currency needed per unit threshold when …\nThe deposit for a multisig operation has been …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe maximum amount of signatories allowed in the multisig.\nThe maximum weight information provided was too low.\nThreshold must be 2 or greater.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nA multisig operation has been approved by someone.\nA multisig operation has been cancelled.\nA multisig operation has been executed.\nThe set of open multisig operations.\nA new multisig operation has begun.\nCall doesn’t need any (more) approvals.\nNo timepoint was given, yet the multisig operation is …\nMultisig operation not found in storage.\nOnly the account that originally created the multisig is …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe overarching call type.\nThe overarching event type.\nThe sender was contained in the other signatories; it …\nThe signatories were provided out of order; they should be …\nThere are too few signatories in the list.\nThere are too many signatories in the list.\nA timepoint was given, yet no multisig operation is …\nWeight information for extrinsics in this pallet.\nA different timepoint was given to the multisig operation …\nRegister approval for a dispatch to be made from a …\nRegister approval for a dispatch to be made from a …\nRegister approval for a dispatch to be made from a …\nRegister approval for a dispatch to be made from a …\nImmediately dispatch a multi-signature call using a single …\nImmediately dispatch a multi-signature call using a single …\nCancel a pre-existing, on-going multisig transaction. Any …\nCancel a pre-existing, on-going multisig transaction. Any …\nCalculate the deposit for a multisig operation.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDerive a multi-account ID from the sorted list of accounts …\nCreate a call with the variant <code>approve_as_multi</code>.\nCreate a call with the variant <code>as_multi</code>.\nCreate a call with the variant <code>as_multi_threshold_1</code>.\nCreate a call with the variant <code>cancel_as_multi</code>.\nCreate a call with the variant <code>poke_deposit</code>.\nPoke the deposit reserved for an existing multisig …\nPoke the deposit reserved for an existing multisig …\nAuto-generated docs-only module listing all (public and …\nThe current <code>Timepoint</code>.\nRegister approval for a dispatch to be made from a …\nRegister approval for a dispatch to be made from a …\nImmediately dispatch a multi-signature call using a single …\nCancel a pre-existing, on-going multisig transaction. Any …\nPoke the deposit reserved for an existing multisig …\nThe set of open multisig operations.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_multisig</code> using the Substrate node and …\nWeight functions needed for <code>pallet_multisig</code>.\nStorage: <code>Multisig::Multisigs</code> (r:1 w:1) Proof: …\nStorage: <code>Multisig::Multisigs</code> (r:1 w:1) Proof: …\nStorage: <code>Multisig::Multisigs</code> (r:1 w:1) Proof: …\nStorage: <code>Multisig::Multisigs</code> (r:1 w:1) Proof: …\nStorage: <code>Multisig::Multisigs</code> (r:1 w:1) Proof: …\nStorage: <code>SafeMode::EnteredUntil</code> (r:1 w:0) Proof: …\nStorage: <code>Multisig::Multisigs</code> (r:1 w:1) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Multisig::Multisigs</code> (r:1 w:1) Proof: …")