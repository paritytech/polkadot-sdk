searchState.loadedDescShard("snowbridge_core", 0, "Core\nMetadata to include in the instantiated ERC20 token …\nThe ID of an agent contract\nIdentifier for a message channel\nDetermine if a parachain is a system parachain or not.\nMaximum value.\nChannel for high-priority governance commands\nUnique identifier of a parachain.\nChannel for lower-priority governance commands\nType to lookup from.\nType to lookup into.\nLittle-endian large integer type 256-bit unsigned integer.\nComputes the absolute difference between self and other.\nID of the agent contract deployed on Ethereum\nConversion to u128 with overflow checking\nConversion to u32 with overflow checking\nConversion to u64 with overflow checking\nConversion to usize with overflow checking\nReturn if specific bit is set.\nReturn the least number of bits needed to represent the …\nHelper function that validates <code>fee</code> can be burned, then …\nReturn specific byte. Byte 0 is the least significant …\nChecked addition. Returns <code>None</code> if overflow occurred.\nChecked division. Returns <code>None</code> if <code>other == 0</code>.\nChecked multiplication. Returns <code>None</code> if overflow occurred.\nChecked negation. Returns <code>None</code> unless <code>self == 0</code>.\nChecked exponentiation. Returns <code>None</code> if overflow occurred.\nChecked modulus. Returns <code>None</code> if <code>other == 0</code>.\nChecked subtraction. Returns <code>None</code> if overflow occurred.\nReturns a pair <code>(self / other, self % other)</code>.\nCreate <code>10**n</code> as this type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts from big endian representation bytes in memory.\nConvert from a decimal string.\nConverts from little endian representation bytes in memory.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nConverts a string slice in a given base to an integer. …\nMultiplies two 256-bit integers to produce full 512-bit …\nCompute the highest <code>n</code> such that <code>n * n &lt;= self</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if a parachain is a system parachain, <code>false</code> …\nWhether this is zero.\nReturns the number of leading zeros in the binary …\nLocation\nAttempt a lookup.\nLow 2 words (u128)\nConversion to u32\nLow word (u64)\nThe maximum value which can be inhabited by this type.\nCreate an <code>Id</code>.\nOne (multiplicative identity) of this type.\nAddition which overflows and returns a flag if it does.\nMultiply with overflow, returning a flag if it does.\nNegation with overflow.\nFast exponentiation by squaring. Returns result and …\nSubtraction which underflows and returns a flag if it does.\nID of the parachain who will receive or send messages …\nFast exponentiation by squaring …\nAddition which saturates at the maximum value (Self::MAX).\nMultiplication which saturates at the maximum value..\nSubtraction which saturates at zero.\nSparse Bitmap\nConvert to big-endian bytes.\nConvert to little-endian bytes.\nReturns the number of trailing zeros in the binary …\nWrite to the slice in big-endian format.\nZero (additive identity) of this type.\nCreates an AgentId from a Location. An AgentId is a unique …\nThis looks like DescribeTerminus that was added to …\nDetermine if a parachain is a system parachain or not.\nUnique identifier of a parachain.\nConvert a token location (relative to Ethereum) to a …\nLittle-endian large integer type 256-bit unsigned integer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if a parachain is a system parachain, <code>false</code> …\nBasic operating modes for a bridges module (Normal/Halted).\nCheck whether the export message is paused based on the …\nThe pallet is halted. All non-governance operations are …\nNormal mode, when all operations are allowed.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nHolder for fixed point number implemented in …\nETH/DOT exchange rate\nEther (wei) fee per gas unit\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocal reward in DOT\nFee multiplier\nRemote reward in ETH (wei)\nRelayer rewards\nTrait to add a tip for a nonce.\nThe delivery fee to send the XCM could not be charged.\nMessage from Ethereum\nDescribes the message that the tip should be added to …\nMessage to Ethereum\nReward payment procedure that sends a XCM to AssetHub to …\nError related to paying out relayer rewards.\nThe XCM to mint the reward on AssetHub could not be sent.\nAdd a relayer reward tip to a pallet.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrait object presenting the ringbuffer interface.\nCheck if map contains a key\nCheck if map contains a key\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet the value of the key\nGet the value associated with key\nInsert a map entry.\nInsert a map entry.\nCalls <code>U::from(self)</code>.\nSparse bitmap interface.\nSparse bitmap implementation.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet the bool at the provided index.\nChecks if the bit at the specified index is set. Returns …\nCalls <code>U::from(self)</code>.\nSet the bool at the given index to true.\nSets the bit at the specified index. This marks the nonce …")