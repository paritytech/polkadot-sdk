searchState.loadedDescShard("pallet_root_offences", 0, "Root Offences Pallet\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nFailed to get the active era from the staking pallet.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nAn offence was created by root.\nThe offence handler provided by the runtime.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe offence report system provided by the runtime.\nCustom offence type for testing spam scenarios.\nAllows the <code>root</code>, for example sudo to create an offence.\nAllows the <code>root</code>, for example sudo to create an offence.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>create_offence</code>.\nCreate a call with the variant <code>report_offence</code>.\nThe validator being slashed\nSame as <code>Pallet::create_offence</code>, but it reports the offence …\nSame as <code>Pallet::create_offence</code>, but it reports the offence …\nThe session in which the offence occurred\nSlash fraction to apply\nAuto-generated docs-only module listing all (public and …\nCustom time slot (allows unique offences within same …\nAllows the <code>root</code>, for example sudo to create an offence.\nSame as <code>Pallet::create_offence</code>, but it reports the offence …")