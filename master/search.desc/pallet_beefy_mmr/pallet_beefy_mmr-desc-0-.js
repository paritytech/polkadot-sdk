searchState.loadedDescShard("pallet_beefy_mmr", 0, "A BEEFY+MMR pallet combo.\nConvert BEEFY secp256k1 public keys into Ethereum addresses\nAPI useful for BEEFY light clients.\nA BEEFY consensus digest item with MMR root hash.\nWeight functions needed for <code>pallet_beefy_mmr</code>.\nReturn the currently active BEEFY authority set proof.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the next/queued BEEFY authority set proof.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nDetails of current BEEFY authority set.\nConvert BEEFY AuthorityId to a form that would end up in …\nRetrieve arbitrary data that should be added to the mmr …\nDetails of next BEEFY authority set.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe type expected for the leaf extra data\nCurrent leaf version.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nBEEFY-MMR pallet.\nReturn the currently active BEEFY authority set proof.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the next/queued BEEFY authority set proof.\nCompute and cache BEEFY authority sets based on updated …\nAuto-generated docs-only module listing all (public and …\nDetails of current BEEFY authority set.\nDetails of next BEEFY authority set.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")