searchState.loadedDescShard("pallet_migrations", 0, "<code>pallet-migrations</code>\nPoints to the currently active migration and its inner …\nPoints to the currently active migration and its inner …\nPoints to the currently active migration and its inner …\nConvenience alias for <code>ActiveCursor</code>.\nConvenience alias for <code>MigrationCursor</code>.\nHow to clear the records of historic migrations.\nConvenience alias for the identifier of a migration.\nPoints to the next migration to execute.\nTrait for a tuple of No-OP migrations with one element.\nConvenience alias for the raw inner cursor of a migration.\nClear exactly these entries.\nMigration got stuck and cannot proceed. This is bad.\nMigration got stuck and cannot proceed. This is bad.\nClear up to this many entries\nTry to return self as an <code>ActiveCursor</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe index of the migration in the MBM tuple.\nThe index of the migration in the MBM tuple.\nThe cursor of the migration that is referenced by <code>index</code>.\nThe cursor of the migration that is referenced by <code>index</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximal number of entries that this will remove.\nTest helpers for internal and external usage.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe migration should fail after <code>n</code> steps.\nThe migration should succeed after <code>n</code> steps.\nThe block number that the migration started at.\nThe block number that the migration started at.\nAutogenerated weights for <code>pallet_migrations</code>\nHow many should be cleared in this call at most.\nThe cursor that was emitted from any previous …\nFail after its number of steps elapsed.\nCause an <code>SteppedMigrationError::InsufficientWeight</code> error …\nOpaque identifier of a migration.\nHow a mocked migration should behave.\nAllows to set the migrations to run at runtime instead of …\nPostUpgrade should fail.\nPreUpgrade should fail.\nSucceed after its number of steps elapsed.\nNever terminate.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a migration identifier with a specific <code>kind</code> and …\nSet the migrations to run.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe currently active migration to run and its cursor.\nThe maximal length of an encoded cursor.\nThe maximal length of an encoded cursor.\nBased on <code>Config</code>. Auto-generated by …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nHandler for failed migrations.\nHandler for failed migrations.\nSet of all successfully executed migrations.\nThe set of historical migrations has been cleared.\nThe maximal length of an encoded identifier.\nThe maximal length of an encoded identifier.\nThe maximum weight to spend each block to execute …\nThe maximum weight to spend each block to execute …\nA migration progressed.\nA Migration completed.\nA Migration failed.\nA migration was skipped since it was already executed in …\nNotifications for status updates of a runtime upgrade.\nNotifications for status updates of a runtime upgrade.\nMocked migrations for benchmarking only.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe operation cannot complete since some MBMs are ongoing.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe overarching event type of the runtime.\nThe overarching event type of the runtime.\nThe current runtime upgrade completed.\nRuntime upgrade failed.\nA Runtime upgrade started.\nWeight information for the calls and functions of this …\nWeight information for the calls and functions of this …\nClears the <code>Historic</code> set.\nClears the <code>Historic</code> set.\nDefault implementations of <code>DefaultConfig</code>, which can be …\nAuto-generated docs-only module listing all defined …\nThe maximal weight of calling the private …\nForces the onboarding of the migrations.\nForces the onboarding of the migrations.\nAllows root to set an active cursor to forcefully …\nAllows root to set an active cursor to forcefully …\nAllows root to set a cursor to forcefully start, stop or …\nAllows root to set a cursor to forcefully start, stop or …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>clear_historic</code>.\nCreate a call with the variant <code>force_onboard_mbms</code>.\nCreate a call with the variant <code>force_set_active_cursor</code>.\nCreate a call with the variant <code>force_set_cursor</code>.\nAuto-generated docs-only module listing all (public and …\nThe index of the skipped migration within the …\nThe index of the migration within the <code>Config::Migrations</code> …\nThe index of the migration within the <code>Config::Migrations</code> …\nThe index of the migration within the <code>Config::Migrations</code> …\nThe number of migrations that this upgrade contains.\nShould be passed to <code>clear_historic</code> in a successive call.\nThe number of blocks that this migration took so far.\nThe number of blocks that this migration took so far.\nThe number of blocks that this migration took so far.\nProvides a viable default config that can be used with …\nMaximal weight per block that can be spent on migrations …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClears the <code>Historic</code> set.\nForces the onboarding of the migrations.\nAllows root to set an active cursor to forcefully …\nAllows root to set a cursor to forcefully start, stop or …\nThe currently active migration to run and its cursor.\nSet of all successfully executed migrations.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_migrations</code> using the Substrate node and …\nWeight functions needed for <code>pallet_migrations</code>.\nStorage: <code>MultiBlockMigrations::Historic</code> (r:256 w:256) …\nStorage: UNKNOWN KEY <code>0x583359fe0e84d953a9dd84e8addb08a5</code> …\nStorage: UNKNOWN KEY <code>0x583359fe0e84d953a9dd84e8addb08a5</code> …\nStorage: UNKNOWN KEY <code>0x583359fe0e84d953a9dd84e8addb08a5</code> …\nStorage: UNKNOWN KEY <code>0x583359fe0e84d953a9dd84e8addb08a5</code> …\nStorage: UNKNOWN KEY <code>0x583359fe0e84d953a9dd84e8addb08a5</code> …\nStorage: <code>MultiBlockMigrations::Cursor</code> (r:1 w:0) Proof: …\nStorage: <code>MultiBlockMigrations::Cursor</code> (r:0 w:1) Proof: …\nStorage: <code>MultiBlockMigrations::Cursor</code> (r:0 w:1) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>MultiBlockMigrations::Cursor</code> (r:1 w:1) Proof: …\nStorage: <code>MultiBlockMigrations::Cursor</code> (r:1 w:0) Proof: …")