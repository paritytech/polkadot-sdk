(function() {
    var type_impls = Object.fromEntries([["yet_another_parachain_runtime",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#544-554\">Source</a><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; <a class=\"trait\" href=\"yet_another_parachain_runtime/polkadot_sdk_frame/traits/trait.PartialStorageInfoTrait.html\" title=\"trait yet_another_parachain_runtime::polkadot_sdk_frame::traits::PartialStorageInfoTrait\">PartialStorageInfoTrait</a> for <a class=\"struct\" href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html\" title=\"struct yet_another_parachain_runtime::frame_support::pallet_prelude::StorageMap\">StorageMap</a>&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"yet_another_parachain_runtime/polkadot_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait yet_another_parachain_runtime::polkadot_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Hasher: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/trait.StorageHasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::StorageHasher\">StorageHasher</a>,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Get.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Get\">Get</a>&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Get.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div></section></summary><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#556\">Source</a><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/polkadot_sdk_frame/traits/trait.PartialStorageInfoTrait.html#tymethod.partial_storage_info\" class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/pallet_referenda/struct.Vec.html\" title=\"struct yet_another_parachain_runtime::pallet_referenda::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"yet_another_parachain_runtime/polkadot_sdk_frame/traits/struct.StorageInfo.html\" title=\"struct yet_another_parachain_runtime::polkadot_sdk_frame::traits::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","PartialStorageInfoTrait","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_assets::Asset","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_assets::Metadata","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_message_queue::BookStateFor","yet_another_parachain_runtime::emulated_integration_tests_common::impls::dmp::DownwardMessageQueues","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequests","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestCount","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpAcceptedChannelRequestCount","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequests","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpWatermarks","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannels","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpIngressChannelsIndex","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpEgressChannelsIndex","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannelContents","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannelDigests","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_asset_conversion::Pools","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Account","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Locks","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Reserves","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Holds","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Freezes","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_whitelist::WhitelistedCall","yet_another_parachain_runtime::frame_system::Account","yet_another_parachain_runtime::frame_system::BlockHash","yet_another_parachain_runtime::pallet_alliance::DepositOf","yet_another_parachain_runtime::pallet_alliance::Members","yet_another_parachain_runtime::pallet_alliance::RetiringMembers","yet_another_parachain_runtime::pallet_asset_rate::ConversionRateToNative","yet_another_parachain_runtime::pallet_asset_rewards::Pools","yet_another_parachain_runtime::pallet_asset_rewards::PoolCost","yet_another_parachain_runtime::pallet_babe::UnderConstruction","yet_another_parachain_runtime::pallet_bags_list::ListBags","yet_another_parachain_runtime::pallet_beefy::SetIdSession","yet_another_parachain_runtime::pallet_bounties::Bounties","yet_another_parachain_runtime::pallet_bounties::BountyDescriptions","yet_another_parachain_runtime::pallet_bridge_grandpa::ImportedHeaders","yet_another_parachain_runtime::pallet_bridge_messages::InboundLanes","yet_another_parachain_runtime::pallet_bridge_messages::OutboundLanes","yet_another_parachain_runtime::pallet_bridge_messages::OutboundMessages","yet_another_parachain_runtime::pallet_bridge_parachains::ParasInfo","yet_another_parachain_runtime::pallet_bridge_relayers::RegisteredRelayers","yet_another_parachain_runtime::pallet_broker::PotentialRenewals","yet_another_parachain_runtime::pallet_broker::Regions","yet_another_parachain_runtime::pallet_broker::Workplan","yet_another_parachain_runtime::pallet_broker::Workload","yet_another_parachain_runtime::pallet_broker::InstaPoolContribution","yet_another_parachain_runtime::pallet_broker::InstaPoolIo","yet_another_parachain_runtime::pallet_broker::InstaPoolHistory","yet_another_parachain_runtime::pallet_child_bounties::ParentChildBounties","yet_another_parachain_runtime::pallet_child_bounties::ParentTotalChildBounties","yet_another_parachain_runtime::pallet_child_bounties::V0ToV1ChildBountyIds","yet_another_parachain_runtime::pallet_child_bounties::ChildrenCuratorFees","yet_another_parachain_runtime::pallet_collator_selection::LastAuthoredBlock","yet_another_parachain_runtime::pallet_collective::ProposalOf","yet_another_parachain_runtime::pallet_collective::CostOf","yet_another_parachain_runtime::pallet_collective::Voting","yet_another_parachain_runtime::pallet_contracts::migration::v12::CodeInfoOf","yet_another_parachain_runtime::pallet_contracts::migration::v12::PristineCode","yet_another_parachain_runtime::pallet_contracts::migration::v13::ContractInfoOf","yet_another_parachain_runtime::pallet_contracts::migration::v16::ContractInfoOf","yet_another_parachain_runtime::pallet_conviction_voting::ClassLocksFor","yet_another_parachain_runtime::pallet_core_fellowship::Member","yet_another_parachain_runtime::pallet_core_fellowship::MemberEvidence","yet_another_parachain_runtime::pallet_democracy::DepositOf","yet_another_parachain_runtime::pallet_democracy::ReferendumInfoOf","yet_another_parachain_runtime::pallet_democracy::VotingOf","yet_another_parachain_runtime::pallet_democracy::Blacklist","yet_another_parachain_runtime::pallet_democracy::Cancellations","yet_another_parachain_runtime::pallet_democracy::MetadataOf","yet_another_parachain_runtime::pallet_derivatives::OriginalToDerivative","yet_another_parachain_runtime::pallet_derivatives::DerivativeToOriginal","yet_another_parachain_runtime::pallet_derivatives::DerivativeExtra","yet_another_parachain_runtime::pallet_dev_mode::Bar","yet_another_parachain_runtime::pallet_dummy_dim::ReservedIds","yet_another_parachain_runtime::pallet_dummy_dim::People","yet_another_parachain_runtime::pallet_election_provider_multi_block::signed::SortedScores","yet_another_parachain_runtime::pallet_election_provider_multi_block::DesiredTargets","yet_another_parachain_runtime::pallet_election_provider_multi_phase::SignedSubmissionsMap","yet_another_parachain_runtime::pallet_elections_phragmen::Voting","yet_another_parachain_runtime::pallet_grandpa::SetIdSession","yet_another_parachain_runtime::pallet_identity::IdentityOf","yet_another_parachain_runtime::pallet_identity::UsernameOf","yet_another_parachain_runtime::pallet_identity::SuperOf","yet_another_parachain_runtime::pallet_identity::SubsOf","yet_another_parachain_runtime::pallet_identity::AuthorityOf","yet_another_parachain_runtime::pallet_identity::UsernameInfoOf","yet_another_parachain_runtime::pallet_identity::PendingUsernames","yet_another_parachain_runtime::pallet_identity::UnbindingUsernames","yet_another_parachain_runtime::pallet_indices::Accounts","yet_another_parachain_runtime::pallet_migrations::Historic","yet_another_parachain_runtime::pallet_mmr::Nodes","yet_another_parachain_runtime::pallet_nft_fractionalization::NftToAsset","yet_another_parachain_runtime::pallet_nfts::Collection","yet_another_parachain_runtime::pallet_nfts::OwnershipAcceptance","yet_another_parachain_runtime::pallet_nfts::CollectionMetadataOf","yet_another_parachain_runtime::pallet_nfts::CollectionConfigOf","yet_another_parachain_runtime::pallet_nis::Queues","yet_another_parachain_runtime::pallet_nis::Receipts","yet_another_parachain_runtime::pallet_node_authorization::Owners","yet_another_parachain_runtime::pallet_node_authorization::AdditionalConnections","yet_another_parachain_runtime::pallet_nomination_pools::ClaimPermissions","yet_another_parachain_runtime::pallet_offences::Reports","yet_another_parachain_runtime::pallet_oracle::Values","yet_another_parachain_runtime::pallet_origin_restriction::Usages","yet_another_parachain_runtime::pallet_parameters::Parameters","yet_another_parachain_runtime::pallet_people::Root","yet_another_parachain_runtime::pallet_people::RingKeys","yet_another_parachain_runtime::pallet_people::RingKeysStatus","yet_another_parachain_runtime::pallet_people::PendingSuspensions","yet_another_parachain_runtime::pallet_people::KeyMigrationQueue","yet_another_parachain_runtime::pallet_people::People","yet_another_parachain_runtime::pallet_people::AliasToAccount","yet_another_parachain_runtime::pallet_people::AccountToAlias","yet_another_parachain_runtime::pallet_people::AccountToPersonalId","yet_another_parachain_runtime::pallet_people::Chunks","yet_another_parachain_runtime::pallet_people::ReservedPersonalId","yet_another_parachain_runtime::pallet_people::OnboardingQueue","yet_another_parachain_runtime::pallet_preimage::StatusFor","yet_another_parachain_runtime::pallet_preimage::RequestStatusFor","yet_another_parachain_runtime::pallet_preimage::PreimageFor","yet_another_parachain_runtime::pallet_proxy::Proxies","yet_another_parachain_runtime::pallet_proxy::Announcements","yet_another_parachain_runtime::pallet_ranked_collective::MemberCount","yet_another_parachain_runtime::pallet_ranked_collective::Members","yet_another_parachain_runtime::pallet_ranked_collective::VotingCleanup","yet_another_parachain_runtime::pallet_recovery::Recoverable","yet_another_parachain_runtime::pallet_recovery::Proxy","yet_another_parachain_runtime::pallet_referenda::migration::v0::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::migration::v1::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::TrackQueue","yet_another_parachain_runtime::pallet_referenda::DecidingCount","yet_another_parachain_runtime::pallet_referenda::MetadataOf","yet_another_parachain_runtime::pallet_revive::migrations::v1::old::ContractInfoOf","yet_another_parachain_runtime::pallet_salary::Claimant","yet_another_parachain_runtime::pallet_scheduler::Agenda","yet_another_parachain_runtime::pallet_scheduler::Retries","yet_another_parachain_runtime::pallet_scheduler::Lookup","yet_another_parachain_runtime::pallet_session::historical::HistoricalSessions","yet_another_parachain_runtime::pallet_session::NextKeys","yet_another_parachain_runtime::pallet_session::KeyOwner","yet_another_parachain_runtime::pallet_society::Members","yet_another_parachain_runtime::pallet_society::Payouts","yet_another_parachain_runtime::pallet_society::MemberByIndex","yet_another_parachain_runtime::pallet_society::SuspendedMembers","yet_another_parachain_runtime::pallet_society::Candidates","yet_another_parachain_runtime::pallet_society::VoteClearCursor","yet_another_parachain_runtime::pallet_staking::Bonded","yet_another_parachain_runtime::pallet_staking::Ledger","yet_another_parachain_runtime::pallet_staking::Payee","yet_another_parachain_runtime::pallet_staking::SpanSlash","yet_another_parachain_runtime::pallet_staking::ErasStartSessionIndex","yet_another_parachain_runtime::pallet_staking::ErasValidatorReward","yet_another_parachain_runtime::pallet_staking::ErasRewardPoints","yet_another_parachain_runtime::pallet_staking::ErasTotalStake","yet_another_parachain_runtime::pallet_staking::UnappliedSlashes","yet_another_parachain_runtime::pallet_staking::SlashingSpans","yet_another_parachain_runtime::pallet_staking_async::Bonded","yet_another_parachain_runtime::pallet_staking_async::Ledger","yet_another_parachain_runtime::pallet_staking_async::Payee","yet_another_parachain_runtime::pallet_staking_async::ErasValidatorReward","yet_another_parachain_runtime::pallet_staking_async::ErasRewardPoints","yet_another_parachain_runtime::pallet_staking_async::ErasTotalStake","yet_another_parachain_runtime::pallet_staking_async::CancelledSlashes","yet_another_parachain_runtime::pallet_staking_async::EraPruningState","yet_another_parachain_runtime::pallet_staking_async_ah_client::ValidatorPoints","yet_another_parachain_runtime::pallet_tips::Tips","yet_another_parachain_runtime::pallet_tips::Reasons","yet_another_parachain_runtime::pallet_transaction_storage::Transactions","yet_another_parachain_runtime::pallet_transaction_storage::ChunkCount","yet_another_parachain_runtime::pallet_treasury::Proposals","yet_another_parachain_runtime::pallet_treasury::Spends","yet_another_parachain_runtime::pallet_tx_pause::PausedCalls","yet_another_parachain_runtime::pallet_uniques::Collection","yet_another_parachain_runtime::pallet_uniques::OwnershipAcceptance","yet_another_parachain_runtime::pallet_uniques::CollectionMetadataOf","yet_another_parachain_runtime::pallet_uniques::CollectionMaxSupply","yet_another_parachain_runtime::pallet_vesting::Vesting","yet_another_parachain_runtime::pallet_xcm_bridge_hub::Bridges","yet_another_parachain_runtime::pallet_xcm_bridge_hub::LaneToBridge","yet_another_parachain_runtime::polkadot_runtime_common::assigned_slots::PermanentSlots","yet_another_parachain_runtime::polkadot_runtime_common::assigned_slots::TemporarySlots","yet_another_parachain_runtime::polkadot_runtime_common::auctions::ReservedAmounts","yet_another_parachain_runtime::polkadot_runtime_common::auctions::Winning","yet_another_parachain_runtime::polkadot_runtime_common::claims::Claims","yet_another_parachain_runtime::polkadot_runtime_common::claims::Vesting","yet_another_parachain_runtime::polkadot_runtime_common::claims::Signing","yet_another_parachain_runtime::polkadot_runtime_common::claims::Preclaims","yet_another_parachain_runtime::polkadot_runtime_common::crowdloan::Funds","yet_another_parachain_runtime::polkadot_runtime_common::paras_registrar::Paras","yet_another_parachain_runtime::polkadot_runtime_common::slots::Leases","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::AvailabilityBitfields","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::PendingAvailability","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::PendingAvailabilityCommitments","yet_another_parachain_runtime::polkadot_runtime_parachains::on_demand::Credits","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::Heads","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::MostRecentContext","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::CurrentCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::PastCodeMeta","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::FutureCodeUpgrades","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::FutureCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::AuthorizedCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::UpgradeRestrictionSignal","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::ActionsQueue","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::CodeByHash","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::Sessions","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::AccountKeys","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::SessionExecutorParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#482-491\">Source</a><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; <a class=\"trait\" href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html\" title=\"trait frame_support::storage::types::StorageEntryMetadataBuilder\">StorageEntryMetadataBuilder</a> for <a class=\"struct\" href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html\" title=\"struct yet_another_parachain_runtime::frame_support::pallet_prelude::StorageMap\">StorageMap</a>&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"yet_another_parachain_runtime/polkadot_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait yet_another_parachain_runtime::polkadot_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Hasher: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/trait.StorageHasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::StorageHasher\">StorageHasher</a>,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Get.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Get\">Get</a>&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Get.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#493-497\">Source</a><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html#tymethod.build_metadata\" class=\"fn\">build_metadata</a>(\n    deprecation_status: <a class=\"enum\" href=\"sp_metadata_ir/types/enum.ItemDeprecationInfoIR.html\" title=\"enum sp_metadata_ir::types::ItemDeprecationInfoIR\">ItemDeprecationInfoIR</a>,\n    docs: <a class=\"struct\" href=\"yet_another_parachain_runtime/pallet_referenda/struct.Vec.html\" title=\"struct yet_another_parachain_runtime::pallet_referenda::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"yet_another_parachain_runtime/pallet_referenda/struct.Vec.html\" title=\"struct yet_another_parachain_runtime::pallet_referenda::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;,\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_assets::Asset","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_assets::Metadata","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_message_queue::BookStateFor","yet_another_parachain_runtime::emulated_integration_tests_common::impls::dmp::DownwardMessageQueues","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequests","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestCount","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpAcceptedChannelRequestCount","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequests","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpWatermarks","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannels","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpIngressChannelsIndex","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpEgressChannelsIndex","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannelContents","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannelDigests","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_asset_conversion::Pools","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Account","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Locks","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Reserves","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Holds","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Freezes","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_whitelist::WhitelistedCall","yet_another_parachain_runtime::frame_system::Account","yet_another_parachain_runtime::frame_system::BlockHash","yet_another_parachain_runtime::pallet_alliance::DepositOf","yet_another_parachain_runtime::pallet_alliance::Members","yet_another_parachain_runtime::pallet_alliance::RetiringMembers","yet_another_parachain_runtime::pallet_asset_rate::ConversionRateToNative","yet_another_parachain_runtime::pallet_asset_rewards::Pools","yet_another_parachain_runtime::pallet_asset_rewards::PoolCost","yet_another_parachain_runtime::pallet_babe::UnderConstruction","yet_another_parachain_runtime::pallet_bags_list::ListBags","yet_another_parachain_runtime::pallet_beefy::SetIdSession","yet_another_parachain_runtime::pallet_bounties::Bounties","yet_another_parachain_runtime::pallet_bounties::BountyDescriptions","yet_another_parachain_runtime::pallet_bridge_grandpa::ImportedHeaders","yet_another_parachain_runtime::pallet_bridge_messages::InboundLanes","yet_another_parachain_runtime::pallet_bridge_messages::OutboundLanes","yet_another_parachain_runtime::pallet_bridge_messages::OutboundMessages","yet_another_parachain_runtime::pallet_bridge_parachains::ParasInfo","yet_another_parachain_runtime::pallet_bridge_relayers::RegisteredRelayers","yet_another_parachain_runtime::pallet_broker::PotentialRenewals","yet_another_parachain_runtime::pallet_broker::Regions","yet_another_parachain_runtime::pallet_broker::Workplan","yet_another_parachain_runtime::pallet_broker::Workload","yet_another_parachain_runtime::pallet_broker::InstaPoolContribution","yet_another_parachain_runtime::pallet_broker::InstaPoolIo","yet_another_parachain_runtime::pallet_broker::InstaPoolHistory","yet_another_parachain_runtime::pallet_child_bounties::ParentChildBounties","yet_another_parachain_runtime::pallet_child_bounties::ParentTotalChildBounties","yet_another_parachain_runtime::pallet_child_bounties::V0ToV1ChildBountyIds","yet_another_parachain_runtime::pallet_child_bounties::ChildrenCuratorFees","yet_another_parachain_runtime::pallet_collator_selection::LastAuthoredBlock","yet_another_parachain_runtime::pallet_collective::ProposalOf","yet_another_parachain_runtime::pallet_collective::CostOf","yet_another_parachain_runtime::pallet_collective::Voting","yet_another_parachain_runtime::pallet_contracts::migration::v12::CodeInfoOf","yet_another_parachain_runtime::pallet_contracts::migration::v12::PristineCode","yet_another_parachain_runtime::pallet_contracts::migration::v13::ContractInfoOf","yet_another_parachain_runtime::pallet_contracts::migration::v16::ContractInfoOf","yet_another_parachain_runtime::pallet_conviction_voting::ClassLocksFor","yet_another_parachain_runtime::pallet_core_fellowship::Member","yet_another_parachain_runtime::pallet_core_fellowship::MemberEvidence","yet_another_parachain_runtime::pallet_democracy::DepositOf","yet_another_parachain_runtime::pallet_democracy::ReferendumInfoOf","yet_another_parachain_runtime::pallet_democracy::VotingOf","yet_another_parachain_runtime::pallet_democracy::Blacklist","yet_another_parachain_runtime::pallet_democracy::Cancellations","yet_another_parachain_runtime::pallet_democracy::MetadataOf","yet_another_parachain_runtime::pallet_derivatives::OriginalToDerivative","yet_another_parachain_runtime::pallet_derivatives::DerivativeToOriginal","yet_another_parachain_runtime::pallet_derivatives::DerivativeExtra","yet_another_parachain_runtime::pallet_dev_mode::Bar","yet_another_parachain_runtime::pallet_dummy_dim::ReservedIds","yet_another_parachain_runtime::pallet_dummy_dim::People","yet_another_parachain_runtime::pallet_election_provider_multi_block::signed::SortedScores","yet_another_parachain_runtime::pallet_election_provider_multi_block::DesiredTargets","yet_another_parachain_runtime::pallet_election_provider_multi_phase::SignedSubmissionsMap","yet_another_parachain_runtime::pallet_elections_phragmen::Voting","yet_another_parachain_runtime::pallet_grandpa::SetIdSession","yet_another_parachain_runtime::pallet_identity::IdentityOf","yet_another_parachain_runtime::pallet_identity::UsernameOf","yet_another_parachain_runtime::pallet_identity::SuperOf","yet_another_parachain_runtime::pallet_identity::SubsOf","yet_another_parachain_runtime::pallet_identity::AuthorityOf","yet_another_parachain_runtime::pallet_identity::UsernameInfoOf","yet_another_parachain_runtime::pallet_identity::PendingUsernames","yet_another_parachain_runtime::pallet_identity::UnbindingUsernames","yet_another_parachain_runtime::pallet_indices::Accounts","yet_another_parachain_runtime::pallet_migrations::Historic","yet_another_parachain_runtime::pallet_mmr::Nodes","yet_another_parachain_runtime::pallet_nft_fractionalization::NftToAsset","yet_another_parachain_runtime::pallet_nfts::Collection","yet_another_parachain_runtime::pallet_nfts::OwnershipAcceptance","yet_another_parachain_runtime::pallet_nfts::CollectionMetadataOf","yet_another_parachain_runtime::pallet_nfts::CollectionConfigOf","yet_another_parachain_runtime::pallet_nis::Queues","yet_another_parachain_runtime::pallet_nis::Receipts","yet_another_parachain_runtime::pallet_node_authorization::Owners","yet_another_parachain_runtime::pallet_node_authorization::AdditionalConnections","yet_another_parachain_runtime::pallet_nomination_pools::ClaimPermissions","yet_another_parachain_runtime::pallet_offences::Reports","yet_another_parachain_runtime::pallet_oracle::Values","yet_another_parachain_runtime::pallet_origin_restriction::Usages","yet_another_parachain_runtime::pallet_parameters::Parameters","yet_another_parachain_runtime::pallet_people::Root","yet_another_parachain_runtime::pallet_people::RingKeys","yet_another_parachain_runtime::pallet_people::RingKeysStatus","yet_another_parachain_runtime::pallet_people::PendingSuspensions","yet_another_parachain_runtime::pallet_people::KeyMigrationQueue","yet_another_parachain_runtime::pallet_people::People","yet_another_parachain_runtime::pallet_people::AliasToAccount","yet_another_parachain_runtime::pallet_people::AccountToAlias","yet_another_parachain_runtime::pallet_people::AccountToPersonalId","yet_another_parachain_runtime::pallet_people::Chunks","yet_another_parachain_runtime::pallet_people::ReservedPersonalId","yet_another_parachain_runtime::pallet_people::OnboardingQueue","yet_another_parachain_runtime::pallet_preimage::StatusFor","yet_another_parachain_runtime::pallet_preimage::RequestStatusFor","yet_another_parachain_runtime::pallet_preimage::PreimageFor","yet_another_parachain_runtime::pallet_proxy::Proxies","yet_another_parachain_runtime::pallet_proxy::Announcements","yet_another_parachain_runtime::pallet_ranked_collective::MemberCount","yet_another_parachain_runtime::pallet_ranked_collective::Members","yet_another_parachain_runtime::pallet_ranked_collective::VotingCleanup","yet_another_parachain_runtime::pallet_recovery::Recoverable","yet_another_parachain_runtime::pallet_recovery::Proxy","yet_another_parachain_runtime::pallet_referenda::migration::v0::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::migration::v1::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::TrackQueue","yet_another_parachain_runtime::pallet_referenda::DecidingCount","yet_another_parachain_runtime::pallet_referenda::MetadataOf","yet_another_parachain_runtime::pallet_revive::migrations::v1::old::ContractInfoOf","yet_another_parachain_runtime::pallet_salary::Claimant","yet_another_parachain_runtime::pallet_scheduler::Agenda","yet_another_parachain_runtime::pallet_scheduler::Retries","yet_another_parachain_runtime::pallet_scheduler::Lookup","yet_another_parachain_runtime::pallet_session::historical::HistoricalSessions","yet_another_parachain_runtime::pallet_session::NextKeys","yet_another_parachain_runtime::pallet_session::KeyOwner","yet_another_parachain_runtime::pallet_society::Members","yet_another_parachain_runtime::pallet_society::Payouts","yet_another_parachain_runtime::pallet_society::MemberByIndex","yet_another_parachain_runtime::pallet_society::SuspendedMembers","yet_another_parachain_runtime::pallet_society::Candidates","yet_another_parachain_runtime::pallet_society::VoteClearCursor","yet_another_parachain_runtime::pallet_staking::Bonded","yet_another_parachain_runtime::pallet_staking::Ledger","yet_another_parachain_runtime::pallet_staking::Payee","yet_another_parachain_runtime::pallet_staking::SpanSlash","yet_another_parachain_runtime::pallet_staking::ErasStartSessionIndex","yet_another_parachain_runtime::pallet_staking::ErasValidatorReward","yet_another_parachain_runtime::pallet_staking::ErasRewardPoints","yet_another_parachain_runtime::pallet_staking::ErasTotalStake","yet_another_parachain_runtime::pallet_staking::UnappliedSlashes","yet_another_parachain_runtime::pallet_staking::SlashingSpans","yet_another_parachain_runtime::pallet_staking_async::Bonded","yet_another_parachain_runtime::pallet_staking_async::Ledger","yet_another_parachain_runtime::pallet_staking_async::Payee","yet_another_parachain_runtime::pallet_staking_async::ErasValidatorReward","yet_another_parachain_runtime::pallet_staking_async::ErasRewardPoints","yet_another_parachain_runtime::pallet_staking_async::ErasTotalStake","yet_another_parachain_runtime::pallet_staking_async::CancelledSlashes","yet_another_parachain_runtime::pallet_staking_async::EraPruningState","yet_another_parachain_runtime::pallet_staking_async_ah_client::ValidatorPoints","yet_another_parachain_runtime::pallet_tips::Tips","yet_another_parachain_runtime::pallet_tips::Reasons","yet_another_parachain_runtime::pallet_transaction_storage::Transactions","yet_another_parachain_runtime::pallet_transaction_storage::ChunkCount","yet_another_parachain_runtime::pallet_treasury::Proposals","yet_another_parachain_runtime::pallet_treasury::Spends","yet_another_parachain_runtime::pallet_tx_pause::PausedCalls","yet_another_parachain_runtime::pallet_uniques::Collection","yet_another_parachain_runtime::pallet_uniques::OwnershipAcceptance","yet_another_parachain_runtime::pallet_uniques::CollectionMetadataOf","yet_another_parachain_runtime::pallet_uniques::CollectionMaxSupply","yet_another_parachain_runtime::pallet_vesting::Vesting","yet_another_parachain_runtime::pallet_xcm_bridge_hub::Bridges","yet_another_parachain_runtime::pallet_xcm_bridge_hub::LaneToBridge","yet_another_parachain_runtime::polkadot_runtime_common::assigned_slots::PermanentSlots","yet_another_parachain_runtime::polkadot_runtime_common::assigned_slots::TemporarySlots","yet_another_parachain_runtime::polkadot_runtime_common::auctions::ReservedAmounts","yet_another_parachain_runtime::polkadot_runtime_common::auctions::Winning","yet_another_parachain_runtime::polkadot_runtime_common::claims::Claims","yet_another_parachain_runtime::polkadot_runtime_common::claims::Vesting","yet_another_parachain_runtime::polkadot_runtime_common::claims::Signing","yet_another_parachain_runtime::polkadot_runtime_common::claims::Preclaims","yet_another_parachain_runtime::polkadot_runtime_common::crowdloan::Funds","yet_another_parachain_runtime::polkadot_runtime_common::paras_registrar::Paras","yet_another_parachain_runtime::polkadot_runtime_common::slots::Leases","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::AvailabilityBitfields","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::PendingAvailability","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::PendingAvailabilityCommitments","yet_another_parachain_runtime::polkadot_runtime_parachains::on_demand::Credits","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::Heads","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::MostRecentContext","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::CurrentCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::PastCodeMeta","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::FutureCodeUpgrades","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::FutureCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::AuthorizedCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::UpgradeRestrictionSignal","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::ActionsQueue","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::CodeByHash","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::Sessions","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::AccountKeys","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::SessionExecutorParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#517-526\">Source</a><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/trait.StorageInfoTrait.html\" title=\"trait yet_another_parachain_runtime::frame_support::pallet_prelude::StorageInfoTrait\">StorageInfoTrait</a> for <a class=\"struct\" href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html\" title=\"struct yet_another_parachain_runtime::frame_support::pallet_prelude::StorageMap\">StorageMap</a>&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"yet_another_parachain_runtime/polkadot_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait yet_another_parachain_runtime::polkadot_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Hasher: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/trait.StorageHasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::StorageHasher\">StorageHasher</a>,\n    Key: FullCodec + <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.MaxEncodedLen.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::MaxEncodedLen\">MaxEncodedLen</a>,\n    Value: FullCodec + <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.MaxEncodedLen.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::MaxEncodedLen\">MaxEncodedLen</a>,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Get.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Get\">Get</a>&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Get.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#528\">Source</a><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/trait.StorageInfoTrait.html#tymethod.storage_info\" class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/pallet_referenda/struct.Vec.html\" title=\"struct yet_another_parachain_runtime::pallet_referenda::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"yet_another_parachain_runtime/polkadot_sdk_frame/traits/struct.StorageInfo.html\" title=\"struct yet_another_parachain_runtime::polkadot_sdk_frame::traits::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","StorageInfoTrait","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_assets::Asset","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_assets::Metadata","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_message_queue::BookStateFor","yet_another_parachain_runtime::emulated_integration_tests_common::impls::dmp::DownwardMessageQueues","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequests","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestCount","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpAcceptedChannelRequestCount","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequests","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpWatermarks","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannels","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpIngressChannelsIndex","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpEgressChannelsIndex","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannelContents","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannelDigests","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_asset_conversion::Pools","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Account","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Locks","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Reserves","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Holds","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Freezes","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_whitelist::WhitelistedCall","yet_another_parachain_runtime::frame_system::Account","yet_another_parachain_runtime::frame_system::BlockHash","yet_another_parachain_runtime::pallet_alliance::DepositOf","yet_another_parachain_runtime::pallet_alliance::Members","yet_another_parachain_runtime::pallet_alliance::RetiringMembers","yet_another_parachain_runtime::pallet_asset_rate::ConversionRateToNative","yet_another_parachain_runtime::pallet_asset_rewards::Pools","yet_another_parachain_runtime::pallet_asset_rewards::PoolCost","yet_another_parachain_runtime::pallet_babe::UnderConstruction","yet_another_parachain_runtime::pallet_bags_list::ListBags","yet_another_parachain_runtime::pallet_beefy::SetIdSession","yet_another_parachain_runtime::pallet_bounties::Bounties","yet_another_parachain_runtime::pallet_bounties::BountyDescriptions","yet_another_parachain_runtime::pallet_bridge_grandpa::ImportedHeaders","yet_another_parachain_runtime::pallet_bridge_messages::InboundLanes","yet_another_parachain_runtime::pallet_bridge_messages::OutboundLanes","yet_another_parachain_runtime::pallet_bridge_messages::OutboundMessages","yet_another_parachain_runtime::pallet_bridge_parachains::ParasInfo","yet_another_parachain_runtime::pallet_bridge_relayers::RegisteredRelayers","yet_another_parachain_runtime::pallet_broker::PotentialRenewals","yet_another_parachain_runtime::pallet_broker::Regions","yet_another_parachain_runtime::pallet_broker::Workplan","yet_another_parachain_runtime::pallet_broker::Workload","yet_another_parachain_runtime::pallet_broker::InstaPoolContribution","yet_another_parachain_runtime::pallet_broker::InstaPoolIo","yet_another_parachain_runtime::pallet_broker::InstaPoolHistory","yet_another_parachain_runtime::pallet_child_bounties::ParentChildBounties","yet_another_parachain_runtime::pallet_child_bounties::ParentTotalChildBounties","yet_another_parachain_runtime::pallet_child_bounties::V0ToV1ChildBountyIds","yet_another_parachain_runtime::pallet_child_bounties::ChildrenCuratorFees","yet_another_parachain_runtime::pallet_collator_selection::LastAuthoredBlock","yet_another_parachain_runtime::pallet_collective::ProposalOf","yet_another_parachain_runtime::pallet_collective::CostOf","yet_another_parachain_runtime::pallet_collective::Voting","yet_another_parachain_runtime::pallet_contracts::migration::v12::CodeInfoOf","yet_another_parachain_runtime::pallet_contracts::migration::v12::PristineCode","yet_another_parachain_runtime::pallet_contracts::migration::v13::ContractInfoOf","yet_another_parachain_runtime::pallet_contracts::migration::v16::ContractInfoOf","yet_another_parachain_runtime::pallet_conviction_voting::ClassLocksFor","yet_another_parachain_runtime::pallet_core_fellowship::Member","yet_another_parachain_runtime::pallet_core_fellowship::MemberEvidence","yet_another_parachain_runtime::pallet_democracy::DepositOf","yet_another_parachain_runtime::pallet_democracy::ReferendumInfoOf","yet_another_parachain_runtime::pallet_democracy::VotingOf","yet_another_parachain_runtime::pallet_democracy::Blacklist","yet_another_parachain_runtime::pallet_democracy::Cancellations","yet_another_parachain_runtime::pallet_democracy::MetadataOf","yet_another_parachain_runtime::pallet_derivatives::OriginalToDerivative","yet_another_parachain_runtime::pallet_derivatives::DerivativeToOriginal","yet_another_parachain_runtime::pallet_derivatives::DerivativeExtra","yet_another_parachain_runtime::pallet_dev_mode::Bar","yet_another_parachain_runtime::pallet_dummy_dim::ReservedIds","yet_another_parachain_runtime::pallet_dummy_dim::People","yet_another_parachain_runtime::pallet_election_provider_multi_block::signed::SortedScores","yet_another_parachain_runtime::pallet_election_provider_multi_block::DesiredTargets","yet_another_parachain_runtime::pallet_election_provider_multi_phase::SignedSubmissionsMap","yet_another_parachain_runtime::pallet_elections_phragmen::Voting","yet_another_parachain_runtime::pallet_grandpa::SetIdSession","yet_another_parachain_runtime::pallet_identity::IdentityOf","yet_another_parachain_runtime::pallet_identity::UsernameOf","yet_another_parachain_runtime::pallet_identity::SuperOf","yet_another_parachain_runtime::pallet_identity::SubsOf","yet_another_parachain_runtime::pallet_identity::AuthorityOf","yet_another_parachain_runtime::pallet_identity::UsernameInfoOf","yet_another_parachain_runtime::pallet_identity::PendingUsernames","yet_another_parachain_runtime::pallet_identity::UnbindingUsernames","yet_another_parachain_runtime::pallet_indices::Accounts","yet_another_parachain_runtime::pallet_migrations::Historic","yet_another_parachain_runtime::pallet_mmr::Nodes","yet_another_parachain_runtime::pallet_nft_fractionalization::NftToAsset","yet_another_parachain_runtime::pallet_nfts::Collection","yet_another_parachain_runtime::pallet_nfts::OwnershipAcceptance","yet_another_parachain_runtime::pallet_nfts::CollectionMetadataOf","yet_another_parachain_runtime::pallet_nfts::CollectionConfigOf","yet_another_parachain_runtime::pallet_nis::Queues","yet_another_parachain_runtime::pallet_nis::Receipts","yet_another_parachain_runtime::pallet_node_authorization::Owners","yet_another_parachain_runtime::pallet_node_authorization::AdditionalConnections","yet_another_parachain_runtime::pallet_nomination_pools::ClaimPermissions","yet_another_parachain_runtime::pallet_offences::Reports","yet_another_parachain_runtime::pallet_oracle::Values","yet_another_parachain_runtime::pallet_origin_restriction::Usages","yet_another_parachain_runtime::pallet_parameters::Parameters","yet_another_parachain_runtime::pallet_people::Root","yet_another_parachain_runtime::pallet_people::RingKeys","yet_another_parachain_runtime::pallet_people::RingKeysStatus","yet_another_parachain_runtime::pallet_people::PendingSuspensions","yet_another_parachain_runtime::pallet_people::KeyMigrationQueue","yet_another_parachain_runtime::pallet_people::People","yet_another_parachain_runtime::pallet_people::AliasToAccount","yet_another_parachain_runtime::pallet_people::AccountToAlias","yet_another_parachain_runtime::pallet_people::AccountToPersonalId","yet_another_parachain_runtime::pallet_people::Chunks","yet_another_parachain_runtime::pallet_people::ReservedPersonalId","yet_another_parachain_runtime::pallet_people::OnboardingQueue","yet_another_parachain_runtime::pallet_preimage::StatusFor","yet_another_parachain_runtime::pallet_preimage::RequestStatusFor","yet_another_parachain_runtime::pallet_preimage::PreimageFor","yet_another_parachain_runtime::pallet_proxy::Proxies","yet_another_parachain_runtime::pallet_proxy::Announcements","yet_another_parachain_runtime::pallet_ranked_collective::MemberCount","yet_another_parachain_runtime::pallet_ranked_collective::Members","yet_another_parachain_runtime::pallet_ranked_collective::VotingCleanup","yet_another_parachain_runtime::pallet_recovery::Recoverable","yet_another_parachain_runtime::pallet_recovery::Proxy","yet_another_parachain_runtime::pallet_referenda::migration::v0::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::migration::v1::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::TrackQueue","yet_another_parachain_runtime::pallet_referenda::DecidingCount","yet_another_parachain_runtime::pallet_referenda::MetadataOf","yet_another_parachain_runtime::pallet_revive::migrations::v1::old::ContractInfoOf","yet_another_parachain_runtime::pallet_salary::Claimant","yet_another_parachain_runtime::pallet_scheduler::Agenda","yet_another_parachain_runtime::pallet_scheduler::Retries","yet_another_parachain_runtime::pallet_scheduler::Lookup","yet_another_parachain_runtime::pallet_session::historical::HistoricalSessions","yet_another_parachain_runtime::pallet_session::NextKeys","yet_another_parachain_runtime::pallet_session::KeyOwner","yet_another_parachain_runtime::pallet_society::Members","yet_another_parachain_runtime::pallet_society::Payouts","yet_another_parachain_runtime::pallet_society::MemberByIndex","yet_another_parachain_runtime::pallet_society::SuspendedMembers","yet_another_parachain_runtime::pallet_society::Candidates","yet_another_parachain_runtime::pallet_society::VoteClearCursor","yet_another_parachain_runtime::pallet_staking::Bonded","yet_another_parachain_runtime::pallet_staking::Ledger","yet_another_parachain_runtime::pallet_staking::Payee","yet_another_parachain_runtime::pallet_staking::SpanSlash","yet_another_parachain_runtime::pallet_staking::ErasStartSessionIndex","yet_another_parachain_runtime::pallet_staking::ErasValidatorReward","yet_another_parachain_runtime::pallet_staking::ErasRewardPoints","yet_another_parachain_runtime::pallet_staking::ErasTotalStake","yet_another_parachain_runtime::pallet_staking::UnappliedSlashes","yet_another_parachain_runtime::pallet_staking::SlashingSpans","yet_another_parachain_runtime::pallet_staking_async::Bonded","yet_another_parachain_runtime::pallet_staking_async::Ledger","yet_another_parachain_runtime::pallet_staking_async::Payee","yet_another_parachain_runtime::pallet_staking_async::ErasValidatorReward","yet_another_parachain_runtime::pallet_staking_async::ErasRewardPoints","yet_another_parachain_runtime::pallet_staking_async::ErasTotalStake","yet_another_parachain_runtime::pallet_staking_async::CancelledSlashes","yet_another_parachain_runtime::pallet_staking_async::EraPruningState","yet_another_parachain_runtime::pallet_staking_async_ah_client::ValidatorPoints","yet_another_parachain_runtime::pallet_tips::Tips","yet_another_parachain_runtime::pallet_tips::Reasons","yet_another_parachain_runtime::pallet_transaction_storage::Transactions","yet_another_parachain_runtime::pallet_transaction_storage::ChunkCount","yet_another_parachain_runtime::pallet_treasury::Proposals","yet_another_parachain_runtime::pallet_treasury::Spends","yet_another_parachain_runtime::pallet_tx_pause::PausedCalls","yet_another_parachain_runtime::pallet_uniques::Collection","yet_another_parachain_runtime::pallet_uniques::OwnershipAcceptance","yet_another_parachain_runtime::pallet_uniques::CollectionMetadataOf","yet_another_parachain_runtime::pallet_uniques::CollectionMaxSupply","yet_another_parachain_runtime::pallet_vesting::Vesting","yet_another_parachain_runtime::pallet_xcm_bridge_hub::Bridges","yet_another_parachain_runtime::pallet_xcm_bridge_hub::LaneToBridge","yet_another_parachain_runtime::polkadot_runtime_common::assigned_slots::PermanentSlots","yet_another_parachain_runtime::polkadot_runtime_common::assigned_slots::TemporarySlots","yet_another_parachain_runtime::polkadot_runtime_common::auctions::ReservedAmounts","yet_another_parachain_runtime::polkadot_runtime_common::auctions::Winning","yet_another_parachain_runtime::polkadot_runtime_common::claims::Claims","yet_another_parachain_runtime::polkadot_runtime_common::claims::Vesting","yet_another_parachain_runtime::polkadot_runtime_common::claims::Signing","yet_another_parachain_runtime::polkadot_runtime_common::claims::Preclaims","yet_another_parachain_runtime::polkadot_runtime_common::crowdloan::Funds","yet_another_parachain_runtime::polkadot_runtime_common::paras_registrar::Paras","yet_another_parachain_runtime::polkadot_runtime_common::slots::Leases","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::AvailabilityBitfields","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::PendingAvailability","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::PendingAvailabilityCommitments","yet_another_parachain_runtime::polkadot_runtime_parachains::on_demand::Credits","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::Heads","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::MostRecentContext","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::CurrentCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::PastCodeMeta","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::FutureCodeUpgrades","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::FutureCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::AuthorizedCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::UpgradeRestrictionSignal","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::ActionsQueue","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::CodeByHash","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::Sessions","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::AccountKeys","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::SessionExecutorParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#149-158\">Source</a><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html\" title=\"struct yet_another_parachain_runtime::frame_support::pallet_prelude::StorageMap\">StorageMap</a>&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"yet_another_parachain_runtime/polkadot_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait yet_another_parachain_runtime::polkadot_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Hasher: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/trait.StorageHasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::StorageHasher\">StorageHasher</a>,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Get.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Get\">Get</a>&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Get.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#161\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.hashed_key_for\" class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/pallet_referenda/struct.Vec.html\" title=\"struct yet_another_parachain_runtime::pallet_referenda::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#166\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.contains_key\" class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#171\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.get\" class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n) -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a><div class=\"where\">where\n    KeyArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#178\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.try_get\" class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#183\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.swap\" class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,\n    KeyArg2: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#188\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.set\" class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>,\n)<div class=\"where\">where\n    KeyArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#193\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.insert\" class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,\n    ValArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#198\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.remove\" class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#203-206\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.mutate\" class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#211-214\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.try_mutate\" class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#220-223\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.mutate_extant\" class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#228-231\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.mutate_exists\" class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#238-241\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.try_mutate_exists\" class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#247\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.take\" class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n) -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a><div class=\"where\">where\n    KeyArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#260-265\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.append\" class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem,\n)<div class=\"where\">where\n    EncodeLikeKey: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,\n    Item: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Encode.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Encode\">Encode</a>,\n    EncodeLikeItem: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageAppend.html\" title=\"trait frame_support::storage::StorageAppend\">StorageAppend</a>&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#282-284\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.decode_len\" class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\">StorageDecodeLength</a>,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\"><code>StorageDecodeLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#304-306\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.decode_non_dedup_len\" class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\">StorageDecodeNonDedupLength</a>,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\"><code>StorageDecodeNonDedupLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#314-316\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.migrate_key\" class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/trait.StorageHasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::StorageHasher\">StorageHasher</a>,\n    KeyArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#332\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.remove_all\" class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"enum\" href=\"sp_io/enum.KillStorageResult.html\" title=\"enum sp_io::KillStorageResult\">KillStorageResult</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#360\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.clear\" class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/sp_externalities/struct.MultiRemovalResults.html\" title=\"struct yet_another_parachain_runtime::sp_externalities::MultiRemovalResults\">MultiRemovalResults</a></h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"yet_another_parachain_runtime/sp_externalities/struct.MultiRemovalResults.html\" title=\"struct yet_another_parachain_runtime::sp_externalities::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#367\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.iter_values\" class=\"fn\">iter_values</a>() -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.PrefixIterator.html\" title=\"struct frame_support::storage::PrefixIterator\">PrefixIterator</a>&lt;Value&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"PrefixIterator&lt;Value&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#385\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.translate_values\" class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Decode.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Decode\">Decode</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#392-397\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.try_append\" class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem,\n) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Encode.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Encode\">Encode</a>,\n    EncodeLikeItem: <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\">StorageTryAppend</a>&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements <a href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\"><code>StorageTryAppend</code></a>.</p>\n</div></details></div></details>",0,"yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_assets::Asset","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_assets::Metadata","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_message_queue::BookStateFor","yet_another_parachain_runtime::emulated_integration_tests_common::impls::dmp::DownwardMessageQueues","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequests","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestCount","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpAcceptedChannelRequestCount","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequests","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpWatermarks","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannels","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpIngressChannelsIndex","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpEgressChannelsIndex","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannelContents","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannelDigests","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_asset_conversion::Pools","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Account","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Locks","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Reserves","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Holds","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Freezes","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_whitelist::WhitelistedCall","yet_another_parachain_runtime::frame_system::Account","yet_another_parachain_runtime::frame_system::BlockHash","yet_another_parachain_runtime::pallet_alliance::DepositOf","yet_another_parachain_runtime::pallet_alliance::Members","yet_another_parachain_runtime::pallet_alliance::RetiringMembers","yet_another_parachain_runtime::pallet_asset_rate::ConversionRateToNative","yet_another_parachain_runtime::pallet_asset_rewards::Pools","yet_another_parachain_runtime::pallet_asset_rewards::PoolCost","yet_another_parachain_runtime::pallet_babe::UnderConstruction","yet_another_parachain_runtime::pallet_bags_list::ListBags","yet_another_parachain_runtime::pallet_beefy::SetIdSession","yet_another_parachain_runtime::pallet_bounties::Bounties","yet_another_parachain_runtime::pallet_bounties::BountyDescriptions","yet_another_parachain_runtime::pallet_bridge_grandpa::ImportedHeaders","yet_another_parachain_runtime::pallet_bridge_messages::InboundLanes","yet_another_parachain_runtime::pallet_bridge_messages::OutboundLanes","yet_another_parachain_runtime::pallet_bridge_messages::OutboundMessages","yet_another_parachain_runtime::pallet_bridge_parachains::ParasInfo","yet_another_parachain_runtime::pallet_bridge_relayers::RegisteredRelayers","yet_another_parachain_runtime::pallet_broker::PotentialRenewals","yet_another_parachain_runtime::pallet_broker::Regions","yet_another_parachain_runtime::pallet_broker::Workplan","yet_another_parachain_runtime::pallet_broker::Workload","yet_another_parachain_runtime::pallet_broker::InstaPoolContribution","yet_another_parachain_runtime::pallet_broker::InstaPoolIo","yet_another_parachain_runtime::pallet_broker::InstaPoolHistory","yet_another_parachain_runtime::pallet_child_bounties::ParentChildBounties","yet_another_parachain_runtime::pallet_child_bounties::ParentTotalChildBounties","yet_another_parachain_runtime::pallet_child_bounties::V0ToV1ChildBountyIds","yet_another_parachain_runtime::pallet_child_bounties::ChildrenCuratorFees","yet_another_parachain_runtime::pallet_collator_selection::LastAuthoredBlock","yet_another_parachain_runtime::pallet_collective::ProposalOf","yet_another_parachain_runtime::pallet_collective::CostOf","yet_another_parachain_runtime::pallet_collective::Voting","yet_another_parachain_runtime::pallet_contracts::migration::v12::CodeInfoOf","yet_another_parachain_runtime::pallet_contracts::migration::v12::PristineCode","yet_another_parachain_runtime::pallet_contracts::migration::v13::ContractInfoOf","yet_another_parachain_runtime::pallet_contracts::migration::v16::ContractInfoOf","yet_another_parachain_runtime::pallet_conviction_voting::ClassLocksFor","yet_another_parachain_runtime::pallet_core_fellowship::Member","yet_another_parachain_runtime::pallet_core_fellowship::MemberEvidence","yet_another_parachain_runtime::pallet_democracy::DepositOf","yet_another_parachain_runtime::pallet_democracy::ReferendumInfoOf","yet_another_parachain_runtime::pallet_democracy::VotingOf","yet_another_parachain_runtime::pallet_democracy::Blacklist","yet_another_parachain_runtime::pallet_democracy::Cancellations","yet_another_parachain_runtime::pallet_democracy::MetadataOf","yet_another_parachain_runtime::pallet_derivatives::OriginalToDerivative","yet_another_parachain_runtime::pallet_derivatives::DerivativeToOriginal","yet_another_parachain_runtime::pallet_derivatives::DerivativeExtra","yet_another_parachain_runtime::pallet_dev_mode::Bar","yet_another_parachain_runtime::pallet_dummy_dim::ReservedIds","yet_another_parachain_runtime::pallet_dummy_dim::People","yet_another_parachain_runtime::pallet_election_provider_multi_block::signed::SortedScores","yet_another_parachain_runtime::pallet_election_provider_multi_block::DesiredTargets","yet_another_parachain_runtime::pallet_election_provider_multi_phase::SignedSubmissionsMap","yet_another_parachain_runtime::pallet_elections_phragmen::Voting","yet_another_parachain_runtime::pallet_grandpa::SetIdSession","yet_another_parachain_runtime::pallet_identity::IdentityOf","yet_another_parachain_runtime::pallet_identity::UsernameOf","yet_another_parachain_runtime::pallet_identity::SuperOf","yet_another_parachain_runtime::pallet_identity::SubsOf","yet_another_parachain_runtime::pallet_identity::AuthorityOf","yet_another_parachain_runtime::pallet_identity::UsernameInfoOf","yet_another_parachain_runtime::pallet_identity::PendingUsernames","yet_another_parachain_runtime::pallet_identity::UnbindingUsernames","yet_another_parachain_runtime::pallet_indices::Accounts","yet_another_parachain_runtime::pallet_migrations::Historic","yet_another_parachain_runtime::pallet_mmr::Nodes","yet_another_parachain_runtime::pallet_nft_fractionalization::NftToAsset","yet_another_parachain_runtime::pallet_nfts::Collection","yet_another_parachain_runtime::pallet_nfts::OwnershipAcceptance","yet_another_parachain_runtime::pallet_nfts::CollectionMetadataOf","yet_another_parachain_runtime::pallet_nfts::CollectionConfigOf","yet_another_parachain_runtime::pallet_nis::Queues","yet_another_parachain_runtime::pallet_nis::Receipts","yet_another_parachain_runtime::pallet_node_authorization::Owners","yet_another_parachain_runtime::pallet_node_authorization::AdditionalConnections","yet_another_parachain_runtime::pallet_nomination_pools::ClaimPermissions","yet_another_parachain_runtime::pallet_offences::Reports","yet_another_parachain_runtime::pallet_oracle::Values","yet_another_parachain_runtime::pallet_origin_restriction::Usages","yet_another_parachain_runtime::pallet_parameters::Parameters","yet_another_parachain_runtime::pallet_people::Root","yet_another_parachain_runtime::pallet_people::RingKeys","yet_another_parachain_runtime::pallet_people::RingKeysStatus","yet_another_parachain_runtime::pallet_people::PendingSuspensions","yet_another_parachain_runtime::pallet_people::KeyMigrationQueue","yet_another_parachain_runtime::pallet_people::People","yet_another_parachain_runtime::pallet_people::AliasToAccount","yet_another_parachain_runtime::pallet_people::AccountToAlias","yet_another_parachain_runtime::pallet_people::AccountToPersonalId","yet_another_parachain_runtime::pallet_people::Chunks","yet_another_parachain_runtime::pallet_people::ReservedPersonalId","yet_another_parachain_runtime::pallet_people::OnboardingQueue","yet_another_parachain_runtime::pallet_preimage::StatusFor","yet_another_parachain_runtime::pallet_preimage::RequestStatusFor","yet_another_parachain_runtime::pallet_preimage::PreimageFor","yet_another_parachain_runtime::pallet_proxy::Proxies","yet_another_parachain_runtime::pallet_proxy::Announcements","yet_another_parachain_runtime::pallet_ranked_collective::MemberCount","yet_another_parachain_runtime::pallet_ranked_collective::Members","yet_another_parachain_runtime::pallet_ranked_collective::VotingCleanup","yet_another_parachain_runtime::pallet_recovery::Recoverable","yet_another_parachain_runtime::pallet_recovery::Proxy","yet_another_parachain_runtime::pallet_referenda::migration::v0::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::migration::v1::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::TrackQueue","yet_another_parachain_runtime::pallet_referenda::DecidingCount","yet_another_parachain_runtime::pallet_referenda::MetadataOf","yet_another_parachain_runtime::pallet_revive::migrations::v1::old::ContractInfoOf","yet_another_parachain_runtime::pallet_salary::Claimant","yet_another_parachain_runtime::pallet_scheduler::Agenda","yet_another_parachain_runtime::pallet_scheduler::Retries","yet_another_parachain_runtime::pallet_scheduler::Lookup","yet_another_parachain_runtime::pallet_session::historical::HistoricalSessions","yet_another_parachain_runtime::pallet_session::NextKeys","yet_another_parachain_runtime::pallet_session::KeyOwner","yet_another_parachain_runtime::pallet_society::Members","yet_another_parachain_runtime::pallet_society::Payouts","yet_another_parachain_runtime::pallet_society::MemberByIndex","yet_another_parachain_runtime::pallet_society::SuspendedMembers","yet_another_parachain_runtime::pallet_society::Candidates","yet_another_parachain_runtime::pallet_society::VoteClearCursor","yet_another_parachain_runtime::pallet_staking::Bonded","yet_another_parachain_runtime::pallet_staking::Ledger","yet_another_parachain_runtime::pallet_staking::Payee","yet_another_parachain_runtime::pallet_staking::SpanSlash","yet_another_parachain_runtime::pallet_staking::ErasStartSessionIndex","yet_another_parachain_runtime::pallet_staking::ErasValidatorReward","yet_another_parachain_runtime::pallet_staking::ErasRewardPoints","yet_another_parachain_runtime::pallet_staking::ErasTotalStake","yet_another_parachain_runtime::pallet_staking::UnappliedSlashes","yet_another_parachain_runtime::pallet_staking::SlashingSpans","yet_another_parachain_runtime::pallet_staking_async::Bonded","yet_another_parachain_runtime::pallet_staking_async::Ledger","yet_another_parachain_runtime::pallet_staking_async::Payee","yet_another_parachain_runtime::pallet_staking_async::ErasValidatorReward","yet_another_parachain_runtime::pallet_staking_async::ErasRewardPoints","yet_another_parachain_runtime::pallet_staking_async::ErasTotalStake","yet_another_parachain_runtime::pallet_staking_async::CancelledSlashes","yet_another_parachain_runtime::pallet_staking_async::EraPruningState","yet_another_parachain_runtime::pallet_staking_async_ah_client::ValidatorPoints","yet_another_parachain_runtime::pallet_tips::Tips","yet_another_parachain_runtime::pallet_tips::Reasons","yet_another_parachain_runtime::pallet_transaction_storage::Transactions","yet_another_parachain_runtime::pallet_transaction_storage::ChunkCount","yet_another_parachain_runtime::pallet_treasury::Proposals","yet_another_parachain_runtime::pallet_treasury::Spends","yet_another_parachain_runtime::pallet_tx_pause::PausedCalls","yet_another_parachain_runtime::pallet_uniques::Collection","yet_another_parachain_runtime::pallet_uniques::OwnershipAcceptance","yet_another_parachain_runtime::pallet_uniques::CollectionMetadataOf","yet_another_parachain_runtime::pallet_uniques::CollectionMaxSupply","yet_another_parachain_runtime::pallet_vesting::Vesting","yet_another_parachain_runtime::pallet_xcm_bridge_hub::Bridges","yet_another_parachain_runtime::pallet_xcm_bridge_hub::LaneToBridge","yet_another_parachain_runtime::polkadot_runtime_common::assigned_slots::PermanentSlots","yet_another_parachain_runtime::polkadot_runtime_common::assigned_slots::TemporarySlots","yet_another_parachain_runtime::polkadot_runtime_common::auctions::ReservedAmounts","yet_another_parachain_runtime::polkadot_runtime_common::auctions::Winning","yet_another_parachain_runtime::polkadot_runtime_common::claims::Claims","yet_another_parachain_runtime::polkadot_runtime_common::claims::Vesting","yet_another_parachain_runtime::polkadot_runtime_common::claims::Signing","yet_another_parachain_runtime::polkadot_runtime_common::claims::Preclaims","yet_another_parachain_runtime::polkadot_runtime_common::crowdloan::Funds","yet_another_parachain_runtime::polkadot_runtime_common::paras_registrar::Paras","yet_another_parachain_runtime::polkadot_runtime_common::slots::Leases","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::AvailabilityBitfields","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::PendingAvailability","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::PendingAvailabilityCommitments","yet_another_parachain_runtime::polkadot_runtime_parachains::on_demand::Credits","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::Heads","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::MostRecentContext","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::CurrentCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::PastCodeMeta","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::FutureCodeUpgrades","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::FutureCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::AuthorizedCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::UpgradeRestrictionSignal","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::ActionsQueue","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::CodeByHash","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::Sessions","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::AccountKeys","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::SessionExecutorParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#403-412\">Source</a><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html\" title=\"struct yet_another_parachain_runtime::frame_support::pallet_prelude::StorageMap\">StorageMap</a>&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"yet_another_parachain_runtime/polkadot_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait yet_another_parachain_runtime::polkadot_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Hasher: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/trait.StorageHasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::StorageHasher\">StorageHasher</a> + <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/trait.ReversibleStorageHasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::ReversibleStorageHasher\">ReversibleStorageHasher</a>,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Get.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Get\">Get</a>&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Get.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#417\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.iter\" class=\"fn\">iter</a>() -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.PrefixIterator.html\" title=\"struct frame_support::storage::PrefixIterator\">PrefixIterator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.tuple.html\">(Key, Value)</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"PrefixIterator&lt;(Key, Value)&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#425\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.iter_from\" class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"yet_another_parachain_runtime/pallet_referenda/struct.Vec.html\" title=\"struct yet_another_parachain_runtime::pallet_referenda::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.PrefixIterator.html\" title=\"struct frame_support::storage::PrefixIterator\">PrefixIterator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.tuple.html\">(Key, Value)</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"PrefixIterator&lt;(Key, Value)&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#433-435\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.iter_from_key\" class=\"fn\">iter_from_key</a>(\n    starting_key: impl <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,\n) -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.PrefixIterator.html\" title=\"struct frame_support::storage::PrefixIterator\">PrefixIterator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.tuple.html\">(Key, Value)</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"PrefixIterator&lt;(Key, Value)&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#442\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.iter_keys\" class=\"fn\">iter_keys</a>() -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.KeyPrefixIterator.html\" title=\"struct frame_support::storage::KeyPrefixIterator\">KeyPrefixIterator</a>&lt;Key&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"KeyPrefixIterator&lt;Key&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#450\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.iter_keys_from\" class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"yet_another_parachain_runtime/pallet_referenda/struct.Vec.html\" title=\"struct yet_another_parachain_runtime::pallet_referenda::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.KeyPrefixIterator.html\" title=\"struct frame_support::storage::KeyPrefixIterator\">KeyPrefixIterator</a>&lt;Key&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"KeyPrefixIterator&lt;Key&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#458-460\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.iter_keys_from_key\" class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.EncodeLike.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::EncodeLike\">EncodeLike</a>&lt;Key&gt;,\n) -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.KeyPrefixIterator.html\" title=\"struct frame_support::storage::KeyPrefixIterator\">KeyPrefixIterator</a>&lt;Key&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"KeyPrefixIterator&lt;Key&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#467\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.drain\" class=\"fn\">drain</a>() -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.PrefixIterator.html\" title=\"struct frame_support::storage::PrefixIterator\">PrefixIterator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.tuple.html\">(Key, Value)</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"PrefixIterator&lt;(Key, Value)&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#477\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html#tymethod.translate\" class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Decode.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Decode\">Decode</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_assets::Asset","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_assets::Metadata","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_message_queue::BookStateFor","yet_another_parachain_runtime::emulated_integration_tests_common::impls::dmp::DownwardMessageQueues","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequests","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestCount","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpAcceptedChannelRequestCount","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequests","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpWatermarks","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannels","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpIngressChannelsIndex","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpEgressChannelsIndex","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannelContents","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannelDigests","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_asset_conversion::Pools","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Account","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Locks","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Reserves","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Holds","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Freezes","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_whitelist::WhitelistedCall","yet_another_parachain_runtime::frame_system::Account","yet_another_parachain_runtime::frame_system::BlockHash","yet_another_parachain_runtime::pallet_alliance::DepositOf","yet_another_parachain_runtime::pallet_alliance::Members","yet_another_parachain_runtime::pallet_alliance::RetiringMembers","yet_another_parachain_runtime::pallet_asset_rate::ConversionRateToNative","yet_another_parachain_runtime::pallet_asset_rewards::Pools","yet_another_parachain_runtime::pallet_asset_rewards::PoolCost","yet_another_parachain_runtime::pallet_babe::UnderConstruction","yet_another_parachain_runtime::pallet_bags_list::ListBags","yet_another_parachain_runtime::pallet_beefy::SetIdSession","yet_another_parachain_runtime::pallet_bounties::Bounties","yet_another_parachain_runtime::pallet_bounties::BountyDescriptions","yet_another_parachain_runtime::pallet_bridge_grandpa::ImportedHeaders","yet_another_parachain_runtime::pallet_bridge_messages::InboundLanes","yet_another_parachain_runtime::pallet_bridge_messages::OutboundLanes","yet_another_parachain_runtime::pallet_bridge_messages::OutboundMessages","yet_another_parachain_runtime::pallet_bridge_parachains::ParasInfo","yet_another_parachain_runtime::pallet_bridge_relayers::RegisteredRelayers","yet_another_parachain_runtime::pallet_broker::PotentialRenewals","yet_another_parachain_runtime::pallet_broker::Regions","yet_another_parachain_runtime::pallet_broker::Workplan","yet_another_parachain_runtime::pallet_broker::Workload","yet_another_parachain_runtime::pallet_broker::InstaPoolContribution","yet_another_parachain_runtime::pallet_broker::InstaPoolIo","yet_another_parachain_runtime::pallet_broker::InstaPoolHistory","yet_another_parachain_runtime::pallet_child_bounties::ParentChildBounties","yet_another_parachain_runtime::pallet_child_bounties::ParentTotalChildBounties","yet_another_parachain_runtime::pallet_child_bounties::V0ToV1ChildBountyIds","yet_another_parachain_runtime::pallet_child_bounties::ChildrenCuratorFees","yet_another_parachain_runtime::pallet_collator_selection::LastAuthoredBlock","yet_another_parachain_runtime::pallet_collective::ProposalOf","yet_another_parachain_runtime::pallet_collective::CostOf","yet_another_parachain_runtime::pallet_collective::Voting","yet_another_parachain_runtime::pallet_contracts::migration::v12::CodeInfoOf","yet_another_parachain_runtime::pallet_contracts::migration::v12::PristineCode","yet_another_parachain_runtime::pallet_contracts::migration::v13::ContractInfoOf","yet_another_parachain_runtime::pallet_contracts::migration::v16::ContractInfoOf","yet_another_parachain_runtime::pallet_conviction_voting::ClassLocksFor","yet_another_parachain_runtime::pallet_core_fellowship::Member","yet_another_parachain_runtime::pallet_core_fellowship::MemberEvidence","yet_another_parachain_runtime::pallet_democracy::DepositOf","yet_another_parachain_runtime::pallet_democracy::ReferendumInfoOf","yet_another_parachain_runtime::pallet_democracy::VotingOf","yet_another_parachain_runtime::pallet_democracy::Blacklist","yet_another_parachain_runtime::pallet_democracy::Cancellations","yet_another_parachain_runtime::pallet_democracy::MetadataOf","yet_another_parachain_runtime::pallet_derivatives::OriginalToDerivative","yet_another_parachain_runtime::pallet_derivatives::DerivativeToOriginal","yet_another_parachain_runtime::pallet_derivatives::DerivativeExtra","yet_another_parachain_runtime::pallet_dev_mode::Bar","yet_another_parachain_runtime::pallet_dummy_dim::ReservedIds","yet_another_parachain_runtime::pallet_dummy_dim::People","yet_another_parachain_runtime::pallet_election_provider_multi_block::signed::SortedScores","yet_another_parachain_runtime::pallet_election_provider_multi_block::DesiredTargets","yet_another_parachain_runtime::pallet_election_provider_multi_phase::SignedSubmissionsMap","yet_another_parachain_runtime::pallet_elections_phragmen::Voting","yet_another_parachain_runtime::pallet_grandpa::SetIdSession","yet_another_parachain_runtime::pallet_identity::IdentityOf","yet_another_parachain_runtime::pallet_identity::UsernameOf","yet_another_parachain_runtime::pallet_identity::SuperOf","yet_another_parachain_runtime::pallet_identity::SubsOf","yet_another_parachain_runtime::pallet_identity::AuthorityOf","yet_another_parachain_runtime::pallet_identity::UsernameInfoOf","yet_another_parachain_runtime::pallet_identity::PendingUsernames","yet_another_parachain_runtime::pallet_identity::UnbindingUsernames","yet_another_parachain_runtime::pallet_indices::Accounts","yet_another_parachain_runtime::pallet_migrations::Historic","yet_another_parachain_runtime::pallet_mmr::Nodes","yet_another_parachain_runtime::pallet_nft_fractionalization::NftToAsset","yet_another_parachain_runtime::pallet_nfts::Collection","yet_another_parachain_runtime::pallet_nfts::OwnershipAcceptance","yet_another_parachain_runtime::pallet_nfts::CollectionMetadataOf","yet_another_parachain_runtime::pallet_nfts::CollectionConfigOf","yet_another_parachain_runtime::pallet_nis::Queues","yet_another_parachain_runtime::pallet_nis::Receipts","yet_another_parachain_runtime::pallet_node_authorization::Owners","yet_another_parachain_runtime::pallet_node_authorization::AdditionalConnections","yet_another_parachain_runtime::pallet_nomination_pools::ClaimPermissions","yet_another_parachain_runtime::pallet_offences::Reports","yet_another_parachain_runtime::pallet_oracle::Values","yet_another_parachain_runtime::pallet_origin_restriction::Usages","yet_another_parachain_runtime::pallet_parameters::Parameters","yet_another_parachain_runtime::pallet_people::Root","yet_another_parachain_runtime::pallet_people::RingKeys","yet_another_parachain_runtime::pallet_people::RingKeysStatus","yet_another_parachain_runtime::pallet_people::PendingSuspensions","yet_another_parachain_runtime::pallet_people::KeyMigrationQueue","yet_another_parachain_runtime::pallet_people::People","yet_another_parachain_runtime::pallet_people::AliasToAccount","yet_another_parachain_runtime::pallet_people::AccountToAlias","yet_another_parachain_runtime::pallet_people::AccountToPersonalId","yet_another_parachain_runtime::pallet_people::Chunks","yet_another_parachain_runtime::pallet_people::ReservedPersonalId","yet_another_parachain_runtime::pallet_people::OnboardingQueue","yet_another_parachain_runtime::pallet_preimage::StatusFor","yet_another_parachain_runtime::pallet_preimage::RequestStatusFor","yet_another_parachain_runtime::pallet_preimage::PreimageFor","yet_another_parachain_runtime::pallet_proxy::Proxies","yet_another_parachain_runtime::pallet_proxy::Announcements","yet_another_parachain_runtime::pallet_ranked_collective::MemberCount","yet_another_parachain_runtime::pallet_ranked_collective::Members","yet_another_parachain_runtime::pallet_ranked_collective::VotingCleanup","yet_another_parachain_runtime::pallet_recovery::Recoverable","yet_another_parachain_runtime::pallet_recovery::Proxy","yet_another_parachain_runtime::pallet_referenda::migration::v0::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::migration::v1::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::TrackQueue","yet_another_parachain_runtime::pallet_referenda::DecidingCount","yet_another_parachain_runtime::pallet_referenda::MetadataOf","yet_another_parachain_runtime::pallet_revive::migrations::v1::old::ContractInfoOf","yet_another_parachain_runtime::pallet_salary::Claimant","yet_another_parachain_runtime::pallet_scheduler::Agenda","yet_another_parachain_runtime::pallet_scheduler::Retries","yet_another_parachain_runtime::pallet_scheduler::Lookup","yet_another_parachain_runtime::pallet_session::historical::HistoricalSessions","yet_another_parachain_runtime::pallet_session::NextKeys","yet_another_parachain_runtime::pallet_session::KeyOwner","yet_another_parachain_runtime::pallet_society::Members","yet_another_parachain_runtime::pallet_society::Payouts","yet_another_parachain_runtime::pallet_society::MemberByIndex","yet_another_parachain_runtime::pallet_society::SuspendedMembers","yet_another_parachain_runtime::pallet_society::Candidates","yet_another_parachain_runtime::pallet_society::VoteClearCursor","yet_another_parachain_runtime::pallet_staking::Bonded","yet_another_parachain_runtime::pallet_staking::Ledger","yet_another_parachain_runtime::pallet_staking::Payee","yet_another_parachain_runtime::pallet_staking::SpanSlash","yet_another_parachain_runtime::pallet_staking::ErasStartSessionIndex","yet_another_parachain_runtime::pallet_staking::ErasValidatorReward","yet_another_parachain_runtime::pallet_staking::ErasRewardPoints","yet_another_parachain_runtime::pallet_staking::ErasTotalStake","yet_another_parachain_runtime::pallet_staking::UnappliedSlashes","yet_another_parachain_runtime::pallet_staking::SlashingSpans","yet_another_parachain_runtime::pallet_staking_async::Bonded","yet_another_parachain_runtime::pallet_staking_async::Ledger","yet_another_parachain_runtime::pallet_staking_async::Payee","yet_another_parachain_runtime::pallet_staking_async::ErasValidatorReward","yet_another_parachain_runtime::pallet_staking_async::ErasRewardPoints","yet_another_parachain_runtime::pallet_staking_async::ErasTotalStake","yet_another_parachain_runtime::pallet_staking_async::CancelledSlashes","yet_another_parachain_runtime::pallet_staking_async::EraPruningState","yet_another_parachain_runtime::pallet_staking_async_ah_client::ValidatorPoints","yet_another_parachain_runtime::pallet_tips::Tips","yet_another_parachain_runtime::pallet_tips::Reasons","yet_another_parachain_runtime::pallet_transaction_storage::Transactions","yet_another_parachain_runtime::pallet_transaction_storage::ChunkCount","yet_another_parachain_runtime::pallet_treasury::Proposals","yet_another_parachain_runtime::pallet_treasury::Spends","yet_another_parachain_runtime::pallet_tx_pause::PausedCalls","yet_another_parachain_runtime::pallet_uniques::Collection","yet_another_parachain_runtime::pallet_uniques::OwnershipAcceptance","yet_another_parachain_runtime::pallet_uniques::CollectionMetadataOf","yet_another_parachain_runtime::pallet_uniques::CollectionMaxSupply","yet_another_parachain_runtime::pallet_vesting::Vesting","yet_another_parachain_runtime::pallet_xcm_bridge_hub::Bridges","yet_another_parachain_runtime::pallet_xcm_bridge_hub::LaneToBridge","yet_another_parachain_runtime::polkadot_runtime_common::assigned_slots::PermanentSlots","yet_another_parachain_runtime::polkadot_runtime_common::assigned_slots::TemporarySlots","yet_another_parachain_runtime::polkadot_runtime_common::auctions::ReservedAmounts","yet_another_parachain_runtime::polkadot_runtime_common::auctions::Winning","yet_another_parachain_runtime::polkadot_runtime_common::claims::Claims","yet_another_parachain_runtime::polkadot_runtime_common::claims::Vesting","yet_another_parachain_runtime::polkadot_runtime_common::claims::Signing","yet_another_parachain_runtime::polkadot_runtime_common::claims::Preclaims","yet_another_parachain_runtime::polkadot_runtime_common::crowdloan::Funds","yet_another_parachain_runtime::polkadot_runtime_common::paras_registrar::Paras","yet_another_parachain_runtime::polkadot_runtime_common::slots::Leases","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::AvailabilityBitfields","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::PendingAvailability","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::PendingAvailabilityCommitments","yet_another_parachain_runtime::polkadot_runtime_parachains::on_demand::Credits","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::Heads","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::MostRecentContext","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::CurrentCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::PastCodeMeta","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::FutureCodeUpgrades","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::FutureCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::AuthorizedCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::UpgradeRestrictionSignal","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::ActionsQueue","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::CodeByHash","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::Sessions","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::AccountKeys","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::SessionExecutorParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#130-139\">Source</a><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/trait.StoragePrefixedMap.html\" title=\"trait yet_another_parachain_runtime::frame_support::StoragePrefixedMap\">StoragePrefixedMap</a>&lt;Value&gt; for <a class=\"struct\" href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html\" title=\"struct yet_another_parachain_runtime::frame_support::pallet_prelude::StorageMap\">StorageMap</a>&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"yet_another_parachain_runtime/polkadot_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait yet_another_parachain_runtime::polkadot_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Hasher: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/trait.StorageHasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::StorageHasher\">StorageHasher</a>,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Get.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Get\">Get</a>&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Get.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.pallet_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#141\">Source</a><a href=\"#method.pallet_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/frame_support/trait.StoragePrefixedMap.html#tymethod.pallet_prefix\" class=\"fn\">pallet_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Pallet prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#144\">Source</a><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/frame_support/trait.StoragePrefixedMap.html#tymethod.storage_prefix\" class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/mod.rs.html#1372\">Source</a><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/frame_support/trait.StoragePrefixedMap.html#method.final_prefix\" class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/mod.rs.html#1388\">Source</a><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/frame_support/trait.StoragePrefixedMap.html#method.remove_all\" class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"enum\" href=\"sp_io/enum.KillStorageResult.html\" title=\"enum sp_io::KillStorageResult\">KillStorageResult</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a href=\"yet_another_parachain_runtime/frame_support/trait.StoragePrefixedMap.html#method.remove_all\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/mod.rs.html#1415\">Source</a><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/frame_support/trait.StoragePrefixedMap.html#method.clear\" class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/sp_externalities/struct.MultiRemovalResults.html\" title=\"struct yet_another_parachain_runtime::sp_externalities::MultiRemovalResults\">MultiRemovalResults</a></h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a href=\"yet_another_parachain_runtime/frame_support/trait.StoragePrefixedMap.html#method.clear\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/mod.rs.html#1422\">Source</a><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/frame_support/trait.StoragePrefixedMap.html#method.iter_values\" class=\"fn\">iter_values</a>() -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.PrefixIterator.html\" title=\"struct frame_support::storage::PrefixIterator\">PrefixIterator</a>&lt;Value&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"PrefixIterator&lt;Value&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Iter over all value of the storage. <a href=\"yet_another_parachain_runtime/frame_support/trait.StoragePrefixedMap.html#method.iter_values\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/mod.rs.html#1446\">Source</a><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/frame_support/trait.StoragePrefixedMap.html#method.translate_values\" class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Decode.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Decode\">Decode</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a href=\"yet_another_parachain_runtime/frame_support/trait.StoragePrefixedMap.html#method.translate_values\">Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_assets::Asset","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_assets::Metadata","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_message_queue::BookStateFor","yet_another_parachain_runtime::emulated_integration_tests_common::impls::dmp::DownwardMessageQueues","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequests","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestCount","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpAcceptedChannelRequestCount","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequests","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpWatermarks","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannels","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpIngressChannelsIndex","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpEgressChannelsIndex","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannelContents","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannelDigests","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_asset_conversion::Pools","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Account","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Locks","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Reserves","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Holds","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Freezes","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_whitelist::WhitelistedCall","yet_another_parachain_runtime::frame_system::Account","yet_another_parachain_runtime::frame_system::BlockHash","yet_another_parachain_runtime::pallet_alliance::DepositOf","yet_another_parachain_runtime::pallet_alliance::Members","yet_another_parachain_runtime::pallet_alliance::RetiringMembers","yet_another_parachain_runtime::pallet_asset_rate::ConversionRateToNative","yet_another_parachain_runtime::pallet_asset_rewards::Pools","yet_another_parachain_runtime::pallet_asset_rewards::PoolCost","yet_another_parachain_runtime::pallet_babe::UnderConstruction","yet_another_parachain_runtime::pallet_bags_list::ListBags","yet_another_parachain_runtime::pallet_beefy::SetIdSession","yet_another_parachain_runtime::pallet_bounties::Bounties","yet_another_parachain_runtime::pallet_bounties::BountyDescriptions","yet_another_parachain_runtime::pallet_bridge_grandpa::ImportedHeaders","yet_another_parachain_runtime::pallet_bridge_messages::InboundLanes","yet_another_parachain_runtime::pallet_bridge_messages::OutboundLanes","yet_another_parachain_runtime::pallet_bridge_messages::OutboundMessages","yet_another_parachain_runtime::pallet_bridge_parachains::ParasInfo","yet_another_parachain_runtime::pallet_bridge_relayers::RegisteredRelayers","yet_another_parachain_runtime::pallet_broker::PotentialRenewals","yet_another_parachain_runtime::pallet_broker::Regions","yet_another_parachain_runtime::pallet_broker::Workplan","yet_another_parachain_runtime::pallet_broker::Workload","yet_another_parachain_runtime::pallet_broker::InstaPoolContribution","yet_another_parachain_runtime::pallet_broker::InstaPoolIo","yet_another_parachain_runtime::pallet_broker::InstaPoolHistory","yet_another_parachain_runtime::pallet_child_bounties::ParentChildBounties","yet_another_parachain_runtime::pallet_child_bounties::ParentTotalChildBounties","yet_another_parachain_runtime::pallet_child_bounties::V0ToV1ChildBountyIds","yet_another_parachain_runtime::pallet_child_bounties::ChildrenCuratorFees","yet_another_parachain_runtime::pallet_collator_selection::LastAuthoredBlock","yet_another_parachain_runtime::pallet_collective::ProposalOf","yet_another_parachain_runtime::pallet_collective::CostOf","yet_another_parachain_runtime::pallet_collective::Voting","yet_another_parachain_runtime::pallet_contracts::migration::v12::CodeInfoOf","yet_another_parachain_runtime::pallet_contracts::migration::v12::PristineCode","yet_another_parachain_runtime::pallet_contracts::migration::v13::ContractInfoOf","yet_another_parachain_runtime::pallet_contracts::migration::v16::ContractInfoOf","yet_another_parachain_runtime::pallet_conviction_voting::ClassLocksFor","yet_another_parachain_runtime::pallet_core_fellowship::Member","yet_another_parachain_runtime::pallet_core_fellowship::MemberEvidence","yet_another_parachain_runtime::pallet_democracy::DepositOf","yet_another_parachain_runtime::pallet_democracy::ReferendumInfoOf","yet_another_parachain_runtime::pallet_democracy::VotingOf","yet_another_parachain_runtime::pallet_democracy::Blacklist","yet_another_parachain_runtime::pallet_democracy::Cancellations","yet_another_parachain_runtime::pallet_democracy::MetadataOf","yet_another_parachain_runtime::pallet_derivatives::OriginalToDerivative","yet_another_parachain_runtime::pallet_derivatives::DerivativeToOriginal","yet_another_parachain_runtime::pallet_derivatives::DerivativeExtra","yet_another_parachain_runtime::pallet_dev_mode::Bar","yet_another_parachain_runtime::pallet_dummy_dim::ReservedIds","yet_another_parachain_runtime::pallet_dummy_dim::People","yet_another_parachain_runtime::pallet_election_provider_multi_block::signed::SortedScores","yet_another_parachain_runtime::pallet_election_provider_multi_block::DesiredTargets","yet_another_parachain_runtime::pallet_election_provider_multi_phase::SignedSubmissionsMap","yet_another_parachain_runtime::pallet_elections_phragmen::Voting","yet_another_parachain_runtime::pallet_grandpa::SetIdSession","yet_another_parachain_runtime::pallet_identity::IdentityOf","yet_another_parachain_runtime::pallet_identity::UsernameOf","yet_another_parachain_runtime::pallet_identity::SuperOf","yet_another_parachain_runtime::pallet_identity::SubsOf","yet_another_parachain_runtime::pallet_identity::AuthorityOf","yet_another_parachain_runtime::pallet_identity::UsernameInfoOf","yet_another_parachain_runtime::pallet_identity::PendingUsernames","yet_another_parachain_runtime::pallet_identity::UnbindingUsernames","yet_another_parachain_runtime::pallet_indices::Accounts","yet_another_parachain_runtime::pallet_migrations::Historic","yet_another_parachain_runtime::pallet_mmr::Nodes","yet_another_parachain_runtime::pallet_nft_fractionalization::NftToAsset","yet_another_parachain_runtime::pallet_nfts::Collection","yet_another_parachain_runtime::pallet_nfts::OwnershipAcceptance","yet_another_parachain_runtime::pallet_nfts::CollectionMetadataOf","yet_another_parachain_runtime::pallet_nfts::CollectionConfigOf","yet_another_parachain_runtime::pallet_nis::Queues","yet_another_parachain_runtime::pallet_nis::Receipts","yet_another_parachain_runtime::pallet_node_authorization::Owners","yet_another_parachain_runtime::pallet_node_authorization::AdditionalConnections","yet_another_parachain_runtime::pallet_nomination_pools::ClaimPermissions","yet_another_parachain_runtime::pallet_offences::Reports","yet_another_parachain_runtime::pallet_oracle::Values","yet_another_parachain_runtime::pallet_origin_restriction::Usages","yet_another_parachain_runtime::pallet_parameters::Parameters","yet_another_parachain_runtime::pallet_people::Root","yet_another_parachain_runtime::pallet_people::RingKeys","yet_another_parachain_runtime::pallet_people::RingKeysStatus","yet_another_parachain_runtime::pallet_people::PendingSuspensions","yet_another_parachain_runtime::pallet_people::KeyMigrationQueue","yet_another_parachain_runtime::pallet_people::People","yet_another_parachain_runtime::pallet_people::AliasToAccount","yet_another_parachain_runtime::pallet_people::AccountToAlias","yet_another_parachain_runtime::pallet_people::AccountToPersonalId","yet_another_parachain_runtime::pallet_people::Chunks","yet_another_parachain_runtime::pallet_people::ReservedPersonalId","yet_another_parachain_runtime::pallet_people::OnboardingQueue","yet_another_parachain_runtime::pallet_preimage::StatusFor","yet_another_parachain_runtime::pallet_preimage::RequestStatusFor","yet_another_parachain_runtime::pallet_preimage::PreimageFor","yet_another_parachain_runtime::pallet_proxy::Proxies","yet_another_parachain_runtime::pallet_proxy::Announcements","yet_another_parachain_runtime::pallet_ranked_collective::MemberCount","yet_another_parachain_runtime::pallet_ranked_collective::Members","yet_another_parachain_runtime::pallet_ranked_collective::VotingCleanup","yet_another_parachain_runtime::pallet_recovery::Recoverable","yet_another_parachain_runtime::pallet_recovery::Proxy","yet_another_parachain_runtime::pallet_referenda::migration::v0::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::migration::v1::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::TrackQueue","yet_another_parachain_runtime::pallet_referenda::DecidingCount","yet_another_parachain_runtime::pallet_referenda::MetadataOf","yet_another_parachain_runtime::pallet_revive::migrations::v1::old::ContractInfoOf","yet_another_parachain_runtime::pallet_salary::Claimant","yet_another_parachain_runtime::pallet_scheduler::Agenda","yet_another_parachain_runtime::pallet_scheduler::Retries","yet_another_parachain_runtime::pallet_scheduler::Lookup","yet_another_parachain_runtime::pallet_session::historical::HistoricalSessions","yet_another_parachain_runtime::pallet_session::NextKeys","yet_another_parachain_runtime::pallet_session::KeyOwner","yet_another_parachain_runtime::pallet_society::Members","yet_another_parachain_runtime::pallet_society::Payouts","yet_another_parachain_runtime::pallet_society::MemberByIndex","yet_another_parachain_runtime::pallet_society::SuspendedMembers","yet_another_parachain_runtime::pallet_society::Candidates","yet_another_parachain_runtime::pallet_society::VoteClearCursor","yet_another_parachain_runtime::pallet_staking::Bonded","yet_another_parachain_runtime::pallet_staking::Ledger","yet_another_parachain_runtime::pallet_staking::Payee","yet_another_parachain_runtime::pallet_staking::SpanSlash","yet_another_parachain_runtime::pallet_staking::ErasStartSessionIndex","yet_another_parachain_runtime::pallet_staking::ErasValidatorReward","yet_another_parachain_runtime::pallet_staking::ErasRewardPoints","yet_another_parachain_runtime::pallet_staking::ErasTotalStake","yet_another_parachain_runtime::pallet_staking::UnappliedSlashes","yet_another_parachain_runtime::pallet_staking::SlashingSpans","yet_another_parachain_runtime::pallet_staking_async::Bonded","yet_another_parachain_runtime::pallet_staking_async::Ledger","yet_another_parachain_runtime::pallet_staking_async::Payee","yet_another_parachain_runtime::pallet_staking_async::ErasValidatorReward","yet_another_parachain_runtime::pallet_staking_async::ErasRewardPoints","yet_another_parachain_runtime::pallet_staking_async::ErasTotalStake","yet_another_parachain_runtime::pallet_staking_async::CancelledSlashes","yet_another_parachain_runtime::pallet_staking_async::EraPruningState","yet_another_parachain_runtime::pallet_staking_async_ah_client::ValidatorPoints","yet_another_parachain_runtime::pallet_tips::Tips","yet_another_parachain_runtime::pallet_tips::Reasons","yet_another_parachain_runtime::pallet_transaction_storage::Transactions","yet_another_parachain_runtime::pallet_transaction_storage::ChunkCount","yet_another_parachain_runtime::pallet_treasury::Proposals","yet_another_parachain_runtime::pallet_treasury::Spends","yet_another_parachain_runtime::pallet_tx_pause::PausedCalls","yet_another_parachain_runtime::pallet_uniques::Collection","yet_another_parachain_runtime::pallet_uniques::OwnershipAcceptance","yet_another_parachain_runtime::pallet_uniques::CollectionMetadataOf","yet_another_parachain_runtime::pallet_uniques::CollectionMaxSupply","yet_another_parachain_runtime::pallet_vesting::Vesting","yet_another_parachain_runtime::pallet_xcm_bridge_hub::Bridges","yet_another_parachain_runtime::pallet_xcm_bridge_hub::LaneToBridge","yet_another_parachain_runtime::polkadot_runtime_common::assigned_slots::PermanentSlots","yet_another_parachain_runtime::polkadot_runtime_common::assigned_slots::TemporarySlots","yet_another_parachain_runtime::polkadot_runtime_common::auctions::ReservedAmounts","yet_another_parachain_runtime::polkadot_runtime_common::auctions::Winning","yet_another_parachain_runtime::polkadot_runtime_common::claims::Claims","yet_another_parachain_runtime::polkadot_runtime_common::claims::Vesting","yet_another_parachain_runtime::polkadot_runtime_common::claims::Signing","yet_another_parachain_runtime::polkadot_runtime_common::claims::Preclaims","yet_another_parachain_runtime::polkadot_runtime_common::crowdloan::Funds","yet_another_parachain_runtime::polkadot_runtime_common::paras_registrar::Paras","yet_another_parachain_runtime::polkadot_runtime_common::slots::Leases","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::AvailabilityBitfields","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::PendingAvailability","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::PendingAvailabilityCommitments","yet_another_parachain_runtime::polkadot_runtime_parachains::on_demand::Credits","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::Heads","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::MostRecentContext","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::CurrentCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::PastCodeMeta","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::FutureCodeUpgrades","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::FutureCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::AuthorizedCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::UpgradeRestrictionSignal","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::ActionsQueue","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::CodeByHash","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::Sessions","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::AccountKeys","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::SessionExecutorParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#171-180\">Source</a><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; <a class=\"trait\" href=\"yet_another_parachain_runtime/polkadot_sdk_frame/traits/trait.TryDecodeEntireStorage.html\" title=\"trait yet_another_parachain_runtime::polkadot_sdk_frame::traits::TryDecodeEntireStorage\">TryDecodeEntireStorage</a> for <a class=\"struct\" href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageMap.html\" title=\"struct yet_another_parachain_runtime::frame_support::pallet_prelude::StorageMap\">StorageMap</a>&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"yet_another_parachain_runtime/polkadot_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait yet_another_parachain_runtime::polkadot_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Hasher: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/trait.StorageHasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::StorageHasher\">StorageHasher</a>,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Get.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Get\">Get</a>&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Get.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#182\">Source</a><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/polkadot_sdk_frame/traits/trait.TryDecodeEntireStorage.html#tymethod.try_decode_entire_state\" class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"yet_another_parachain_runtime/pallet_referenda/struct.Vec.html\" title=\"struct yet_another_parachain_runtime::pallet_referenda::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"yet_another_parachain_runtime/polkadot_sdk_frame/traits/struct.TryDecodeEntireStorageError.html\" title=\"struct yet_another_parachain_runtime::polkadot_sdk_frame::traits::TryDecodeEntireStorageError\">TryDecodeEntireStorageError</a>&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_assets::Asset","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_assets::Metadata","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_message_queue::BookStateFor","yet_another_parachain_runtime::emulated_integration_tests_common::impls::dmp::DownwardMessageQueues","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequests","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestCount","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpAcceptedChannelRequestCount","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequests","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpWatermarks","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannels","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpIngressChannelsIndex","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpEgressChannelsIndex","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannelContents","yet_another_parachain_runtime::emulated_integration_tests_common::impls::hrmp::HrmpChannelDigests","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_asset_conversion::Pools","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Account","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Locks","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Reserves","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Holds","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_balances::Freezes","yet_another_parachain_runtime::emulated_integration_tests_common::macros::pallet_whitelist::WhitelistedCall","yet_another_parachain_runtime::frame_system::Account","yet_another_parachain_runtime::frame_system::BlockHash","yet_another_parachain_runtime::pallet_alliance::DepositOf","yet_another_parachain_runtime::pallet_alliance::Members","yet_another_parachain_runtime::pallet_alliance::RetiringMembers","yet_another_parachain_runtime::pallet_asset_rate::ConversionRateToNative","yet_another_parachain_runtime::pallet_asset_rewards::Pools","yet_another_parachain_runtime::pallet_asset_rewards::PoolCost","yet_another_parachain_runtime::pallet_babe::UnderConstruction","yet_another_parachain_runtime::pallet_bags_list::ListBags","yet_another_parachain_runtime::pallet_beefy::SetIdSession","yet_another_parachain_runtime::pallet_bounties::Bounties","yet_another_parachain_runtime::pallet_bounties::BountyDescriptions","yet_another_parachain_runtime::pallet_bridge_grandpa::ImportedHeaders","yet_another_parachain_runtime::pallet_bridge_messages::InboundLanes","yet_another_parachain_runtime::pallet_bridge_messages::OutboundLanes","yet_another_parachain_runtime::pallet_bridge_messages::OutboundMessages","yet_another_parachain_runtime::pallet_bridge_parachains::ParasInfo","yet_another_parachain_runtime::pallet_bridge_relayers::RegisteredRelayers","yet_another_parachain_runtime::pallet_broker::PotentialRenewals","yet_another_parachain_runtime::pallet_broker::Regions","yet_another_parachain_runtime::pallet_broker::Workplan","yet_another_parachain_runtime::pallet_broker::Workload","yet_another_parachain_runtime::pallet_broker::InstaPoolContribution","yet_another_parachain_runtime::pallet_broker::InstaPoolIo","yet_another_parachain_runtime::pallet_broker::InstaPoolHistory","yet_another_parachain_runtime::pallet_child_bounties::ParentChildBounties","yet_another_parachain_runtime::pallet_child_bounties::ParentTotalChildBounties","yet_another_parachain_runtime::pallet_child_bounties::V0ToV1ChildBountyIds","yet_another_parachain_runtime::pallet_child_bounties::ChildrenCuratorFees","yet_another_parachain_runtime::pallet_collator_selection::LastAuthoredBlock","yet_another_parachain_runtime::pallet_collective::ProposalOf","yet_another_parachain_runtime::pallet_collective::CostOf","yet_another_parachain_runtime::pallet_collective::Voting","yet_another_parachain_runtime::pallet_contracts::migration::v12::CodeInfoOf","yet_another_parachain_runtime::pallet_contracts::migration::v12::PristineCode","yet_another_parachain_runtime::pallet_contracts::migration::v13::ContractInfoOf","yet_another_parachain_runtime::pallet_contracts::migration::v16::ContractInfoOf","yet_another_parachain_runtime::pallet_conviction_voting::ClassLocksFor","yet_another_parachain_runtime::pallet_core_fellowship::Member","yet_another_parachain_runtime::pallet_core_fellowship::MemberEvidence","yet_another_parachain_runtime::pallet_democracy::DepositOf","yet_another_parachain_runtime::pallet_democracy::ReferendumInfoOf","yet_another_parachain_runtime::pallet_democracy::VotingOf","yet_another_parachain_runtime::pallet_democracy::Blacklist","yet_another_parachain_runtime::pallet_democracy::Cancellations","yet_another_parachain_runtime::pallet_democracy::MetadataOf","yet_another_parachain_runtime::pallet_derivatives::OriginalToDerivative","yet_another_parachain_runtime::pallet_derivatives::DerivativeToOriginal","yet_another_parachain_runtime::pallet_derivatives::DerivativeExtra","yet_another_parachain_runtime::pallet_dev_mode::Bar","yet_another_parachain_runtime::pallet_dummy_dim::ReservedIds","yet_another_parachain_runtime::pallet_dummy_dim::People","yet_another_parachain_runtime::pallet_election_provider_multi_block::signed::SortedScores","yet_another_parachain_runtime::pallet_election_provider_multi_block::DesiredTargets","yet_another_parachain_runtime::pallet_election_provider_multi_phase::SignedSubmissionsMap","yet_another_parachain_runtime::pallet_elections_phragmen::Voting","yet_another_parachain_runtime::pallet_grandpa::SetIdSession","yet_another_parachain_runtime::pallet_identity::IdentityOf","yet_another_parachain_runtime::pallet_identity::UsernameOf","yet_another_parachain_runtime::pallet_identity::SuperOf","yet_another_parachain_runtime::pallet_identity::SubsOf","yet_another_parachain_runtime::pallet_identity::AuthorityOf","yet_another_parachain_runtime::pallet_identity::UsernameInfoOf","yet_another_parachain_runtime::pallet_identity::PendingUsernames","yet_another_parachain_runtime::pallet_identity::UnbindingUsernames","yet_another_parachain_runtime::pallet_indices::Accounts","yet_another_parachain_runtime::pallet_migrations::Historic","yet_another_parachain_runtime::pallet_mmr::Nodes","yet_another_parachain_runtime::pallet_nft_fractionalization::NftToAsset","yet_another_parachain_runtime::pallet_nfts::Collection","yet_another_parachain_runtime::pallet_nfts::OwnershipAcceptance","yet_another_parachain_runtime::pallet_nfts::CollectionMetadataOf","yet_another_parachain_runtime::pallet_nfts::CollectionConfigOf","yet_another_parachain_runtime::pallet_nis::Queues","yet_another_parachain_runtime::pallet_nis::Receipts","yet_another_parachain_runtime::pallet_node_authorization::Owners","yet_another_parachain_runtime::pallet_node_authorization::AdditionalConnections","yet_another_parachain_runtime::pallet_nomination_pools::ClaimPermissions","yet_another_parachain_runtime::pallet_offences::Reports","yet_another_parachain_runtime::pallet_oracle::Values","yet_another_parachain_runtime::pallet_origin_restriction::Usages","yet_another_parachain_runtime::pallet_parameters::Parameters","yet_another_parachain_runtime::pallet_people::Root","yet_another_parachain_runtime::pallet_people::RingKeys","yet_another_parachain_runtime::pallet_people::RingKeysStatus","yet_another_parachain_runtime::pallet_people::PendingSuspensions","yet_another_parachain_runtime::pallet_people::KeyMigrationQueue","yet_another_parachain_runtime::pallet_people::People","yet_another_parachain_runtime::pallet_people::AliasToAccount","yet_another_parachain_runtime::pallet_people::AccountToAlias","yet_another_parachain_runtime::pallet_people::AccountToPersonalId","yet_another_parachain_runtime::pallet_people::Chunks","yet_another_parachain_runtime::pallet_people::ReservedPersonalId","yet_another_parachain_runtime::pallet_people::OnboardingQueue","yet_another_parachain_runtime::pallet_preimage::StatusFor","yet_another_parachain_runtime::pallet_preimage::RequestStatusFor","yet_another_parachain_runtime::pallet_preimage::PreimageFor","yet_another_parachain_runtime::pallet_proxy::Proxies","yet_another_parachain_runtime::pallet_proxy::Announcements","yet_another_parachain_runtime::pallet_ranked_collective::MemberCount","yet_another_parachain_runtime::pallet_ranked_collective::Members","yet_another_parachain_runtime::pallet_ranked_collective::VotingCleanup","yet_another_parachain_runtime::pallet_recovery::Recoverable","yet_another_parachain_runtime::pallet_recovery::Proxy","yet_another_parachain_runtime::pallet_referenda::migration::v0::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::migration::v1::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::ReferendumInfoFor","yet_another_parachain_runtime::pallet_referenda::TrackQueue","yet_another_parachain_runtime::pallet_referenda::DecidingCount","yet_another_parachain_runtime::pallet_referenda::MetadataOf","yet_another_parachain_runtime::pallet_revive::migrations::v1::old::ContractInfoOf","yet_another_parachain_runtime::pallet_salary::Claimant","yet_another_parachain_runtime::pallet_scheduler::Agenda","yet_another_parachain_runtime::pallet_scheduler::Retries","yet_another_parachain_runtime::pallet_scheduler::Lookup","yet_another_parachain_runtime::pallet_session::historical::HistoricalSessions","yet_another_parachain_runtime::pallet_session::NextKeys","yet_another_parachain_runtime::pallet_session::KeyOwner","yet_another_parachain_runtime::pallet_society::Members","yet_another_parachain_runtime::pallet_society::Payouts","yet_another_parachain_runtime::pallet_society::MemberByIndex","yet_another_parachain_runtime::pallet_society::SuspendedMembers","yet_another_parachain_runtime::pallet_society::Candidates","yet_another_parachain_runtime::pallet_society::VoteClearCursor","yet_another_parachain_runtime::pallet_staking::Bonded","yet_another_parachain_runtime::pallet_staking::Ledger","yet_another_parachain_runtime::pallet_staking::Payee","yet_another_parachain_runtime::pallet_staking::SpanSlash","yet_another_parachain_runtime::pallet_staking::ErasStartSessionIndex","yet_another_parachain_runtime::pallet_staking::ErasValidatorReward","yet_another_parachain_runtime::pallet_staking::ErasRewardPoints","yet_another_parachain_runtime::pallet_staking::ErasTotalStake","yet_another_parachain_runtime::pallet_staking::UnappliedSlashes","yet_another_parachain_runtime::pallet_staking::SlashingSpans","yet_another_parachain_runtime::pallet_staking_async::Bonded","yet_another_parachain_runtime::pallet_staking_async::Ledger","yet_another_parachain_runtime::pallet_staking_async::Payee","yet_another_parachain_runtime::pallet_staking_async::ErasValidatorReward","yet_another_parachain_runtime::pallet_staking_async::ErasRewardPoints","yet_another_parachain_runtime::pallet_staking_async::ErasTotalStake","yet_another_parachain_runtime::pallet_staking_async::CancelledSlashes","yet_another_parachain_runtime::pallet_staking_async::EraPruningState","yet_another_parachain_runtime::pallet_staking_async_ah_client::ValidatorPoints","yet_another_parachain_runtime::pallet_tips::Tips","yet_another_parachain_runtime::pallet_tips::Reasons","yet_another_parachain_runtime::pallet_transaction_storage::Transactions","yet_another_parachain_runtime::pallet_transaction_storage::ChunkCount","yet_another_parachain_runtime::pallet_treasury::Proposals","yet_another_parachain_runtime::pallet_treasury::Spends","yet_another_parachain_runtime::pallet_tx_pause::PausedCalls","yet_another_parachain_runtime::pallet_uniques::Collection","yet_another_parachain_runtime::pallet_uniques::OwnershipAcceptance","yet_another_parachain_runtime::pallet_uniques::CollectionMetadataOf","yet_another_parachain_runtime::pallet_uniques::CollectionMaxSupply","yet_another_parachain_runtime::pallet_vesting::Vesting","yet_another_parachain_runtime::pallet_xcm_bridge_hub::Bridges","yet_another_parachain_runtime::pallet_xcm_bridge_hub::LaneToBridge","yet_another_parachain_runtime::polkadot_runtime_common::assigned_slots::PermanentSlots","yet_another_parachain_runtime::polkadot_runtime_common::assigned_slots::TemporarySlots","yet_another_parachain_runtime::polkadot_runtime_common::auctions::ReservedAmounts","yet_another_parachain_runtime::polkadot_runtime_common::auctions::Winning","yet_another_parachain_runtime::polkadot_runtime_common::claims::Claims","yet_another_parachain_runtime::polkadot_runtime_common::claims::Vesting","yet_another_parachain_runtime::polkadot_runtime_common::claims::Signing","yet_another_parachain_runtime::polkadot_runtime_common::claims::Preclaims","yet_another_parachain_runtime::polkadot_runtime_common::crowdloan::Funds","yet_another_parachain_runtime::polkadot_runtime_common::paras_registrar::Paras","yet_another_parachain_runtime::polkadot_runtime_common::slots::Leases","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::AvailabilityBitfields","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::PendingAvailability","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::v0::PendingAvailabilityCommitments","yet_another_parachain_runtime::polkadot_runtime_parachains::on_demand::Credits","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::Heads","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::MostRecentContext","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::CurrentCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::PastCodeMeta","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::FutureCodeUpgrades","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::FutureCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::AuthorizedCodeHash","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::UpgradeRestrictionSignal","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::ActionsQueue","yet_another_parachain_runtime::polkadot_runtime_parachains::paras::CodeByHash","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::Sessions","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::AccountKeys","yet_another_parachain_runtime::polkadot_runtime_parachains::session_info::SessionExecutorParams"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[180028]}