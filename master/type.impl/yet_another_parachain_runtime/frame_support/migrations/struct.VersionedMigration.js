(function() {
    var type_impls = Object.fromEntries([["yet_another_parachain_runtime",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-VersionedMigration%3CFROM,+TO,+Inner,+Pallet,+DbWeight%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#117-123\">Source</a><a href=\"#impl-OnRuntimeUpgrade-for-VersionedMigration%3CFROM,+TO,+Inner,+Pallet,+DbWeight%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const FROM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u16.html\">u16</a>, const TO: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u16.html\">u16</a>, Inner, Pallet, DbWeight&gt; <a class=\"trait\" href=\"yet_another_parachain_runtime/polkadot_sdk_frame/prelude/trait.OnRuntimeUpgrade.html\" title=\"trait yet_another_parachain_runtime::polkadot_sdk_frame::prelude::OnRuntimeUpgrade\">OnRuntimeUpgrade</a> for <a class=\"struct\" href=\"yet_another_parachain_runtime/frame_support/migrations/struct.VersionedMigration.html\" title=\"struct yet_another_parachain_runtime::frame_support::migrations::VersionedMigration\">VersionedMigration</a>&lt;FROM, TO, Inner, Pallet, DbWeight&gt;<div class=\"where\">where\n    Inner: <a class=\"trait\" href=\"yet_another_parachain_runtime/polkadot_sdk_frame/traits/trait.UncheckedOnRuntimeUpgrade.html\" title=\"trait yet_another_parachain_runtime::polkadot_sdk_frame::traits::UncheckedOnRuntimeUpgrade\">UncheckedOnRuntimeUpgrade</a>,\n    Pallet: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/trait.GetStorageVersion.html\" title=\"trait yet_another_parachain_runtime::frame_support::pallet_prelude::GetStorageVersion\">GetStorageVersion</a>&lt;InCodeStorageVersion = <a class=\"struct\" href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/struct.StorageVersion.html\" title=\"struct yet_another_parachain_runtime::frame_support::pallet_prelude::StorageVersion\">StorageVersion</a>&gt; + <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/trait.PalletInfoAccess.html\" title=\"trait yet_another_parachain_runtime::frame_support::pallet_prelude::PalletInfoAccess\">PalletInfoAccess</a>,\n    DbWeight: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_election_provider_support/trait.Get.html\" title=\"trait yet_another_parachain_runtime::frame_election_provider_support::Get\">Get</a>&lt;<a class=\"struct\" href=\"yet_another_parachain_runtime/sp_weights/struct.RuntimeDbWeight.html\" title=\"struct yet_another_parachain_runtime::sp_weights::RuntimeDbWeight\">RuntimeDbWeight</a>&gt;,</div></h3><div class=\"docblock\"><p>Implementation of the <code>OnRuntimeUpgrade</code> trait for <code>VersionedMigration</code>.</p>\n</div></section></summary><div class=\"docblock\"><p>Its main function is to perform the runtime upgrade in <code>on_runtime_upgrade</code> only if the on-chain\nversion of the pallets storage matches <code>From</code>, and after the upgrade set the on-chain storage to\n<code>To</code>. If the versions do not match, it writes a log notifying the developer that the migration\nis a noop.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.pre_upgrade\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#129\">Source</a><a href=\"#method.pre_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/polkadot_sdk_frame/prelude/trait.OnRuntimeUpgrade.html#method.pre_upgrade\" class=\"fn\">pre_upgrade</a>() -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;<a class=\"struct\" href=\"yet_another_parachain_runtime/pallet_referenda/struct.Vec.html\" title=\"struct yet_another_parachain_runtime::pallet_referenda::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>&gt;, <a class=\"enum\" href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/enum.DispatchError.html\" title=\"enum yet_another_parachain_runtime::frame_support::pallet_prelude::DispatchError\">DispatchError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Executes pre_upgrade if the migration will run, and wraps the pre_upgrade bytes in\n<a href=\"yet_another_parachain_runtime/frame_support/migrations/enum.VersionedPostUpgradeData.html\" title=\"enum yet_another_parachain_runtime::frame_support::migrations::VersionedPostUpgradeData\"><code>VersionedPostUpgradeData</code></a> before passing them to post_upgrade, so it knows whether the\nmigration ran or not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#144\">Source</a><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/polkadot_sdk_frame/prelude/trait.OnRuntimeUpgrade.html#method.on_runtime_upgrade\" class=\"fn\">on_runtime_upgrade</a>() -&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/struct.Weight.html\" title=\"struct yet_another_parachain_runtime::Weight\">Weight</a></h4></section></summary><div class=\"docblock\"><p>Executes the versioned runtime upgrade.</p>\n<p>First checks if the pallets on-chain storage version matches the version of this upgrade. If\nit matches, it calls <code>Inner::on_runtime_upgrade</code>, updates the on-chain version, and returns\nthe weight. If it does not match, it writes a log notifying the developer that the migration\nis a noop.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.post_upgrade\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#178-180\">Source</a><a href=\"#method.post_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/polkadot_sdk_frame/prelude/trait.OnRuntimeUpgrade.html#method.post_upgrade\" class=\"fn\">post_upgrade</a>(\n    versioned_post_upgrade_data_bytes: <a class=\"struct\" href=\"yet_another_parachain_runtime/pallet_referenda/struct.Vec.html\" title=\"struct yet_another_parachain_runtime::pallet_referenda::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/enum.DispatchError.html\" title=\"enum yet_another_parachain_runtime::frame_support::pallet_prelude::DispatchError\">DispatchError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Executes <code>Inner::post_upgrade</code> if the migration just ran.</p>\n<p>pre_upgrade passes <a href=\"yet_another_parachain_runtime/frame_support/migrations/enum.VersionedPostUpgradeData.html#variant.MigrationExecuted\" title=\"variant yet_another_parachain_runtime::frame_support::migrations::VersionedPostUpgradeData::MigrationExecuted\"><code>VersionedPostUpgradeData::MigrationExecuted</code></a> to post_upgrade if\nthe migration ran, and <a href=\"yet_another_parachain_runtime/frame_support/migrations/enum.VersionedPostUpgradeData.html#variant.Noop\" title=\"variant yet_another_parachain_runtime::frame_support::migrations::VersionedPostUpgradeData::Noop\"><code>VersionedPostUpgradeData::Noop</code></a> otherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_on_runtime_upgrade\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#189\">Source</a><a href=\"#method.try_on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/polkadot_sdk_frame/prelude/trait.OnRuntimeUpgrade.html#method.try_on_runtime_upgrade\" class=\"fn\">try_on_runtime_upgrade</a>(checks: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;<a class=\"struct\" href=\"yet_another_parachain_runtime/struct.Weight.html\" title=\"struct yet_another_parachain_runtime::Weight\">Weight</a>, <a class=\"enum\" href=\"yet_another_parachain_runtime/frame_support/pallet_prelude/enum.DispatchError.html\" title=\"enum yet_another_parachain_runtime::frame_support::pallet_prelude::DispatchError\">DispatchError</a>&gt;</h4></section></summary><div class='docblock'>The expected and default behavior of this method is to handle executing <code>pre_upgrade</code> -&gt;\n<code>on_runtime_upgrade</code> -&gt; <code>post_upgrade</code> hooks for a migration. <a href=\"yet_another_parachain_runtime/polkadot_sdk_frame/prelude/trait.OnRuntimeUpgrade.html#method.try_on_runtime_upgrade\">Read more</a></div></details></div></details>","OnRuntimeUpgrade","yet_another_parachain_runtime::cumulus_pallet_aura_ext::migration::MigrateV0ToV1","yet_another_parachain_runtime::cumulus_pallet_xcmp_queue::migration::v5::MigrateV4ToV5","yet_another_parachain_runtime::cumulus_pallet_xcmp_queue::migration::v2::MigrationToV2","yet_another_parachain_runtime::cumulus_pallet_xcmp_queue::migration::v3::MigrationToV3","yet_another_parachain_runtime::cumulus_pallet_xcmp_queue::migration::v4::MigrationToV4","yet_another_parachain_runtime::emulated_integration_tests_common::impls::pallet_xcm::migration::v1::MigrateToV1","yet_another_parachain_runtime::pallet_bridge_messages::migration::v1::MigrationToV1","yet_another_parachain_runtime::pallet_bridge_relayers::migration::v1::MigrationToV1","yet_another_parachain_runtime::pallet_bridge_relayers::migration::v2::MigrationToV2","yet_another_parachain_runtime::pallet_broker::migration::MigrateV0ToV1","yet_another_parachain_runtime::pallet_broker::migration::MigrateV1ToV2","yet_another_parachain_runtime::pallet_broker::migration::MigrateV2ToV3","yet_another_parachain_runtime::pallet_broker::migration::MigrateV3ToV4","yet_another_parachain_runtime::pallet_child_bounties::migration::MigrateV0ToV1","yet_another_parachain_runtime::pallet_collator_selection::migration::v2::MigrationToV2","yet_another_parachain_runtime::pallet_core_fellowship::migration::MigrateV0ToV1","yet_another_parachain_runtime::pallet_grandpa::migrations::MigrateV4ToV5","yet_another_parachain_runtime::pallet_identity::migration::versioned::V0ToV1","yet_another_parachain_runtime::pallet_nomination_pools::migration::versioned::V7ToV8","yet_another_parachain_runtime::pallet_nomination_pools::migration::versioned::V6ToV7","yet_another_parachain_runtime::pallet_nomination_pools::migration::versioned::V5toV6","yet_another_parachain_runtime::pallet_session::migrations::v1::MigrateV0ToV1","yet_another_parachain_runtime::pallet_society::migrations::MigrateToV2","yet_another_parachain_runtime::pallet_staking::migrations::v16::MigrateV15ToV16","yet_another_parachain_runtime::pallet_staking::migrations::v15::MigrateV14ToV15","yet_another_parachain_runtime::pallet_uniques::migration::MigrateV0ToV1","yet_another_parachain_runtime::polkadot_runtime_common::assigned_slots::migration::v1::MigrateToV1","yet_another_parachain_runtime::polkadot_runtime_common::paras_registrar::migration::MigrateToV1","yet_another_parachain_runtime::polkadot_runtime_parachains::configuration::migration::v10::MigrateToV10","yet_another_parachain_runtime::polkadot_runtime_parachains::configuration::migration::v11::MigrateToV11","yet_another_parachain_runtime::polkadot_runtime_parachains::configuration::migration::v12::MigrateToV12","yet_another_parachain_runtime::polkadot_runtime_parachains::inclusion::migration::MigrateToV1","yet_another_parachain_runtime::polkadot_runtime_parachains::on_demand::migration::MigrateV0ToV1","yet_another_parachain_runtime::polkadot_runtime_parachains::scheduler::migration::MigrateV0ToV1","yet_another_parachain_runtime::polkadot_runtime_parachains::scheduler::migration::MigrateV1ToV2","yet_another_parachain_runtime::polkadot_runtime_parachains::scheduler::migration::MigrateV2ToV3","yet_another_parachain_runtime::polkadot_runtime_parachains::shared::migration::MigrateToV1"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[12691]}