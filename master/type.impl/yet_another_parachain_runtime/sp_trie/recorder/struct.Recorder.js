(function() {
    var type_impls = Object.fromEntries([["yet_another_parachain_runtime",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Recorder%3CH%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#155\">Source</a><a href=\"#impl-Clone-for-Recorder%3CH%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html\" title=\"struct yet_another_parachain_runtime::sp_trie::recorder::Recorder\">Recorder</a>&lt;H&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/sp_runtime/app_crypto/sp_core/trait.Hasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::sp_runtime::app_crypto::sp_core::Hasher\">Hasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#156\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html\" title=\"struct yet_another_parachain_runtime::sp_trie::recorder::Recorder\">Recorder</a>&lt;H&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","yet_another_parachain_runtime::polkadot_sdk_frame::runtime::apis::ProofRecorder"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Recorder%3CH%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#149\">Source</a><a href=\"#impl-Default-for-Recorder%3CH%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html\" title=\"struct yet_another_parachain_runtime::sp_trie::recorder::Recorder\">Recorder</a>&lt;H&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/sp_runtime/app_crypto/sp_core/trait.Hasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::sp_runtime::app_crypto::sp_core::Hasher\">Hasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#150\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html\" title=\"struct yet_another_parachain_runtime::sp_trie::recorder::Recorder\">Recorder</a>&lt;H&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","yet_another_parachain_runtime::polkadot_sdk_frame::runtime::apis::ProofRecorder"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProofSizeProvider-for-Recorder%3CH%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#305\">Source</a><a href=\"#impl-ProofSizeProvider-for-Recorder%3CH%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H&gt; <a class=\"trait\" href=\"yet_another_parachain_runtime/sp_trie/trait.ProofSizeProvider.html\" title=\"trait yet_another_parachain_runtime::sp_trie::ProofSizeProvider\">ProofSizeProvider</a> for <a class=\"struct\" href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html\" title=\"struct yet_another_parachain_runtime::sp_trie::recorder::Recorder\">Recorder</a>&lt;H&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/sp_runtime/app_crypto/sp_core/trait.Hasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::sp_runtime::app_crypto::sp_core::Hasher\">Hasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.estimate_encoded_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#306\">Source</a><a href=\"#method.estimate_encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/sp_trie/trait.ProofSizeProvider.html#tymethod.estimate_encoded_size\" class=\"fn\">estimate_encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the storage proof size.</div></details></div></details>","ProofSizeProvider","yet_another_parachain_runtime::polkadot_sdk_frame::runtime::apis::ProofRecorder"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Recorder%3CH%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#164\">Source</a><a href=\"#impl-Recorder%3CH%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html\" title=\"struct yet_another_parachain_runtime::sp_trie::recorder::Recorder\">Recorder</a>&lt;H&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/sp_runtime/app_crypto/sp_core/trait.Hasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::sp_runtime::app_crypto::sp_core::Hasher\">Hasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_ignored_nodes\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#168\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html#tymethod.with_ignored_nodes\" class=\"fn\">with_ignored_nodes</a>(\n    ignored_nodes: <a class=\"struct\" href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.IgnoredNodes.html\" title=\"struct yet_another_parachain_runtime::sp_trie::recorder::IgnoredNodes\">IgnoredNodes</a>&lt;&lt;H as <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/sp_runtime/app_crypto/sp_core/trait.Hasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::sp_runtime::app_crypto::sp_core::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"yet_another_parachain_runtime/frame_support/sp_runtime/app_crypto/sp_core/trait.Hasher.html#associatedtype.Out\" title=\"type yet_another_parachain_runtime::frame_support::sp_runtime::app_crypto::sp_core::Hasher::Out\">Out</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html\" title=\"struct yet_another_parachain_runtime::sp_trie::recorder::Recorder\">Recorder</a>&lt;H&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new instance with the given <code>ingored_nodes</code>.</p>\n<p>These ignored nodes are not recorded when accessed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recorded_keys\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#178\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html#tymethod.recorded_keys\" class=\"fn\">recorded_keys</a>(\n    &amp;self,\n) -&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/struct.HashMap.html\" title=\"struct yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::HashMap\">HashMap</a>&lt;&lt;H as <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/sp_runtime/app_crypto/sp_core/trait.Hasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::sp_runtime::app_crypto::sp_core::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"yet_another_parachain_runtime/frame_support/sp_runtime/app_crypto/sp_core/trait.Hasher.html#associatedtype.Out\" title=\"type yet_another_parachain_runtime::frame_support::sp_runtime::app_crypto::sp_core::Hasher::Out\">Out</a>, <a class=\"struct\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/struct.HashMap.html\" title=\"struct yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::HashMap\">HashMap</a>&lt;<a class=\"struct\" href=\"yet_another_parachain_runtime/polkadot_node_network_protocol/struct.Arc.html\" title=\"struct yet_another_parachain_runtime::polkadot_node_network_protocol::Arc\">Arc</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]&gt;, RecordedForKey&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns [<code>RecordedForKey</code>] per recorded key per trie.</p>\n<p>There are multiple tries when working with e.g. child tries.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_trie_recorder\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#189\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html#tymethod.as_trie_recorder\" class=\"fn\">as_trie_recorder</a>(\n    &amp;self,\n    storage_root: &lt;H as <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/sp_runtime/app_crypto/sp_core/trait.Hasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::sp_runtime::app_crypto::sp_core::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"yet_another_parachain_runtime/frame_support/sp_runtime/app_crypto/sp_core/trait.Hasher.html#associatedtype.Out\" title=\"type yet_another_parachain_runtime::frame_support::sp_runtime::app_crypto::sp_core::Hasher::Out\">Out</a>,\n) -&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.TrieRecorder.html\" title=\"struct yet_another_parachain_runtime::sp_trie::recorder::TrieRecorder\">TrieRecorder</a>&lt;'_, H&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the recorder as <a href=\"yet_another_parachain_runtime/sp_trie/trait.TrieRecorder.html\" title=\"trait yet_another_parachain_runtime::sp_trie::TrieRecorder\"><code>TrieRecorder</code></a> compatible type.</p>\n<ul>\n<li><code>storage_root</code>: The storage root of the trie for which accesses are recorded. This is\nimportant when recording access to different tries at once (like top and child tries).</li>\n</ul>\n<p>NOTE: This locks a mutex that stays locked until the return value is dropped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain_storage_proof\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#206\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html#tymethod.drain_storage_proof\" class=\"fn\">drain_storage_proof</a>(self) -&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/sc_client_api/struct.StorageProof.html\" title=\"struct yet_another_parachain_runtime::sc_client_api::StorageProof\">StorageProof</a></h4></section></summary><div class=\"docblock\"><p>Drain the recording into a <a href=\"yet_another_parachain_runtime/sc_client_api/struct.StorageProof.html\" title=\"struct yet_another_parachain_runtime::sc_client_api::StorageProof\"><code>StorageProof</code></a>.</p>\n<p>While a recorder can be cloned, all share the same internal state. After calling this\nfunction, all other instances will have their internal state reset as well.</p>\n<p>If you don’t want to drain the recorded state, use <a href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html#method.to_storage_proof\" title=\"method yet_another_parachain_runtime::sp_trie::recorder::Recorder::to_storage_proof\"><code>Self::to_storage_proof</code></a>.</p>\n<p>Returns the <a href=\"yet_another_parachain_runtime/sc_client_api/struct.StorageProof.html\" title=\"struct yet_another_parachain_runtime::sc_client_api::StorageProof\"><code>StorageProof</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_storage_proof\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#217\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html#tymethod.to_storage_proof\" class=\"fn\">to_storage_proof</a>(&amp;self) -&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/sc_client_api/struct.StorageProof.html\" title=\"struct yet_another_parachain_runtime::sc_client_api::StorageProof\">StorageProof</a></h4></section></summary><div class=\"docblock\"><p>Convert the recording to a <a href=\"yet_another_parachain_runtime/sc_client_api/struct.StorageProof.html\" title=\"struct yet_another_parachain_runtime::sc_client_api::StorageProof\"><code>StorageProof</code></a>.</p>\n<p>In contrast to <a href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html#method.drain_storage_proof\" title=\"method yet_another_parachain_runtime::sp_trie::recorder::Recorder::drain_storage_proof\"><code>Self::drain_storage_proof</code></a> this doesn’t consume and doesn’t clear the\nrecordings.</p>\n<p>Returns the <a href=\"yet_another_parachain_runtime/sc_client_api/struct.StorageProof.html\" title=\"struct yet_another_parachain_runtime::sc_client_api::StorageProof\"><code>StorageProof</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.estimate_encoded_size\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#226\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html#tymethod.estimate_encoded_size\" class=\"fn\">estimate_encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the estimated encoded size of the proof.</p>\n<p>The estimation is based on all the nodes that were accessed until now while\naccessing the trie.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#233\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html#tymethod.reset\" class=\"fn\">reset</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Reset the state.</p>\n<p>This discards all recorded data.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.start_transaction\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#239\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html#tymethod.start_transaction\" class=\"fn\">start_transaction</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Start a new transaction.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rollback_transaction\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#247\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html#tymethod.rollback_transaction\" class=\"fn\">rollback_transaction</a>(&amp;self) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Rollback the latest transaction.</p>\n<p>Returns an error if there wasn’t any active transaction.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit_transaction\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#281\">Source</a><h4 class=\"code-header\">pub fn <a href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html#tymethod.commit_transaction\" class=\"fn\">commit_transaction</a>(&amp;self) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Commit the latest transaction.</p>\n<p>Returns an error if there wasn’t any active transaction.</p>\n</div></details></div></details>",0,"yet_another_parachain_runtime::polkadot_sdk_frame::runtime::apis::ProofRecorder"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TrieRecorderProvider%3CH%3E-for-Recorder%3CH%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#319\">Source</a><a href=\"#impl-TrieRecorderProvider%3CH%3E-for-Recorder%3CH%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H&gt; <a class=\"trait\" href=\"yet_another_parachain_runtime/sp_trie/trait.TrieRecorderProvider.html\" title=\"trait yet_another_parachain_runtime::sp_trie::TrieRecorderProvider\">TrieRecorderProvider</a>&lt;H&gt; for <a class=\"struct\" href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html\" title=\"struct yet_another_parachain_runtime::sp_trie::recorder::Recorder\">Recorder</a>&lt;H&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/sp_runtime/app_crypto/sp_core/trait.Hasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::sp_runtime::app_crypto::sp_core::Hasher\">Hasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Recorder\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#320\">Source</a><a href=\"#associatedtype.Recorder\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"yet_another_parachain_runtime/sp_trie/trait.TrieRecorderProvider.html#associatedtype.Recorder\" class=\"associatedtype\">Recorder</a>&lt;'a&gt; = <a class=\"struct\" href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.TrieRecorder.html\" title=\"struct yet_another_parachain_runtime::sp_trie::recorder::TrieRecorder\">TrieRecorder</a>&lt;'a, H&gt;\n<span class=\"where\">where\n    H: 'a</span></h4></section></summary><div class='docblock'>Recorder type that is going to be returned by implementors of this trait.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain_storage_proof\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#325\">Source</a><a href=\"#method.drain_storage_proof\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/sp_trie/trait.TrieRecorderProvider.html#tymethod.drain_storage_proof\" class=\"fn\">drain_storage_proof</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"yet_another_parachain_runtime/sc_client_api/struct.StorageProof.html\" title=\"struct yet_another_parachain_runtime::sc_client_api::StorageProof\">StorageProof</a>&gt;</h4></section></summary><div class='docblock'>Create a <a href=\"yet_another_parachain_runtime/sc_client_api/struct.StorageProof.html\" title=\"struct yet_another_parachain_runtime::sc_client_api::StorageProof\"><code>StorageProof</code></a> derived from the internal state.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_trie_recorder\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_trie/recorder.rs.html#329\">Source</a><a href=\"#method.as_trie_recorder\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/sp_trie/trait.TrieRecorderProvider.html#tymethod.as_trie_recorder\" class=\"fn\">as_trie_recorder</a>(\n    &amp;self,\n    storage_root: &lt;H as <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/sp_runtime/app_crypto/sp_core/trait.Hasher.html\" title=\"trait yet_another_parachain_runtime::frame_support::sp_runtime::app_crypto::sp_core::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"yet_another_parachain_runtime/frame_support/sp_runtime/app_crypto/sp_core/trait.Hasher.html#associatedtype.Out\" title=\"type yet_another_parachain_runtime::frame_support::sp_runtime::app_crypto::sp_core::Hasher::Out\">Out</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"yet_another_parachain_runtime/sp_trie/recorder/struct.Recorder.html\" title=\"struct yet_another_parachain_runtime::sp_trie::recorder::Recorder\">Recorder</a>&lt;H&gt; as <a class=\"trait\" href=\"yet_another_parachain_runtime/sp_trie/trait.TrieRecorderProvider.html\" title=\"trait yet_another_parachain_runtime::sp_trie::TrieRecorderProvider\">TrieRecorderProvider</a>&lt;H&gt;&gt;::<a class=\"associatedtype\" href=\"yet_another_parachain_runtime/sp_trie/trait.TrieRecorderProvider.html#associatedtype.Recorder\" title=\"type yet_another_parachain_runtime::sp_trie::TrieRecorderProvider::Recorder\">Recorder</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Provide a recorder implementing <a href=\"yet_another_parachain_runtime/sp_trie/trait.TrieRecorder.html\" title=\"trait yet_another_parachain_runtime::sp_trie::TrieRecorder\"><code>trie_db::TrieRecorder</code></a>.</div></details></div></details>","TrieRecorderProvider<H>","yet_another_parachain_runtime::polkadot_sdk_frame::runtime::apis::ProofRecorder"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[23931]}