(function() {
    var type_impls = Object.fromEntries([["yet_another_parachain_runtime",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26Projective%3CP%3E%3E-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-Add%3C%26Projective%3CP%3E%3E-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, P&gt; <a class=\"trait\" href=\"yet_another_parachain_runtime/slot_range_helper/trait.Add.html\" title=\"trait yet_another_parachain_runtime::slot_range_helper::Add\">Add</a>&lt;&amp;'a Projective&lt;P&gt;&gt; for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"yet_another_parachain_runtime/slot_range_helper/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Projective&lt;P&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/slot_range_helper/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;'a Projective&lt;P&gt;) -&gt; Projective&lt;P&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"yet_another_parachain_runtime/slot_range_helper/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&'a Projective<P>>","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CProjective%3CP%3E%3E-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-Add%3CProjective%3CP%3E%3E-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"yet_another_parachain_runtime/slot_range_helper/trait.Add.html\" title=\"trait yet_another_parachain_runtime::slot_range_helper::Add\">Add</a>&lt;Projective&lt;P&gt;&gt; for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"yet_another_parachain_runtime/slot_range_helper/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Projective&lt;P&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/slot_range_helper/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: Projective&lt;P&gt;) -&gt; Projective&lt;P&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"yet_another_parachain_runtime/slot_range_helper/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<Projective<P>>","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CT%3E-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-Add%3CT%3E-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, T&gt; <a class=\"trait\" href=\"yet_another_parachain_runtime/slot_range_helper/trait.Add.html\" title=\"trait yet_another_parachain_runtime::slot_range_helper::Add\">Add</a>&lt;T&gt; for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Affine&lt;P&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"yet_another_parachain_runtime/slot_range_helper/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Projective&lt;P&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/slot_range_helper/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: T) -&gt; Projective&lt;P&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"yet_another_parachain_runtime/slot_range_helper/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<T>","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_correct_subgroup_assuming_on_curve\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_in_correct_subgroup_assuming_on_curve</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if <code>self</code> is in the subgroup having order that equaling that of\n<code>P::ScalarField</code>.</p>\n</div></details></div></details>",0,"yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(\n    x: &lt;P as CurveConfig&gt;::BaseField,\n    y: &lt;P as CurveConfig&gt;::BaseField,\n) -&gt; Affine&lt;P&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a group element from x and y coordinates.\nPerforms checks to ensure that the point is on the curve and is in the right subgroup.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">new_unchecked</a>(\n    x: &lt;P as CurveConfig&gt;::BaseField,\n    y: &lt;P as CurveConfig&gt;::BaseField,\n) -&gt; Affine&lt;P&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a group element from x and y coordinates.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>Does <em>not</em> perform any checks to ensure the point is in the curve or\nis in the right subgroup.</p>\n</div></details><section id=\"method.identity\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">identity</a>() -&gt; Affine&lt;P&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_point_from_x_unchecked\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_point_from_x_unchecked</a>(\n    x: &lt;P as CurveConfig&gt;::BaseField,\n    greatest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Affine&lt;P&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to construct an affine point given an x-coordinate. The\npoint is not guaranteed to be in the prime order subgroup.</p>\n<p>If and only if <code>greatest</code> is set will the lexicographically\nlargest y-coordinate be selected.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_ys_from_x_unchecked\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_ys_from_x_unchecked</a>(\n    x: &lt;P as CurveConfig&gt;::BaseField,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;P as CurveConfig&gt;::BaseField, &lt;P as CurveConfig&gt;::BaseField)&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the two possible y-coordinates corresponding to the given x-coordinate.\nThe corresponding points are not guaranteed to be in the prime-order subgroup,\nbut are guaranteed to be on the curve. That is, this method returns <code>None</code>\nif the x-coordinate corresponds to a non-curve point.</p>\n<p>The results are sorted by lexicographical order.\nThis means that, if <code>P::BaseField: PrimeField</code>, the results are sorted as integers.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_on_curve\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_on_curve</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if <code>self</code> is a valid point on the curve.</p>\n</div></details><section id=\"method.to_flags\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_flags</a>(&amp;self) -&gt; SWFlags</h4></section></div></details>",0,"yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AffineRepr-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-AffineRepr-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; AffineRepr for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_by_cofactor_to_group\" class=\"method trait-impl\"><a href=\"#method.mul_by_cofactor_to_group\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul_by_cofactor_to_group</a>(&amp;self) -&gt; &lt;Affine&lt;P&gt; as AffineRepr&gt;::Group</h4></section></summary><div class=\"docblock\"><p>Multiplies this element by the cofactor and output the\nresulting projective element.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_cofactor\" class=\"method trait-impl\"><a href=\"#method.clear_cofactor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear_cofactor</a>(&amp;self) -&gt; Affine&lt;P&gt;</h4></section></summary><div class=\"docblock\"><p>Performs cofactor clearing.\nThe default method is simply to multiply by the cofactor.\nSome curves can implement a more efficient algorithm.</p>\n</div></details><section id=\"associatedtype.Config\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Config\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Config</a> = P</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.BaseField\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BaseField\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BaseField</a> = &lt;P as CurveConfig&gt;::BaseField</h4></section></summary><div class='docblock'>The finite field over which this curve is defined.</div></details><section id=\"associatedtype.ScalarField\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ScalarField\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ScalarField</a> = &lt;P as CurveConfig&gt;::ScalarField</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.Group\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Group\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Group</a> = Projective&lt;P&gt;</h4></section></summary><div class='docblock'>The projective representation of points on this curve.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.xy\" class=\"method trait-impl\"><a href=\"#method.xy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">xy</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;&lt;Affine&lt;P&gt; as AffineRepr&gt;::BaseField, &amp;&lt;Affine&lt;P&gt; as AffineRepr&gt;::BaseField)&gt;</h4></section></summary><div class='docblock'>Returns the x and y coordinates of this affine point.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generator\" class=\"method trait-impl\"><a href=\"#method.generator\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">generator</a>() -&gt; Affine&lt;P&gt;</h4></section></summary><div class='docblock'>Returns a fixed generator of unknown exponent.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero</a>() -&gt; Affine&lt;P&gt;</h4></section></summary><div class='docblock'>Returns the point at infinity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_random_bytes\" class=\"method trait-impl\"><a href=\"#method.from_random_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_random_bytes</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Affine&lt;P&gt;&gt;</h4></section></summary><div class='docblock'>Returns a group element if the set of bytes forms a valid group element,\notherwise returns None. This function is primarily intended for sampling\nrandom group elements from a hash-function or RNG output.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_bigint\" class=\"method trait-impl\"><a href=\"#method.mul_bigint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul_bigint</a>(&amp;self, by: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u64.html\">u64</a>]&gt;) -&gt; &lt;Affine&lt;P&gt; as AffineRepr&gt;::Group</h4></section></summary><div class='docblock'>Performs scalar multiplication of this element with mixed addition.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.x\" class=\"method trait-impl\"><a href=\"#method.x\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">x</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Self::BaseField&gt;</h4></section></summary><div class='docblock'>Returns the x coordinate of this affine point.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.y\" class=\"method trait-impl\"><a href=\"#method.y\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">y</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Self::BaseField&gt;</h4></section></summary><div class='docblock'>Returns the y coordinate of this affine point.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is <code>self</code> the point at infinity?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_group\" class=\"method trait-impl\"><a href=\"#method.into_group\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_group</a>(self) -&gt; Self::Group</h4></section></summary><div class='docblock'>Converts self into the projective representation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_by_cofactor\" class=\"method trait-impl\"><a href=\"#method.mul_by_cofactor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul_by_cofactor</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Multiplies this element by the cofactor.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_by_cofactor_inv\" class=\"method trait-impl\"><a href=\"#method.mul_by_cofactor_inv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul_by_cofactor_inv</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Multiplies this element by the inverse of the cofactor in\n<code>Self::ScalarField</code>.</div></details></div></details>","AffineRepr","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArkScaleMaxEncodedLen-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-ArkScaleMaxEncodedLen-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; ArkScaleMaxEncodedLen for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>(compress: Compress) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","ArkScaleMaxEncodedLen","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CanonicalDeserialize-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-CanonicalDeserialize-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; CanonicalDeserialize for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_with_mode\" class=\"method trait-impl\"><a href=\"#method.deserialize_with_mode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_with_mode</a>&lt;R&gt;(\n    reader: R,\n    compress: Compress,\n    validate: Validate,\n) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;Affine&lt;P&gt;, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section></summary><div class='docblock'>The general deserialize method that takes in customization flags.</div></details><section id=\"method.deserialize_compressed\" class=\"method trait-impl\"><a href=\"#method.deserialize_compressed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_compressed</a>&lt;R&gt;(reader: R) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;Self, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section><section id=\"method.deserialize_compressed_unchecked\" class=\"method trait-impl\"><a href=\"#method.deserialize_compressed_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_compressed_unchecked</a>&lt;R&gt;(\n    reader: R,\n) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;Self, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section><section id=\"method.deserialize_uncompressed\" class=\"method trait-impl\"><a href=\"#method.deserialize_uncompressed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_uncompressed</a>&lt;R&gt;(reader: R) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;Self, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section><section id=\"method.deserialize_uncompressed_unchecked\" class=\"method trait-impl\"><a href=\"#method.deserialize_uncompressed_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_uncompressed_unchecked</a>&lt;R&gt;(\n    reader: R,\n) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;Self, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section></div></details>","CanonicalDeserialize","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CanonicalSerialize-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-CanonicalSerialize-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; CanonicalSerialize for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_with_mode\" class=\"method trait-impl\"><a href=\"#method.serialize_with_mode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize_with_mode</a>&lt;W&gt;(\n    &amp;self,\n    writer: W,\n    compress: Compress,\n) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, SerializationError&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>The general serialize method that takes in customization flags.</div></details><section id=\"method.serialized_size\" class=\"method trait-impl\"><a href=\"#method.serialized_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialized_size</a>(&amp;self, compress: Compress) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.serialize_compressed\" class=\"method trait-impl\"><a href=\"#method.serialize_compressed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize_compressed</a>&lt;W&gt;(&amp;self, writer: W) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, SerializationError&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section><section id=\"method.compressed_size\" class=\"method trait-impl\"><a href=\"#method.compressed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">compressed_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.serialize_uncompressed\" class=\"method trait-impl\"><a href=\"#method.serialize_uncompressed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize_uncompressed</a>&lt;W&gt;(&amp;self, writer: W) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, SerializationError&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section><section id=\"method.uncompressed_size\" class=\"method trait-impl\"><a href=\"#method.uncompressed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">uncompressed_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a></h4></section></div></details>","CanonicalSerialize","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Affine&lt;P&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.Debug.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::Debug\">Debug</a> for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/fmt/struct.Formatter.html\" title=\"struct yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/fmt/struct.Error.html\" title=\"struct yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-Default-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Affine&lt;P&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-Display-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/fmt/trait.Display.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::fmt::Display\">Display</a> for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/fmt/struct.Formatter.html\" title=\"struct yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/fmt/struct.Error.html\" title=\"struct yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CProjective%3CP%3E%3E-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-From%3CProjective%3CP%3E%3E-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Projective&lt;P&gt;&gt; for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(p: Projective&lt;P&gt;) -&gt; Affine&lt;P&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Projective<P>>","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-Hash-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__HP&gt;(&amp;self, __state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut __HP</a>)<div class=\"where\">where\n    __HP: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-Mul%3CT%3E-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt; for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;&lt;P as CurveConfig&gt;::ScalarField&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Projective&lt;P&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: T) -&gt; &lt;Affine&lt;P&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-Neg-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; Affine&lt;P&gt;</h4></section></summary><div class=\"docblock\"><p>If <code>self.is_zero()</code>, returns <code>self</code> (<code>== Self::zero()</code>).\nElse, returns <code>(x, -y)</code>, where <code>self = (x, y)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Affine&lt;P&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details></div></details>","Neg","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CProjective%3CP%3E%3E-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-PartialEq%3CProjective%3CP%3E%3E-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;Projective&lt;P&gt;&gt; for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Projective&lt;P&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Projective<P>>","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Affine&lt;P&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CT%3E-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-Sub%3CT%3E-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T&gt; for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Affine&lt;P&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Projective&lt;P&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: T) -&gt; Projective&lt;P&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<T>","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToConstraintField%3CConstraintF%3E-for-Affine%3CM%3E\" class=\"impl\"><a href=\"#impl-ToConstraintField%3CConstraintF%3E-for-Affine%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, ConstraintF&gt; ToConstraintField&lt;ConstraintF&gt; for Affine&lt;M&gt;<div class=\"where\">where\n    M: SWCurveConfig,\n    ConstraintF: Field,\n    &lt;M as CurveConfig&gt;::BaseField: ToConstraintField&lt;ConstraintF&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_field_elements\" class=\"method trait-impl\"><a href=\"#method.to_field_elements\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_field_elements</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"yet_another_parachain_runtime/pallet_referenda/struct.Vec.html\" title=\"struct yet_another_parachain_runtime::pallet_referenda::Vec\">Vec</a>&lt;ConstraintF&gt;&gt;</h4></section></div></details>","ToConstraintField<ConstraintF>","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Valid-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-Valid-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; Valid for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.check\" class=\"method trait-impl\"><a href=\"#method.check\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">check</a>(&amp;self) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, SerializationError&gt;</h4></section><section id=\"method.batch_check\" class=\"method trait-impl\"><a href=\"#method.batch_check\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_check</a>&lt;'a&gt;(\n    batch: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a Self&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, SerializationError&gt;<div class=\"where\">where\n    Self: 'a,</div></h4></section></div></details>","Valid","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroize-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-Zeroize-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"yet_another_parachain_runtime/frame_support/sp_runtime/app_crypto/sp_core/crypto/trait.Zeroize.html\" title=\"trait yet_another_parachain_runtime::frame_support::sp_runtime::app_crypto::sp_core::crypto::Zeroize\">Zeroize</a> for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroize\" class=\"method trait-impl\"><a href=\"#method.zeroize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/frame_support/sp_runtime/app_crypto/sp_core/crypto/trait.Zeroize.html#tymethod.zeroize\" class=\"fn\">zeroize</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Zero out this object from memory using Rust intrinsics which ensure the\nzeroization operation is not “optimized away” by the compiler.</div></details></div></details>","Zeroize","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<section id=\"impl-Copy-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-Copy-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section>","Copy","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"],["<section id=\"impl-Eq-for-Affine%3CP%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Affine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Affine&lt;P&gt;<div class=\"where\">where\n    P: SWCurveConfig,</div></h3></section>","Eq","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::g1::G1SWAffine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_377::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bls12_381::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G1Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::G2Affine","yet_another_parachain_runtime::sp_crypto_ec_utils::ed_on_bls12_381_bandersnatch::SWAffine"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[66894]}