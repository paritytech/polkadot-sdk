(function() {
    var type_impls = Object.fromEntries([["sp_application_crypto",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-TinyBLS%3CE,+P%3E\" class=\"impl\"><a href=\"#impl-Default-for-TinyBLS%3CE,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for TinyBLS&lt;E, P&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + Pairing,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + Bls12Config + CurveExtraConfig,\n    &lt;P as Bls12Config&gt;::G1Config: WBConfig,\n    WBMap&lt;&lt;P as Bls12Config&gt;::G1Config&gt;: MapToCurve&lt;&lt;E as Pairing&gt;::G1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; TinyBLS&lt;E, P&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sp_application_crypto::bls381::Bls381Engine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EngineBLS-for-TinyBLS%3CE,+P%3E\" class=\"impl\"><a href=\"#impl-EngineBLS-for-TinyBLS%3CE,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, P&gt; EngineBLS for TinyBLS&lt;E, P&gt;<div class=\"where\">where\n    E: Pairing,\n    P: Bls12Config + CurveExtraConfig,\n    &lt;P as Bls12Config&gt;::G1Config: WBConfig,\n    WBMap&lt;&lt;P as Bls12Config&gt;::G1Config&gt;: MapToCurve&lt;&lt;E as Pairing&gt;::G1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.minus_generator_of_public_key_group_prepared\" class=\"method trait-impl\"><a href=\"#method.minus_generator_of_public_key_group_prepared\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">minus_generator_of_public_key_group_prepared</a>() -&gt; &lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::PublicKeyPrepared</h4></section></summary><div class=\"docblock\"><p>Prepared negative of the generator of the public key curve.</p>\n</div></details><section id=\"associatedconstant.SIGNATURE_SERIALIZED_SIZE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.SIGNATURE_SERIALIZED_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">SIGNATURE_SERIALIZED_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a> = 48usize</h4></section><section id=\"associatedconstant.PUBLICKEY_SERIALIZED_SIZE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.PUBLICKEY_SERIALIZED_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">PUBLICKEY_SERIALIZED_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a> = 96usize</h4></section><section id=\"associatedconstant.SECRET_KEY_SIZE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.SECRET_KEY_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">SECRET_KEY_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a> = 32usize</h4></section><section id=\"associatedconstant.CURVE_NAME\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.CURVE_NAME\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">CURVE_NAME</a>: &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>] = P::CURVE_NAME</h4></section><section id=\"associatedconstant.SIG_GROUP_NAME\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.SIG_GROUP_NAME\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">SIG_GROUP_NAME</a>: &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>] = b&quot;G1&quot;</h4></section><section id=\"associatedconstant.CIPHER_SUIT_DOMAIN_SEPARATION\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.CIPHER_SUIT_DOMAIN_SEPARATION\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">CIPHER_SUIT_DOMAIN_SEPARATION</a>: &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>] = b&quot;_XMD:SHA-256_SSWU_RO_&quot;</h4></section><section id=\"associatedtype.Engine\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Engine\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Engine</a> = E</h4></section><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Scalar</a> = &lt;&lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::Engine as Pairing&gt;::ScalarField</h4></section><section id=\"associatedtype.SignatureGroup\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SignatureGroup\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">SignatureGroup</a> = &lt;E as Pairing&gt;::G1</h4></section><section id=\"associatedtype.SignatureGroupAffine\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SignatureGroupAffine\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">SignatureGroupAffine</a> = &lt;E as Pairing&gt;::G1Affine</h4></section><section id=\"associatedtype.SignaturePrepared\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SignaturePrepared\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">SignaturePrepared</a> = &lt;E as Pairing&gt;::G1Prepared</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.SignatureGroupBaseField\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SignatureGroupBaseField\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">SignatureGroupBaseField</a> = &lt;&lt;E as Pairing&gt;::G1 as CurveGroup&gt;::BaseField</h4></section></summary><div class='docblock'>Group where BLS signatures live <a>Read more</a></div></details><section id=\"associatedtype.PublicKeyGroup\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PublicKeyGroup\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PublicKeyGroup</a> = &lt;E as Pairing&gt;::G2</h4></section><section id=\"associatedtype.PublicKeyGroupAffine\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PublicKeyGroupAffine\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PublicKeyGroupAffine</a> = &lt;E as Pairing&gt;::G2Affine</h4></section><section id=\"associatedtype.PublicKeyPrepared\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PublicKeyPrepared\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PublicKeyPrepared</a> = &lt;E as Pairing&gt;::G2Prepared</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.PublicKeyGroupBaseField\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PublicKeyGroupBaseField\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PublicKeyGroupBaseField</a> = &lt;&lt;E as Pairing&gt;::G2 as CurveGroup&gt;::BaseField</h4></section></summary><div class='docblock'>Group where BLS public keys live <a>Read more</a></div></details><section id=\"associatedtype.HashToSignatureField\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.HashToSignatureField\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">HashToSignatureField</a> = DefaultFieldHasher&lt;CoreWrapper&lt;CtVariableCoreWrapper&lt;Sha256VarCore, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, OidSha256&gt;&gt;&gt;</h4></section><section id=\"associatedtype.MapToSignatureCurve\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.MapToSignatureCurve\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">MapToSignatureCurve</a> = WBMap&lt;&lt;P as Bls12Config&gt;::G1Config&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.miller_loop\" class=\"method trait-impl\"><a href=\"#method.miller_loop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">miller_loop</a>&lt;'a, I&gt;(i: I) -&gt; MillerLoopOutput&lt;E&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a (&lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::PublicKeyPrepared, &lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::SignaturePrepared)&gt;,</div></h4></section></summary><div class='docblock'>Run the Miller loop from <code>Engine</code> but orients its arguments\nto be a <code>SignatureGroup</code> and <code>PublicKeyGroup</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pairing\" class=\"method trait-impl\"><a href=\"#method.pairing\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pairing</a>&lt;G2, G1&gt;(p: G2, q: G1) -&gt; &lt;E as Pairing&gt;::TargetField<div class=\"where\">where\n    G1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;E as Pairing&gt;::G1Affine&gt;,\n    G2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;E as Pairing&gt;::G2Affine&gt;,</div></h4></section></summary><div class='docblock'>Performs a pairing operation <code>e(p, q)</code> by calling <code>Engine::pairing</code>\nbut orients its arguments to be a <code>PublicKeyGroup</code> and <code>SignatureGroup</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_curve_map\" class=\"method trait-impl\"><a href=\"#method.hash_to_curve_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_curve_map</a>() -&gt; MapToCurveBasedHasher&lt;&lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::SignatureGroup, &lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::HashToSignatureField, &lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::MapToSignatureCurve&gt;</h4></section></summary><div class='docblock'>getter function for the hash to curve map</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generate\" class=\"method trait-impl\"><a href=\"#method.generate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">generate</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; Self::Scalar<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a>,</div></h4></section></summary><div class='docblock'>Generate a random scalar for use as a secret key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_signature_curve\" class=\"method trait-impl\"><a href=\"#method.hash_to_signature_curve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_signature_curve</a>&lt;M&gt;(message: M) -&gt; Self::SignatureGroup<div class=\"where\">where\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class='docblock'>Hash one message to the signature curve.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_exponentiation\" class=\"method trait-impl\"><a href=\"#method.final_exponentiation\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_exponentiation</a>(\n    e: MillerLoopOutput&lt;Self::Engine&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PairingOutput&lt;Self::Engine&gt;&gt;</h4></section></summary><div class='docblock'>Perform final exponentiation on the result of a Miller loop.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_prepared\" class=\"method trait-impl\"><a href=\"#method.verify_prepared\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">verify_prepared</a>&lt;'a, I&gt;(signature: Self::SignaturePrepared, inputs: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self::PublicKeyPrepared: 'a,\n    Self::SignaturePrepared: 'a,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a (Self::PublicKeyPrepared, Self::SignaturePrepared)&gt;,</div></h4></section></summary><div class='docblock'>Implement verification equation for aggregate BLS signatures\nprovided as prepared points <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generator_of_signature_group\" class=\"method trait-impl\"><a href=\"#method.generator_of_signature_group\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">generator_of_signature_group</a>() -&gt; Self::SignatureGroup</h4></section></summary><div class='docblock'>return the generator of signature group</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_public_key\" class=\"method trait-impl\"><a href=\"#method.prepare_public_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_public_key</a>(\n    g: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Self::PublicKeyGroupAffine&gt;,\n) -&gt; Self::PublicKeyPrepared</h4></section></summary><div class='docblock'>Process the public key to be use in pairing. This has to be\nimplemented by the type of BLS system implementing the engine\nby calling either prepare_g1 or prepare_g2 based on which group\nis used by the signature system to host the public key</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_signature\" class=\"method trait-impl\"><a href=\"#method.prepare_signature\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_signature</a>(\n    g: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Self::SignatureGroupAffine&gt;,\n) -&gt; Self::SignaturePrepared</h4></section></summary><div class='docblock'>Process the signature to be use in pairing. This has to be\nimplemented by the type of BLS system implementing the engine\nby calling either prepare_g1 or prepare_g2 based on which group\nis used by the signature system to host the public key</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signature_point_to_byte\" class=\"method trait-impl\"><a href=\"#method.signature_point_to_byte\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">signature_point_to_byte</a>(point: &amp;Self::SignatureGroup) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Serialization helper for various sigma protocols</div></details><section id=\"method.public_key_point_to_byte\" class=\"method trait-impl\"><a href=\"#method.public_key_point_to_byte\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">public_key_point_to_byte</a>(point: &amp;Self::PublicKeyGroup) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></div></details>","EngineBLS","sp_application_crypto::bls381::Bls381Engine"]]],["sp_core",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-TinyBLS%3CE,+P%3E\" class=\"impl\"><a href=\"#impl-Default-for-TinyBLS%3CE,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for TinyBLS&lt;E, P&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + Pairing,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + Bls12Config + CurveExtraConfig,\n    &lt;P as Bls12Config&gt;::G1Config: WBConfig,\n    WBMap&lt;&lt;P as Bls12Config&gt;::G1Config&gt;: MapToCurve&lt;&lt;E as Pairing&gt;::G1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; TinyBLS&lt;E, P&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sp_core::bls::bls381::BlsEngine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EngineBLS-for-TinyBLS%3CE,+P%3E\" class=\"impl\"><a href=\"#impl-EngineBLS-for-TinyBLS%3CE,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, P&gt; EngineBLS for TinyBLS&lt;E, P&gt;<div class=\"where\">where\n    E: Pairing,\n    P: Bls12Config + CurveExtraConfig,\n    &lt;P as Bls12Config&gt;::G1Config: WBConfig,\n    WBMap&lt;&lt;P as Bls12Config&gt;::G1Config&gt;: MapToCurve&lt;&lt;E as Pairing&gt;::G1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.minus_generator_of_public_key_group_prepared\" class=\"method trait-impl\"><a href=\"#method.minus_generator_of_public_key_group_prepared\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">minus_generator_of_public_key_group_prepared</a>() -&gt; &lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::PublicKeyPrepared</h4></section></summary><div class=\"docblock\"><p>Prepared negative of the generator of the public key curve.</p>\n</div></details><section id=\"associatedconstant.SIGNATURE_SERIALIZED_SIZE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.SIGNATURE_SERIALIZED_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">SIGNATURE_SERIALIZED_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a> = 48usize</h4></section><section id=\"associatedconstant.PUBLICKEY_SERIALIZED_SIZE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.PUBLICKEY_SERIALIZED_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">PUBLICKEY_SERIALIZED_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a> = 96usize</h4></section><section id=\"associatedconstant.SECRET_KEY_SIZE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.SECRET_KEY_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">SECRET_KEY_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a> = 32usize</h4></section><section id=\"associatedconstant.CURVE_NAME\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.CURVE_NAME\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">CURVE_NAME</a>: &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>] = P::CURVE_NAME</h4></section><section id=\"associatedconstant.SIG_GROUP_NAME\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.SIG_GROUP_NAME\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">SIG_GROUP_NAME</a>: &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>] = b&quot;G1&quot;</h4></section><section id=\"associatedconstant.CIPHER_SUIT_DOMAIN_SEPARATION\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.CIPHER_SUIT_DOMAIN_SEPARATION\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">CIPHER_SUIT_DOMAIN_SEPARATION</a>: &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>] = b&quot;_XMD:SHA-256_SSWU_RO_&quot;</h4></section><section id=\"associatedtype.Engine\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Engine\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Engine</a> = E</h4></section><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Scalar</a> = &lt;&lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::Engine as Pairing&gt;::ScalarField</h4></section><section id=\"associatedtype.SignatureGroup\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SignatureGroup\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">SignatureGroup</a> = &lt;E as Pairing&gt;::G1</h4></section><section id=\"associatedtype.SignatureGroupAffine\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SignatureGroupAffine\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">SignatureGroupAffine</a> = &lt;E as Pairing&gt;::G1Affine</h4></section><section id=\"associatedtype.SignaturePrepared\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SignaturePrepared\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">SignaturePrepared</a> = &lt;E as Pairing&gt;::G1Prepared</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.SignatureGroupBaseField\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SignatureGroupBaseField\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">SignatureGroupBaseField</a> = &lt;&lt;E as Pairing&gt;::G1 as CurveGroup&gt;::BaseField</h4></section></summary><div class='docblock'>Group where BLS signatures live <a>Read more</a></div></details><section id=\"associatedtype.PublicKeyGroup\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PublicKeyGroup\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PublicKeyGroup</a> = &lt;E as Pairing&gt;::G2</h4></section><section id=\"associatedtype.PublicKeyGroupAffine\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PublicKeyGroupAffine\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PublicKeyGroupAffine</a> = &lt;E as Pairing&gt;::G2Affine</h4></section><section id=\"associatedtype.PublicKeyPrepared\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PublicKeyPrepared\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PublicKeyPrepared</a> = &lt;E as Pairing&gt;::G2Prepared</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.PublicKeyGroupBaseField\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PublicKeyGroupBaseField\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PublicKeyGroupBaseField</a> = &lt;&lt;E as Pairing&gt;::G2 as CurveGroup&gt;::BaseField</h4></section></summary><div class='docblock'>Group where BLS public keys live <a>Read more</a></div></details><section id=\"associatedtype.HashToSignatureField\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.HashToSignatureField\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">HashToSignatureField</a> = DefaultFieldHasher&lt;CoreWrapper&lt;CtVariableCoreWrapper&lt;Sha256VarCore, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, OidSha256&gt;&gt;&gt;</h4></section><section id=\"associatedtype.MapToSignatureCurve\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.MapToSignatureCurve\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">MapToSignatureCurve</a> = WBMap&lt;&lt;P as Bls12Config&gt;::G1Config&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.miller_loop\" class=\"method trait-impl\"><a href=\"#method.miller_loop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">miller_loop</a>&lt;'a, I&gt;(i: I) -&gt; MillerLoopOutput&lt;E&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a (&lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::PublicKeyPrepared, &lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::SignaturePrepared)&gt;,</div></h4></section></summary><div class='docblock'>Run the Miller loop from <code>Engine</code> but orients its arguments\nto be a <code>SignatureGroup</code> and <code>PublicKeyGroup</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pairing\" class=\"method trait-impl\"><a href=\"#method.pairing\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pairing</a>&lt;G2, G1&gt;(p: G2, q: G1) -&gt; &lt;E as Pairing&gt;::TargetField<div class=\"where\">where\n    G1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;E as Pairing&gt;::G1Affine&gt;,\n    G2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;E as Pairing&gt;::G2Affine&gt;,</div></h4></section></summary><div class='docblock'>Performs a pairing operation <code>e(p, q)</code> by calling <code>Engine::pairing</code>\nbut orients its arguments to be a <code>PublicKeyGroup</code> and <code>SignatureGroup</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_curve_map\" class=\"method trait-impl\"><a href=\"#method.hash_to_curve_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_curve_map</a>() -&gt; MapToCurveBasedHasher&lt;&lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::SignatureGroup, &lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::HashToSignatureField, &lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::MapToSignatureCurve&gt;</h4></section></summary><div class='docblock'>getter function for the hash to curve map</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generate\" class=\"method trait-impl\"><a href=\"#method.generate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">generate</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; Self::Scalar<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a>,</div></h4></section></summary><div class='docblock'>Generate a random scalar for use as a secret key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_signature_curve\" class=\"method trait-impl\"><a href=\"#method.hash_to_signature_curve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_signature_curve</a>&lt;M&gt;(message: M) -&gt; Self::SignatureGroup<div class=\"where\">where\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class='docblock'>Hash one message to the signature curve.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_exponentiation\" class=\"method trait-impl\"><a href=\"#method.final_exponentiation\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_exponentiation</a>(\n    e: MillerLoopOutput&lt;Self::Engine&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PairingOutput&lt;Self::Engine&gt;&gt;</h4></section></summary><div class='docblock'>Perform final exponentiation on the result of a Miller loop.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_prepared\" class=\"method trait-impl\"><a href=\"#method.verify_prepared\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">verify_prepared</a>&lt;'a, I&gt;(signature: Self::SignaturePrepared, inputs: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self::PublicKeyPrepared: 'a,\n    Self::SignaturePrepared: 'a,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a (Self::PublicKeyPrepared, Self::SignaturePrepared)&gt;,</div></h4></section></summary><div class='docblock'>Implement verification equation for aggregate BLS signatures\nprovided as prepared points <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generator_of_signature_group\" class=\"method trait-impl\"><a href=\"#method.generator_of_signature_group\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">generator_of_signature_group</a>() -&gt; Self::SignatureGroup</h4></section></summary><div class='docblock'>return the generator of signature group</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_public_key\" class=\"method trait-impl\"><a href=\"#method.prepare_public_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_public_key</a>(\n    g: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Self::PublicKeyGroupAffine&gt;,\n) -&gt; Self::PublicKeyPrepared</h4></section></summary><div class='docblock'>Process the public key to be use in pairing. This has to be\nimplemented by the type of BLS system implementing the engine\nby calling either prepare_g1 or prepare_g2 based on which group\nis used by the signature system to host the public key</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_signature\" class=\"method trait-impl\"><a href=\"#method.prepare_signature\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_signature</a>(\n    g: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Self::SignatureGroupAffine&gt;,\n) -&gt; Self::SignaturePrepared</h4></section></summary><div class='docblock'>Process the signature to be use in pairing. This has to be\nimplemented by the type of BLS system implementing the engine\nby calling either prepare_g1 or prepare_g2 based on which group\nis used by the signature system to host the public key</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signature_point_to_byte\" class=\"method trait-impl\"><a href=\"#method.signature_point_to_byte\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">signature_point_to_byte</a>(point: &amp;Self::SignatureGroup) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Serialization helper for various sigma protocols</div></details><section id=\"method.public_key_point_to_byte\" class=\"method trait-impl\"><a href=\"#method.public_key_point_to_byte\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">public_key_point_to_byte</a>(point: &amp;Self::PublicKeyGroup) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></div></details>","EngineBLS","sp_core::bls::bls381::BlsEngine"]]],["yet_another_parachain_runtime",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-TinyBLS%3CE,+P%3E\" class=\"impl\"><a href=\"#impl-Default-for-TinyBLS%3CE,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for TinyBLS&lt;E, P&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + Pairing,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + Bls12Config + CurveExtraConfig,\n    &lt;P as Bls12Config&gt;::G1Config: WBConfig,\n    WBMap&lt;&lt;P as Bls12Config&gt;::G1Config&gt;: MapToCurve&lt;&lt;E as Pairing&gt;::G1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; TinyBLS&lt;E, P&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","yet_another_parachain_runtime::frame_support::sp_runtime::app_crypto::bls381::Bls381Engine"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EngineBLS-for-TinyBLS%3CE,+P%3E\" class=\"impl\"><a href=\"#impl-EngineBLS-for-TinyBLS%3CE,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, P&gt; EngineBLS for TinyBLS&lt;E, P&gt;<div class=\"where\">where\n    E: Pairing,\n    P: Bls12Config + CurveExtraConfig,\n    &lt;P as Bls12Config&gt;::G1Config: WBConfig,\n    WBMap&lt;&lt;P as Bls12Config&gt;::G1Config&gt;: MapToCurve&lt;&lt;E as Pairing&gt;::G1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.minus_generator_of_public_key_group_prepared\" class=\"method trait-impl\"><a href=\"#method.minus_generator_of_public_key_group_prepared\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">minus_generator_of_public_key_group_prepared</a>() -&gt; &lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::PublicKeyPrepared</h4></section></summary><div class=\"docblock\"><p>Prepared negative of the generator of the public key curve.</p>\n</div></details><section id=\"associatedconstant.SIGNATURE_SERIALIZED_SIZE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.SIGNATURE_SERIALIZED_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">SIGNATURE_SERIALIZED_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a> = 48usize</h4></section><section id=\"associatedconstant.PUBLICKEY_SERIALIZED_SIZE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.PUBLICKEY_SERIALIZED_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">PUBLICKEY_SERIALIZED_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a> = 96usize</h4></section><section id=\"associatedconstant.SECRET_KEY_SIZE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.SECRET_KEY_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">SECRET_KEY_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a> = 32usize</h4></section><section id=\"associatedconstant.CURVE_NAME\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.CURVE_NAME\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">CURVE_NAME</a>: &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>] = P::CURVE_NAME</h4></section><section id=\"associatedconstant.SIG_GROUP_NAME\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.SIG_GROUP_NAME\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">SIG_GROUP_NAME</a>: &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>] = b&quot;G1&quot;</h4></section><section id=\"associatedconstant.CIPHER_SUIT_DOMAIN_SEPARATION\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.CIPHER_SUIT_DOMAIN_SEPARATION\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">CIPHER_SUIT_DOMAIN_SEPARATION</a>: &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>] = b&quot;_XMD:SHA-256_SSWU_RO_&quot;</h4></section><section id=\"associatedtype.Engine\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Engine\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Engine</a> = E</h4></section><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Scalar</a> = &lt;&lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::Engine as Pairing&gt;::ScalarField</h4></section><section id=\"associatedtype.SignatureGroup\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SignatureGroup\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">SignatureGroup</a> = &lt;E as Pairing&gt;::G1</h4></section><section id=\"associatedtype.SignatureGroupAffine\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SignatureGroupAffine\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">SignatureGroupAffine</a> = &lt;E as Pairing&gt;::G1Affine</h4></section><section id=\"associatedtype.SignaturePrepared\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SignaturePrepared\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">SignaturePrepared</a> = &lt;E as Pairing&gt;::G1Prepared</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.SignatureGroupBaseField\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SignatureGroupBaseField\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">SignatureGroupBaseField</a> = &lt;&lt;E as Pairing&gt;::G1 as CurveGroup&gt;::BaseField</h4></section></summary><div class='docblock'>Group where BLS signatures live <a>Read more</a></div></details><section id=\"associatedtype.PublicKeyGroup\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PublicKeyGroup\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PublicKeyGroup</a> = &lt;E as Pairing&gt;::G2</h4></section><section id=\"associatedtype.PublicKeyGroupAffine\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PublicKeyGroupAffine\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PublicKeyGroupAffine</a> = &lt;E as Pairing&gt;::G2Affine</h4></section><section id=\"associatedtype.PublicKeyPrepared\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PublicKeyPrepared\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PublicKeyPrepared</a> = &lt;E as Pairing&gt;::G2Prepared</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.PublicKeyGroupBaseField\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PublicKeyGroupBaseField\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PublicKeyGroupBaseField</a> = &lt;&lt;E as Pairing&gt;::G2 as CurveGroup&gt;::BaseField</h4></section></summary><div class='docblock'>Group where BLS public keys live <a>Read more</a></div></details><section id=\"associatedtype.HashToSignatureField\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.HashToSignatureField\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">HashToSignatureField</a> = DefaultFieldHasher&lt;CoreWrapper&lt;CtVariableCoreWrapper&lt;Sha256VarCore, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, OidSha256&gt;&gt;&gt;</h4></section><section id=\"associatedtype.MapToSignatureCurve\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.MapToSignatureCurve\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">MapToSignatureCurve</a> = WBMap&lt;&lt;P as Bls12Config&gt;::G1Config&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.miller_loop\" class=\"method trait-impl\"><a href=\"#method.miller_loop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">miller_loop</a>&lt;'a, I&gt;(i: I) -&gt; MillerLoopOutput&lt;E&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a (&lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::PublicKeyPrepared, &lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::SignaturePrepared)&gt;,</div></h4></section></summary><div class='docblock'>Run the Miller loop from <code>Engine</code> but orients its arguments\nto be a <code>SignatureGroup</code> and <code>PublicKeyGroup</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pairing\" class=\"method trait-impl\"><a href=\"#method.pairing\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pairing</a>&lt;G2, G1&gt;(p: G2, q: G1) -&gt; &lt;E as Pairing&gt;::TargetField<div class=\"where\">where\n    G1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;E as Pairing&gt;::G1Affine&gt;,\n    G2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;E as Pairing&gt;::G2Affine&gt;,</div></h4></section></summary><div class='docblock'>Performs a pairing operation <code>e(p, q)</code> by calling <code>Engine::pairing</code>\nbut orients its arguments to be a <code>PublicKeyGroup</code> and <code>SignatureGroup</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_curve_map\" class=\"method trait-impl\"><a href=\"#method.hash_to_curve_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_curve_map</a>() -&gt; MapToCurveBasedHasher&lt;&lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::SignatureGroup, &lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::HashToSignatureField, &lt;TinyBLS&lt;E, P&gt; as EngineBLS&gt;::MapToSignatureCurve&gt;</h4></section></summary><div class='docblock'>getter function for the hash to curve map</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generate\" class=\"method trait-impl\"><a href=\"#method.generate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">generate</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; Self::Scalar<div class=\"where\">where\n    R: <a class=\"trait\" href=\"yet_another_parachain_runtime/polkadot_node_subsystem_util/rand/trait.Rng.html\" title=\"trait yet_another_parachain_runtime::polkadot_node_subsystem_util::rand::Rng\">Rng</a> + <a class=\"trait\" href=\"yet_another_parachain_runtime/polkadot_node_subsystem_util/rand/trait.RngCore.html\" title=\"trait yet_another_parachain_runtime::polkadot_node_subsystem_util::rand::RngCore\">RngCore</a>,</div></h4></section></summary><div class='docblock'>Generate a random scalar for use as a secret key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_signature_curve\" class=\"method trait-impl\"><a href=\"#method.hash_to_signature_curve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_signature_curve</a>&lt;M&gt;(message: M) -&gt; Self::SignatureGroup<div class=\"where\">where\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class='docblock'>Hash one message to the signature curve.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_exponentiation\" class=\"method trait-impl\"><a href=\"#method.final_exponentiation\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_exponentiation</a>(\n    e: MillerLoopOutput&lt;Self::Engine&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PairingOutput&lt;Self::Engine&gt;&gt;</h4></section></summary><div class='docblock'>Perform final exponentiation on the result of a Miller loop.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_prepared\" class=\"method trait-impl\"><a href=\"#method.verify_prepared\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">verify_prepared</a>&lt;'a, I&gt;(signature: Self::SignaturePrepared, inputs: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self::PublicKeyPrepared: 'a,\n    Self::SignaturePrepared: 'a,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a (Self::PublicKeyPrepared, Self::SignaturePrepared)&gt;,</div></h4></section></summary><div class='docblock'>Implement verification equation for aggregate BLS signatures\nprovided as prepared points <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generator_of_signature_group\" class=\"method trait-impl\"><a href=\"#method.generator_of_signature_group\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">generator_of_signature_group</a>() -&gt; Self::SignatureGroup</h4></section></summary><div class='docblock'>return the generator of signature group</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_public_key\" class=\"method trait-impl\"><a href=\"#method.prepare_public_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_public_key</a>(\n    g: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Self::PublicKeyGroupAffine&gt;,\n) -&gt; Self::PublicKeyPrepared</h4></section></summary><div class='docblock'>Process the public key to be use in pairing. This has to be\nimplemented by the type of BLS system implementing the engine\nby calling either prepare_g1 or prepare_g2 based on which group\nis used by the signature system to host the public key</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepare_signature\" class=\"method trait-impl\"><a href=\"#method.prepare_signature\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prepare_signature</a>(\n    g: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Self::SignatureGroupAffine&gt;,\n) -&gt; Self::SignaturePrepared</h4></section></summary><div class='docblock'>Process the signature to be use in pairing. This has to be\nimplemented by the type of BLS system implementing the engine\nby calling either prepare_g1 or prepare_g2 based on which group\nis used by the signature system to host the public key</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signature_point_to_byte\" class=\"method trait-impl\"><a href=\"#method.signature_point_to_byte\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">signature_point_to_byte</a>(point: &amp;Self::SignatureGroup) -&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/pallet_referenda/struct.Vec.html\" title=\"struct yet_another_parachain_runtime::pallet_referenda::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Serialization helper for various sigma protocols</div></details><section id=\"method.public_key_point_to_byte\" class=\"method trait-impl\"><a href=\"#method.public_key_point_to_byte\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">public_key_point_to_byte</a>(point: &amp;Self::PublicKeyGroup) -&gt; <a class=\"struct\" href=\"yet_another_parachain_runtime/pallet_referenda/struct.Vec.html\" title=\"struct yet_another_parachain_runtime::pallet_referenda::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></div></details>","EngineBLS","yet_another_parachain_runtime::frame_support::sp_runtime::app_crypto::bls381::Bls381Engine"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[19380,19343,19716]}