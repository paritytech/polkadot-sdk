(function() {var type_impls = {
"sp_application_crypto":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pair%3CLeftPair,+RightPair,+PUBLIC_KEY_LEN,+SIGNATURE_LEN,+SubTag%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pair%3CLeftPair,+RightPair,+PUBLIC_KEY_LEN,+SIGNATURE_LEN,+SubTag%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;LeftPair, RightPair, const PUBLIC_KEY_LEN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>, const SIGNATURE_LEN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>, SubTag&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pair&lt;LeftPair, RightPair, PUBLIC_KEY_LEN, SIGNATURE_LEN, SubTag&gt;<div class=\"where\">where\n    LeftPair: Pair + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RightPair: Pair + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(\n    &amp;self,\n) -&gt; Pair&lt;LeftPair, RightPair, PUBLIC_KEY_LEN, SIGNATURE_LEN, SubTag&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sp_application_crypto::ecdsa_bls381::Pair"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pair-for-Pair%3CLeftPair,+RightPair,+PUBLIC_KEY_LEN,+SIGNATURE_LEN,+SubTag%3E\" class=\"impl\"><a href=\"#impl-Pair-for-Pair%3CLeftPair,+RightPair,+PUBLIC_KEY_LEN,+SIGNATURE_LEN,+SubTag%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;LeftPair, RightPair, const PUBLIC_KEY_LEN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>, const SIGNATURE_LEN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>, SubTag&gt; Pair for Pair&lt;LeftPair, RightPair, PUBLIC_KEY_LEN, SIGNATURE_LEN, SubTag&gt;<div class=\"where\">where\n    LeftPair: Pair,\n    RightPair: Pair,\n    SubTag: PairedCryptoSubTagBound,\n    Pair&lt;LeftPair, RightPair, PUBLIC_KEY_LEN, SIGNATURE_LEN, SubTag&gt;: CryptoType,\n    CryptoBytes&lt;PUBLIC_KEY_LEN, (PublicTag, (PairedCryptoTag, SubTag))&gt;: Public,\n    CryptoBytes&lt;SIGNATURE_LEN, (SignatureTag, (PairedCryptoTag, SubTag))&gt;: Signature,\n    &lt;LeftPair as Pair&gt;::Seed: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">32</a>]&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">32</a>]&gt;,\n    &lt;RightPair as Pair&gt;::Seed: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">32</a>]&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">32</a>]&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.derive\" class=\"method trait-impl\"><a href=\"#method.derive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">derive</a>&lt;Iter&gt;(\n    &amp;self,\n    path: Iter,\n    seed: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;Pair&lt;LeftPair, RightPair, PUBLIC_KEY_LEN, SIGNATURE_LEN, SubTag&gt; as Pair&gt;::Seed&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Pair&lt;LeftPair, RightPair, PUBLIC_KEY_LEN, SIGNATURE_LEN, SubTag&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;Pair&lt;LeftPair, RightPair, PUBLIC_KEY_LEN, SIGNATURE_LEN, SubTag&gt; as Pair&gt;::Seed&gt;), DeriveError&gt;<div class=\"where\">where\n    Iter: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"sp_application_crypto/enum.DeriveJunction.html\" title=\"enum sp_application_crypto::DeriveJunction\">DeriveJunction</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Derive a child key from a series of given junctions.</p>\n<p>Note: if the <code>LeftPair</code> and <code>RightPair</code> crypto schemes differ in\nseed derivation, <code>derive</code> will drop the seed in the return.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_raw_vec\" class=\"method trait-impl\"><a href=\"#method.to_raw_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_raw_vec</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Get the seed/secret key for each key and then concatenate them.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Seed\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Seed\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Seed</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The type used to (minimally) encode the data required to securely create\na new key pair.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Public\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Public\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Public</a> = CryptoBytes&lt;PUBLIC_KEY_LEN, (PublicTag, (PairedCryptoTag, SubTag))&gt;</h4></section></summary><div class='docblock'>The type which is used to encode a public key.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Signature\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Signature\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Signature</a> = CryptoBytes&lt;SIGNATURE_LEN, (SignatureTag, (PairedCryptoTag, SubTag))&gt;</h4></section></summary><div class='docblock'>The type used to represent a signature. Can be created from a key pair and a message\nand verified with the message and a public key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_seed_slice\" class=\"method trait-impl\"><a href=\"#method.from_seed_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_seed_slice</a>(\n    seed_slice: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Pair&lt;LeftPair, RightPair, PUBLIC_KEY_LEN, SIGNATURE_LEN, SubTag&gt;, SecretStringError&gt;</h4></section></summary><div class='docblock'>Make a new key pair from secret seed material. The slice must be the correct size or\nan error will be returned. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.public\" class=\"method trait-impl\"><a href=\"#method.public\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">public</a>(\n    &amp;self,\n) -&gt; &lt;Pair&lt;LeftPair, RightPair, PUBLIC_KEY_LEN, SIGNATURE_LEN, SubTag&gt; as Pair&gt;::Public</h4></section></summary><div class='docblock'>Get the public key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sign\" class=\"method trait-impl\"><a href=\"#method.sign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sign</a>(\n    &amp;self,\n    message: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>],\n) -&gt; &lt;Pair&lt;LeftPair, RightPair, PUBLIC_KEY_LEN, SIGNATURE_LEN, SubTag&gt; as Pair&gt;::Signature</h4></section></summary><div class='docblock'>Sign a message.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify\" class=\"method trait-impl\"><a href=\"#method.verify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">verify</a>&lt;Msg&gt;(\n    sig: &amp;&lt;Pair&lt;LeftPair, RightPair, PUBLIC_KEY_LEN, SIGNATURE_LEN, SubTag&gt; as Pair&gt;::Signature,\n    message: Msg,\n    public: &amp;&lt;Pair&lt;LeftPair, RightPair, PUBLIC_KEY_LEN, SIGNATURE_LEN, SubTag&gt; as Pair&gt;::Public,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Msg: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class='docblock'>Verify a signature on a message. Returns true if the signature is good.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generate\" class=\"method trait-impl\"><a href=\"#method.generate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">generate</a>() -&gt; (Self, Self::Seed)</h4></section></summary><div class='docblock'>Generate new secure (random) key pair. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generate_with_phrase\" class=\"method trait-impl\"><a href=\"#method.generate_with_phrase\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">generate_with_phrase</a>(password: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>&gt;) -&gt; (Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, Self::Seed)</h4></section></summary><div class='docblock'>Generate new secure (random) key pair and provide the recovery phrase. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_phrase\" class=\"method trait-impl\"><a href=\"#method.from_phrase\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_phrase</a>(\n    phrase: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>,\n    password: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, Self::Seed), SecretStringError&gt;</h4></section></summary><div class='docblock'>Returns the KeyPair from the English BIP39 seed <code>phrase</code>, or an error if it’s invalid.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_seed\" class=\"method trait-impl\"><a href=\"#method.from_seed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_seed</a>(seed: &amp;Self::Seed) -&gt; Self</h4></section></summary><div class='docblock'>Generate new key pair from the provided <code>seed</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_string_with_seed\" class=\"method trait-impl\"><a href=\"#method.from_string_with_seed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_string_with_seed</a>(\n    s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>,\n    password_override: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::Seed&gt;), SecretStringError&gt;</h4></section></summary><div class='docblock'>Interprets the string <code>s</code> in order to generate a key Pair. Returns both the pair and an\noptional seed, in the case that the pair can be expressed as a direct derivation from a seed\n(some cases, such as Sr25519 derivations with path components, cannot). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_string\" class=\"method trait-impl\"><a href=\"#method.from_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_string</a>(\n    s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>,\n    password_override: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, SecretStringError&gt;</h4></section></summary><div class='docblock'>Interprets the string <code>s</code> in order to generate a key pair. <a>Read more</a></div></details></div></details>","Pair","sp_application_crypto::ecdsa_bls381::Pair"]],
"sp_core":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pair%3CLeftPair,+RightPair,+PUBLIC_KEY_LEN,+SIGNATURE_LEN,+SubTag%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/paired_crypto.rs.html#286-297\">source</a><a href=\"#impl-Clone-for-Pair%3CLeftPair,+RightPair,+PUBLIC_KEY_LEN,+SIGNATURE_LEN,+SubTag%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;LeftPair: <a class=\"trait\" href=\"sp_core/crypto/trait.Pair.html\" title=\"trait sp_core::crypto::Pair\">PairT</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, RightPair: <a class=\"trait\" href=\"sp_core/crypto/trait.Pair.html\" title=\"trait sp_core::crypto::Pair\">PairT</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, const PUBLIC_KEY_LEN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>, const SIGNATURE_LEN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>, SubTag&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sp_core/paired_crypto/struct.Pair.html\" title=\"struct sp_core::paired_crypto::Pair\">Pair</a>&lt;LeftPair, RightPair, PUBLIC_KEY_LEN, SIGNATURE_LEN, SubTag&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/paired_crypto.rs.html#294-296\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sp_core::paired_crypto::ecdsa_bls377::Pair","sp_core::paired_crypto::ecdsa_bls381::Pair"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pair-for-Pair%3CLeftPair,+RightPair,+PUBLIC_KEY_LEN,+SIGNATURE_LEN,+SubTag%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/paired_crypto.rs.html#299-388\">source</a><a href=\"#impl-Pair-for-Pair%3CLeftPair,+RightPair,+PUBLIC_KEY_LEN,+SIGNATURE_LEN,+SubTag%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;LeftPair: <a class=\"trait\" href=\"sp_core/crypto/trait.Pair.html\" title=\"trait sp_core::crypto::Pair\">PairT</a>, RightPair: <a class=\"trait\" href=\"sp_core/crypto/trait.Pair.html\" title=\"trait sp_core::crypto::Pair\">PairT</a>, const PUBLIC_KEY_LEN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>, const SIGNATURE_LEN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>, SubTag: PairedCryptoSubTagBound&gt; <a class=\"trait\" href=\"sp_core/crypto/trait.Pair.html\" title=\"trait sp_core::crypto::Pair\">Pair</a> for <a class=\"struct\" href=\"sp_core/paired_crypto/struct.Pair.html\" title=\"struct sp_core::paired_crypto::Pair\">Pair</a>&lt;LeftPair, RightPair, PUBLIC_KEY_LEN, SIGNATURE_LEN, SubTag&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"sp_core/paired_crypto/struct.Pair.html\" title=\"struct sp_core::paired_crypto::Pair\">Pair</a>&lt;LeftPair, RightPair, PUBLIC_KEY_LEN, SIGNATURE_LEN, SubTag&gt;: <a class=\"trait\" href=\"sp_core/crypto/trait.CryptoType.html\" title=\"trait sp_core::crypto::CryptoType\">CryptoType</a>,\n    <a class=\"type\" href=\"sp_core/paired_crypto/type.Public.html\" title=\"type sp_core::paired_crypto::Public\">Public</a>&lt;PUBLIC_KEY_LEN, SubTag&gt;: <a class=\"trait\" href=\"sp_core/crypto/trait.Public.html\" title=\"trait sp_core::crypto::Public\">PublicT</a>,\n    <a class=\"type\" href=\"sp_core/paired_crypto/type.Signature.html\" title=\"type sp_core::paired_crypto::Signature\">Signature</a>&lt;SIGNATURE_LEN, SubTag&gt;: <a class=\"trait\" href=\"sp_core/crypto/trait.Signature.html\" title=\"trait sp_core::crypto::Signature\">SignatureT</a>,\n    LeftPair::<a class=\"associatedtype\" href=\"sp_core/crypto/trait.Pair.html#associatedtype.Seed\" title=\"type sp_core::crypto::Pair::Seed\">Seed</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">32</a>]&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">32</a>]&gt;,\n    RightPair::<a class=\"associatedtype\" href=\"sp_core/crypto/trait.Pair.html#associatedtype.Seed\" title=\"type sp_core::crypto::Pair::Seed\">Seed</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">32</a>]&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">32</a>]&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.derive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/paired_crypto.rs.html#330-347\">source</a><a href=\"#method.derive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_core/crypto/trait.Pair.html#tymethod.derive\" class=\"fn\">derive</a>&lt;Iter: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"sp_core/crypto/enum.DeriveJunction.html\" title=\"enum sp_core::crypto::DeriveJunction\">DeriveJunction</a>&gt;&gt;(\n    &amp;self,\n    path: Iter,\n    seed: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"sp_core/crypto/trait.Pair.html#associatedtype.Seed\" title=\"type sp_core::crypto::Pair::Seed\">Seed</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"sp_core/crypto/trait.Pair.html#associatedtype.Seed\" title=\"type sp_core::crypto::Pair::Seed\">Seed</a>&gt;), <a class=\"enum\" href=\"sp_core/crypto/enum.DeriveError.html\" title=\"enum sp_core::crypto::DeriveError\">DeriveError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Derive a child key from a series of given junctions.</p>\n<p>Note: if the <code>LeftPair</code> and <code>RightPair</code> crypto schemes differ in\nseed derivation, <code>derive</code> will drop the seed in the return.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_raw_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/paired_crypto.rs.html#383-387\">source</a><a href=\"#method.to_raw_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_core/crypto/trait.Pair.html#tymethod.to_raw_vec\" class=\"fn\">to_raw_vec</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Get the seed/secret key for each key and then concatenate them.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Seed\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Seed\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_core/crypto/trait.Pair.html#associatedtype.Seed\" class=\"associatedtype\">Seed</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The type used to (minimally) encode the data required to securely create\na new key pair.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Public\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Public\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_core/crypto/trait.Pair.html#associatedtype.Public\" class=\"associatedtype\">Public</a> = <a class=\"struct\" href=\"sp_core/crypto_bytes/struct.CryptoBytes.html\" title=\"struct sp_core::crypto_bytes::CryptoBytes\">CryptoBytes</a>&lt;PUBLIC_KEY_LEN, (<a class=\"struct\" href=\"sp_core/crypto_bytes/struct.PublicTag.html\" title=\"struct sp_core::crypto_bytes::PublicTag\">PublicTag</a>, (PairedCryptoTag, SubTag))&gt;</h4></section></summary><div class='docblock'>The type which is used to encode a public key.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Signature\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Signature\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_core/crypto/trait.Pair.html#associatedtype.Signature\" class=\"associatedtype\">Signature</a> = <a class=\"struct\" href=\"sp_core/crypto_bytes/struct.CryptoBytes.html\" title=\"struct sp_core::crypto_bytes::CryptoBytes\">CryptoBytes</a>&lt;SIGNATURE_LEN, (<a class=\"struct\" href=\"sp_core/crypto_bytes/struct.SignatureTag.html\" title=\"struct sp_core::crypto_bytes::SignatureTag\">SignatureTag</a>, (PairedCryptoTag, SubTag))&gt;</h4></section></summary><div class='docblock'>The type used to represent a signature. Can be created from a key pair and a message\nand verified with the message and a public key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_seed_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/paired_crypto.rs.html#317-324\">source</a><a href=\"#method.from_seed_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_core/crypto/trait.Pair.html#tymethod.from_seed_slice\" class=\"fn\">from_seed_slice</a>(seed_slice: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"sp_core/crypto/enum.SecretStringError.html\" title=\"enum sp_core::crypto::SecretStringError\">SecretStringError</a>&gt;</h4></section></summary><div class='docblock'>Make a new key pair from secret seed material. The slice must be the correct size or\nan error will be returned. <a href=\"sp_core/crypto/trait.Pair.html#tymethod.from_seed_slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.public\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/paired_crypto.rs.html#349-356\">source</a><a href=\"#method.public\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_core/crypto/trait.Pair.html#tymethod.public\" class=\"fn\">public</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"sp_core/crypto/trait.Pair.html#associatedtype.Public\" title=\"type sp_core::crypto::Pair::Public\">Public</a></h4></section></summary><div class='docblock'>Get the public key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/paired_crypto.rs.html#359-364\">source</a><a href=\"#method.sign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_core/crypto/trait.Pair.html#tymethod.sign\" class=\"fn\">sign</a>(&amp;self, message: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>]) -&gt; Self::<a class=\"associatedtype\" href=\"sp_core/crypto/trait.Pair.html#associatedtype.Signature\" title=\"type sp_core::crypto::Pair::Signature\">Signature</a></h4></section></summary><div class='docblock'>Sign a message.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/paired_crypto.rs.html#366-380\">source</a><a href=\"#method.verify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_core/crypto/trait.Pair.html#tymethod.verify\" class=\"fn\">verify</a>&lt;Msg: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>]&gt;&gt;(\n    sig: &amp;Self::<a class=\"associatedtype\" href=\"sp_core/crypto/trait.Pair.html#associatedtype.Signature\" title=\"type sp_core::crypto::Pair::Signature\">Signature</a>,\n    message: Msg,\n    public: &amp;Self::<a class=\"associatedtype\" href=\"sp_core/crypto/trait.Pair.html#associatedtype.Public\" title=\"type sp_core::crypto::Pair::Public\">Public</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Verify a signature on a message. Returns true if the signature is good.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/crypto.rs.html#835-839\">source</a><a href=\"#method.generate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_core/crypto/trait.Pair.html#method.generate\" class=\"fn\">generate</a>() -&gt; (Self, Self::<a class=\"associatedtype\" href=\"sp_core/crypto/trait.Pair.html#associatedtype.Seed\" title=\"type sp_core::crypto::Pair::Seed\">Seed</a>)</h4></section></summary><div class='docblock'>Generate new secure (random) key pair. <a href=\"sp_core/crypto/trait.Pair.html#method.generate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generate_with_phrase\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/crypto.rs.html#848-854\">source</a><a href=\"#method.generate_with_phrase\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_core/crypto/trait.Pair.html#method.generate_with_phrase\" class=\"fn\">generate_with_phrase</a>(password: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>&gt;) -&gt; (Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, Self::<a class=\"associatedtype\" href=\"sp_core/crypto/trait.Pair.html#associatedtype.Seed\" title=\"type sp_core::crypto::Pair::Seed\">Seed</a>)</h4></section></summary><div class='docblock'>Generate new secure (random) key pair and provide the recovery phrase. <a href=\"sp_core/crypto/trait.Pair.html#method.generate_with_phrase\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_phrase\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/crypto.rs.html#857-873\">source</a><a href=\"#method.from_phrase\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_core/crypto/trait.Pair.html#method.from_phrase\" class=\"fn\">from_phrase</a>(\n    phrase: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>,\n    password: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, Self::<a class=\"associatedtype\" href=\"sp_core/crypto/trait.Pair.html#associatedtype.Seed\" title=\"type sp_core::crypto::Pair::Seed\">Seed</a>), <a class=\"enum\" href=\"sp_core/crypto/enum.SecretStringError.html\" title=\"enum sp_core::crypto::SecretStringError\">SecretStringError</a>&gt;</h4></section></summary><div class='docblock'>Returns the KeyPair from the English BIP39 seed <code>phrase</code>, or an error if it’s invalid.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_seed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/crypto.rs.html#886-888\">source</a><a href=\"#method.from_seed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_core/crypto/trait.Pair.html#method.from_seed\" class=\"fn\">from_seed</a>(seed: &amp;Self::<a class=\"associatedtype\" href=\"sp_core/crypto/trait.Pair.html#associatedtype.Seed\" title=\"type sp_core::crypto::Pair::Seed\">Seed</a>) -&gt; Self</h4></section></summary><div class='docblock'>Generate new key pair from the provided <code>seed</code>. <a href=\"sp_core/crypto/trait.Pair.html#method.from_seed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_string_with_seed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/crypto.rs.html#933-961\">source</a><a href=\"#method.from_string_with_seed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_core/crypto/trait.Pair.html#method.from_string_with_seed\" class=\"fn\">from_string_with_seed</a>(\n    s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>,\n    password_override: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"sp_core/crypto/trait.Pair.html#associatedtype.Seed\" title=\"type sp_core::crypto::Pair::Seed\">Seed</a>&gt;), <a class=\"enum\" href=\"sp_core/crypto/enum.SecretStringError.html\" title=\"enum sp_core::crypto::SecretStringError\">SecretStringError</a>&gt;</h4></section></summary><div class='docblock'>Interprets the string <code>s</code> in order to generate a key Pair. Returns both the pair and an\noptional seed, in the case that the pair can be expressed as a direct derivation from a seed\n(some cases, such as Sr25519 derivations with path components, cannot). <a href=\"sp_core/crypto/trait.Pair.html#method.from_string_with_seed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/crypto.rs.html#966-968\">source</a><a href=\"#method.from_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_core/crypto/trait.Pair.html#method.from_string\" class=\"fn\">from_string</a>(\n    s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>,\n    password_override: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"sp_core/crypto/enum.SecretStringError.html\" title=\"enum sp_core::crypto::SecretStringError\">SecretStringError</a>&gt;</h4></section></summary><div class='docblock'>Interprets the string <code>s</code> in order to generate a key pair. <a href=\"sp_core/crypto/trait.Pair.html#method.from_string\">Read more</a></div></details></div></details>","Pair","sp_core::paired_crypto::ecdsa_bls377::Pair","sp_core::paired_crypto::ecdsa_bls381::Pair"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()