(function() {var type_impls = {
"pallet_revive_eth_rpc":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arbitrary%3C'a%3E-for-bool\" class=\"impl\"><a href=\"#impl-Arbitrary%3C'a%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a&gt; Arbitrary&lt;'a&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary\" class=\"method trait-impl\"><a href=\"#method.arbitrary\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary</a>(u: &amp;mut Unstructured&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, Error&gt;</h4></section></summary><div class='docblock'>Generate an arbitrary value of <code>Self</code> from the given unstructured data. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Get a size hint for how many bytes out of an <code>Unstructured</code> this type\nneeds to construct itself. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary_take_rest\" class=\"method trait-impl\"><a href=\"#method.arbitrary_take_rest\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary_take_rest</a>(u: Unstructured&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Error&gt;</h4></section></summary><div class='docblock'>Generate an arbitrary value of <code>Self</code> from the entirety of the given\nunstructured data. <a>Read more</a></div></details></div></details>","Arbitrary<'a>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-bool\" class=\"impl\"><a href=\"#impl-AsBytes-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl AsBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a href=\"#method.as_bytes\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">โ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a href=\"#method.write_to\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a href=\"#method.write_to_prefix\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a href=\"#method.write_to_suffix\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a>Read more</a></div></details></div></details>","AsBytes","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci128%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Ci128%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i128>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci16%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Ci16%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i16>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci32%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Ci32%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i32>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci64%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Ci64%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i64>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci8%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Ci8%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i8>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cisize%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Cisize%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<isize>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu128%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Cu128%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u128>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu16%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Cu16%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u16>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu32%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Cu32%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u32>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu64%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Cu64%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u64>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu8%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Cu8%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u8>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cusize%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Cusize%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<usize>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd%3C%26bool%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&bool>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#515-518\">source</a><a href=\"#impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#523\">source</a><a href=\"#method.bitand\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<Mask<T, N>>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&bool>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr%3C%26bool%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&bool>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#554-557\">source</a><a href=\"#impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#562\">source</a><a href=\"#method.bitor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<Mask<T, N>>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&bool>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor%3C%26bool%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&bool>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#593-596\">source</a><a href=\"#impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#601\">source</a><a href=\"#method.bitxor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<Mask<T, N>>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&bool>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CanonicalDeserialize-for-bool\" class=\"impl\"><a href=\"#impl-CanonicalDeserialize-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl CanonicalDeserialize for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_with_mode\" class=\"method trait-impl\"><a href=\"#method.deserialize_with_mode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_with_mode</a>&lt;R&gt;(\n    reader: R,\n    compress: Compress,\n    validate: Validate,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section></summary><div class='docblock'>The general deserialize method that takes in customization flags.</div></details><section id=\"method.deserialize_compressed\" class=\"method trait-impl\"><a href=\"#method.deserialize_compressed\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_compressed</a>&lt;R&gt;(reader: R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section><section id=\"method.deserialize_compressed_unchecked\" class=\"method trait-impl\"><a href=\"#method.deserialize_compressed_unchecked\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_compressed_unchecked</a>&lt;R&gt;(\n    reader: R,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section><section id=\"method.deserialize_uncompressed\" class=\"method trait-impl\"><a href=\"#method.deserialize_uncompressed\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_uncompressed</a>&lt;R&gt;(reader: R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section><section id=\"method.deserialize_uncompressed_unchecked\" class=\"method trait-impl\"><a href=\"#method.deserialize_uncompressed_unchecked\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_uncompressed_unchecked</a>&lt;R&gt;(\n    reader: R,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section></div></details>","CanonicalDeserialize","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CanonicalSerialize-for-bool\" class=\"impl\"><a href=\"#impl-CanonicalSerialize-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl CanonicalSerialize for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_with_mode\" class=\"method trait-impl\"><a href=\"#method.serialize_with_mode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize_with_mode</a>&lt;W&gt;(\n    &amp;self,\n    writer: W,\n    _compress: Compress,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, SerializationError&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>The general serialize method that takes in customization flags.</div></details><section id=\"method.serialized_size\" class=\"method trait-impl\"><a href=\"#method.serialized_size\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">serialized_size</a>(&amp;self, _compress: Compress) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.serialize_compressed\" class=\"method trait-impl\"><a href=\"#method.serialize_compressed\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize_compressed</a>&lt;W&gt;(&amp;self, writer: W) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, SerializationError&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section><section id=\"method.compressed_size\" class=\"method trait-impl\"><a href=\"#method.compressed_size\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">compressed_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.serialize_uncompressed\" class=\"method trait-impl\"><a href=\"#method.serialize_uncompressed\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize_uncompressed</a>&lt;W&gt;(&amp;self, writer: W) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, SerializationError&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section><section id=\"method.uncompressed_size\" class=\"method trait-impl\"><a href=\"#method.uncompressed_size\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">uncompressed_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></div></details>","CanonicalSerialize","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedBitPattern-for-bool\" class=\"impl\"><a href=\"#impl-CheckedBitPattern-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl CheckedBitPattern for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bits\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bits\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Bits</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'><code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> except for\nthe possible invalid bit patterns being checked during\n<a href=\"CheckedBitPattern::is_valid_bit_pattern\"><code>is_valid_bit_pattern</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_valid_bit_pattern\" class=\"method trait-impl\"><a href=\"#method.is_valid_bit_pattern\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">is_valid_bit_pattern</a>(bits: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as CheckedBitPattern&gt;::Bits) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>If this function returns true, then it must be valid to reinterpret <code>bits</code>\nas <code>&amp;Self</code>.</div></details></div></details>","CheckedBitPattern","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#413-418\">source</a></span><a href=\"#impl-Clone-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#413-418\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Contiguous-for-bool\" class=\"impl\"><a href=\"#impl-Contiguous-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl Contiguous for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Int\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Int\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Int</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The primitive integer type with an identical representation to this\ntype. <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_VALUE\" class=\"anchor\">ยง</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a> = 1u8</h4></section></summary><div class='docblock'>The upper <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MIN_VALUE\" class=\"anchor\">ยง</a><h4 class=\"code-header\">const <a class=\"constant\">MIN_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a> = 0u8</h4></section></summary><div class='docblock'>The lower <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_integer\" class=\"method trait-impl\"><a href=\"#method.from_integer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">from_integer</a>(value: Self::Int) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>If <code>value</code> is within the range for valid instances of this type,\nreturns <code>Some(converted_value)</code>, otherwise, returns <code>None</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_integer\" class=\"method trait-impl\"><a href=\"#method.into_integer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">into_integer</a>(self) -&gt; Self::Int</h4></section></summary><div class='docblock'>Perform the conversion from <code>C</code> into the underlying integral type. This\nmostly exists otherwise generic code would need unsafe for the <code>value as integer</code> <a>Read more</a></div></details></div></details>","Contiguous","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/fmt/mod.rs.html#2397\">source</a></span><a href=\"#impl-Debug-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/fmt/mod.rs.html#2399\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-bool\" class=\"impl\"><a href=\"#impl-Decodable-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl Decodable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-bool\" class=\"impl\"><a href=\"#impl-Decodable-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl Decodable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3C'r,+Any%3E-for-bool\" class=\"impl\"><a href=\"#impl-Decode%3C'r,+Any%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; Decode&lt;'r, Any&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(\n    value: &lt;Any as Database&gt;::ValueRef&lt;'r&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;</h4></section></summary><div class='docblock'>Decode a new value of this type using a raw value from the database.</div></details></div></details>","Decode<'r, Any>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3C'r,+Sqlite%3E-for-bool\" class=\"impl\"><a href=\"#impl-Decode%3C'r,+Sqlite%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; Decode&lt;'r, Sqlite&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(\n    value: SqliteValueRef&lt;'r&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;</h4></section></summary><div class='docblock'>Decode a new value of this type using a raw value from the database.</div></details></div></details>","Decode<'r, Sqlite>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-bool\" class=\"impl\"><a href=\"#impl-Decode-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl Decode for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.81.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details></div></details>","Decode","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DecodeValue%3C'a%3E-for-bool\" class=\"impl\"><a href=\"#impl-DecodeValue%3C'a%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a&gt; DecodeValue&lt;'a&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_value\" class=\"method trait-impl\"><a href=\"#method.decode_value\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_value</a>&lt;R&gt;(reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut R</a>, header: Header) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, Error&gt;<div class=\"where\">where\n    R: Reader&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Attempt to decode this message using the provided [<code>Reader</code>].</div></details></div></details>","DecodeValue<'a>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/default.rs.html#164\">source</a></span><a href=\"#impl-Default-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/default.rs.html#164\">source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>false</code></p>\n</div></details></div></details>","Default","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.214/src/serde/de/impls.rs.html#71\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.214/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.214/src/serde/de/impls.rs.html#72-74\">source</a><a href=\"#method.deserialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.214/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.214/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.214/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.214/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.214/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/fmt/mod.rs.html#2405\">source</a></span><a href=\"#impl-Display-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/fmt/mod.rs.html#2406\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-bool\" class=\"impl\"><a href=\"#impl-Encodable-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl Encodable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-bool\" class=\"impl\"><a href=\"#impl-Encodable-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl Encodable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3C'q,+Any%3E-for-bool\" class=\"impl\"><a href=\"#impl-Encode%3C'q,+Any%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'q&gt; Encode&lt;'q, Any&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_by_ref\" class=\"method trait-impl\"><a href=\"#method.encode_by_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_by_ref</a>(\n    &amp;self,\n    buf: &amp;mut &lt;Any as Database&gt;::ArgumentBuffer&lt;'q&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;IsNull, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;</h4></section></summary><div class='docblock'>Writes the value of <code>self</code> into <code>buf</code> without moving <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(\n    self,\n    buf: &amp;mut &lt;DB as Database&gt;::ArgumentBuffer&lt;'q&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;IsNull, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Writes the value of <code>self</code> into <code>buf</code> in the expected format for the database.</div></details><section id=\"method.produces\" class=\"method trait-impl\"><a href=\"#method.produces\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">produces</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;DB as Database&gt;::TypeInfo&gt;</h4></section><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></div></details>","Encode<'q, Any>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3C'q,+Sqlite%3E-for-bool\" class=\"impl\"><a href=\"#impl-Encode%3C'q,+Sqlite%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'q&gt; Encode&lt;'q, Sqlite&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_by_ref\" class=\"method trait-impl\"><a href=\"#method.encode_by_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_by_ref</a>(\n    &amp;self,\n    args: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;SqliteArgumentValue&lt;'q&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;IsNull, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;</h4></section></summary><div class='docblock'>Writes the value of <code>self</code> into <code>buf</code> without moving <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(\n    self,\n    buf: &amp;mut &lt;DB as Database&gt;::ArgumentBuffer&lt;'q&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;IsNull, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Writes the value of <code>self</code> into <code>buf</code> in the expected format for the database.</div></details><section id=\"method.produces\" class=\"method trait-impl\"><a href=\"#method.produces\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">produces</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;DB as Database&gt;::TypeInfo&gt;</h4></section><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></div></details>","Encode<'q, Sqlite>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-bool\" class=\"impl\"><a href=\"#impl-Encode-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl Encode for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</div></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut T</a>)<div class=\"where\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">โ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodeAsType-for-bool\" class=\"impl\"><a href=\"#impl-EncodeAsType-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl EncodeAsType for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_as_type_to\" class=\"method trait-impl\"><a href=\"#method.encode_as_type_to\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_as_type_to</a>&lt;R&gt;(\n    &amp;self,\n    type_id: &lt;R as TypeResolver&gt;::TypeId,\n    types: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;R</a>,\n    out: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    R: TypeResolver,</div></h4></section></summary><div class='docblock'>Given some <code>type_id</code>, <code>types</code>, a <code>context</code> and some output target for the SCALE encoded bytes,\nattempt to SCALE encode the current value into the type given by <code>type_id</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_as_type\" class=\"method trait-impl\"><a href=\"#method.encode_as_type\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_as_type</a>&lt;R&gt;(\n    &amp;self,\n    type_id: &lt;R as TypeResolver&gt;::TypeId,\n    types: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;R</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt;, Error&gt;<div class=\"where\">where\n    R: TypeResolver,</div></h4></section></summary><div class='docblock'>This is a helper function which internally calls [<code>EncodeAsType::encode_as_type_to</code>]. Prefer to\nimplement that instead.</div></details></div></details>","EncodeAsType","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodeValue-for-bool\" class=\"impl\"><a href=\"#impl-EncodeValue-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl EncodeValue for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_len\" class=\"method trait-impl\"><a href=\"#method.value_len\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">value_len</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Length, Error&gt;</h4></section></summary><div class='docblock'>Compute the length of this value (sans [<code>Tag</code>]+[<code>Length</code>] header) when\nencoded as ASN.1 DER.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value\" class=\"method trait-impl\"><a href=\"#method.encode_value\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_value</a>(&amp;self, writer: &amp;mut impl Writer) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Encode value (sans [<code>Tag</code>]+[<code>Length</code>] header) as ASN.1 DER using the\nprovided [<code>Writer</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.header\" class=\"method trait-impl\"><a href=\"#method.header\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">header</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Header, Error&gt;<div class=\"where\">where\n    Self: Tagged,</div></h4></section></summary><div class='docblock'>Get the [<code>Header</code>] used to encode this value.</div></details></div></details>","EncodeValue","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedTag-for-bool\" class=\"impl\"><a href=\"#impl-FixedTag-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl FixedTag for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TAG\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.TAG\" class=\"anchor\">ยง</a><h4 class=\"code-header\">const <a class=\"constant\">TAG</a>: Tag = Tag::Boolean</h4></section></summary><div class='docblock'>ASN.1 tag</div></details></div></details>","FixedTag","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChoice%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.5.0/src/subtle/lib.rs.html#143\">source</a><a href=\"#impl-From%3CChoice%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.5.0/src/subtle/lib.rs.html#158\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(source: <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Convert the <code>Choice</code> wrapper into a <code>bool</code>, depending on whether\nthe underlying <code>u8</code> was a <code>0</code> or a <code>1</code>.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">ยง</a>Note</h5>\n<p>This function exists to avoid having higher-level cryptographic protocol\nimplementations duplicating this pattern.</p>\n<p>The intended use case for this conversion is at the <em>end</em> of a\nhigher-level primitive implementation: for example, in checking a keyed\nMAC, where the verification should happen in constant-time (and thus use\na <code>Choice</code>) but it is safe to return a <code>bool</code> at the end of the\nverification.</p>\n</div></details></div></details>","From<Choice>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChoice%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CChoice%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Choice&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(source: Choice) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Convert the <code>Choice</code> wrapper into a <code>bool</code>, depending on whether\nthe underlying <code>u8</code> was a <code>0</code> or a <code>1</code>.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">ยง</a>Note</h5>\n<p>This function exists to avoid having higher-level cryptographic protocol\nimplementations duplicating this pattern.</p>\n<p>The intended use case for this conversion is at the <em>end</em> of a\nhigher-level primitive implementation: for example, in checking a keyed\nMAC, where the verification should happen in constant-time (and thus use\na <code>Choice</code>) but it is safe to return a <code>bool</code> at the end of the\nverification.</p>\n</div></details></div></details>","From<Choice>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCtChoice%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CCtChoice%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CtChoice&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(choice: CtChoice) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CtChoice>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CHourBase%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CHourBase%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;HourBase&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: HourBase) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<HourBase>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMonthCaseSensitive%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CMonthCaseSensitive%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;MonthCaseSensitive&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: MonthCaseSensitive) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MonthCaseSensitive>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPeriodCase%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CPeriodCase%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PeriodCase&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: PeriodCase) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PeriodCase>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPeriodCaseSensitive%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CPeriodCaseSensitive%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PeriodCaseSensitive&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: PeriodCaseSensitive) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PeriodCaseSensitive>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CReserved%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sc_network/litep2p/shim/notification/peerset.rs.html#108\">source</a><a href=\"#impl-From%3CReserved%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Reserved&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_network/litep2p/shim/notification/peerset.rs.html#109\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Reserved) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Reserved>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSignBehavior%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CSignBehavior%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SignBehavior&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: SignBehavior) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SignBehavior>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVarUint1%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CVarUint1%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;VarUint1&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: VarUint1) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<VarUint1>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CWeekdayCaseSensitive%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CWeekdayCaseSensitive%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;WeekdayCaseSensitive&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: WeekdayCaseSensitive) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<WeekdayCaseSensitive>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CWeekdayOneIndexed%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CWeekdayOneIndexed%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;WeekdayOneIndexed&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: WeekdayOneIndexed) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<WeekdayOneIndexed>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CYearBase%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CYearBase%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;YearBase&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: YearBase) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<YearBase>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromEntropy-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/crypto.rs.html#1141\">source</a><a href=\"#impl-FromEntropy-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_core/crypto/trait.FromEntropy.html\" title=\"trait sp_core::crypto::FromEntropy\">FromEntropy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_entropy\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/crypto.rs.html#1142\">source</a><a href=\"#method.from_entropy\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"sp_core/crypto/trait.FromEntropy.html#tymethod.from_entropy\" class=\"fn\">from_entropy</a>(input: &amp;mut impl Input) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, Error&gt;</h4></section></summary><div class='docblock'>Create a random value of <code>Self</code> given a stream of random bytes on <code>input</code>. May only fail if\n<code>input</code> has an error.</div></details></div></details>","FromEntropy","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromEntropy-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/crypto.rs.html#1150\">source</a><a href=\"#impl-FromEntropy-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_core/crypto/trait.FromEntropy.html\" title=\"trait sp_core::crypto::FromEntropy\">FromEntropy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_entropy\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/crypto.rs.html#1151\">source</a><a href=\"#method.from_entropy\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"sp_core/crypto/trait.FromEntropy.html#tymethod.from_entropy\" class=\"fn\">from_entropy</a>(input: &amp;mut impl Input) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, Error&gt;</h4></section></summary><div class='docblock'>Create a random value of <code>Self</code> given a stream of random bytes on <code>input</code>. May only fail if\n<code>input</code> has an error.</div></details></div></details>","FromEntropy","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromFFIValue-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#133\">source</a><a href=\"#impl-FromFFIValue-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/host/trait.FromFFIValue.html\" title=\"trait sp_runtime_interface::host::FromFFIValue\">FromFFIValue</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.SelfInstance\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SelfInstance\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/host/trait.FromFFIValue.html#associatedtype.SelfInstance\" class=\"associatedtype\">SelfInstance</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>As <code>Self</code> can be an unsized type, it needs to be represented by a sized type at the host.\nThis <code>SelfInstance</code> is the sized type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ffi_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#136\">source</a><a href=\"#method.from_ffi_value\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/host/trait.FromFFIValue.html#tymethod.from_ffi_value\" class=\"fn\">from_ffi_value</a>(_: &amp;mut dyn <a class=\"trait\" href=\"sp_wasm_interface/trait.FunctionContext.html\" title=\"trait sp_wasm_interface::FunctionContext\">FunctionContext</a>, arg: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section></summary><div class='docblock'>Create <code>SelfInstance</code> from the given</div></details></div></details>","FromFFIValue","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromFFIValue-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#133\">source</a><a href=\"#impl-FromFFIValue-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/host/trait.FromFFIValue.html\" title=\"trait sp_runtime_interface::host::FromFFIValue\">FromFFIValue</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.SelfInstance\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SelfInstance\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/host/trait.FromFFIValue.html#associatedtype.SelfInstance\" class=\"associatedtype\">SelfInstance</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>As <code>Self</code> can be an unsized type, it needs to be represented by a sized type at the host.\nThis <code>SelfInstance</code> is the sized type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ffi_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#136\">source</a><a href=\"#method.from_ffi_value\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/host/trait.FromFFIValue.html#tymethod.from_ffi_value\" class=\"fn\">from_ffi_value</a>(_: &amp;mut dyn <a class=\"trait\" href=\"sp_wasm_interface/trait.FunctionContext.html\" title=\"trait sp_wasm_interface::FunctionContext\">FunctionContext</a>, arg: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section></summary><div class='docblock'>Create <code>SelfInstance</code> from the given</div></details></div></details>","FromFFIValue","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromFFIValue-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#135\">source</a><a href=\"#impl-FromFFIValue-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/host/trait.FromFFIValue.html\" title=\"trait sp_runtime_interface::host::FromFFIValue\">FromFFIValue</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.SelfInstance\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SelfInstance\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/host/trait.FromFFIValue.html#associatedtype.SelfInstance\" class=\"associatedtype\">SelfInstance</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>As <code>Self</code> can be an unsized type, it needs to be represented by a sized type at the host.\nThis <code>SelfInstance</code> is the sized type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ffi_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#138\">source</a><a href=\"#method.from_ffi_value\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/host/trait.FromFFIValue.html#tymethod.from_ffi_value\" class=\"fn\">from_ffi_value</a>(_: &amp;mut dyn <a class=\"trait\" href=\"sp_wasm_interface/trait.FunctionContext.html\" title=\"trait sp_wasm_interface::FunctionContext\">FunctionContext</a>, arg: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section></summary><div class='docblock'>Create <code>SelfInstance</code> from the given</div></details></div></details>","FromFFIValue","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/str/traits.rs.html#836\">source</a></span><a href=\"#impl-FromStr-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/str/traits.rs.html#862\">source</a><a href=\"#method.from_str\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/str/error/struct.ParseBoolError.html\" title=\"struct core::str::error::ParseBoolError\">ParseBoolError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parse a <code>bool</code> from a string.</p>\n<p>The only accepted values are <code>\"true\"</code> and <code>\"false\"</code>. Any other input\nwill return an error.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::str::FromStr;\n\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"true\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"false\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(&lt;bool <span class=\"kw\">as </span>FromStr&gt;::from_str(<span class=\"string\">\"not even a boolean\"</span>).is_err());</code></pre></div>\n<p>Note, in many cases, the <code>.parse()</code> method on <code>str</code> is more proper.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"true\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"false\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(<span class=\"string\">\"not even a boolean\"</span>.parse::&lt;bool&gt;().is_err());</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/str/error/struct.ParseBoolError.html\" title=\"struct core::str::error::ParseBoolError\">ParseBoolError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-bool\" class=\"impl\"><a href=\"#impl-FromZeroes-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl FromZeroes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a href=\"#method.zero\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a href=\"#method.new_zeroed\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a>Read more</a></div></details></div></details>","FromZeroes","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Fundamental-for-bool\" class=\"impl\"><a href=\"#impl-Fundamental-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl Fundamental for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bool\" class=\"method trait-impl\"><a href=\"#method.as_bool\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bool</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests <code>self != 0</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_char\" class=\"method trait-impl\"><a href=\"#method.as_char\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_char</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.char.html\">char</a>&gt;</h4></section></summary><div class='docblock'>Represents <code>self</code> as a Unicode Scalar Value, if possible.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i8\" class=\"method trait-impl\"><a href=\"#method.as_i8\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i8</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Performs <code>self as i8</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i16\" class=\"method trait-impl\"><a href=\"#method.as_i16\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i16</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Performs <code>self as i16</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i32\" class=\"method trait-impl\"><a href=\"#method.as_i32\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i32</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Performs <code>self as i32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i64\" class=\"method trait-impl\"><a href=\"#method.as_i64\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Performs <code>self as i64</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i128\" class=\"method trait-impl\"><a href=\"#method.as_i128\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i128</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Performs <code>self as i128</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_isize\" class=\"method trait-impl\"><a href=\"#method.as_isize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_isize</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Performs <code>self as isize</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u8\" class=\"method trait-impl\"><a href=\"#method.as_u8\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u8</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs <code>self as u8</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u16\" class=\"method trait-impl\"><a href=\"#method.as_u16\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u16</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Performs <code>self as u16</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u32\" class=\"method trait-impl\"><a href=\"#method.as_u32\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u32</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs <code>self as u32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u64\" class=\"method trait-impl\"><a href=\"#method.as_u64\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs <code>self as u64</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u128\" class=\"method trait-impl\"><a href=\"#method.as_u128\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u128</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Performs <code>self as u128</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_usize\" class=\"method trait-impl\"><a href=\"#method.as_usize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_usize</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Performs <code>self as usize</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_f32\" class=\"method trait-impl\"><a href=\"#method.as_f32\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_f32</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Performs <code>self as f32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_f64\" class=\"method trait-impl\"><a href=\"#method.as_f64\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_f64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Performs <code>self as f64</code>.</div></details></div></details>","Fundamental","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/hash/mod.rs.html#853\">source</a></span><a href=\"#impl-Hash-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/hash/mod.rs.html#855\">source</a><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IdentFragment-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/quote/1.0.37/src/quote/ident_fragment.rs.html#87\">source</a><a href=\"#impl-IdentFragment-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/quote/1.0.37/quote/ident_fragment/trait.IdentFragment.html\" title=\"trait quote::ident_fragment::IdentFragment\">IdentFragment</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/quote/1.0.37/src/quote/ident_fragment.rs.html#87\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/quote/1.0.37/quote/ident_fragment/trait.IdentFragment.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Format this value as an identifier fragment.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/quote/1.0.37/src/quote/ident_fragment.rs.html#20\">source</a><a href=\"#method.span\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/quote/1.0.37/quote/ident_fragment/trait.IdentFragment.html#method.span\" class=\"fn\">span</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/proc-macro2/1.0.86/proc_macro2/struct.Span.html\" title=\"struct proc_macro2::Span\">Span</a>&gt;</h4></section></summary><div class='docblock'>Span associated with this <code>IdentFragment</code>. <a href=\"https://docs.rs/quote/1.0.37/quote/ident_fragment/trait.IdentFragment.html#method.span\">Read more</a></div></details></div></details>","IdentFragment","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDeserializer%3C'de,+E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.214/src/serde/de/value.rs.html#327\">source</a><a href=\"#impl-IntoDeserializer%3C'de,+E%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'de, E&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.214/serde/de/trait.IntoDeserializer.html\" title=\"trait serde::de::IntoDeserializer\">IntoDeserializer</a>&lt;'de, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.214/serde/de/trait.Error.html\" title=\"trait serde::de::Error\">Error</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Deserializer\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Deserializer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/serde/1.0.214/serde/de/trait.IntoDeserializer.html#associatedtype.Deserializer\" class=\"associatedtype\">Deserializer</a> = <a class=\"struct\" href=\"https://docs.rs/serde/1.0.214/serde/de/value/struct.BoolDeserializer.html\" title=\"struct serde::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>The type of the deserializer being converted into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_deserializer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.214/src/serde/de/value.rs.html#327\">source</a><a href=\"#method.into_deserializer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.214/serde/de/trait.IntoDeserializer.html#tymethod.into_deserializer\" class=\"fn\">into_deserializer</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/serde/1.0.214/serde/de/value/struct.BoolDeserializer.html\" title=\"struct serde::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>Convert this value into a deserializer.</div></details></div></details>","IntoDeserializer<'de, E>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoFFIValue-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#142\">source</a><a href=\"#impl-IntoFFIValue-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/host/trait.IntoFFIValue.html\" title=\"trait sp_runtime_interface::host::IntoFFIValue\">IntoFFIValue</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_ffi_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#143\">source</a><a href=\"#method.into_ffi_value\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/host/trait.IntoFFIValue.html#tymethod.into_ffi_value\" class=\"fn\">into_ffi_value</a>(self, _: &amp;mut dyn <a class=\"trait\" href=\"sp_wasm_interface/trait.FunctionContext.html\" title=\"trait sp_wasm_interface::FunctionContext\">FunctionContext</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section></summary><div class='docblock'>Convert <code>self</code> into a ffi value.</div></details></div></details>","IntoFFIValue","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoFFIValue-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#142\">source</a><a href=\"#impl-IntoFFIValue-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/host/trait.IntoFFIValue.html\" title=\"trait sp_runtime_interface::host::IntoFFIValue\">IntoFFIValue</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_ffi_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#143\">source</a><a href=\"#method.into_ffi_value\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/host/trait.IntoFFIValue.html#tymethod.into_ffi_value\" class=\"fn\">into_ffi_value</a>(self, _: &amp;mut dyn <a class=\"trait\" href=\"sp_wasm_interface/trait.FunctionContext.html\" title=\"trait sp_wasm_interface::FunctionContext\">FunctionContext</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section></summary><div class='docblock'>Convert <code>self</code> into a ffi value.</div></details></div></details>","IntoFFIValue","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoFFIValue-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#144\">source</a><a href=\"#impl-IntoFFIValue-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/host/trait.IntoFFIValue.html\" title=\"trait sp_runtime_interface::host::IntoFFIValue\">IntoFFIValue</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_ffi_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#145\">source</a><a href=\"#method.into_ffi_value\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/host/trait.IntoFFIValue.html#tymethod.into_ffi_value\" class=\"fn\">into_ffi_value</a>(self, _: &amp;mut dyn <a class=\"trait\" href=\"sp_wasm_interface/trait.FunctionContext.html\" title=\"trait sp_wasm_interface::FunctionContext\">FunctionContext</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section></summary><div class='docblock'>Convert <code>self</code> into a ffi value.</div></details></div></details>","IntoFFIValue","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoResponse-for-bool\" class=\"impl\"><a href=\"#impl-IntoResponse-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl IntoResponse for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Output.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_response\" class=\"method trait-impl\"><a href=\"#method.into_response\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">into_response</a>(\n    self,\n) -&gt; ResponsePayload&lt;'static, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as IntoResponse&gt;::Output&gt;</h4></section></summary><div class='docblock'>Something that can be converted into a JSON-RPC method call response.</div></details></div></details>","IntoResponse","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVisitor-for-bool\" class=\"impl\"><a href=\"#impl-IntoVisitor-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl IntoVisitor for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AnyVisitor\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AnyVisitor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">AnyVisitor</a>&lt;R: TypeResolver&gt; = BasicVisitor&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, R&gt;</h4></section></summary><div class='docblock'>The visitor type used to decode SCALE encoded bytes to <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_visitor\" class=\"method trait-impl\"><a href=\"#method.into_visitor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">into_visitor</a>&lt;R&gt;() -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as IntoVisitor&gt;::AnyVisitor&lt;R&gt;<div class=\"where\">where\n    R: TypeResolver,</div></h4></section></summary><div class='docblock'>A means of obtaining this visitor.</div></details></div></details>","IntoVisitor","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-JsonSchema-for-bool\" class=\"impl\"><a href=\"#impl-JsonSchema-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl JsonSchema for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_referenceable\" class=\"method trait-impl\"><a href=\"#method.is_referenceable\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">is_referenceable</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Whether JSON Schemas generated for this type should be re-used where possible using the <code>$ref</code> keyword. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schema_name\" class=\"method trait-impl\"><a href=\"#method.schema_name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">schema_name</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>The name of the generated JSON Schema. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.json_schema\" class=\"method trait-impl\"><a href=\"#method.json_schema\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">json_schema</a>(_: &amp;mut SchemaGenerator) -&gt; Schema</h4></section></summary><div class='docblock'>Generates a JSON Schema for this type. <a>Read more</a></div></details></div></details>","JsonSchema","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-bool\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl MaxEncodedLen for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Message-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/types.rs.html#24\">source</a><a href=\"#impl-Message-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html\" title=\"trait prost::message::Message\">Message</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"docblock\"><p><code>google.protobuf.BoolValue</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/types.rs.html#49\">source</a><a href=\"#method.encoded_len\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#tymethod.encoded_len\" class=\"fn\">encoded_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the encoded length of the message without a length delimiter.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/types.rs.html#56\">source</a><a href=\"#method.clear\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Clears the message, resetting all fields to their default.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/message.rs.html#50-53\">source</a><a href=\"#method.encode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.encode\" class=\"fn\">encode</a>&lt;B&gt;(&amp;self, buf: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut B</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.12.6/prost/error/struct.EncodeError.html\" title=\"struct prost::error::EncodeError\">EncodeError</a>&gt;<div class=\"where\">where\n    B: BufMut,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message to a buffer. <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.encode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/message.rs.html#66-68\">source</a><a href=\"#method.encode_to_vec\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.encode_to_vec\" class=\"fn\">encode_to_vec</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">โ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message to a newly allocated buffer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_length_delimited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/message.rs.html#79-82\">source</a><a href=\"#method.encode_length_delimited\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.encode_length_delimited\" class=\"fn\">encode_length_delimited</a>&lt;B&gt;(&amp;self, buf: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut B</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.12.6/prost/error/struct.EncodeError.html\" title=\"struct prost::error::EncodeError\">EncodeError</a>&gt;<div class=\"where\">where\n    B: BufMut,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message with a length-delimiter to a buffer. <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.encode_length_delimited\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_length_delimited_to_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/message.rs.html#96-98\">source</a><a href=\"#method.encode_length_delimited_to_vec\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.encode_length_delimited_to_vec\" class=\"fn\">encode_length_delimited_to_vec</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">โ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message with a length-delimiter to a newly allocated buffer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/message.rs.html#111-114\">source</a><a href=\"#method.decode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.decode\" class=\"fn\">decode</a>&lt;B&gt;(buf: B) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/prost/0.12.6/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    B: Buf,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Decodes an instance of the message from a buffer. <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.decode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_length_delimited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/message.rs.html#121-124\">source</a><a href=\"#method.decode_length_delimited\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.decode_length_delimited\" class=\"fn\">decode_length_delimited</a>&lt;B&gt;(buf: B) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/prost/0.12.6/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    B: Buf,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Decodes a length-delimited instance of the message from the buffer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/message.rs.html#134-137\">source</a><a href=\"#method.merge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.merge\" class=\"fn\">merge</a>&lt;B&gt;(&amp;mut self, buf: B) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.12.6/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    B: Buf,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Decodes an instance of the message from a buffer, and merges it into <code>self</code>. <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.merge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge_length_delimited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/message.rs.html#149-152\">source</a><a href=\"#method.merge_length_delimited\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.merge_length_delimited\" class=\"fn\">merge_length_delimited</a>&lt;B&gt;(&amp;mut self, buf: B) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.12.6/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    B: Buf,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Decodes a length-delimited instance of the message from buffer, and\nmerges it into <code>self</code>.</div></details></div></details>","Message","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#68\">source</a></span><a href=\"#impl-Not-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/ops/bit.rs.html#68\">source</a><a href=\"#method.not\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/bit/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1591\">source</a></span><a href=\"#impl-Ord-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1593\">source</a><a href=\"#method.cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1607\">source</a><a href=\"#method.min\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1612\">source</a><a href=\"#method.max\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1617\">source</a><a href=\"#method.clamp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, max: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletError-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/error.rs.html#52\">source</a><a href=\"#impl-PalletError-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"frame_support/traits/error/trait.PalletError.html\" title=\"trait frame_support::traits::error::PalletError\">PalletError</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_ENCODED_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/error.rs.html#52\">source</a><a href=\"#associatedconstant.MAX_ENCODED_SIZE\" class=\"anchor\">ยง</a><h4 class=\"code-header\">const <a href=\"frame_support/traits/error/trait.PalletError.html#associatedconstant.MAX_ENCODED_SIZE\" class=\"constant\">MAX_ENCODED_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a> = 1usize</h4></section></summary><div class='docblock'>The maximum encoded size for the implementing type. <a href=\"frame_support/traits/error/trait.PalletError.html#associatedconstant.MAX_ENCODED_SIZE\">Read more</a></div></details></div></details>","PalletError","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBitRef%3C'_,+M,+T,+O%3E%3E-for-bool\" class=\"impl\"><a href=\"#impl-PartialEq%3CBitRef%3C'_,+M,+T,+O%3E%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M, T, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;BitRef&lt;'_, M, T, O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    M: Mutability,\n    T: BitStore,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;BitRef&lt;'_, M, T, O&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<BitRef<'_, M, T, O>>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CJsonValue%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.132/src/serde_json/value/partial_eq.rs.html#97-103\">source</a><a href=\"#impl-PartialEq%3CJsonValue%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.132/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.132/src/serde_json/value/partial_eq.rs.html#97-103\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.132/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Value>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1498-1500\">source</a></span><a href=\"#impl-PartialEq-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1498-1500\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1498-1500\">source</a><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1545\">source</a></span><a href=\"#impl-PartialOrd-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1547\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1179\">source</a></span><a href=\"#method.lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1197\">source</a></span><a href=\"#method.le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Printable-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#2247\">source</a><a href=\"#impl-Printable-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.Printable.html\" title=\"trait sp_runtime::traits::Printable\">Printable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.print\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#2248\">source</a><a href=\"#method.print\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.Printable.html#tymethod.print\" class=\"fn\">print</a>(&amp;self)</h4></section></summary><div class='docblock'>Print the object.</div></details></div></details>","Printable","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Printable-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits/mod.rs.html#2294\">source</a><a href=\"#impl-Printable-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.Printable.html\" title=\"trait sp_runtime::traits::Printable\">Printable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.print\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits/mod.rs.html#2295\">source</a><a href=\"#method.print\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.Printable.html#tymethod.print\" class=\"fn\">print</a>(&amp;self)</h4></section></summary><div class='docblock'>Print the object.</div></details></div></details>","Printable","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RIType-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#112\">source</a><a href=\"#impl-RIType-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/trait.RIType.html\" title=\"trait sp_runtime_interface::RIType\">RIType</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"docblock\"><p><code>bool</code> is passed as <code>u32</code>.</p>\n<ul>\n<li><code>1</code>: true</li>\n<li><code>0</code>: false</li>\n</ul>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.FFIType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.FFIType\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/trait.RIType.html#associatedtype.FFIType\" class=\"associatedtype\">FFIType</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The ffi type that is used to represent <code>Self</code>.</div></details></div></details>","RIType","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RIType-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#112\">source</a><a href=\"#impl-RIType-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/trait.RIType.html\" title=\"trait sp_runtime_interface::RIType\">RIType</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"docblock\"><p><code>bool</code> is passed as <code>u32</code>.</p>\n<ul>\n<li><code>1</code>: true</li>\n<li><code>0</code>: false</li>\n</ul>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.FFIType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.FFIType\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/trait.RIType.html#associatedtype.FFIType\" class=\"associatedtype\">FFIType</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The ffi type that is used to represent <code>Self</code>.</div></details></div></details>","RIType","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RIType-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#114\">source</a><a href=\"#impl-RIType-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/trait.RIType.html\" title=\"trait sp_runtime_interface::RIType\">RIType</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"docblock\"><p><code>bool</code> is passed as <code>u32</code>.</p>\n<ul>\n<li><code>1</code>: true</li>\n<li><code>0</code>: false</li>\n</ul>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.FFIType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.FFIType\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/trait.RIType.html#associatedtype.FFIType\" class=\"associatedtype\">FFIType</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The ffi type that is used to represent <code>Self</code>.</div></details></div></details>","RIType","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.214/src/serde/ser/impls.rs.html#21\">source</a><a href=\"#impl-Serialize-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.214/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.214/src/serde/ser/impls.rs.html#21\">source</a><a href=\"#method.serialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.214/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.214/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.214/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.214/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.214/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.214/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.214/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdBool-for-bool\" class=\"impl\"><a href=\"#impl-SimdBool-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl SimdBool for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitmask\" class=\"method trait-impl\"><a href=\"#method.bitmask\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">bitmask</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>A bit mask representing the boolean state of each lanes of <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and\" class=\"method trait-impl\"><a href=\"#method.and\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">and</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Lane-wise bitwise and of the vector elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or\" class=\"method trait-impl\"><a href=\"#method.or\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">or</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Lane-wise bitwise or of the vector elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.xor\" class=\"method trait-impl\"><a href=\"#method.xor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">xor</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Lane-wise bitwise xor of the vector elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.all\" class=\"method trait-impl\"><a href=\"#method.all\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">all</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Are all vector lanes true?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.any\" class=\"method trait-impl\"><a href=\"#method.any\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">any</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is any vector lane true?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.none\" class=\"method trait-impl\"><a href=\"#method.none\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">none</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Are all vector lanes false?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.if_else\" class=\"method trait-impl\"><a href=\"#method.if_else\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">if_else</a>&lt;Res&gt;(\n    self,\n    if_value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res,\n    else_value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res,\n) -&gt; Res<div class=\"where\">where\n    Res: SimdValue&lt;SimdBool = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>&gt;,</div></h4></section></summary><div class='docblock'>Merges the value of <code>if_value()</code> and <code>else_value()</code> depending on the lanes of <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.if_else2\" class=\"method trait-impl\"><a href=\"#method.if_else2\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">if_else2</a>&lt;Res&gt;(\n    self,\n    if_value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res,\n    else_if: (impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res),\n    else_value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res,\n) -&gt; Res<div class=\"where\">where\n    Res: SimdValue&lt;SimdBool = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>&gt;,</div></h4></section></summary><div class='docblock'>Merges the value of <code>if_value()</code> and <code>else_if.1()</code> and <code>else_value()</code> depending on the lanes of <code>self</code> and <code>else_if.0()</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.if_else3\" class=\"method trait-impl\"><a href=\"#method.if_else3\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">if_else3</a>&lt;Res&gt;(\n    self,\n    if_value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res,\n    else_if: (impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res),\n    else_else_if: (impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res),\n    else_value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res,\n) -&gt; Res<div class=\"where\">where\n    Res: SimdValue&lt;SimdBool = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>&gt;,</div></h4></section></summary><div class='docblock'>Merges the value of <code>if_value()</code> and <code>else_if.1()</code> and <code>else_else_if.1()</code> and <code>else_value()</code> depending on the lanes of <code>self</code> and <code>else_if.0()</code> and <code>else_else_if.0()</code>. <a>Read more</a></div></details></div></details>","SimdBool","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdValue-for-bool\" class=\"impl\"><a href=\"#impl-SimdValue-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl SimdValue for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Element\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Element\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Element</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The type of the elements of each lane of this SIMD value.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.SimdBool\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SimdBool\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">SimdBool</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Type of the result of comparing two SIMD values like <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lanes\" class=\"method trait-impl\"><a href=\"#method.lanes\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">lanes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of lanes of this SIMD value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splat\" class=\"method trait-impl\"><a href=\"#method.splat\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">splat</a>(val: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as SimdValue&gt;::Element) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Initializes an SIMD value with each lanes set to <code>val</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract\" class=\"method trait-impl\"><a href=\"#method.extract\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">extract</a>(&amp;self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as SimdValue&gt;::Element</h4></section></summary><div class='docblock'>Extracts the i-th lane of <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract_unchecked\" class=\"method trait-impl\"><a href=\"#method.extract_unchecked\" class=\"anchor\">ยง</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">extract_unchecked</a>(&amp;self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as SimdValue&gt;::Element</h4></section></summary><div class='docblock'>Extracts the i-th lane of <code>self</code> without bound-checking.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method trait-impl\"><a href=\"#method.replace\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">replace</a>(&amp;mut self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>, val: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as SimdValue&gt;::Element)</h4></section></summary><div class='docblock'>Replaces the i-th lane of <code>self</code> by <code>val</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_unchecked\" class=\"method trait-impl\"><a href=\"#method.replace_unchecked\" class=\"anchor\">ยง</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">replace_unchecked</a>(\n    &amp;mut self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>,\n    val: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as SimdValue&gt;::Element,\n)</h4></section></summary><div class='docblock'>Replaces the i-th lane of <code>self</code> by <code>val</code> without bound-checking.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.select\" class=\"method trait-impl\"><a href=\"#method.select\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">select</a>(self, cond: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as SimdValue&gt;::SimdBool, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Merges <code>self</code> and <code>other</code> depending on the lanes of <code>cond</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_lanes\" class=\"method trait-impl\"><a href=\"#method.map_lanes\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">map_lanes</a>(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::Element) -&gt; Self::Element) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Applies a function to each lane of <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip_map_lanes\" class=\"method trait-impl\"><a href=\"#method.zip_map_lanes\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">zip_map_lanes</a>(\n    self,\n    b: Self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::Element, Self::Element) -&gt; Self::Element,\n) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Applies a function to each lane of <code>self</code> paired with the corresponding lane of <code>b</code>. <a>Read more</a></div></details></div></details>","SimdValue","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SmartDisplay-for-bool\" class=\"impl\"><a href=\"#impl-SmartDisplay-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl SmartDisplay for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Metadata\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Metadata\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Metadata</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>User-provided metadata type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(&amp;self, _: FormatterOptions) -&gt; Metadata&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Compute any information needed to format the value. This must, at a minimum, determine the\nwidth of the value before any padding is added by the formatter. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Format the value using the given formatter. This is the same as <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Display.html#tymethod.fmt\" title=\"method core::fmt::Display::fmt\"><code>Display::fmt</code></a>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt_with_metadata\" class=\"method trait-impl\"><a href=\"#method.fmt_with_metadata\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt_with_metadata</a>(\n    &amp;self,\n    f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;,\n    _metadata: Metadata&lt;'_, Self&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Format the value using the given formatter and metadata. The formatted output should have\nthe width indicated by the metadata. This is before any padding is added by the\nformatter. <a>Read more</a></div></details></div></details>","SmartDisplay","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToConstraintField%3CF%3E-for-bool\" class=\"impl\"><a href=\"#impl-ToConstraintField%3CF%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;F&gt; ToConstraintField&lt;F&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    F: Field,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_field_elements\" class=\"method trait-impl\"><a href=\"#method.to_field_elements\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">to_field_elements</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;F&gt;&gt;</h4></section></div></details>","ToConstraintField<F>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToTokens-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/quote/1.0.37/src/quote/to_tokens.rs.html#218\">source</a><a href=\"#impl-ToTokens-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/quote/1.0.37/quote/to_tokens/trait.ToTokens.html\" title=\"trait quote::to_tokens::ToTokens\">ToTokens</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_tokens\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/quote/1.0.37/src/quote/to_tokens.rs.html#219\">source</a><a href=\"#method.to_tokens\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/quote/1.0.37/quote/to_tokens/trait.ToTokens.html#tymethod.to_tokens\" class=\"fn\">to_tokens</a>(&amp;self, tokens: &amp;mut <a class=\"struct\" href=\"https://docs.rs/proc-macro2/1.0.86/proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a>)</h4></section></summary><div class='docblock'>Write <code>self</code> to the given <code>TokenStream</code>. <a href=\"https://docs.rs/quote/1.0.37/quote/to_tokens/trait.ToTokens.html#tymethod.to_tokens\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_token_stream\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/quote/1.0.37/src/quote/to_tokens.rs.html#60\">source</a><a href=\"#method.to_token_stream\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/quote/1.0.37/quote/to_tokens/trait.ToTokens.html#method.to_token_stream\" class=\"fn\">to_token_stream</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/proc-macro2/1.0.86/proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a></h4></section></summary><div class='docblock'>Convert <code>self</code> directly into a <code>TokenStream</code> object. <a href=\"https://docs.rs/quote/1.0.37/quote/to_tokens/trait.ToTokens.html#method.to_token_stream\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_token_stream\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/quote/1.0.37/src/quote/to_tokens.rs.html#70-72\">source</a><a href=\"#method.into_token_stream\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/quote/1.0.37/quote/to_tokens/trait.ToTokens.html#method.into_token_stream\" class=\"fn\">into_token_stream</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/proc-macro2/1.0.86/proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert <code>self</code> directly into a <code>TokenStream</code> object. <a href=\"https://docs.rs/quote/1.0.37/quote/to_tokens/trait.ToTokens.html#method.into_token_stream\">Read more</a></div></details></div></details>","ToTokens","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToValue-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/log/0.4.22/src/log/kv/value.rs.html#348-350\">source</a><a href=\"#impl-ToValue-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/log/0.4.22/log/kv/value/trait.ToValue.html\" title=\"trait log::kv::value::ToValue\">ToValue</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/log/0.4.22/src/log/kv/value.rs.html#348-350\">source</a><a href=\"#method.to_value\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/log/0.4.22/log/kv/value/trait.ToValue.html#tymethod.to_value\" class=\"fn\">to_value</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/log/0.4.22/log/kv/value/struct.Value.html\" title=\"struct log::kv::value::Value\">Value</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Perform the conversion.</div></details></div></details>","ToValue","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CAnyRef%3C'_%3E%3E-for-bool\" class=\"impl\"><a href=\"#impl-TryFrom%3CAnyRef%3C'_%3E%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;AnyRef&lt;'_&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(any: AnyRef&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<AnyRef<'_>>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CSyncingStatus%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_revive/evm/api/rpc_types_gen.rs.html#272\">source</a><a href=\"#impl-TryFrom%3CSyncingStatus%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"pallet_revive/evm/api/rpc_types_gen/enum.SyncingStatus.html\" title=\"enum pallet_revive::evm::api::rpc_types_gen::SyncingStatus\">SyncingStatus</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_revive/evm/api/rpc_types_gen.rs.html#272\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"enum\" href=\"pallet_revive/evm/api/rpc_types_gen/enum.SyncingStatus.html\" title=\"enum pallet_revive::evm::api::rpc_types_gen::SyncingStatus\">SyncingStatus</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"pallet_revive/evm/api/rpc_types_gen/enum.SyncingStatus.html\" title=\"enum pallet_revive::evm::api::rpc_types_gen::SyncingStatus\">SyncingStatus</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<SyncingStatus>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CValueBag%3C'v%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/value-bag/1.8.0/src/value_bag/impls.rs.html#58-72\">source</a><a href=\"#impl-TryFrom%3CValueBag%3C'v%3E%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'v&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/value-bag/1.8.0/value_bag/struct.ValueBag.html\" title=\"struct value_bag::ValueBag\">ValueBag</a>&lt;'v&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/value-bag/1.8.0/value_bag/error/struct.Error.html\" title=\"struct value_bag::error::Error\">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/value-bag/1.8.0/src/value_bag/impls.rs.html#58-72\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(v: <a class=\"struct\" href=\"https://docs.rs/value-bag/1.8.0/value_bag/struct.ValueBag.html\" title=\"struct value_bag::ValueBag\">ValueBag</a>&lt;'v&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"https://docs.rs/value-bag/1.8.0/value_bag/error/struct.Error.html\" title=\"struct value_bag::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<ValueBag<'v>>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Type%3CAny%3E-for-bool\" class=\"impl\"><a href=\"#impl-Type%3CAny%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl Type&lt;Any&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; AnyTypeInfo</h4></section></summary><div class='docblock'>Returns the canonical SQL type for this Rust type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compatible\" class=\"method trait-impl\"><a href=\"#method.compatible\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">compatible</a>(ty: &amp;&lt;DB as Database&gt;::TypeInfo) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determines if this Rust type is compatible with the given SQL type. <a>Read more</a></div></details></div></details>","Type<Any>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Type%3CSqlite%3E-for-bool\" class=\"impl\"><a href=\"#impl-Type%3CSqlite%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl Type&lt;Sqlite&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; SqliteTypeInfo</h4></section></summary><div class='docblock'>Returns the canonical SQL type for this Rust type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compatible\" class=\"method trait-impl\"><a href=\"#method.compatible\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">compatible</a>(ty: &amp;SqliteTypeInfo) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determines if this Rust type is compatible with the given SQL type. <a>Read more</a></div></details></div></details>","Type<Sqlite>","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-bool\" class=\"impl\"><a href=\"#impl-TypeInfo-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl TypeInfo for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Valid-for-bool\" class=\"impl\"><a href=\"#impl-Valid-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl Valid for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.check\" class=\"method trait-impl\"><a href=\"#method.check\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">check</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, SerializationError&gt;</h4></section><section id=\"method.batch_check\" class=\"method trait-impl\"><a href=\"#method.batch_check\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_check</a>&lt;'a&gt;(\n    batch: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;'a Self</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, SerializationError&gt;<div class=\"where\">where\n    Self: 'a,</div></h4></section></div></details>","Valid","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-bool\" class=\"impl\"><a href=\"#impl-Value-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl Value for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a href=\"#method.record\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">record</a>(&amp;self, key: &amp;Field, visitor: &amp;mut dyn Visit)</h4></section></summary><div class='docblock'>Visits this value with the given <code>Visitor</code>.</div></details></div></details>","Value","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ValueParserFactory-for-bool\" class=\"impl\"><a href=\"#impl-ValueParserFactory-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl ValueParserFactory for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Parser\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Parser\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Parser</a> = ValueParser</h4></section></summary><div class='docblock'>Generated parser, usually [<code>ValueParser</code>]. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_parser\" class=\"method trait-impl\"><a href=\"#method.value_parser\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">value_parser</a>() -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> as ValueParserFactory&gt;::Parser</h4></section></summary><div class='docblock'>Create the specified [<code>Self::Parser</code>]</div></details></div></details>","ValueParserFactory","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-bool\" class=\"impl\"><a href=\"#impl-Zeroable-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl Zeroable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.81.0/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/bool.rs.html#3\">source</a><a href=\"#impl-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.then_some\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.62.0\">1.62.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/bool.rs.html#33\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html#tymethod.then_some\" class=\"fn\">then_some</a>&lt;T&gt;(self, t: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <code>Some(t)</code> if the <code>bool</code> is <a href=\"../std/keyword.true.html\"><code>true</code></a>,\nor <code>None</code> otherwise.</p>\n<p>Arguments passed to <code>then_some</code> are eagerly evaluated; if you are\npassing the result of a function call, it is recommended to use\n<a href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html#method.then\" title=\"method bool::then\"><code>then</code></a>, which is lazily evaluated.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">false</span>.then_some(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">true</span>.then_some(<span class=\"number\">0</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));</code></pre></div>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = <span class=\"number\">0</span>;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>function_with_side_effects = || { a += <span class=\"number\">1</span>; };\n\n<span class=\"bool-val\">true</span>.then_some(function_with_side_effects());\n<span class=\"bool-val\">false</span>.then_some(function_with_side_effects());\n\n<span class=\"comment\">// `a` is incremented twice because the value passed to `then_some` is\n// evaluated eagerly.\n</span><span class=\"macro\">assert_eq!</span>(a, <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.then\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/bool.rs.html#59\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html#tymethod.then\" class=\"fn\">then</a>&lt;T, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; T,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>Some(f())</code> if the <code>bool</code> is <a href=\"../std/keyword.true.html\"><code>true</code></a>,\nor <code>None</code> otherwise.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">false</span>.then(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">true</span>.then(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));</code></pre></div>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = <span class=\"number\">0</span>;\n\n<span class=\"bool-val\">true</span>.then(|| { a += <span class=\"number\">1</span>; });\n<span class=\"bool-val\">false</span>.then(|| { a += <span class=\"number\">1</span>; });\n\n<span class=\"comment\">// `a` is incremented once because the closure is evaluated lazily by\n// `then`.\n</span><span class=\"macro\">assert_eq!</span>(a, <span class=\"number\">1</span>);</code></pre></div>\n</div></details></div></details>",0,"pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<section id=\"impl-BitOps-for-bool\" class=\"impl\"><a href=\"#impl-BitOps-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl BitOps for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section>","BitOps","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<section id=\"impl-ConstEncodedLen-for-bool\" class=\"impl\"><a href=\"#impl-ConstEncodedLen-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl ConstEncodedLen for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section>","ConstEncodedLen","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<section id=\"impl-ConstParamTy-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/marker.rs.html#991-1003\">source</a><a href=\"#impl-ConstParamTy-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.ConstParamTy.html\" title=\"trait core::marker::ConstParamTy\">ConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section>","ConstParamTy","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<section id=\"impl-Copy-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/marker.rs.html#420-430\">source</a></span><a href=\"#impl-Copy-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section>","Copy","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<section id=\"impl-DefaultIsZeroes-for-bool\" class=\"impl\"><a href=\"#impl-DefaultIsZeroes-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl DefaultIsZeroes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section>","DefaultIsZeroes","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<section id=\"impl-EncodeLike-for-bool\" class=\"impl\"><a href=\"#impl-EncodeLike-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl EncodeLike for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section>","EncodeLike","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<section id=\"impl-Eq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1509\">source</a></span><a href=\"#impl-Eq-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section>","Eq","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<section id=\"impl-NoUninit-for-bool\" class=\"impl\"><a href=\"#impl-NoUninit-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl NoUninit for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section>","NoUninit","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<section id=\"impl-PrimitiveSimdValue-for-bool\" class=\"impl\"><a href=\"#impl-PrimitiveSimdValue-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl PrimitiveSimdValue for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section>","PrimitiveSimdValue","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<section id=\"impl-StructuralPartialEq-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/marker.rs.html#214-226\">source</a><a href=\"#impl-StructuralPartialEq-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section>","StructuralPartialEq","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"],["<section id=\"impl-Unaligned-for-bool\" class=\"impl\"><a href=\"#impl-Unaligned-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl Unaligned for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h3></section>","Unaligned","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::pool_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::nomination_pools_api::types::member_needs_delegate_migration::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::staking_api::types::pending_rewards::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_tokens_for_exact_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::asset_conversion_api::types::quote_price_exact_tokens_for_tokens::IncludeFee","pallet_revive_eth_rpc::subxt_client::src_chain::runtime_apis::mixnet_api::types::maybe_register::output::Output","pallet_revive_eth_rpc::subxt_client::src_chain::system::events::upgrade_authorized::CheckVersion","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::inherents_applied::InherentsApplied","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_u32_ref_count::UpgradedToU32RefCount","pallet_revive_eth_rpc::subxt_client::src_chain::system::storage::types::upgraded_to_triple_ref_count::UpgradedToTripleRefCount","pallet_revive_eth_rpc::subxt_client::src_chain::timestamp::storage::types::did_update::DidUpdate","pallet_revive_eth_rpc::subxt_client::src_chain::indices::calls::types::force_transfer::Freeze","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::balances::calls::types::burn::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::election_provider_multi_phase::events::solution_stored::PrevEjected","pallet_revive_eth_rpc::subxt_client::src_chain::session::storage::types::queued_changed::QueuedChanged","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::last_tabled_was_external::LastTabledWasExternal","pallet_revive_eth_rpc::subxt_client::src_chain::democracy::storage::types::cancellations::Cancellations","pallet_revive_eth_rpc::subxt_client::src_chain::council::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::council::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::technical_committee::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::SlashBond","pallet_revive_eth_rpc::subxt_client::src_chain::elections::calls::types::remove_member::RerunElection","pallet_revive_eth_rpc::subxt_client::src_chain::im_online::storage::types::received_heartbeats::ReceivedHeartbeats","pallet_revive_eth_rpc::subxt_client::src_chain::identity::calls::types::set_username_for::UseAllocation","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::defender_vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::society::calls::types::judge_suspended_member::Forgive","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::suspended_member_judgement::Judged","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::society::events::defender_vote::Vote","pallet_revive_eth_rpc::subxt_client::src_chain::glutton::events::pallet_initialized::Reinit","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_create::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsSufficient","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::force_asset_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::refund::AllowBurn","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::calls::types::transfer_all::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::pool_assets::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::lottery::calls::types::start_lottery::Repeat","pallet_revive_eth_rpc::subxt_client::src_chain::nis::events::thawed::Dropped","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_create::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::FreeHolding","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::force_item_status::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::calls::types::set_collection_metadata::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::collection_metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::uniques::events::metadata_set::IsFrozen","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::calls::types::lock_item_properties::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockMetadata","pallet_revive_eth_rpc::subxt_client::src_chain::nfts::events::item_properties_locked::LockAttributes","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::calls::types::set_active::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::core_fellowship::events::active_changed::IsActive","pallet_revive_eth_rpc::subxt_client::src_chain::transaction_storage::storage::types::proof_checked::ProofChecked","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::alliance_motion::events::voted::Voted","pallet_revive_eth_rpc::subxt_client::src_chain::alliance::calls::types::vote::Approve","pallet_revive_eth_rpc::subxt_client::src_chain::nomination_pools::events::bonded::Joined","pallet_revive_eth_rpc::subxt_client::src_chain::ranked_collective::calls::types::vote::Aye","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_exact_tokens_for_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::asset_conversion::calls::types::swap_tokens_for_exact_tokens::KeepAlive","pallet_revive_eth_rpc::subxt_client::src_chain::message_queue::events::processed::Success"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()