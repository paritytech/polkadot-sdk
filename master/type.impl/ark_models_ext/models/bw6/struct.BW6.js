(function() {
    var type_impls = Object.fromEntries([["yet_another_parachain_runtime",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-BW6%3CP%3E\" class=\"impl\"><a href=\"#impl-Clone-for-BW6%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for BW6&lt;P&gt;<div class=\"where\">where\n    P: BW6Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; BW6&lt;P&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::BW6_761"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-BW6%3CP%3E\" class=\"impl\"><a href=\"#impl-Debug-for-BW6%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.Debug.html\" title=\"trait yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::Debug\">Debug</a> for BW6&lt;P&gt;<div class=\"where\">where\n    P: BW6Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, __f: &amp;mut <a class=\"struct\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/fmt/struct.Formatter.html\" title=\"struct yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"yet_another_parachain_runtime/sc_service/enum.Result.html\" title=\"enum yet_another_parachain_runtime::sc_service::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/fmt/struct.Error.html\" title=\"struct yet_another_parachain_runtime::emulated_integration_tests_common::xcm_emulator::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"yet_another_parachain_runtime/emulated_integration_tests_common/xcm_emulator/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::BW6_761"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-BW6%3CP%3E\" class=\"impl\"><a href=\"#impl-Hash-for-BW6%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for BW6&lt;P&gt;<div class=\"where\">where\n    P: BW6Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__HP&gt;(&amp;self, __state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut __HP</a>)<div class=\"where\">where\n    __HP: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::BW6_761"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pairing-for-BW6%3CP%3E\" class=\"impl\"><a href=\"#impl-Pairing-for-BW6%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; Pairing for BW6&lt;P&gt;<div class=\"where\">where\n    P: BW6Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.BaseField\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BaseField\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BaseField</a> = &lt;&lt;P as BW6Config&gt;::G1Config as CurveConfig&gt;::BaseField</h4></section></summary><div class='docblock'>This is the base field of the G1 group and base prime field of G2.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ScalarField\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ScalarField\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ScalarField</a> = &lt;&lt;P as BW6Config&gt;::G1Config as CurveConfig&gt;::ScalarField</h4></section></summary><div class='docblock'>This is the scalar field of the G1/G2 groups.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.G1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.G1\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">G1</a> = Projective&lt;&lt;P as BW6Config&gt;::G1Config&gt;</h4></section></summary><div class='docblock'>An element in G1.</div></details><section id=\"associatedtype.G1Affine\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.G1Affine\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">G1Affine</a> = Affine&lt;&lt;P as BW6Config&gt;::G1Config&gt;</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.G1Prepared\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.G1Prepared\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">G1Prepared</a> = G1Prepared&lt;P&gt;</h4></section></summary><div class='docblock'>A G1 element that has been preprocessed for use in a pairing.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.G2\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.G2\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">G2</a> = Projective&lt;&lt;P as BW6Config&gt;::G2Config&gt;</h4></section></summary><div class='docblock'>An element of G2.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.G2Affine\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.G2Affine\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">G2Affine</a> = Affine&lt;&lt;P as BW6Config&gt;::G2Config&gt;</h4></section></summary><div class='docblock'>The affine representation of an element in G2.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.G2Prepared\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.G2Prepared\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">G2Prepared</a> = G2Prepared&lt;P&gt;</h4></section></summary><div class='docblock'>A G2 element that has been preprocessed for use in a pairing.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.TargetField\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.TargetField\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">TargetField</a> = QuadExtField&lt;Fp6ConfigWrapper&lt;&lt;P as BW6Config&gt;::Fp6Config&gt;&gt;</h4></section></summary><div class='docblock'>The extension field that hosts the target group of the pairing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_exponentiation\" class=\"method trait-impl\"><a href=\"#method.final_exponentiation\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_exponentiation</a>(\n    f: MillerLoopOutput&lt;BW6&lt;P&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PairingOutput&lt;BW6&lt;P&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Performs final exponentiation of the result of a <code>Self::multi_miller_loop</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.multi_miller_loop\" class=\"method trait-impl\"><a href=\"#method.multi_miller_loop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multi_miller_loop</a>(\n    a: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;BW6&lt;P&gt; as Pairing&gt;::G1Prepared&gt;&gt;,\n    b: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;BW6&lt;P&gt; as Pairing&gt;::G2Prepared&gt;&gt;,\n) -&gt; MillerLoopOutput&lt;BW6&lt;P&gt;&gt;</h4></section></summary><div class='docblock'>Computes the product of Miller loops for some number of (G1, G2) pairs.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.miller_loop\" class=\"method trait-impl\"><a href=\"#method.miller_loop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">miller_loop</a>(\n    a: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Self::G1Prepared&gt;,\n    b: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Self::G2Prepared&gt;,\n) -&gt; MillerLoopOutput&lt;Self&gt;</h4></section></summary><div class='docblock'>Computes the Miller loop over <code>a</code> and <code>b</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.multi_pairing\" class=\"method trait-impl\"><a href=\"#method.multi_pairing\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multi_pairing</a>(\n    a: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Self::G1Prepared&gt;&gt;,\n    b: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Self::G2Prepared&gt;&gt;,\n) -&gt; PairingOutput&lt;Self&gt;</h4></section></summary><div class='docblock'>Computes a “product” of pairings.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pairing\" class=\"method trait-impl\"><a href=\"#method.pairing\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pairing</a>(\n    p: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Self::G1Prepared&gt;,\n    q: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Self::G2Prepared&gt;,\n) -&gt; PairingOutput&lt;Self&gt;</h4></section></summary><div class='docblock'>Performs multiple pairing operations</div></details></div></details>","Pairing","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::BW6_761"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-BW6%3CP%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-BW6%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for BW6&lt;P&gt;<div class=\"where\">where\n    P: BW6Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;BW6&lt;P&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::BW6_761"],["<section id=\"impl-Copy-for-BW6%3CP%3E\" class=\"impl\"><a href=\"#impl-Copy-for-BW6%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for BW6&lt;P&gt;<div class=\"where\">where\n    P: BW6Config,</div></h3></section>","Copy","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::BW6_761"],["<section id=\"impl-Eq-for-BW6%3CP%3E\" class=\"impl\"><a href=\"#impl-Eq-for-BW6%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for BW6&lt;P&gt;<div class=\"where\">where\n    P: BW6Config,</div></h3></section>","Eq","yet_another_parachain_runtime::sp_crypto_ec_utils::bw6_761::BW6_761"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[18241]}