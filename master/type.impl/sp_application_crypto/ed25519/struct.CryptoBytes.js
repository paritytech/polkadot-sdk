(function() {
    var type_impls = Object.fromEntries([["sp_application_crypto",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8;+N%5D%3E-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8;+N%5D%3E-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">N</a>]</h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8; N]>","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8;+N%5D%3E-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8;+N%5D%3E-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">N</a>]</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8; N]>","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ByteArray-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-ByteArray-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; ByteArray for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.LEN\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.LEN\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">LEN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a> = N</h4></section></summary><div class='docblock'>The “length” of the values of this type, which is always the same.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method trait-impl\"><a href=\"#method.from_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_slice</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>A new instance from the given slice that should be <code>Self::LEN</code> bytes long.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_raw_vec\" class=\"method trait-impl\"><a href=\"#method.to_raw_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_raw_vec</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Return a <code>Vec&lt;u8&gt;</code> filled with raw data.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method trait-impl\"><a href=\"#method.as_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a slice filled with raw data.</div></details></div></details>","ByteArray","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-Clone-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoBytes%3C32,+T%3E\" class=\"impl\"><a href=\"#impl-CryptoBytes%3C32,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;32, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_h256\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html#tymethod.from_h256\" class=\"fn\">from_h256</a>(x: H256) -&gt; <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;32, T&gt;</h4></section></summary><div class=\"docblock\"><p>A new instance from an H256.</p>\n</div></details></div></details>",0,"sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoBytes%3C64,+T%3E\" class=\"impl\"><a href=\"#impl-CryptoBytes%3C64,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;64, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_h512\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html#tymethod.from_h512\" class=\"fn\">from_h512</a>(x: H512) -&gt; <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;64, T&gt;</h4></section></summary><div class=\"docblock\"><p>A new instance from an H512.</p>\n</div></details></div></details>",0,"sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html#tymethod.from_raw\" class=\"fn\">from_raw</a>(inner: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">N</a>]) -&gt; <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h4></section></summary><div class=\"docblock\"><p>Construct from raw array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_raw\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html#tymethod.to_raw\" class=\"fn\">to_raw</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">N</a>]</h4></section></summary><div class=\"docblock\"><p>Construct from raw array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_array_ref\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html#tymethod.as_array_ref\" class=\"fn\">as_array_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">N</a>]</h4></section></summary><div class=\"docblock\"><p>Return a slice filled with raw data.</p>\n</div></details></div></details>",0,"sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+TAG)%3E\" class=\"impl\"><a href=\"#impl-CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+TAG)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TAG&gt; <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, TAG)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_full\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html#tymethod.from_full\" class=\"fn\">from_full</a>(\n    full: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, TAG)&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new instance from the given full public key.</p>\n<p>This will convert the full public key into the compressed format.</p>\n</div></details></div></details>",0,"sp_application_crypto::bandersnatch::Public","sp_application_crypto::bls381::Public","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ed25519::Public"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoBytes%3Csp_core::::ecdsa::GenericSignature::%7Bconstant%230%7D,+(SignatureTag,+CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+EcdsaKeccakTag)%3E)%3E\" class=\"impl\"><a href=\"#impl-CryptoBytes%3Csp_core::::ecdsa::GenericSignature::%7Bconstant%230%7D,+(SignatureTag,+CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+EcdsaKeccakTag)%3E)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericSignature::{constant#0}, (SignatureTag, <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaKeccakTag)&gt;)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.recover\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html#tymethod.recover\" class=\"fn\">recover</a>&lt;M&gt;(\n    &amp;self,\n    message: M,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaKeccakTag)&gt;&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Recover the public key from this signature and a message.</p>\n</div></details></div></details>",0,"sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ed25519::SignatureBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoBytes%3Csp_core::::ecdsa::GenericSignature::%7Bconstant%230%7D,+(SignatureTag,+CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+EcdsaTag)%3E)%3E\" class=\"impl\"><a href=\"#impl-CryptoBytes%3Csp_core::::ecdsa::GenericSignature::%7Bconstant%230%7D,+(SignatureTag,+CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+EcdsaTag)%3E)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericSignature::{constant#0}, (SignatureTag, <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaTag)&gt;)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.recover\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html#tymethod.recover\" class=\"fn\">recover</a>&lt;M&gt;(\n    &amp;self,\n    message: M,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaTag)&gt;&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Recover the public key from this signature and a message.</p>\n</div></details></div></details>",0,"sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoBytes%3Csp_core::::ecdsa::GenericSignature::%7Bconstant%230%7D,+(SignatureTag,+PUBLIC)%3E\" class=\"impl\"><a href=\"#impl-CryptoBytes%3Csp_core::::ecdsa::GenericSignature::%7Bconstant%230%7D,+(SignatureTag,+PUBLIC)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PUBLIC&gt; <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericSignature::{constant#0}, (SignatureTag, PUBLIC)&gt;<div class=\"where\">where\n    PUBLIC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PublicKey&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.recover_prehashed\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html#tymethod.recover_prehashed\" class=\"fn\">recover_prehashed</a>(&amp;self, message: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">32</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PUBLIC&gt;</h4></section></summary><div class=\"docblock\"><p>Recover the public key from this signature and a pre-hashed message.</p>\n</div></details></div></details>",0,"sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoType-for-CryptoBytes%3Csp_core::::bandersnatch::Public::%7Bconstant%230%7D,+(PublicTag,+BandersnatchTag)%3E\" class=\"impl\"><a href=\"#impl-CryptoType-for-CryptoBytes%3Csp_core::::bandersnatch::Public::%7Bconstant%230%7D,+(PublicTag,+BandersnatchTag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CryptoType for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::bandersnatch::Public::{constant#0}, (PublicTag, BandersnatchTag)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pair\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pair\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Pair</a> = <a class=\"struct\" href=\"sp_application_crypto/bandersnatch/struct.Pair.html\" title=\"struct sp_application_crypto::bandersnatch::Pair\">Pair</a></h4></section></summary><div class='docblock'>The pair key type of this crypto.</div></details></div></details>","CryptoType","sp_application_crypto::bandersnatch::Public"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoType-for-CryptoBytes%3Csp_core::::bandersnatch::Signature::%7Bconstant%230%7D,+(SignatureTag,+BandersnatchTag)%3E\" class=\"impl\"><a href=\"#impl-CryptoType-for-CryptoBytes%3Csp_core::::bandersnatch::Signature::%7Bconstant%230%7D,+(SignatureTag,+BandersnatchTag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CryptoType for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::bandersnatch::Signature::{constant#0}, (SignatureTag, BandersnatchTag)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pair\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pair\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Pair</a> = <a class=\"struct\" href=\"sp_application_crypto/bandersnatch/struct.Pair.html\" title=\"struct sp_application_crypto::bandersnatch::Pair\">Pair</a></h4></section></summary><div class='docblock'>The pair key type of this crypto.</div></details></div></details>","CryptoType","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoType-for-CryptoBytes%3Csp_core::::bls::ProofOfPossession::%7Bconstant%230%7D,+(SignatureTag,+(BlsTag,+T))%3E\" class=\"impl\"><a href=\"#impl-CryptoType-for-CryptoBytes%3Csp_core::::bls::ProofOfPossession::%7Bconstant%230%7D,+(SignatureTag,+(BlsTag,+T))%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; CryptoType for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::bls::ProofOfPossession::{constant#0}, (SignatureTag, (BlsTag, T))&gt;<div class=\"where\">where\n    T: BlsBound,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pair\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pair\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Pair</a> = <a class=\"struct\" href=\"sp_application_crypto/bls381/struct.BLS_Pair.html\" title=\"struct sp_application_crypto::bls381::BLS_Pair\">Pair</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The pair key type of this crypto.</div></details></div></details>","CryptoType","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoType-for-CryptoBytes%3Csp_core::::bls::Public::%7Bconstant%230%7D,+(PublicTag,+(BlsTag,+T))%3E\" class=\"impl\"><a href=\"#impl-CryptoType-for-CryptoBytes%3Csp_core::::bls::Public::%7Bconstant%230%7D,+(PublicTag,+(BlsTag,+T))%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; CryptoType for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::bls::Public::{constant#0}, (PublicTag, (BlsTag, T))&gt;<div class=\"where\">where\n    T: BlsBound,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pair\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pair\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Pair</a> = <a class=\"struct\" href=\"sp_application_crypto/bls381/struct.BLS_Pair.html\" title=\"struct sp_application_crypto::bls381::BLS_Pair\">Pair</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The pair key type of this crypto.</div></details></div></details>","CryptoType","sp_application_crypto::bls381::Public"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoType-for-CryptoBytes%3Csp_core::::bls::Signature::%7Bconstant%230%7D,+(SignatureTag,+(BlsTag,+T))%3E\" class=\"impl\"><a href=\"#impl-CryptoType-for-CryptoBytes%3Csp_core::::bls::Signature::%7Bconstant%230%7D,+(SignatureTag,+(BlsTag,+T))%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; CryptoType for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::bls::Signature::{constant#0}, (SignatureTag, (BlsTag, T))&gt;<div class=\"where\">where\n    T: BlsBound,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pair\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pair\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Pair</a> = <a class=\"struct\" href=\"sp_application_crypto/bls381/struct.BLS_Pair.html\" title=\"struct sp_application_crypto::bls381::BLS_Pair\">Pair</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The pair key type of this crypto.</div></details></div></details>","CryptoType","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoType-for-CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+EcdsaKeccakTag)%3E\" class=\"impl\"><a href=\"#impl-CryptoType-for-CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+EcdsaKeccakTag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CryptoType for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaKeccakTag)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pair\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pair\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Pair</a> = GenericPair&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaKeccakTag)&gt;&gt;</h4></section></summary><div class='docblock'>The pair key type of this crypto.</div></details></div></details>","CryptoType","sp_application_crypto::ecdsa::KeccakPublic"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoType-for-CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+EcdsaTag)%3E\" class=\"impl\"><a href=\"#impl-CryptoType-for-CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+EcdsaTag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CryptoType for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaTag)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pair\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pair\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Pair</a> = GenericPair&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaTag)&gt;&gt;</h4></section></summary><div class='docblock'>The pair key type of this crypto.</div></details></div></details>","CryptoType","sp_application_crypto::ecdsa::Public"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoType-for-CryptoBytes%3Csp_core::::ecdsa::GenericSignature::%7Bconstant%230%7D,+(SignatureTag,+CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+EcdsaKeccakTag)%3E)%3E\" class=\"impl\"><a href=\"#impl-CryptoType-for-CryptoBytes%3Csp_core::::ecdsa::GenericSignature::%7Bconstant%230%7D,+(SignatureTag,+CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+EcdsaKeccakTag)%3E)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CryptoType for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericSignature::{constant#0}, (SignatureTag, <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaKeccakTag)&gt;)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pair\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pair\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Pair</a> = GenericPair&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaKeccakTag)&gt;&gt;</h4></section></summary><div class='docblock'>The pair key type of this crypto.</div></details></div></details>","CryptoType","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ed25519::SignatureBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoType-for-CryptoBytes%3Csp_core::::ecdsa::GenericSignature::%7Bconstant%230%7D,+(SignatureTag,+CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+EcdsaTag)%3E)%3E\" class=\"impl\"><a href=\"#impl-CryptoType-for-CryptoBytes%3Csp_core::::ecdsa::GenericSignature::%7Bconstant%230%7D,+(SignatureTag,+CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+EcdsaTag)%3E)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CryptoType for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericSignature::{constant#0}, (SignatureTag, <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaTag)&gt;)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pair\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pair\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Pair</a> = GenericPair&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaTag)&gt;&gt;</h4></section></summary><div class='docblock'>The pair key type of this crypto.</div></details></div></details>","CryptoType","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoType-for-CryptoBytes%3Csp_core::::ed25519::Public::%7Bconstant%230%7D,+(PublicTag,+Ed25519Tag)%3E\" class=\"impl\"><a href=\"#impl-CryptoType-for-CryptoBytes%3Csp_core::::ed25519::Public::%7Bconstant%230%7D,+(PublicTag,+Ed25519Tag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CryptoType for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ed25519::Public::{constant#0}, (PublicTag, Ed25519Tag)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pair\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pair\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Pair</a> = <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.Pair.html\" title=\"struct sp_application_crypto::ed25519::Pair\">Pair</a></h4></section></summary><div class='docblock'>The pair key type of this crypto.</div></details></div></details>","CryptoType","sp_application_crypto::ed25519::Public"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoType-for-CryptoBytes%3Csp_core::::ed25519::Signature::%7Bconstant%230%7D,+(SignatureTag,+Ed25519Tag)%3E\" class=\"impl\"><a href=\"#impl-CryptoType-for-CryptoBytes%3Csp_core::::ed25519::Signature::%7Bconstant%230%7D,+(SignatureTag,+Ed25519Tag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CryptoType for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ed25519::Signature::{constant#0}, (SignatureTag, Ed25519Tag)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pair\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pair\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Pair</a> = <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.Pair.html\" title=\"struct sp_application_crypto::ed25519::Pair\">Pair</a></h4></section></summary><div class='docblock'>The pair key type of this crypto.</div></details></div></details>","CryptoType","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoType-for-CryptoBytes%3Csp_core::::paired_crypto::ecdsa_bls377::ProofOfPossession::%7Bconstant%230%7D,+(SignatureTag,+(PairedCryptoTag,+EcdsaBls377Tag))%3E\" class=\"impl\"><a href=\"#impl-CryptoType-for-CryptoBytes%3Csp_core::::paired_crypto::ecdsa_bls377::ProofOfPossession::%7Bconstant%230%7D,+(SignatureTag,+(PairedCryptoTag,+EcdsaBls377Tag))%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CryptoType for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::paired_crypto::ecdsa_bls377::ProofOfPossession::{constant#0}, (SignatureTag, (PairedCryptoTag, EcdsaBls377Tag))&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pair\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pair\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Pair</a> = Pair&lt;GenericPair&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaTag)&gt;&gt;, <a class=\"struct\" href=\"sp_application_crypto/bls381/struct.BLS_Pair.html\" title=\"struct sp_application_crypto::bls381::BLS_Pair\">Pair</a>&lt;TinyBLS&lt;Bls12&lt;Config&gt;, Config&gt;&gt;, sp_core::::paired_crypto::ecdsa_bls377::Pair::{constant#0}, sp_core::::paired_crypto::ecdsa_bls377::Pair::{constant#1}, sp_core::::paired_crypto::ecdsa_bls377::Pair::{constant#2}, EcdsaBls377Tag&gt;</h4></section></summary><div class='docblock'>The pair key type of this crypto.</div></details></div></details>","CryptoType","sp_application_crypto::ed25519::SignatureBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoType-for-CryptoBytes%3Csp_core::::paired_crypto::ecdsa_bls377::Signature::%7Bconstant%230%7D,+(SignatureTag,+(PairedCryptoTag,+EcdsaBls377Tag))%3E\" class=\"impl\"><a href=\"#impl-CryptoType-for-CryptoBytes%3Csp_core::::paired_crypto::ecdsa_bls377::Signature::%7Bconstant%230%7D,+(SignatureTag,+(PairedCryptoTag,+EcdsaBls377Tag))%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CryptoType for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::paired_crypto::ecdsa_bls377::Signature::{constant#0}, (SignatureTag, (PairedCryptoTag, EcdsaBls377Tag))&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pair\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pair\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Pair</a> = Pair&lt;GenericPair&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaTag)&gt;&gt;, <a class=\"struct\" href=\"sp_application_crypto/bls381/struct.BLS_Pair.html\" title=\"struct sp_application_crypto::bls381::BLS_Pair\">Pair</a>&lt;TinyBLS&lt;Bls12&lt;Config&gt;, Config&gt;&gt;, sp_core::::paired_crypto::ecdsa_bls377::Pair::{constant#0}, sp_core::::paired_crypto::ecdsa_bls377::Pair::{constant#1}, sp_core::::paired_crypto::ecdsa_bls377::Pair::{constant#2}, EcdsaBls377Tag&gt;</h4></section></summary><div class='docblock'>The pair key type of this crypto.</div></details></div></details>","CryptoType","sp_application_crypto::ed25519::SignatureBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoType-for-CryptoBytes%3Csp_core::::paired_crypto::ecdsa_bls381::ProofOfPossession::%7Bconstant%230%7D,+(SignatureTag,+(PairedCryptoTag,+EcdsaBls381Tag))%3E\" class=\"impl\"><a href=\"#impl-CryptoType-for-CryptoBytes%3Csp_core::::paired_crypto::ecdsa_bls381::ProofOfPossession::%7Bconstant%230%7D,+(SignatureTag,+(PairedCryptoTag,+EcdsaBls381Tag))%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CryptoType for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::paired_crypto::ecdsa_bls381::ProofOfPossession::{constant#0}, (SignatureTag, (PairedCryptoTag, EcdsaBls381Tag))&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pair\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pair\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Pair</a> = Pair&lt;GenericPair&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaTag)&gt;&gt;, <a class=\"struct\" href=\"sp_application_crypto/bls381/struct.BLS_Pair.html\" title=\"struct sp_application_crypto::bls381::BLS_Pair\">Pair</a>&lt;TinyBLS&lt;Bls12&lt;Config&gt;, Config&gt;&gt;, sp_core::::paired_crypto::ecdsa_bls381::Pair::{constant#0}, sp_core::::paired_crypto::ecdsa_bls381::Pair::{constant#1}, sp_core::::paired_crypto::ecdsa_bls381::Pair::{constant#2}, EcdsaBls381Tag&gt;</h4></section></summary><div class='docblock'>The pair key type of this crypto.</div></details></div></details>","CryptoType","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoType-for-CryptoBytes%3Csp_core::::paired_crypto::ecdsa_bls381::Public::%7Bconstant%230%7D,+(PublicTag,+(PairedCryptoTag,+EcdsaBls381Tag))%3E\" class=\"impl\"><a href=\"#impl-CryptoType-for-CryptoBytes%3Csp_core::::paired_crypto::ecdsa_bls381::Public::%7Bconstant%230%7D,+(PublicTag,+(PairedCryptoTag,+EcdsaBls381Tag))%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CryptoType for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::paired_crypto::ecdsa_bls381::Public::{constant#0}, (PublicTag, (PairedCryptoTag, EcdsaBls381Tag))&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pair\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pair\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Pair</a> = Pair&lt;GenericPair&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaTag)&gt;&gt;, <a class=\"struct\" href=\"sp_application_crypto/bls381/struct.BLS_Pair.html\" title=\"struct sp_application_crypto::bls381::BLS_Pair\">Pair</a>&lt;TinyBLS&lt;Bls12&lt;Config&gt;, Config&gt;&gt;, sp_core::::paired_crypto::ecdsa_bls381::Pair::{constant#0}, sp_core::::paired_crypto::ecdsa_bls381::Pair::{constant#1}, sp_core::::paired_crypto::ecdsa_bls381::Pair::{constant#2}, EcdsaBls381Tag&gt;</h4></section></summary><div class='docblock'>The pair key type of this crypto.</div></details></div></details>","CryptoType","sp_application_crypto::ecdsa_bls381::Public"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoType-for-CryptoBytes%3Csp_core::::paired_crypto::ecdsa_bls381::Signature::%7Bconstant%230%7D,+(SignatureTag,+(PairedCryptoTag,+EcdsaBls381Tag))%3E\" class=\"impl\"><a href=\"#impl-CryptoType-for-CryptoBytes%3Csp_core::::paired_crypto::ecdsa_bls381::Signature::%7Bconstant%230%7D,+(SignatureTag,+(PairedCryptoTag,+EcdsaBls381Tag))%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CryptoType for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::paired_crypto::ecdsa_bls381::Signature::{constant#0}, (SignatureTag, (PairedCryptoTag, EcdsaBls381Tag))&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pair\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pair\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Pair</a> = Pair&lt;GenericPair&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaTag)&gt;&gt;, <a class=\"struct\" href=\"sp_application_crypto/bls381/struct.BLS_Pair.html\" title=\"struct sp_application_crypto::bls381::BLS_Pair\">Pair</a>&lt;TinyBLS&lt;Bls12&lt;Config&gt;, Config&gt;&gt;, sp_core::::paired_crypto::ecdsa_bls381::Pair::{constant#0}, sp_core::::paired_crypto::ecdsa_bls381::Pair::{constant#1}, sp_core::::paired_crypto::ecdsa_bls381::Pair::{constant#2}, EcdsaBls381Tag&gt;</h4></section></summary><div class='docblock'>The pair key type of this crypto.</div></details></div></details>","CryptoType","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CryptoType-for-CryptoBytes%3Csp_core::::sr25519::Signature::%7Bconstant%230%7D,+(SignatureTag,+Sr25519Tag)%3E\" class=\"impl\"><a href=\"#impl-CryptoType-for-CryptoBytes%3Csp_core::::sr25519::Signature::%7Bconstant%230%7D,+(SignatureTag,+Sr25519Tag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CryptoType for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::sr25519::Signature::{constant#0}, (SignatureTag, Sr25519Tag)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pair\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pair\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Pair</a> = <a class=\"struct\" href=\"sp_application_crypto/sr25519/struct.Pair.html\" title=\"struct sp_application_crypto::sr25519::Pair\">Pair</a></h4></section></summary><div class='docblock'>The pair key type of this crypto.</div></details></div></details>","CryptoType","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-CryptoBytes%3CN,+(PublicTag,+SubTag)%3E\" class=\"impl\"><a href=\"#impl-Debug-for-CryptoBytes%3CN,+(PublicTag,+SubTag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, SubTag&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (PublicTag, SubTag)&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (PublicTag, SubTag)&gt;: CryptoType,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bls381::Public","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ed25519::Public"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-CryptoBytes%3CN,+(SignatureTag,+SubTag)%3E\" class=\"impl\"><a href=\"#impl-Debug-for-CryptoBytes%3CN,+(SignatureTag,+SubTag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, SubTag&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (SignatureTag, SubTag)&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (SignatureTag, SubTag)&gt;: CryptoType,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-Decode-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; Decode for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.fn.html\">fn</a>() -&gt; T&gt;: Decode,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;__CodecInputEdqy&gt;(\n    __codec_input_edqy: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut __CodecInputEdqy</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;, Error&gt;<div class=\"where\">where\n    __CodecInputEdqy: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;__CodecInputEdqy&gt;(\n    __codec_input_edqy: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut __CodecInputEdqy</a>,\n    dst_: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.88.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<div class=\"where\">where\n    __CodecInputEdqy: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-Default-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-Deref-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.88.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Derive-for-CryptoBytes%3CN,+(PublicTag,+SubTag)%3E\" class=\"impl\"><a href=\"#impl-Derive-for-CryptoBytes%3CN,+(PublicTag,+SubTag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, SubTag&gt; Derive for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (PublicTag, SubTag)&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (PublicTag, SubTag)&gt;: CryptoType,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.derive\" class=\"method trait-impl\"><a href=\"#method.derive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">derive</a>&lt;Iter&gt;(&amp;self, _path: Iter) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Iter: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"sp_application_crypto/enum.DeriveJunction.html\" title=\"enum sp_application_crypto::DeriveJunction\">DeriveJunction</a>&gt;,</div></h4></section></summary><div class='docblock'>Derive a child key from a series of given junctions. <a>Read more</a></div></details></div></details>","Derive","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bls381::Public","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ed25519::Public"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-CryptoBytes%3CN,+(PublicTag,+SubTag)%3E\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-CryptoBytes%3CN,+(PublicTag,+SubTag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, SubTag&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (PublicTag, SubTag)&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (PublicTag, SubTag)&gt;: CryptoType,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (PublicTag, SubTag)&gt;, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bls381::Public","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ed25519::Public"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-CryptoBytes%3CN,+(SignatureTag,+SubTag)%3E\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-CryptoBytes%3CN,+(SignatureTag,+SubTag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, SubTag&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (SignatureTag, SubTag)&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (SignatureTag, SubTag)&gt;: CryptoType,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (SignatureTag, SubTag)&gt;, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-CryptoBytes%3CN,+(PublicTag,+SubTag)%3E\" class=\"impl\"><a href=\"#impl-Display-for-CryptoBytes%3CN,+(PublicTag,+SubTag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, SubTag&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (PublicTag, SubTag)&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (PublicTag, SubTag)&gt;: CryptoType,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bls381::Public","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ed25519::Public"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-Encode-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; Encode for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.fn.html\">fn</a>() -&gt; T&gt;: Encode,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;__CodecOutputEdqy&gt;(\n    &amp;self,\n    __codec_dest_edqy: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut __CodecOutputEdqy</a>,\n)<div class=\"where\">where\n    __CodecOutputEdqy: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</div></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+N%5D%3E-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+N%5D%3E-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">N</a>]) -&gt; <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[u8; N]>","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPair%3CLeftPair,+RightPair,+LEFT_PLUS_RIGHT_PUBLIC_LEN,+SIGNATURE_LEN,+POP_LEN,+SubTag%3E%3E-for-CryptoBytes%3CLEFT_PLUS_RIGHT_PUBLIC_LEN,+(PublicTag,+(PairedCryptoTag,+SubTag))%3E\" class=\"impl\"><a href=\"#impl-From%3CPair%3CLeftPair,+RightPair,+LEFT_PLUS_RIGHT_PUBLIC_LEN,+SIGNATURE_LEN,+POP_LEN,+SubTag%3E%3E-for-CryptoBytes%3CLEFT_PLUS_RIGHT_PUBLIC_LEN,+(PublicTag,+(PairedCryptoTag,+SubTag))%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;LeftPair, RightPair, const LEFT_PLUS_RIGHT_PUBLIC_LEN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, const SIGNATURE_LEN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, const POP_LEN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, SubTag&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Pair&lt;LeftPair, RightPair, LEFT_PLUS_RIGHT_PUBLIC_LEN, SIGNATURE_LEN, POP_LEN, SubTag&gt;&gt; for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;LEFT_PLUS_RIGHT_PUBLIC_LEN, (PublicTag, (PairedCryptoTag, SubTag))&gt;<div class=\"where\">where\n    LeftPair: Pair,\n    RightPair: Pair,\n    SubTag: PairedCryptoSubTagBound,\n    Pair&lt;LeftPair, RightPair, LEFT_PLUS_RIGHT_PUBLIC_LEN, SIGNATURE_LEN, POP_LEN, SubTag&gt;: Pair&lt;Public = <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;LEFT_PLUS_RIGHT_PUBLIC_LEN, (PublicTag, (PairedCryptoTag, SubTag))&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    x: Pair&lt;LeftPair, RightPair, LEFT_PLUS_RIGHT_PUBLIC_LEN, SIGNATURE_LEN, POP_LEN, SubTag&gt;,\n) -&gt; <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;LEFT_PLUS_RIGHT_PUBLIC_LEN, (PublicTag, (PairedCryptoTag, SubTag))&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Pair<LeftPair, RightPair, LEFT_PLUS_RIGHT_PUBLIC_LEN, SIGNATURE_LEN, POP_LEN, SubTag>>","sp_application_crypto::ecdsa_bls381::Public"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublicKey%3E-for-CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+TAG)%3E\" class=\"impl\"><a href=\"#impl-From%3CPublicKey%3E-for-CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+TAG)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TAG&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PublicKey&gt; for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, TAG)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    pubkey: PublicKey,\n) -&gt; <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, TAG)&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PublicKey>","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bls381::Public","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ed25519::Public"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRecoverableSignature%3E-for-CryptoBytes%3Csp_core::::ecdsa::GenericSignature::%7Bconstant%230%7D,+(SignatureTag,+PUBLIC)%3E\" class=\"impl\"><a href=\"#impl-From%3CRecoverableSignature%3E-for-CryptoBytes%3Csp_core::::ecdsa::GenericSignature::%7Bconstant%230%7D,+(SignatureTag,+PUBLIC)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PUBLIC&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RecoverableSignature&gt; for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericSignature::{constant#0}, (SignatureTag, PUBLIC)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    recsig: RecoverableSignature,\n) -&gt; <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericSignature::{constant#0}, (SignatureTag, PUBLIC)&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RecoverableSignature>","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSignature%3E-for-CryptoBytes%3Csp_core::::sr25519::Signature::%7Bconstant%230%7D,+(SignatureTag,+Sr25519Tag)%3E\" class=\"impl\"><a href=\"#impl-From%3CSignature%3E-for-CryptoBytes%3Csp_core::::sr25519::Signature::%7Bconstant%230%7D,+(SignatureTag,+Sr25519Tag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Signature&gt; for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::sr25519::Signature::{constant#0}, (SignatureTag, Sr25519Tag)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    s: Signature,\n) -&gt; <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::sr25519::Signature::{constant#0}, (SignatureTag, Sr25519Tag)&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Signature>","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromEntropy-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-FromEntropy-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; FromEntropy for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_entropy\" class=\"method trait-impl\"><a href=\"#method.from_entropy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_entropy</a>(input: &amp;mut impl Input) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;, Error&gt;</h4></section></summary><div class='docblock'>Create a random value of <code>Self</code> given a stream of random bytes on <code>input</code>. May only fail if\n<code>input</code> has an error.</div></details></div></details>","FromEntropy","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-CryptoBytes%3CN,+(PublicTag,+SubTag)%3E\" class=\"impl\"><a href=\"#impl-FromStr-for-CryptoBytes%3CN,+(PublicTag,+SubTag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, SubTag&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (PublicTag, SubTag)&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (PublicTag, SubTag)&gt;: CryptoType,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.88.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = PublicError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(\n    s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (PublicTag, SubTag)&gt;, &lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (PublicTag, SubTag)&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.88.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.88.0/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bls381::Public","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ed25519::Public"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-Hash-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; MaxEncodedLen for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.fn.html\">fn</a>() -&gt; T&gt;: MaxEncodedLen,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-Ord-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/cmp.rs.html#1009-1011\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/cmp.rs.html#1048-1050\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/cmp.rs.html#1074-1076\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5Bu8;+33%5D%3E-for-CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+TAG)%3E\" class=\"impl\"><a href=\"#impl-PartialEq%3C%5Bu8;+33%5D%3E-for-CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+TAG)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TAG&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">33</a>]&gt; for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, TAG)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">33</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<[u8; 33]>","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bls381::Public","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ed25519::Public"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-PartialOrd-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/cmp.rs.html#1382\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/cmp.rs.html#1400\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/cmp.rs.html#1418\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/cmp.rs.html#1436\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Recover-for-CryptoBytes%3Csp_core::::ecdsa::GenericSignature::%7Bconstant%230%7D,+(SignatureTag,+CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+EcdsaKeccakTag)%3E)%3E\" class=\"impl\"><a href=\"#impl-Recover-for-CryptoBytes%3Csp_core::::ecdsa::GenericSignature::%7Bconstant%230%7D,+(SignatureTag,+CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+EcdsaKeccakTag)%3E)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_application_crypto/ecdsa/trait.Recover.html\" title=\"trait sp_application_crypto::ecdsa::Recover\">Recover</a> for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericSignature::{constant#0}, (SignatureTag, <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaKeccakTag)&gt;)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Public\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Public\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_application_crypto/ecdsa/trait.Recover.html#associatedtype.Public\" class=\"associatedtype\">Public</a> = <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaKeccakTag)&gt;</h4></section></summary><div class='docblock'>The public key that will be recovered from the signature.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recover_prehashed\" class=\"method trait-impl\"><a href=\"#method.recover_prehashed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_application_crypto/ecdsa/trait.Recover.html#tymethod.recover_prehashed\" class=\"fn\">recover_prehashed</a>(\n    &amp;self,\n    message: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">32</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericSignature::{constant#0}, (SignatureTag, <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaKeccakTag)&gt;)&gt; as <a class=\"trait\" href=\"sp_application_crypto/ecdsa/trait.Recover.html\" title=\"trait sp_application_crypto::ecdsa::Recover\">Recover</a>&gt;::<a class=\"associatedtype\" href=\"sp_application_crypto/ecdsa/trait.Recover.html#associatedtype.Public\" title=\"type sp_application_crypto::ecdsa::Recover::Public\">Public</a>&gt;</h4></section></summary><div class='docblock'>Recover the public key from this signature and a pre-hashed message.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recover\" class=\"method trait-impl\"><a href=\"#method.recover\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_application_crypto/ecdsa/trait.Recover.html#tymethod.recover\" class=\"fn\">recover</a>&lt;M&gt;(\n    &amp;self,\n    message: M,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericSignature::{constant#0}, (SignatureTag, <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaKeccakTag)&gt;)&gt; as <a class=\"trait\" href=\"sp_application_crypto/ecdsa/trait.Recover.html\" title=\"trait sp_application_crypto::ecdsa::Recover\">Recover</a>&gt;::<a class=\"associatedtype\" href=\"sp_application_crypto/ecdsa/trait.Recover.html#associatedtype.Public\" title=\"type sp_application_crypto::ecdsa::Recover::Public\">Public</a>&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class='docblock'>Recover the public key from this signature and a message.</div></details></div></details>","Recover","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ed25519::SignatureBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Recover-for-CryptoBytes%3Csp_core::::ecdsa::GenericSignature::%7Bconstant%230%7D,+(SignatureTag,+CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+EcdsaTag)%3E)%3E\" class=\"impl\"><a href=\"#impl-Recover-for-CryptoBytes%3Csp_core::::ecdsa::GenericSignature::%7Bconstant%230%7D,+(SignatureTag,+CryptoBytes%3Csp_core::::ecdsa::GenericPublic::%7Bconstant%230%7D,+(PublicTag,+EcdsaTag)%3E)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_application_crypto/ecdsa/trait.Recover.html\" title=\"trait sp_application_crypto::ecdsa::Recover\">Recover</a> for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericSignature::{constant#0}, (SignatureTag, <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaTag)&gt;)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Public\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Public\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_application_crypto/ecdsa/trait.Recover.html#associatedtype.Public\" class=\"associatedtype\">Public</a> = <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaTag)&gt;</h4></section></summary><div class='docblock'>The public key that will be recovered from the signature.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recover_prehashed\" class=\"method trait-impl\"><a href=\"#method.recover_prehashed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_application_crypto/ecdsa/trait.Recover.html#tymethod.recover_prehashed\" class=\"fn\">recover_prehashed</a>(\n    &amp;self,\n    message: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">32</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericSignature::{constant#0}, (SignatureTag, <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaTag)&gt;)&gt; as <a class=\"trait\" href=\"sp_application_crypto/ecdsa/trait.Recover.html\" title=\"trait sp_application_crypto::ecdsa::Recover\">Recover</a>&gt;::<a class=\"associatedtype\" href=\"sp_application_crypto/ecdsa/trait.Recover.html#associatedtype.Public\" title=\"type sp_application_crypto::ecdsa::Recover::Public\">Public</a>&gt;</h4></section></summary><div class='docblock'>Recover the public key from this signature and a pre-hashed message.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recover\" class=\"method trait-impl\"><a href=\"#method.recover\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_application_crypto/ecdsa/trait.Recover.html#tymethod.recover\" class=\"fn\">recover</a>&lt;M&gt;(\n    &amp;self,\n    message: M,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericSignature::{constant#0}, (SignatureTag, <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::ecdsa::GenericPublic::{constant#0}, (PublicTag, EcdsaTag)&gt;)&gt; as <a class=\"trait\" href=\"sp_application_crypto/ecdsa/trait.Recover.html\" title=\"trait sp_application_crypto::ecdsa::Recover\">Recover</a>&gt;::<a class=\"associatedtype\" href=\"sp_application_crypto/ecdsa/trait.Recover.html#associatedtype.Public\" title=\"type sp_application_crypto::ecdsa::Recover::Public\">Public</a>&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class='docblock'>Recover the public key from this signature and a message.</div></details></div></details>","Recover","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-CryptoBytes%3CN,+(PublicTag,+SubTag)%3E\" class=\"impl\"><a href=\"#impl-Serialize-for-CryptoBytes%3CN,+(PublicTag,+SubTag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, SubTag&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (PublicTag, SubTag)&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (PublicTag, SubTag)&gt;: CryptoType,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bls381::Public","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ed25519::Public"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-CryptoBytes%3CN,+(SignatureTag,+SubTag)%3E\" class=\"impl\"><a href=\"#impl-Serialize-for-CryptoBytes%3CN,+(SignatureTag,+SubTag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, SubTag&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (SignatureTag, SubTag)&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (SignatureTag, SubTag)&gt;: CryptoType,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5Bu8%5D%3E-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26%5Bu8%5D%3E-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;, &lt;<a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&[u8]>","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-TypeInfo-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; TypeInfo for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">N</a>]</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UncheckedFrom%3C%5Bu8;+N%5D%3E-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-UncheckedFrom%3C%5Bu8;+N%5D%3E-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; UncheckedFrom&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_from\" class=\"method trait-impl\"><a href=\"#method.unchecked_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">unchecked_from</a>(data: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">N</a>]) -&gt; <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h4></section></summary><div class='docblock'>Convert from an instance of <code>T</code> to Self. This is not guaranteed to be\nwhatever counts as a valid instance of <code>T</code> and it’s up to the caller to\nensure that it makes sense.</div></details></div></details>","UncheckedFrom<[u8; N]>","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UncheckedFrom%3CH256%3E-for-CryptoBytes%3C32,+T%3E\" class=\"impl\"><a href=\"#impl-UncheckedFrom%3CH256%3E-for-CryptoBytes%3C32,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; UncheckedFrom&lt;H256&gt; for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;32, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_from\" class=\"method trait-impl\"><a href=\"#method.unchecked_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">unchecked_from</a>(x: H256) -&gt; <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;32, T&gt;</h4></section></summary><div class='docblock'>Convert from an instance of <code>T</code> to Self. This is not guaranteed to be\nwhatever counts as a valid instance of <code>T</code> and it’s up to the caller to\nensure that it makes sense.</div></details></div></details>","UncheckedFrom<H256>","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VrfCrypto-for-CryptoBytes%3Csp_core::::bandersnatch::Public::%7Bconstant%230%7D,+(PublicTag,+BandersnatchTag)%3E\" class=\"impl\"><a href=\"#impl-VrfCrypto-for-CryptoBytes%3Csp_core::::bandersnatch::Public::%7Bconstant%230%7D,+(PublicTag,+BandersnatchTag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl VrfCrypto for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::bandersnatch::Public::{constant#0}, (PublicTag, BandersnatchTag)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.VrfInput\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.VrfInput\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">VrfInput</a> = <a class=\"struct\" href=\"sp_application_crypto/bandersnatch/vrf/struct.VrfInput.html\" title=\"struct sp_application_crypto::bandersnatch::vrf::VrfInput\">VrfInput</a></h4></section></summary><div class='docblock'>VRF input.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.VrfPreOutput\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.VrfPreOutput\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">VrfPreOutput</a> = <a class=\"struct\" href=\"sp_application_crypto/bandersnatch/vrf/struct.VrfPreOutput.html\" title=\"struct sp_application_crypto::bandersnatch::vrf::VrfPreOutput\">VrfPreOutput</a></h4></section></summary><div class='docblock'>VRF pre-output.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.VrfSignData\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.VrfSignData\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">VrfSignData</a> = <a class=\"struct\" href=\"sp_application_crypto/bandersnatch/vrf/struct.VrfSignData.html\" title=\"struct sp_application_crypto::bandersnatch::vrf::VrfSignData\">VrfSignData</a></h4></section></summary><div class='docblock'>VRF signing data.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.VrfSignature\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.VrfSignature\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">VrfSignature</a> = <a class=\"struct\" href=\"sp_application_crypto/bandersnatch/vrf/struct.VrfSignature.html\" title=\"struct sp_application_crypto::bandersnatch::vrf::VrfSignature\">VrfSignature</a></h4></section></summary><div class='docblock'>VRF signature.</div></details></div></details>","VrfCrypto","sp_application_crypto::bandersnatch::Public"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VrfPublic-for-CryptoBytes%3Csp_core::::bandersnatch::Public::%7Bconstant%230%7D,+(PublicTag,+BandersnatchTag)%3E\" class=\"impl\"><a href=\"#impl-VrfPublic-for-CryptoBytes%3Csp_core::::bandersnatch::Public::%7Bconstant%230%7D,+(PublicTag,+BandersnatchTag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl VrfPublic for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;sp_core::::bandersnatch::Public::{constant#0}, (PublicTag, BandersnatchTag)&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.vrf_verify\" class=\"method trait-impl\"><a href=\"#method.vrf_verify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">vrf_verify</a>(&amp;self, data: &amp;<a class=\"struct\" href=\"sp_application_crypto/bandersnatch/vrf/struct.VrfSignData.html\" title=\"struct sp_application_crypto::bandersnatch::vrf::VrfSignData\">VrfSignData</a>, signature: &amp;<a class=\"struct\" href=\"sp_application_crypto/bandersnatch/vrf/struct.VrfSignature.html\" title=\"struct sp_application_crypto::bandersnatch::vrf::VrfSignature\">VrfSignature</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Verify input data signature.</div></details></div></details>","VrfPublic","sp_application_crypto::bandersnatch::Public"],["<section id=\"impl-Copy-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-Copy-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section>","Copy","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<section id=\"impl-DecodeWithMemTracking-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-DecodeWithMemTracking-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; DecodeWithMemTracking for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.fn.html\">fn</a>() -&gt; T&gt;: DecodeWithMemTracking,</div></h3></section>","DecodeWithMemTracking","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<section id=\"impl-EncodeLike-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-EncodeLike-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; EncodeLike for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.fn.html\">fn</a>() -&gt; T&gt;: Encode,</div></h3></section>","EncodeLike","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<section id=\"impl-Eq-for-CryptoBytes%3CN,+T%3E\" class=\"impl\"><a href=\"#impl-Eq-for-CryptoBytes%3CN,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, T&gt;</h3></section>","Eq","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Public","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Public","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Public","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"],["<section id=\"impl-Public-for-CryptoBytes%3CN,+(PublicTag,+SubTag)%3E\" class=\"impl\"><a href=\"#impl-Public-for-CryptoBytes%3CN,+(PublicTag,+SubTag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, SubTag&gt; Public for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (PublicTag, SubTag)&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (PublicTag, SubTag)&gt;: CryptoType,</div></h3></section>","Public","sp_application_crypto::bandersnatch::Public","sp_application_crypto::bls381::Public","sp_application_crypto::ecdsa::Public","sp_application_crypto::ecdsa::KeccakPublic","sp_application_crypto::ecdsa_bls381::Public","sp_application_crypto::ed25519::Public"],["<section id=\"impl-Signature-for-CryptoBytes%3CN,+(SignatureTag,+SubTag)%3E\" class=\"impl\"><a href=\"#impl-Signature-for-CryptoBytes%3CN,+(SignatureTag,+SubTag)%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, SubTag&gt; Signature for <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (SignatureTag, SubTag)&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"sp_application_crypto/ed25519/struct.CryptoBytes.html\" title=\"struct sp_application_crypto::ed25519::CryptoBytes\">CryptoBytes</a>&lt;N, (SignatureTag, SubTag)&gt;: CryptoType,</div></h3></section>","Signature","sp_application_crypto::bandersnatch::Signature","sp_application_crypto::bandersnatch::ProofOfPossession","sp_application_crypto::bls381::BLSPoP","sp_application_crypto::bls381::Signature","sp_application_crypto::bls381::ProofOfPossession","sp_application_crypto::ecdsa::Signature","sp_application_crypto::ecdsa::KeccakSignature","sp_application_crypto::ecdsa::ProofOfPossession","sp_application_crypto::ecdsa::KeccakProofOfPossession","sp_application_crypto::ecdsa_bls381::Signature","sp_application_crypto::ecdsa_bls381::ProofOfPossession","sp_application_crypto::ed25519::SignatureBytes","sp_application_crypto::ed25519::Signature","sp_application_crypto::ed25519::ProofOfPossession","sp_application_crypto::sr25519::Signature","sp_application_crypto::sr25519::ProofOfPossession"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[180523]}