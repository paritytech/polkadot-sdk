(function() {
    var type_impls = Object.fromEntries([["sc_transaction_pool",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LocalTransactionPool-for-TransactionPoolWrapper%3CBlock,+Client%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#168-190\">Source</a><a href=\"#impl-LocalTransactionPool-for-TransactionPoolWrapper%3CBlock,+Client%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Block, Client&gt; LocalTransactionPool for <a class=\"struct\" href=\"sc_transaction_pool/struct.TransactionPoolWrapper.html\" title=\"struct sc_transaction_pool::TransactionPoolWrapper\">TransactionPoolWrapper</a>&lt;Block, Client&gt;<div class=\"where\">where\n    Block: BlockT,\n    Client: ProvideRuntimeApi&lt;Block&gt; + BlockBackend&lt;Block&gt; + HeaderBackend&lt;Block&gt; + BlockIdTo&lt;Block&gt; + HeaderMetadata&lt;Block, Error = Error&gt; + 'static,\n    Client::Api: TaggedTransactionQueue&lt;Block&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Block\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#179\">Source</a><a href=\"#associatedtype.Block\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Block</a> = Block</h4></section></summary><div class='docblock'>Block type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Hash\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#180\">Source</a><a href=\"#associatedtype.Hash\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Hash</a> = &lt;&lt;<a class=\"struct\" href=\"sc_transaction_pool/struct.FullChainApi.html\" title=\"struct sc_transaction_pool::FullChainApi\">FullChainApi</a>&lt;Client, Block&gt; as <a class=\"trait\" href=\"sc_transaction_pool/trait.ChainApi.html\" title=\"trait sc_transaction_pool::ChainApi\">ChainApi</a>&gt;::<a class=\"associatedtype\" href=\"sc_transaction_pool/trait.ChainApi.html#associatedtype.Block\" title=\"type sc_transaction_pool::ChainApi::Block\">Block</a> as Block&gt;::Hash</h4></section></summary><div class='docblock'>Transaction hash type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#181\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = &lt;<a class=\"struct\" href=\"sc_transaction_pool/struct.FullChainApi.html\" title=\"struct sc_transaction_pool::FullChainApi\">FullChainApi</a>&lt;Client, Block&gt; as <a class=\"trait\" href=\"sc_transaction_pool/trait.ChainApi.html\" title=\"trait sc_transaction_pool::ChainApi\">ChainApi</a>&gt;::<a class=\"associatedtype\" href=\"sc_transaction_pool/trait.ChainApi.html#associatedtype.Error\" title=\"type sc_transaction_pool::ChainApi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.submit_local\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#183-189\">Source</a><a href=\"#method.submit_local\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">submit_local</a>(\n    &amp;self,\n    at: &lt;Self::Block as BlockT&gt;::Hash,\n    xt: LocalTransactionFor&lt;Self&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::Hash, Self::Error&gt;</h4></section></summary><div class='docblock'>Submits the given local unverified transaction to the pool blocking the\ncurrent thread for any necessary pre-verification.\nNOTE: It MUST NOT be used for transactions that originate from the\nnetwork or RPC, since the validation is performed with\n<code>TransactionSource::Local</code>.</div></details></div></details>","LocalTransactionPool","sc_transaction_pool::builder::TransactionPoolHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaintainedTransactionPool-for-TransactionPoolWrapper%3CBlock,+Client%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#152-166\">Source</a><a href=\"#impl-MaintainedTransactionPool-for-TransactionPoolWrapper%3CBlock,+Client%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Block, Client&gt; MaintainedTransactionPool for <a class=\"struct\" href=\"sc_transaction_pool/struct.TransactionPoolWrapper.html\" title=\"struct sc_transaction_pool::TransactionPoolWrapper\">TransactionPoolWrapper</a>&lt;Block, Client&gt;<div class=\"where\">where\n    Block: BlockT,\n    Client: ProvideRuntimeApi&lt;Block&gt; + BlockBackend&lt;Block&gt; + HeaderBackend&lt;Block&gt; + BlockIdTo&lt;Block&gt; + HeaderMetadata&lt;Block, Error = Error&gt; + 'static,\n    Client::Api: TaggedTransactionQueue&lt;Block&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.maintain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#163-165\">Source</a><a href=\"#method.maintain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">maintain</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    event: ChainEvent&lt;Self::Block&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    Self: 'async_trait,\n    'life0: 'async_trait,</div></h4></section></summary><div class='docblock'>Perform maintenance</div></details></div></details>","MaintainedTransactionPool","sc_transaction_pool::builder::TransactionPoolHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TransactionPool-for-TransactionPoolWrapper%3CBlock,+Client%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#53-149\">Source</a><a href=\"#impl-TransactionPool-for-TransactionPoolWrapper%3CBlock,+Client%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Block, Client&gt; TransactionPool for <a class=\"struct\" href=\"sc_transaction_pool/struct.TransactionPoolWrapper.html\" title=\"struct sc_transaction_pool::TransactionPoolWrapper\">TransactionPoolWrapper</a>&lt;Block, Client&gt;<div class=\"where\">where\n    Block: BlockT,\n    Client: ProvideRuntimeApi&lt;Block&gt; + BlockBackend&lt;Block&gt; + HeaderBackend&lt;Block&gt; + BlockIdTo&lt;Block&gt; + HeaderMetadata&lt;Block, Error = Error&gt; + 'static,\n    Client::Api: TaggedTransactionQueue&lt;Block&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Block\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#64\">Source</a><a href=\"#associatedtype.Block\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Block</a> = Block</h4></section></summary><div class='docblock'>Block type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Hash\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#65\">Source</a><a href=\"#associatedtype.Hash\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Hash</a> = &lt;&lt;<a class=\"struct\" href=\"sc_transaction_pool/struct.FullChainApi.html\" title=\"struct sc_transaction_pool::FullChainApi\">FullChainApi</a>&lt;Client, Block&gt; as <a class=\"trait\" href=\"sc_transaction_pool/trait.ChainApi.html\" title=\"trait sc_transaction_pool::ChainApi\">ChainApi</a>&gt;::<a class=\"associatedtype\" href=\"sc_transaction_pool/trait.ChainApi.html#associatedtype.Block\" title=\"type sc_transaction_pool::ChainApi::Block\">Block</a> as Block&gt;::Hash</h4></section></summary><div class='docblock'>Transaction hash type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.InPoolTransaction\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#66-69\">Source</a><a href=\"#associatedtype.InPoolTransaction\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InPoolTransaction</a> = Transaction&lt;&lt;&lt;<a class=\"struct\" href=\"sc_transaction_pool/struct.FullChainApi.html\" title=\"struct sc_transaction_pool::FullChainApi\">FullChainApi</a>&lt;Client, Block&gt; as <a class=\"trait\" href=\"sc_transaction_pool/trait.ChainApi.html\" title=\"trait sc_transaction_pool::ChainApi\">ChainApi</a>&gt;::<a class=\"associatedtype\" href=\"sc_transaction_pool/trait.ChainApi.html#associatedtype.Block\" title=\"type sc_transaction_pool::ChainApi::Block\">Block</a> as Block&gt;::Hash, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;&lt;&lt;<a class=\"struct\" href=\"sc_transaction_pool/struct.FullChainApi.html\" title=\"struct sc_transaction_pool::FullChainApi\">FullChainApi</a>&lt;Client, Block&gt; as <a class=\"trait\" href=\"sc_transaction_pool/trait.ChainApi.html\" title=\"trait sc_transaction_pool::ChainApi\">ChainApi</a>&gt;::<a class=\"associatedtype\" href=\"sc_transaction_pool/trait.ChainApi.html#associatedtype.Block\" title=\"type sc_transaction_pool::ChainApi::Block\">Block</a> as Block&gt;::Extrinsic&gt;&gt;</h4></section></summary><div class='docblock'>In-pool transaction type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#70\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = &lt;<a class=\"struct\" href=\"sc_transaction_pool/struct.FullChainApi.html\" title=\"struct sc_transaction_pool::FullChainApi\">FullChainApi</a>&lt;Client, Block&gt; as <a class=\"trait\" href=\"sc_transaction_pool/trait.ChainApi.html\" title=\"trait sc_transaction_pool::ChainApi\">ChainApi</a>&gt;::<a class=\"associatedtype\" href=\"sc_transaction_pool/trait.ChainApi.html#associatedtype.Error\" title=\"type sc_transaction_pool::ChainApi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.submit_at\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#72-79\">Source</a><a href=\"#method.submit_at\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">submit_at</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    at: &lt;Self::Block as BlockT&gt;::Hash,\n    source: TransactionSource,\n    xts: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TransactionFor&lt;Self&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;TxHash&lt;Self&gt;, Self::Error&gt;&gt;, Self::Error&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    Self: 'async_trait,\n    'life0: 'async_trait,</div></h4></section></summary><div class='docblock'>Asynchronously imports a bunch of unverified transactions to the pool.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.submit_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#81-88\">Source</a><a href=\"#method.submit_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">submit_one</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    at: &lt;Self::Block as BlockT&gt;::Hash,\n    source: TransactionSource,\n    xt: TransactionFor&lt;Self&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;TxHash&lt;Self&gt;, Self::Error&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    Self: 'async_trait,\n    'life0: 'async_trait,</div></h4></section></summary><div class='docblock'>Asynchronously imports one unverified transaction to the pool.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.submit_and_watch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#90-97\">Source</a><a href=\"#method.submit_and_watch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">submit_and_watch</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    at: &lt;Self::Block as BlockT&gt;::Hash,\n    source: TransactionSource,\n    xt: TransactionFor&lt;Self&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;TransactionStatusStreamFor&lt;Self&gt;&gt;&gt;, Self::Error&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    Self: 'async_trait,\n    'life0: 'async_trait,</div></h4></section></summary><div class='docblock'>Asynchronously imports a single transaction and starts to watch their progress in the\npool.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ready_at\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#99-104\">Source</a><a href=\"#method.ready_at\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ready_at</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    at: &lt;Self::Block as BlockT&gt;::Hash,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn ReadyTransactions&lt;Item = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Transaction&lt;&lt;&lt;<a class=\"struct\" href=\"sc_transaction_pool/struct.FullChainApi.html\" title=\"struct sc_transaction_pool::FullChainApi\">FullChainApi</a>&lt;Client, Block&gt; as <a class=\"trait\" href=\"sc_transaction_pool/trait.ChainApi.html\" title=\"trait sc_transaction_pool::ChainApi\">ChainApi</a>&gt;::<a class=\"associatedtype\" href=\"sc_transaction_pool/trait.ChainApi.html#associatedtype.Block\" title=\"type sc_transaction_pool::ChainApi::Block\">Block</a> as Block&gt;::Hash, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;&lt;&lt;<a class=\"struct\" href=\"sc_transaction_pool/struct.FullChainApi.html\" title=\"struct sc_transaction_pool::FullChainApi\">FullChainApi</a>&lt;Client, Block&gt; as <a class=\"trait\" href=\"sc_transaction_pool/trait.ChainApi.html\" title=\"trait sc_transaction_pool::ChainApi\">ChainApi</a>&gt;::<a class=\"associatedtype\" href=\"sc_transaction_pool/trait.ChainApi.html#associatedtype.Block\" title=\"type sc_transaction_pool::ChainApi::Block\">Block</a> as Block&gt;::Extrinsic&gt;&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    Self: 'async_trait,\n    'life0: 'async_trait,</div></h4></section></summary><div class='docblock'>Get an iterator for ready transactions ordered by priority. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ready\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#106-108\">Source</a><a href=\"#method.ready\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ready</a>(\n    &amp;self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn ReadyTransactions&lt;Item = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::InPoolTransaction&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;</h4></section></summary><div class='docblock'>Get an iterator for ready transactions ordered by priority.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_invalid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#110-116\">Source</a><a href=\"#method.report_invalid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">report_invalid</a>(\n    &amp;self,\n    at: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;Self::Block as BlockT&gt;::Hash&gt;,\n    invalid_tx_errors: TxInvalidityReportMap&lt;TxHash&lt;Self&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::InPoolTransaction&gt;&gt;</h4></section></summary><div class='docblock'>Reports invalid transactions to the transaction pool. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.futures\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#118-120\">Source</a><a href=\"#method.futures\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">futures</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Self::InPoolTransaction&gt;</h4></section></summary><div class='docblock'>Get futures transaction list.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.status\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#122-124\">Source</a><a href=\"#method.status\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">status</a>(&amp;self) -&gt; PoolStatus</h4></section></summary><div class='docblock'>Returns pool status.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.import_notification_stream\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#126-128\">Source</a><a href=\"#method.import_notification_stream\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">import_notification_stream</a>(&amp;self) -&gt; ImportNotificationStream&lt;TxHash&lt;Self&gt;&gt;</h4></section></summary><div class='docblock'>Return an event stream of transactions imported to the pool.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_broadcasted\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#130-132\">Source</a><a href=\"#method.on_broadcasted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_broadcasted</a>(&amp;self, propagations: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;TxHash&lt;Self&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;&gt;)</h4></section></summary><div class='docblock'>Notify the pool about transactions broadcast.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#134-136\">Source</a><a href=\"#method.hash_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_of</a>(&amp;self, xt: &amp;TransactionFor&lt;Self&gt;) -&gt; TxHash&lt;Self&gt;</h4></section></summary><div class='docblock'>Returns transaction hash</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ready_transaction\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#138-140\">Source</a><a href=\"#method.ready_transaction\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ready_transaction</a>(\n    &amp;self,\n    hash: &amp;TxHash&lt;Self&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::InPoolTransaction&gt;&gt;</h4></section></summary><div class='docblock'>Return specific ready transaction by hash, if there is one.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ready_at_with_timeout\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_transaction_pool/transaction_pool_wrapper.rs.html#142-148\">Source</a><a href=\"#method.ready_at_with_timeout\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ready_at_with_timeout</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    at: &lt;Self::Block as BlockT&gt;::Hash,\n    timeout: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn ReadyTransactions&lt;Item = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Transaction&lt;&lt;&lt;<a class=\"struct\" href=\"sc_transaction_pool/struct.FullChainApi.html\" title=\"struct sc_transaction_pool::FullChainApi\">FullChainApi</a>&lt;Client, Block&gt; as <a class=\"trait\" href=\"sc_transaction_pool/trait.ChainApi.html\" title=\"trait sc_transaction_pool::ChainApi\">ChainApi</a>&gt;::<a class=\"associatedtype\" href=\"sc_transaction_pool/trait.ChainApi.html#associatedtype.Block\" title=\"type sc_transaction_pool::ChainApi::Block\">Block</a> as Block&gt;::Hash, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;&lt;&lt;<a class=\"struct\" href=\"sc_transaction_pool/struct.FullChainApi.html\" title=\"struct sc_transaction_pool::FullChainApi\">FullChainApi</a>&lt;Client, Block&gt; as <a class=\"trait\" href=\"sc_transaction_pool/trait.ChainApi.html\" title=\"trait sc_transaction_pool::ChainApi\">ChainApi</a>&gt;::<a class=\"associatedtype\" href=\"sc_transaction_pool/trait.ChainApi.html#associatedtype.Block\" title=\"type sc_transaction_pool::ChainApi::Block\">Block</a> as Block&gt;::Extrinsic&gt;&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    Self: 'async_trait,\n    'life0: 'async_trait,</div></h4></section></summary><div class='docblock'>Asynchronously returns a set of ready transaction at given block within given timeout. <a>Read more</a></div></details></div></details>","TransactionPool","sc_transaction_pool::builder::TransactionPoolHandle"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[28735]}