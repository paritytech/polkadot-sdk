(function() {var type_impls = {
"pallet_revive_eth_rpc":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Block%3CT,+C%3E\" class=\"impl\"><a href=\"#impl-Block%3CT,+C%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, C&gt; Block&lt;T, C&gt;<div class=\"where\">where\n    T: Config,\n    C: OfflineClientT&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.reference\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reference</a>(&amp;self) -&gt; BlockRef&lt;&lt;T as Config&gt;::Hash&gt;</h4></section></summary><div class=\"docblock\"><p>Return a reference to the given block. While this reference is kept alive,\nthe backend will (if possible) endeavour to keep hold of the block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hash</a>(&amp;self) -&gt; &lt;T as Config&gt;::Hash</h4></section></summary><div class=\"docblock\"><p>Return the block hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.number\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">number</a>(&amp;self) -&gt; &lt;&lt;T as Config&gt;::Header as Header&gt;::Number</h4></section></summary><div class=\"docblock\"><p>Return the block number.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.header\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">header</a>(&amp;self) -&gt; &amp;&lt;T as Config&gt;::Header</h4></section></summary><div class=\"docblock\"><p>Return the entire block header.</p>\n</div></details></div></details>",0,"pallet_revive_eth_rpc::client::SubstrateBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Block%3CT,+C%3E\" class=\"impl\"><a href=\"#impl-Block%3CT,+C%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, C&gt; Block&lt;T, C&gt;<div class=\"where\">where\n    T: Config,\n    C: OnlineClientT&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.events\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">events</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Events&lt;T&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Return the events associated with the block, fetching them from the node if necessary.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extrinsics\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">extrinsics</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Extrinsics&lt;T, C&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Fetch and return the extrinsics in the block body.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">storage</a>(&amp;self) -&gt; Storage&lt;T, C&gt;</h4></section></summary><div class=\"docblock\"><p>Work with storage.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.runtime_api\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">runtime_api</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RuntimeApi&lt;T, C&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Execute a runtime API call at this block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.account_nonce\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">account_nonce</a>(\n    &amp;self,\n    account_id: &amp;&lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Get the account nonce for a given account ID at this block.</p>\n</div></details></div></details>",0,"pallet_revive_eth_rpc::client::SubstrateBlock"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()