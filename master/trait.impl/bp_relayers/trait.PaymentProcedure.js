(function() {
    var implementors = Object.fromEntries([["bp_relayers",[]],["bridge_hub_westend_runtime",[["impl <a class=\"trait\" href=\"bp_relayers/trait.PaymentProcedure.html\" title=\"trait bp_relayers::PaymentProcedure\">PaymentProcedure</a>&lt;&lt;&lt;<a class=\"enum\" href=\"sp_runtime/enum.MultiSignature.html\" title=\"enum sp_runtime::MultiSignature\">MultiSignature</a> as <a class=\"trait\" href=\"sp_runtime/traits/trait.Verify.html\" title=\"trait sp_runtime::traits::Verify\">Verify</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Verify.html#associatedtype.Signer\" title=\"type sp_runtime::traits::Verify::Signer\">Signer</a> as <a class=\"trait\" href=\"sp_runtime/traits/trait.IdentifyAccount.html\" title=\"trait sp_runtime::traits::IdentifyAccount\">IdentifyAccount</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.IdentifyAccount.html#associatedtype.AccountId\" title=\"type sp_runtime::traits::IdentifyAccount::AccountId\">AccountId</a>, <a class=\"enum\" href=\"bridge_hub_westend_runtime/bridge_common_config/enum.BridgeReward.html\" title=\"enum bridge_hub_westend_runtime::bridge_common_config::BridgeReward\">BridgeReward</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"bridge_hub_westend_runtime/bridge_common_config/struct.BridgeRewardPayer.html\" title=\"struct bridge_hub_westend_runtime::bridge_common_config::BridgeRewardPayer\">BridgeRewardPayer</a>"]]],["snowbridge_core",[["impl&lt;Relayer, RewardBalance, EthereumNetwork, AssetHubLocation, InboundQueueLocation, XcmSender, XcmExecutor, Call&gt; PaymentProcedure&lt;Relayer, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, RewardBalance&gt; for <a class=\"struct\" href=\"snowbridge_core/reward/struct.PayAccountOnLocation.html\" title=\"struct snowbridge_core::reward::PayAccountOnLocation\">PayAccountOnLocation</a>&lt;Relayer, RewardBalance, EthereumNetwork, AssetHubLocation, InboundQueueLocation, XcmSender, XcmExecutor, Call&gt;<div class=\"where\">where\n    Relayer: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + Decode + Encode + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + TypeInfo + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;AccountId32&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Location&gt;,\n    EthereumNetwork: Get&lt;NetworkId&gt;,\n    InboundQueueLocation: Get&lt;InteriorLocation&gt;,\n    AssetHubLocation: Get&lt;Location&gt;,\n    XcmSender: SendXcm,\n    RewardBalance: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    XcmExecutor: ExecuteXcm&lt;Call&gt;,\n    Call: Decode + GetDispatchInfo,</div>"]]],["snowbridge_test_utils",[["impl PaymentProcedure&lt;AccountId32, RewardsAccountParams&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"snowbridge_test_utils/mock_rewards/struct.MockPaymentProcedure.html\" title=\"struct snowbridge_test_utils::mock_rewards::MockPaymentProcedure\">MockPaymentProcedure</a>"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[18,1445,2005,498]}