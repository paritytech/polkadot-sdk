# Schema: Polkadot SDK PRDoc Schema (prdoc) v1.0.0
# See doc at https://raw.githubusercontent.com/paritytech/polkadot-sdk/master/prdoc/schema_user.json

title: Swap for paying delivery fees in different assets

doc:
  - audience: Runtime User
    description: |
      If the `AssetExchanger` is configured on a runtime, the XCM executor is now able to swap assets
      to pay for delivery fees.
      This was already possible for execution fees via the `SwapFirstAssetTrader`.
      A runtime where this will be possible is Asset Hub.
      That means reserve asset transfers from Parachain A to Parachain B passing through Asset Hub no
      longer need to have any DOT to pay for fees on AssetHub.
      They can have any asset in a pool with DOT on Asset Hub, for example USDT or USDC.
  - audience: Runtime Dev
    description: |
      Using the `AssetExchanger` XCM config item, the executor now swaps fees to use for delivery fees,
      if possible.
      If you want your runtime to support this, you need to configure this new item.
      Thankfully, `xcm-builder` now has a new adapter for this, which lets you use `pallet-asset-conversion`
      or any type that implements the `SwapCredit` and `QuotePrice` traits.
      It's called `SingleAssetExchangeAdapter`, you can read more about it in its rust docs.
      This item is already configured in Asset Hub.

      IMPORTANT: The executor now only takes the first asset for delivery fees. If you have configured a custom router
      that returns more than one asset for delivery fees, then only the first one will be taken into account.
      This is most likely not what you want.

crates:
  - name: staging-xcm-executor
    bump: minor
  - name: asset-hub-westend-runtime
    bump: minor
  - name: asset-hub-rococo-runtime
    bump: minor
  - name: staging-xcm-builder
    bump: patch
  - name: assets-common
    bump: patch
  - name: penpal-runtime
    bump: minor
