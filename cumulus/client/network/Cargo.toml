[package]
name = "cumulus-client-network"
version = "0.1.0"
authors.workspace = true
description = "Cumulus-specific networking protocol"
edition.workspace = true

[dependencies]
async-trait = "0.1.73"
codec = { package = "parity-scale-codec", version = "3.0.0", features = [ "derive" ] }
futures = "0.3.28"
futures-timer = "3.0.2"
parking_lot = "0.12.1"
tracing = "0.1.37"

# Substrate
sc-client-api = { path = "../../../substrate/client/api" }
sp-blockchain = { path = "../../../substrate/primitives/blockchain" }
sp-consensus = { path = "../../../substrate/primitives/consensus/common" }
sp-core = { path = "../../../substrate/primitives/core" }
sp-runtime = { path = "../../../substrate/primitives/runtime" }
sp-state-machine = { path = "../../../substrate/primitives/state-machine" }

# Polkadot
polkadot-node-primitives = { path = "../../../polkadot/node/primitives" }
polkadot-parachain-primitives = { path = "../../../polkadot/parachain" }
polkadot-primitives = { path = "../../../polkadot/primitives" }

# Cumulus
cumulus-relay-chain-interface = { path = "../relay-chain-interface" }

[dev-dependencies]
portpicker = "0.1.1"
tokio = { version = "1.32.0", features = ["macros"] }
url = "2.4.0"

# Substrate
sc-cli = { path = "../../../substrate/client/cli" }
sc-client-api = { path = "../../../substrate/client/api" }
sp-consensus = { path = "../../../substrate/primitives/consensus/common" }
sp-core = { path = "../../../substrate/primitives/core" }
sp-keyring = { path = "../../../substrate/primitives/keyring" }
sp-keystore = { path = "../../../substrate/primitives/keystore" }
substrate-test-utils = { path = "../../../substrate/test-utils" }

# Polkadot
polkadot-test-client = { path = "../../../polkadot/node/test/client" }

# Cumulus
cumulus-primitives-core = { path = "../../primitives/core" }
cumulus-relay-chain-inprocess-interface = { path = "../relay-chain-inprocess-interface" }
cumulus-test-service = { path = "../../test/service" }
