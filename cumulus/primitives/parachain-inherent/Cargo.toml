[package]
name = "cumulus-primitives-parachain-inherent"
version = "0.1.0"
authors.workspace = true
edition.workspace = true

[dependencies]
async-trait = { version = "0.1.73", optional = true }
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = [ "derive" ] }
scale-info = { version = "2.9.0", default-features = false, features = ["derive"] }
tracing = { version = "0.1.37", optional = true }

# Substrate
sc-client-api = { path = "../../../substrate/client/api", optional = true}
sp-api = { path = "../../../substrate/primitives/api", optional = true}
sp-core = { path = "../../../substrate/primitives/core", default-features = false}
sp-inherents = { path = "../../../substrate/primitives/inherents", default-features = false}
sp-runtime = { path = "../../../substrate/primitives/runtime", optional = true}
sp-state-machine = { path = "../../../substrate/primitives/state-machine", optional = true}
sp-std = { path = "../../../substrate/primitives/std", default-features = false}
sp-storage = { path = "../../../substrate/primitives/storage", optional = true}
sp-trie = { path = "../../../substrate/primitives/trie", default-features = false}

# Cumulus
cumulus-primitives-core = { path = "../core", default-features = false }
cumulus-relay-chain-interface = { path = "../../client/relay-chain-interface", optional = true }
cumulus-test-relay-sproof-builder = { path = "../../test/relay-sproof-builder", optional = true }

[features]
default = [ "std" ]
std = [
	"async-trait",
	"codec/std",
	"cumulus-primitives-core/std",
	"cumulus-relay-chain-interface",
	"cumulus-test-relay-sproof-builder",
	"sc-client-api",
	"scale-info/std",
	"sp-api",
	"sp-core/std",
	"sp-inherents/std",
	"sp-runtime",
	"sp-state-machine",
	"sp-std/std",
	"sp-storage",
	"sp-trie/std",
	"tracing",
]
