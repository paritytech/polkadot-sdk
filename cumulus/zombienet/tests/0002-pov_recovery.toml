[relaychain]
default_image = "{{RELAY_IMAGE}}"
default_command = "polkadot"

chain = "rococo-local"

[relaychain.genesis.runtime.runtime_genesis_config.configuration.config]
# set parameters such that collators only connect to 1 validator as a backing group
max_validators_per_core = 1
group_rotation_frequency = 100 # 10 mins

  [[relaychain.nodes]]
  name = "ferdie" # bootnode fullnode
  validator = false

  [[relaychain.node_groups]]
  name = "validator"
  count = 13
  args = ["-lparachain::availability=trace,sync=debug,parachain=debug", "--reserved-only", "--reserved-nodes {{'ferdie'|zombie('multiAddress')}}"]

[[parachains]]
id = 2000
cumulus_based = true
register_para = false
add_to_genesis = false

  # run bob as a parachain collator who is the only one producing blocks
  # alice and charlie will need to recover the pov blocks through availability recovery
  [[parachains.collators]]
  name = "bob"
  validator = true # collator
  image = "{{COL_IMAGE}}"
  command = "test-parachain"
  args = ["--disable-block-announcements"]

  # run 'alice' as a parachain collator who does not produce blocks
  # 'alice' is a bootnode for 'bob' and 'charlie'
  [[parachains.collators]]
  name = "alice"
  validator = true # collator
  image = "{{COL_IMAGE}}"
  command = "test-parachain"
  args = ["-lparachain::availability=trace,sync=debug,parachain=debug,cumulus-pov-recovery=debug,cumulus-consensus=debug", "--use-null-consensus", "--disable-block-announcements", "--bootnodes {{'bob'|zombie('multiAddress')}}",  "--", "--reserved-only", "--reserved-nodes {{'ferdie'|zombie('multiAddress')}}"]

  # run 'charlie' as a parachain full node
  [[parachains.collators]]
  name = "charlie"
  validator = false # full node
  image = "{{COL_IMAGE}}"
  command = "test-parachain"
  args = ["-lparachain::availability=trace,sync=debug,parachain=debug,cumulus-pov-recovery=debug,cumulus-consensus=debug", "--disable-block-announcements", "--bootnodes {{'bob'|zombie('multiAddress')}}","--", "--reserved-only", "--reserved-nodes {{'ferdie'|zombie('multiAddress')}}"]

  # we fail recovery for 'eve' from time to time to test retries
  [[parachains.collators]]
  name = "eve"
  validator = true # collator
  image = "{{COL_IMAGE}}"
  command = "test-parachain"
  args = ["-lparachain::availability=trace,sync=debug,parachain=debug,cumulus-pov-recovery=debug,cumulus-consensus=debug", "--fail-pov-recovery", "--use-null-consensus", "--disable-block-announcements", "--bootnodes {{'bob'|zombie('multiAddress')}}",  "--", "--reserved-only", "--reserved-nodes {{'ferdie'|zombie('multiAddress')}}"]

  # run 'one' as a RPC collator who does not produce blocks
  [[parachains.collators]]
  name = "one"
  validator = true # collator
  image = "{{COL_IMAGE}}"
  command = "test-parachain"
  args = ["-lparachain::availability=trace,sync=debug,parachain=debug,cumulus-pov-recovery=debug,cumulus-consensus=debug", "--use-null-consensus", "--disable-block-announcements", "--bootnodes {{'bob'|zombie('multiAddress')}}", "--relay-chain-rpc-url {{'ferdie'|zombie('wsUri')}}", "--", "--reserved-only", "--reserved-nodes {{'ferdie'|zombie('multiAddress')}}"]

  # run 'two' as a RPC parachain full node
  [[parachains.collators]]
  name = "two"
  validator = false # full node
  image = "{{COL_IMAGE}}"
  command = "test-parachain"
  args = ["-lparachain::availability=trace,sync=debug,parachain=debug,cumulus-pov-recovery=debug,cumulus-consensus=debug", "--disable-block-announcements", "--bootnodes {{'bob'|zombie('multiAddress')}}", "--relay-chain-rpc-url {{'ferdie'|zombie('wsUri')}}", "--", "--reserved-only", "--reserved-nodes {{'ferdie'|zombie('multiAddress')}}"]

  # run 'three' with light client
  [[parachains.collators]]
  name = "three"
  validator = false # full node
  image = "{{COL_IMAGE}}"
  command = "test-parachain"
  args = ["-lparachain::availability=trace,sync=debug,parachain=debug,cumulus-pov-recovery=debug,cumulus-consensus=debug", "--disable-block-announcements", "--bootnodes {{'bob'|zombie('multiAddress')}}", "--relay-chain-light-client", "--", "--reserved-only", "--reserved-nodes {{'ferdie'|zombie('multiAddress')}}"]
