---
settings:
  chains:
    relay_chain: &relay_chain
      wsPort: 9700
    collectives_parachain: &collectives_parachain
      wsPort: 9710
      paraId: &cp_id 1001
  variables:
    fellows_proposal_index: &fellows_proposal_index 0
    chains:
      accounts:
        alice_signer: &alice_signer //Alice
  decodedCalls:
    remark_rc:
      chain: *relay_chain
      encode: false
      pallet: system
      call: remark
      args: [
        "0x10"
      ]
    whitelist_remark_rc:
      chain: *relay_chain
      encode: true
      pallet: whitelist
      call: whitelistCall
      args: [
        $remark_rc.hash
      ]
    send_whitelist_remark_cp:
      chain: *collectives_parachain
      encode: false
      pallet: polkadotXcm
      call: send
      args: [
        { v3: { parents: 1, interior: { here: true }}}, # destination
        {
          v3: [ #message
            {
              UnpaidExecution: {
                weightLimit: Unlimited
              }
            },
            {
              Transact: {
                originKind: Xcm,
                requireWeightAtMost: {
                  refTime: 500000000, # 500_000_000
                  proofSize: 20000, # 20_000
                },
                call: $whitelist_remark_rc
              }
            }
          ]
        }
      ]

tests:
  - name: Fellowship
    describes:
      - name: The Fellowship white list the call
        its:
          - name: Note preimage from the whitelist call on the Relay Chain
            actions:
              - extrinsics:
                - chain: *relay_chain
                  signer: *alice_signer
                  pallet: preimage
                  call: notePreimage
                  args: [
                    $remark_rc
                  ]
                  events:
                    - name: preimage.Noted
                      result: { hash_: $remark_rc.hash }
          - name: Note preimage from the xcm send call to white list the call above
            actions:
              - extrinsics:
                - chain: *collectives_parachain
                  signer: *alice_signer
                  pallet: preimage
                  call: notePreimage
                  args: [
                    $send_whitelist_remark_cp,
                  ]
                  events:
                    - name: preimage.Noted
                      result: { hash_: $send_whitelist_remark_cp.hash }
          - name: Submit a proposal to while list the call
            actions:
              - extrinsics:
                - chain: *collectives_parachain
                  signer: *alice_signer
                  pallet: fellowshipReferenda
                  call: submit
                  args: [
                    {
                      "FellowshipOrigins": "Fellows",
                    },
                    {
                      "Lookup": {
                        "hash_": $send_whitelist_remark_cp.hash,
                        "len": $send_whitelist_remark_cp.len,
                      },
                    },
                    {
                      "After": 1, 
                    },
                  ]
                  events:
                    - name: fellowshipReferenda.Submitted
                      result: { 
                        index: *fellows_proposal_index,
                        proposal: { Lookup: { hash_: $send_whitelist_remark_cp.hash, len: $send_whitelist_remark_cp.len}}
                      }
          - name: Vote Aye
            actions:
              - extrinsics:
                - chain: *collectives_parachain
                  signer: *alice_signer
                  pallet: fellowshipCollective
                  call: vote
                  args: [
                    *fellows_proposal_index,
                    true,
                  ]
                  events:
                    - name: fellowshipCollective.Voted
                      result: { poll: *fellows_proposal_index, vote: { Aye: 1 } }
          - name: Submit the decision deposit
            actions:
              - extrinsics:
                - chain: *collectives_parachain
                  signer: *alice_signer
                  pallet: fellowshipReferenda
                  call: placeDecisionDeposit
                  args: [
                    *fellows_proposal_index,
                  ]
                  events:
                    - name: fellowshipReferenda.DecisionDepositPlaced
                      result: {index: *fellows_proposal_index}
                    - name: whitelist.CallWhitelisted
                      chain: *relay_chain
                      result: { callHash: $remark_rc.hash }
