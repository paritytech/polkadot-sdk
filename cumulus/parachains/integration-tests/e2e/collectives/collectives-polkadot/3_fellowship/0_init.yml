---
settings:
  chains:
    relay_chain: &relay_chain
      wsPort: 9700
    collectives_parachain: &collectives_parachain
      wsPort: 9710
      paraId: &cp_id 1001
  variables:
    proposal_index: &proposal_index 1
    chains:
      accounts:
        alice_signer: &alice_signer //Alice
        bob_signer: &bob_signer //Bob
        alice_account32: &acc_alice_acc32 '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d'
        alice_ss58: &acc_alice_ss58 '15oF4uVJwmo4TdGW7VfQxNLavjCXviqxT9S1MgbjMNHr6Sp5'
  decodedCalls:
    fellowship_induct_alice_cp:
      chain: *collectives_parachain
      encode: true
      pallet: fellowshipCore
      call: induct
      args: [
        *acc_alice_acc32
      ]
    fellowship_promote_1_alice_cp:
      chain: *collectives_parachain
      encode: true
      pallet: fellowshipCore
      call: promote
      args: [
        *acc_alice_acc32,
        1
      ]
    fellowship_promote_2_alice_cp:
      chain: *collectives_parachain
      encode: true
      pallet: fellowshipCore
      call: promote
      args: [
        *acc_alice_acc32,
        2
      ]
    fellowship_promote_3_alice_cp:
      chain: *collectives_parachain
      encode: true
      pallet: fellowshipCore
      call: promote
      args: [
        *acc_alice_acc32,
        3
      ]
    send_init_fellowship_rc:
      chain: *relay_chain
      encode: false
      pallet: xcmPallet
      call: send
      args: [
        { v3: { parents: 0, interior: { x1: { parachain: *cp_id }}}}, # destination
        {
          v3: [ #message
            {
              UnpaidExecution: {
                weightLimit: Unlimited
              }
            },
            { # since batch_all not yet allowed over xcm, we have to send multiple `Transact`.
              Transact: {
                originKind: Xcm,
                requireWeightAtMost: {
                  refTime: 1500000000, # 1_500_000_000
                  proofSize: 10000, # 10_000
                },
                call: $fellowship_induct_alice_cp
              }
            },
            {
              Transact: {
                originKind: Xcm,
                requireWeightAtMost: {
                  refTime: 1500000000, # 1_500_000_000
                  proofSize: 10000, # 10_000
                },
                call: $fellowship_promote_1_alice_cp
              }
            },
            {
              Transact: {
                originKind: Xcm,
                requireWeightAtMost: {
                  refTime: 1500000000, # 1_500_000_000
                  proofSize: 10000, # 10_000
                },
                call: $fellowship_promote_2_alice_cp
              }
            },
            {
              Transact: {
                originKind: Xcm,
                requireWeightAtMost: {
                  refTime: 1500000000, # 1_500_000_000
                  proofSize: 10000, # 10_000
                },
                call: $fellowship_promote_3_alice_cp
              }
            }
          ]
        }
      ]

tests:
  - name: Fellowship
    describes:
      - name: Init the Fellowship
        its:
          - name: Note preimage from init fellowship call
            actions:
              - extrinsics:
                - chain: *relay_chain
                  signer: *alice_signer
                  pallet: preimage
                  call: notePreimage
                  args: [
                    $send_init_fellowship_rc
                  ]
                  events:
                    - name: preimage.Noted
                      result: { hash_: $send_init_fellowship_rc.hash }
          - name: Submit a proposal to init the Fellowship
            actions:
              - extrinsics:
                - chain: *relay_chain
                  signer: *alice_signer
                  pallet: referenda
                  call: submit
                  args: [
                    {
                      "Origins": "FellowshipAdmin",
                    },
                    {
                      "Lookup": {
                        "hash_": $send_init_fellowship_rc.hash,
                        "len": $send_init_fellowship_rc.len,
                      },
                    },
                    {
                      "After": 1, 
                    },
                  ]
                  events:
                    - name: referenda.Submitted
                      result: { 
                        index: *proposal_index, 
                        proposal: { Lookup: { hash_: $send_init_fellowship_rc.hash, len: $send_init_fellowship_rc.len }}
                      }
          - name: Alice Vote Aye
            actions:
              - extrinsics:
                - chain: *relay_chain
                  signer: *alice_signer
                  pallet: convictionVoting
                  call: vote
                  args: [
                    *proposal_index,
                    {
                      "Standard": {
                        "vote": {
                          "aye": true,
                          "conviction": "Locked1x",
                        },
                        "balance": 200000000000000,
                      }
                    },
                  ] # TODO no Aye event to catch https://github.com/paritytech/substrate/issues/14687
          - name: Bob Vote Aye
            actions:
              - extrinsics:
                - chain: *relay_chain
                  signer: *bob_signer
                  pallet: convictionVoting
                  call: vote
                  args: [
                    *proposal_index,
                    {
                      "Standard": {
                        "vote": {
                          "aye": true,
                          "conviction": "Locked1x",
                        },
                        "balance": 200000000000000,
                      }
                    },
                  ] # TODO no Aye event to catch https://github.com/paritytech/substrate/issues/14687
          - name: Submit the decision deposit
            actions:
              - extrinsics:
                - chain: *relay_chain
                  signer: *alice_signer
                  pallet: referenda
                  call: placeDecisionDeposit
                  args: [
                    *proposal_index,
                  ]
                  events:
                    - name: referenda.DecisionDepositPlaced
                      result: { index: *proposal_index }
                    - name: fellowshipCollective.MemberAdded
                      chain: *collectives_parachain
                      result: { who: *acc_alice_ss58 }
