---
settings:
  chains:
    relay_chain: &relay_chain
      wsPort: 9800
    assets_parachain:
      wsPort: 9810
      paraId: &ap_id 1000
    penpal_parachain:
      wsPort: 9820
      paraId: &pp_id 2000
  variables:
    common:
      amount: &amount 2000000000000
      hrmp_channels:
        proposed_max_capacity: &max_capacity 8
        proposed_max_message_size: &max_message_size 8192
        channel: &channel {
          maxCapacity: *max_capacity,
          maxTotalSize: *max_message_size,
          maxMessageSize: *max_message_size,
          msgCount: 0,
          totalSize: 0,
          mqcHead: null,
          senderDeposit: 0,
          recipientDeposit: 0
        }
    chains:
      relay_chain:
        signer: &rc_signer //Alice
      assets_parachain_account:
        sovereign_account: &ap_sovereign 5Ec4AhPZk8STuex8Wsi9TwDtJQxKqzPJRCH7348Xtcs9vZLJ
      penpal_parachain:
        sovereign_account: &pp_sovereign F7fq1jMZkfuCuoMTyiEVAP2DMpMt18WopgBqTJznLihLNbZ

tests:
  - name: HRMP
    beforeEach:
      - name: DEPENDENCY | Penpal Parachain Sovereign account in the Relay Chain needs to be funded
        actions:
          - extrinsics:
            - chain: *relay_chain
              signer: *rc_signer
              pallet: balances
              call: transfer
              args: [
                *pp_sovereign, # destination
                *amount, # value
              ]
              events:
                - name: balances.Transfer

      - name: DEPENDENCY | Assets Parachain Sovereign account in the Relay Chain needs to be funded
        actions:
          - extrinsics:
            - chain: *relay_chain
              signer: *rc_signer
              pallet: balances
              call: transfer
              args: [
                *ap_sovereign, # destination
                *amount, # value
              ]
              events:
                - name: balances.Transfer
    describes:
      - name: hrmp.hrmpInitOpenChannel (Penpal Parachain → Assets Parachain)
        its:
          - name: Open Penpal Parachain to Assets Parachain
            actions:
              - extrinsics:
                  - chain: *relay_chain
                    signer: *rc_signer
                    sudo: true
                    pallet: hrmp
                    call: forceOpenHrmpChannel
                    args: [
                      *pp_id,
                      *ap_id,
                      *max_capacity,
                      *max_message_size
                    ]
                    events:
                      - name: sudo.Sudid
                        result: { sudoResult: Ok }
                      - name: hrmp.HrmpChannelForceOpened
      - name: hrmp.hrmpInitOpenChannel (Assets Parachain → PenPal Parachain)
        its:
          - name: Open Assets Parachain to PenPal Parachain
            actions:
              - extrinsics:
                  - chain: *relay_chain
                    signer: *rc_signer
                    sudo: true
                    pallet: hrmp
                    call: forceOpenHrmpChannel
                    args: [
                      *ap_id,
                      *pp_id,
                      *max_capacity,
                      *max_message_size
                    ]
                    events:
                      - name: sudo.Sudid
                        result: { sudoResult: Ok }
                      - name: hrmp.HrmpChannelForceOpened
      - name: hrmp.forceProcessHrmpOpen (make sure all the channels are open)
        its:
          - name: Make sure all the pending channels are open
            actions:
              - extrinsics:
                    - chain: *relay_chain
                      signer: *rc_signer
                      sudo: true
                      pallet: hrmp
                      call: forceProcessHrmpOpen
                      args: [ 2 ]
                      events:
                        - name: sudo.Sudid
                          result: { sudoResult: Ok }
