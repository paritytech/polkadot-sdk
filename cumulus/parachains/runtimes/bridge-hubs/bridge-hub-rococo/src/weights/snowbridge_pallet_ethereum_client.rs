// Copyright (C) Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for `snowbridge_pallet_ethereum_client`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-08, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-8-124`, CPU: `Intel(R) Xeon(R) Platinum 8375C CPU @ 2.90GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("bridge-hub-rococo-dev"), DB CACHE: 1024

// Executed Command:
// target/release/polkadot-parachain
// benchmark
// pallet
// --base-path
// /mnt/scratch/benchmark
// --chain=bridge-hub-rococo-dev
// --pallet=snowbridge_ethereum_beacon_client
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --steps
// 50
// --repeat
// 20
// --output
// ./parachains/runtimes/bridge-hubs/bridge-hub-rococo/src/weights/snowbridge_ethereum_beacon_client.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `snowbridge_pallet_ethereum_client`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> snowbridge_pallet_ethereum_client::WeightInfo for WeightInfo<T> {
	/// Storage: EthereumBeaconClient FinalizedBeaconStateIndex (r:1 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconStateIndex (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconStateMapping (r:1 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconStateMapping (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient NextSyncCommittee (r:0 w:1)
	/// Proof: EthereumBeaconClient NextSyncCommittee (max_values: Some(1), max_size: Some(92372), added: 92867, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient InitialCheckpointRoot (r:0 w:1)
	/// Proof: EthereumBeaconClient InitialCheckpointRoot (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient ValidatorsRoot (r:0 w:1)
	/// Proof: EthereumBeaconClient ValidatorsRoot (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient LatestFinalizedBlockRoot (r:0 w:1)
	/// Proof: EthereumBeaconClient LatestFinalizedBlockRoot (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient CurrentSyncCommittee (r:0 w:1)
	/// Proof: EthereumBeaconClient CurrentSyncCommittee (max_values: Some(1), max_size: Some(92372), added: 92867, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient LatestExecutionState (r:0 w:1)
	/// Proof: EthereumBeaconClient LatestExecutionState (max_values: Some(1), max_size: Some(80), added: 575, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconState (r:0 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconState (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	fn force_checkpoint() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `3501`
		// Minimum execution time: 97_185_781_000 picoseconds.
		Weight::from_parts(97_263_571_000, 0)
			.saturating_add(Weight::from_parts(0, 3501))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(9))
	}
	/// Storage: EthereumBeaconClient LatestFinalizedBlockRoot (r:1 w:1)
	/// Proof: EthereumBeaconClient LatestFinalizedBlockRoot (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconState (r:1 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconState (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient LatestExecutionState (r:1 w:0)
	/// Proof: EthereumBeaconClient LatestExecutionState (max_values: Some(1), max_size: Some(80), added: 575, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient NextSyncCommittee (r:1 w:0)
	/// Proof: EthereumBeaconClient NextSyncCommittee (max_values: Some(1), max_size: Some(92372), added: 92867, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient CurrentSyncCommittee (r:1 w:0)
	/// Proof: EthereumBeaconClient CurrentSyncCommittee (max_values: Some(1), max_size: Some(92372), added: 92867, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient ValidatorsRoot (r:1 w:0)
	/// Proof: EthereumBeaconClient ValidatorsRoot (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconStateIndex (r:1 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconStateIndex (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconStateMapping (r:1 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconStateMapping (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	fn submit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `92753`
		//  Estimated: `93857`
		// Minimum execution time: 25_999_968_000 picoseconds.
		Weight::from_parts(26_051_019_000, 0)
			.saturating_add(Weight::from_parts(0, 93857))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: EthereumBeaconClient LatestFinalizedBlockRoot (r:1 w:0)
	/// Proof: EthereumBeaconClient LatestFinalizedBlockRoot (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconState (r:1 w:0)
	/// Proof: EthereumBeaconClient FinalizedBeaconState (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient LatestExecutionState (r:1 w:0)
	/// Proof: EthereumBeaconClient LatestExecutionState (max_values: Some(1), max_size: Some(80), added: 575, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient NextSyncCommittee (r:1 w:1)
	/// Proof: EthereumBeaconClient NextSyncCommittee (max_values: Some(1), max_size: Some(92372), added: 92867, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient CurrentSyncCommittee (r:1 w:0)
	/// Proof: EthereumBeaconClient CurrentSyncCommittee (max_values: Some(1), max_size: Some(92372), added: 92867, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient ValidatorsRoot (r:1 w:0)
	/// Proof: EthereumBeaconClient ValidatorsRoot (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	fn submit_with_sync_committee() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `92717`
		//  Estimated: `93857`
		// Minimum execution time: 122_354_917_000 picoseconds.
		Weight::from_parts(122_461_312_000, 0)
			.saturating_add(Weight::from_parts(0, 93857))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: EthereumBeaconClient LatestFinalizedBlockRoot (r:1 w:0)
	/// Proof: EthereumBeaconClient LatestFinalizedBlockRoot (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconState (r:1 w:0)
	/// Proof: EthereumBeaconClient FinalizedBeaconState (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient LatestExecutionState (r:1 w:1)
	/// Proof: EthereumBeaconClient LatestExecutionState (max_values: Some(1), max_size: Some(80), added: 575, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient ExecutionHeaderIndex (r:1 w:1)
	/// Proof: EthereumBeaconClient ExecutionHeaderIndex (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient ExecutionHeaderMapping (r:1 w:1)
	/// Proof: EthereumBeaconClient ExecutionHeaderMapping (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient ExecutionHeaders (r:0 w:1)
	/// Proof: EthereumBeaconClient ExecutionHeaders (max_values: None, max_size: Some(136), added: 2611, mode: MaxEncodedLen)
	fn submit_execution_header() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `386`
		//  Estimated: `3537`
		// Minimum execution time: 108_761_000 picoseconds.
		Weight::from_parts(113_158_000, 0)
			.saturating_add(Weight::from_parts(0, 3537))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(4))
	}
}
