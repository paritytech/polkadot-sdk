searchState.loadedDescShard("cumulus_primitives_core", 0, "Cumulus related core primitive types and traits.\nAbridged version of <code>HostConfiguration</code> (from the …\nAbridged version of <code>HrmpChannel</code> (from the <code>Hrmp</code> parachains …\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nThe unambiguous administration body (for Polkadot, an …\nThe origin of an inbound message.\nAlter the current Origin to another given origin.\nAll assets in Holding.\nAll assets in Holding, up to <code>u32</code> individual assets …\nAll assets in Holding of a given fungibility and ID.\nAll assets in Holding of a given fungibility and ID up to …\nA unit struct which can be converted into a <code>Location</code> of …\nA unit struct which can be converted into a <code>Location</code> of …\nA 16-byte fixed-length datum.\nA 32-byte fixed-length datum.\nA 4-byte fixed-length datum.\nAn 8-byte fixed-length datum.\nEither an amount of a single fungible asset, or a single …\n<code>Asset</code> collection, defined either by a number of <code>Assets</code> or …\nLocation to identify an asset.\nA general identifier for an instance of a non-fungible …\nThe given asset is not handled.\nA <code>Vec</code> of <code>Asset</code>s.\nSome assets.\nNo less than the given proportion of members of the body.\nThe Origin Register does not contain a valid value for …\nThe XCM did not pass the barrier condition for execution.\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\nSomething which fulfills the abstract idea of a Substrate …\nAn identifier of a pluralistic body.\nA part of a pluralistic body.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nA consensus engine ID indicating that this is a Cumulus …\nInformation about an XCMP channel.\nThe status of a channel.\nCreate some assets which are being held on behalf of the …\nAn offset in the relay chain claim queue.\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nChannel doesn’t exist/has been closed.\nInformation about a collation.\nInformation about a collation.\nRuntime api to collect information about a collation.\nExecution completed successfully; given weight was used.\nEncoded <code>Vec&lt;u8&gt;</code> messages, all concatenated.\nEncoded <code>VersionedXcm</code> messages, all concatenated.\nA message from the runtime to the consensus engine. This …\nConsensus engine unique ID.\nA strictly increasing sequence number, typically this …\nConsensus header digests for Cumulus parachains.\nThe default claim queue offset to be used if it’s not …\nThe unambiguous defense body (for Polkadot, an opinion on …\nSpecify the filter as being everything contained by the …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe given message cannot be translated into a format …\nThe given message cannot be translated into a format that …\nGeneric header digest.\nDigest item that is able to encode/decode ‘system’ …\nThe status of a dispatch attempt using <code>Transact</code>.\nSomething that should be called when a downward message is …\nContains the error value\nContains the error value\nExecution did not start due to the given error.\nType to return in case of an error.\nAn Ethereum network specified by its chain ID.\nAttempt to send a message greater than the maximum …\nMessage could not be sent due to its size exceeding the …\nRecursion stack limit reached\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nType of XCM message executor.\nThe outcome of an XCM instruction.\nThe unambiguous executive body (for Polkadot, this would …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nThe message was unable to be exported.\nSend a message on to Non-Local Consensus system.\nType for extrinsics.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nEnsure that the message is dispatched as soon as possible, …\nFees needed to be paid in order to send the message and …\nFees were required which the origin could not pay.\nA given number of members of the body, out of some larger …\nChannel is completely full right now.\nClassification of whether an asset is fungible or not, …\nA fungible asset; we record a number of units, as a <code>u128</code> …\nThe asset is fungible.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nRuntime api used to select the core for which the next …\nA global network capable of externalizing its own …\nBlock hash type.\nHeader type.\nThe message came from the para-chain itself.\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nA wrapped version of <code>DownwardMessage</code>. The difference is …\nAn inbound HRMP message.\nExecution started, but did not complete successfully due …\nAn indexed body.\nA compact index. Technically this could be greater than …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nCross-Consensus Message: A message from one consensus …\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nDetermine if a parachain is a system parachain or not.\nThe unambiguous judicial body (this doesn’t exist on …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nThe unambiguous legislative body (for Polkadot, this could …\nWeight limit imposed of the inner value.\nList all open outgoing channels.\nA relative path between state-bearing consensus systems.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nLock the locally held asset and prevent further transfer …\nSome other error with locking.\nThe maximal weight in all dimensions.\nUsed by <code>Transact</code> to indicate that the given weight limit …\nA given number of members of the body.\nError description of a message send failure.\nA needed argument is <code>None</code> when it should be <code>Some</code>.\nA named body.\nMore than the given proportion of members of the body.\nThe given pallet’s name is different to that expected.\nOrigin should just be the native dispatch origin …\nA global identifier of a data structure existing within …\nThere does not exist a channel for sending the message.\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nA non-fungible asset. We record the instance identifier in …\nThe asset is not fungible.\nThe message and destination combination was not recognized …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nNo response. Serves as a neutral default.\nContains the success value\nContains the success value\nThe unambiguous child.\nEnsure that this message is dispatched in the same …\nBasically just the XCM (more general) version of …\nSome other error.\nSome other thing. Unsupported and experimental.\nAnd outbound HRMP message\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nThe provided pallet index was not found.\nThe index, instance name, pallet name and version of some …\nUnique identifier of a parachain.\nAn indexed parachain belonging to and operated by the …\nThe parachain block that is created by a collator.\nA unit struct which can be converted into a <code>Location</code> of …\nThe message came from the relay-chain.\nA tuple struct which can be converted into a <code>Location</code> of …\nThe validation data provides information about how to …\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nThe Polkadot Bulletin chain.\nA pre-runtime digest.\nAn identifier for a query.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nInformation regarding the composition of a query response.\nThe dispatch queue is full.\nChannel is ready for sending; the two parameters are the …\n<code>MultiLocation</code> value failed to be reanchored.\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nA digest item indicating the relay-parent a parachain …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nResponse data to a query.\nThe Rococo testnet Relay-chain.\nAn indication for the light clients that the runtime …\nPut a Seal on it. This is only used by native code, and is …\nError result value when attempting to send an XCM message.\nResult value when attempting to send an XCM message.\nUtility for sending an XCM message to a given location.\nThe “quality of service” considerations for message …\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nThe message came from a sibling para-chain.\nOne or more channel control signals; these should be …\nOrigin should just be the standard account-based origin …\nAsk the destination system to respond with the most recent …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nThe unambiguous technical body (for Polkadot, this would …\nIntermediate value which connects the two phases of the …\nThe message is too big to ever fit in a channel.\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nThere are too many channels open at once.\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nDestination is routable, but there is some issue with the …\nDestination is routable, but there is some issue with the …\nUsed by the <code>Trap</code> instruction to force an error …\nAlways throws an error of type <code>Trap</code>.\nThe unambiguous treasury body (for Polkadot, an opinion on …\nThe universal location of the local consensus is improper.\nUndefined - used if the non-fungible asset class has only …\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nThe only body in its context.\nSet the Origin Register to be some child of the Universal …\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nNo weight limit imposed.\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nDestination is known to be unroutable.\nDestination is known to be unroutable. This is considered …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nA message from a parachain to its Relay Chain.\nSomething that should be called when sending an upward …\nValidation parameters for evaluating the parachain …\nAn XCM version.\nThe given pallet’s version has an incompatible version …\nThe body’s declaration, under whatever means it decides.\nAn optional weight limit.\nExecution of the XCM would potentially result in a greater …\nThe weight of an XCM message is not computable ahead of …\nThe Westend testnet Relay-chain.\nSpecify the filter as the given <code>WildAsset</code> wildcard.\nA wildcard representing a set of assets.\nClassification of whether an asset is fungible or not.\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe Wococo testnet Relay-chain.\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nThis module’s XCM version.\nOrigin should be interpreted as an XCM native origin and …\nContextual data pertaining to a specific list of XCM …\nError codes used in XCM. The first errors codes have …\nA hash type for identifying messages.\nThe aggregate XCMP message format.\nSomething that should be called for each batch of messages …\nA means of figuring out what outbound XCMP messages should …\nConstant version of Add for <code>proof_size</code> component with u64.\nConstant version of Add for <code>ref_time</code> component with u64.\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nCreates a new <code>Location</code> with <code>parents</code> and an empty (<code>Here</code>) …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nMutate <code>self</code> so that it is suffixed with <code>suffix</code>.\nMutate <code>self</code> so that it is suffixed with <code>suffix</code>.\nConsume <code>self</code> and return its value suffixed with <code>suffix</code>.\nReturns <code>Some</code> if this entry is the <code>Consensus</code> entry.\nReturns Some if <code>self</code> is a <code>DigestItem::Other</code>.\nReturns <code>Some</code> if this entry is the <code>PreRuntime</code> entry.\nReturns <code>Some</code> if this entry is the <code>Seal</code> entry.\nCasts <code>self</code> into a slice containing <code>Junction</code>s.\nCasts <code>self</code> into a mutable slice containing <code>Junction</code>s.\nAsynchronous backing parameters.\nReturns the junction at index <code>i</code>, or <code>None</code> if the location …\nReturns the junction at index <code>i</code>, or <code>None</code> if the location …\nReturns a mutable reference to the junction at index <code>i</code>, or …\nReturns a mutable reference to the junction at index <code>i</code>, or …\nThe collation body.\nReturn the Location subsection identifying the chain that …\nDeduct some <code>fees</code> to the sovereign account of the given …\nTry to increase <code>self</code> by <code>amount</code> via checked addition.\nChecked <code>Weight</code> addition. Computes <code>self + rhs</code>, returning …\nChecked <code>Weight</code> scalar division. Computes …\nCalculates how many <code>other</code> fit into <code>self</code>.\nChecked <code>Weight</code> scalar multiplication. Computes …\nTry to reduce <code>self</code> by <code>amount</code> via checked subtraction.\nChecked <code>Weight</code> subtraction. Computes <code>self - rhs</code>, returning …\nCollect information about a collation.\nCollect information about a collation.\nTry to match this to a <code>Self::Consensus</code>, check <code>id</code> matches …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns boolean indicating whether <code>self</code> contains only the …\nGet a conversion of the first digest item that …\nRetrieve core selector and claim queue offset for the next …\nMaximum count of assets allowed to match, if any.\nMaximum count of assets it is possible to match, if known.\nConsume self and return the equivalent version but counted …\nThe message payload.\nThe message payload.\nDecrements the parent count by 1.\nSplit the block into header and list of extrinsics.\nDeconstruct into the inner parts.\nActually carry out the delivery operation for a previously …\nThe destination to which the query response message should …\nConstant version of Div with u64.\nConsume <code>self</code> and return the inner vec.\nReturns a ‘referencing view’ for this digest item.\nCreates an encoded block from the given <code>header</code> and …\nExtract the relay-parent from the provided header digest. …\nReturns a reference to the list of extrinsics.\nReturns the extrinsics.\nReturns first junction, or <code>None</code> if the location is empty.\nReturn the first instruction, if any.\nReturns the first interior junction, or <code>None</code> if the …\nExecute a function <code>f</code> on every junction. We use this since …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct <code>Weight</code> from the same weight for all parts.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nConstruct <code>Weight</code> from weight parts, namely reference time …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new instance of <code>Assets</code> from a <code>Vec&lt;Asset&gt;</code> whose …\nCreate a new instance of <code>Assets</code> from a <code>Vec&lt;Asset&gt;</code> whose …\nThe fungibility of the asset, which contains either the …\nReturn a reference to an item at a specific index or <code>None</code> …\nExtract the network ID treating this value as a universal …\nHandle some incoming DMP messages (note these are …\nHandle some incoming XCMP messages (note these are the big …\nReturns the hash of the block.\nCompute the blake2-256 hash of the persisted validation …\nThe head data, aka encoded header, of the block that …\nReturns a reference to the header.\nReturns the header.\nCreates a new <code>Location</code> with 0 parents and a <code>Here</code> interior.\nThe horizontal messages sent by the parachain.\nThe horizontal messages sent by the parachain.\nThe maximum number of outbound HRMP messages can be sent …\nThe mark which specifies the block number up to which all …\nThe mark which specifies the block number up to which all …\nThe overall asset identity (aka <em>class</em>, in the case of a …\nReturn a reference to the inner vec.\nReturn a reference to the inner value.\nReturn a mutable reference to the inner value.\nReturn a reference to the interior field.\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nReturn a mutable reference to the interior field.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUse the value of <code>self</code> along with a <code>fun</code> fungibility …\nConvert <code>self</code> into the stored block.\nConvert <code>self</code> into a <code>Location</code> containing <code>n</code> parents.\nConvert <code>self</code> into a <code>Location</code> containing <code>n</code> parents.\nConvert <code>self</code> into the stored header.\nConsume <code>self</code> and return the inner vec.\nConsume and return the inner value.\nConsume and return an iterator over the items.\nConvert into the latest version of the <code>CollationInfo</code> …\nConvert <code>self</code> into a <code>Location</code> containing 0 parents.\nConvert <code>self</code> into a <code>Location</code> containing 0 parents.\nReturn the only instruction, contained in <code>Self</code>, iff only …\nConvert <code>self</code> into a <code>VersionedLocation</code> containing 0 parents.\nConsume <code>self</code> and return the equivalent <code>VersionedLocation</code> …\nUse the value of <code>self</code> along with a <code>fun</code> fungibility …\nTreating <code>self</code> as the universal context, return the …\nReturn <code>true</code> if no instructions are held in <code>self</code>.\nWhether the <code>Location</code> has no parents and has a <code>Here</code> …\nReturns <code>true</code> if the part represents a strict majority (&gt; …\nReturns <code>true</code> if this definitely represents no asset.\nReturns <code>true</code> if a parachain is a system parachain, <code>false</code> …\nReturns a reference iterator over the junctions.\nReturn an iterator over references to the items.\nReturn an iterator over mutable references to the items.\nReturns last junction, or <code>None</code> if the location is empty.\nReturns last junction, or <code>None</code> if the location is empty or …\nReturn the last instruction, if any.\nReturn the number of distinct asset instances contained.\nReturns the number of junctions in <code>self</code>.\nReturns the number of parents and junctions in <code>self</code>.\nReturn the number of instructions held in <code>self</code>.\nExplicit limit on number of assets allowed to match, if …\nExplicit limit placed on the number of items, if any.\nGet reference to the first digest item that matches the …\nGet reference to all digest items.\nA list of logs in the digest.\nEnsures that self begins with <code>prefix</code> and that it has a …\nEnsures that <code>self</code> has the same number of parents as <code>prefix</code>…\nReturns true if the wild element of <code>self</code> matches <code>inner</code>.\nReturns true if <code>inner</code> would be matched by <code>self</code>.\nGet the aggressive max of <code>self</code> and <code>other</code> weight.\nThe maximum number of messages that can be pending in the …\nThe maximum number of messages that can be pending in the …\nThe maximum validation code size, in bytes.\nThe maximum head-data size, in bytes.\nThe maximum message size that could be put into the …\nThe maximum message size that could be put into the …\nThe maximum legal size of a POV block, in bytes.\nThe maximum total size of the messages that can be pending …\nThe maximum total size of the messages that can be pending …\nThe maximum number of messages that a candidate can …\nThe maximum size of an upward message that can be sent by …\nTotal number of individual messages allowed in the …\nTotal size of messages allowed in the parachain -&gt; …\nThe <code>max_weight</code> field of the <code>QueryResponse</code> message.\nThe identity of the XCM; this may be a hash of its …\nGet the conservative min of <code>self</code> and <code>other</code> weight.\nA head of the Message Queue Chain for this channel. Each …\nThe actual downward message to processes.\nThe current number of messages pending in the channel. …\nThe current number of messages pending in the channel. …\nConstant version of Mul with u64.\nCreates new block from header and extrinsics.\nCreates a new instance of <code>Self</code>.\nCreate an <code>Id</code>.\nA new (empty) value.\nCreates a new <code>Location</code> with the given number of parents …\nCreate an empty instance.\nNew validation code.\nNew validation code.\nReturn the only instruction, contained in <code>Self</code>, iff only …\nConsume and either return <code>self</code> if it contains some …\nThe current value of the Origin register of the <code>XCVM</code>.\nCreates a new <code>Location</code> which evaluates to the parent …\nReturns the number of <code>Parent</code> junctions at the beginning of …\nPrevious head-data.\nThe parent head-data.\nThe number of parent junctions at the beginning of this …\nPop a digest item.\nTry to match this to a <code>Self::PreRuntime</code>, check <code>id</code> matches …\nPrepend a <code>Location</code> to an asset id, giving it a new root …\nPrepend a <code>Location</code> to a concrete asset, giving it a new …\nPrepend a <code>Location</code> to any concrete asset items, giving it …\nMutate <code>self</code> so that it is prefixed with <code>prefix</code>.\nConsume <code>self</code> and return its value prefixed with <code>prefix</code>.\nThe number of messages processed from the DMQ.\nThe number of messages processed from the DMQ.\nReturn the storage size part of the weight.\nReturn a mutable reference to the storage size part of the …\nPush new digest item.\nAdd some asset onto the list, saturating. This is quite a …\nMutates <code>self</code> to be appended with <code>new</code> or returns an <code>Err</code> …\nMutates <code>self</code> to be prepended with <code>new</code> or returns an <code>Err</code> …\nMutates <code>self</code>, prefixing its interior junctions with <code>new</code>. …\nMutates <code>self</code>, suffixing its interior junctions with <code>new</code>. …\nConsumes <code>self</code> and returns a <code>Junctions</code> prefixed with <code>new</code>, …\nConsumes <code>self</code> and returns a <code>Location</code> prefixed with <code>new</code>, or …\nConsumes <code>self</code> and returns a <code>Junctions</code> suffixed with <code>new</code>, …\nConsumes <code>self</code> and returns a <code>Location</code> suffixed with <code>new</code>, or …\nThe <code>query_id</code> field of the <code>QueryResponse</code> message.\nMutate <code>self</code> so that it represents the same location from …\nMutate the asset to represent the same value from the …\nMutate the location of the asset identifier if concrete, …\nMutate the asset to represent the same value from the …\nMutate the location of the asset identifier if concrete, …\nMutate <code>self</code> so that it represents the same location from …\nConsume <code>self</code> and return a new value representing the same …\nMutate the location of the asset identifier if concrete, …\nConsume <code>self</code> and return a new value representing the same …\nThe para that will get this message in its downward …\nReturn the reference time part of the weight.\nReturn a mutable reference to the reference time part of …\nConsumes <code>self</code> and returns how <code>viewer</code> would address it …\nA module that re-exports relevant relay chain definitions.\nThe current relay-chain block number.\nThe relay-chain block number this is in the context of.\nThe relay-chain block’s storage root.\nThe relay-chain block storage root this is in the context …\nRemove the <code>NetworkId</code> value.\nRemove the <code>NetworkId</code> value in any <code>Junction</code>s.\nRemove the <code>NetworkId</code> value in any interior <code>Junction</code>s.\nIncrement <code>Weight</code> by <code>amount</code> via saturating addition.\nSaturating <code>Weight</code> addition. Computes <code>self + rhs</code>, …\nSaturating <code>Weight</code> scalar division. Computes …\nSaturating <code>Weight</code> scalar multiplication. Computes …\nSaturating <code>Weight</code> scalar exponentiation. Computes …\nReduce <code>Weight</code> by <code>amount</code> via saturating subtraction.\nSaturating <code>Weight</code> subtraction. Computes <code>self - rhs</code>, …\nTry to match this to a <code>Self::Seal</code>, check <code>id</code> matches and …\nSend the given UMP message; return the expected number of …\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe block number at which this message was sent. …\nThe block number at which these messages were put into the …\nSet the storage size part of the weight.\nSet the reference time part of the weight.\nRemove any unneeded parents/junctions in <code>self</code> based on the …\nSplits off the first junction, returning the remaining …\nSplits off the first interior junction, returning the …\nExtract the network ID and the interior consensus …\nSplits off the last junction, returning the remaining …\nSplits off the last interior junction, returning the …\nReturns the <code>CompactProof</code>.\nConstant version of Sub for <code>proof_size</code> component with u64.\nConstant version of Sub for <code>ref_time</code> component with u64.\nRemoves the first element from <code>self</code>, returning it (or <code>None</code> …\nRemoves the first interior junction from <code>self</code>, returning it\nRemoves the last element from <code>self</code>, returning it (or <code>None</code> …\nRemoves the last element from <code>interior</code>, returning it (or …\nTake a single XCMP message from the queue for the given …\nEncode this as a Substrate <code>DigestItem</code>.\nThe current value of the Topic register of the <code>XCVM</code>.\nThe total size in bytes of all message payloads in the …\nThe total size in bytes of all message payloads in the …\nTry to add some <code>other</code> weight while upholding the <code>limit</code>.\nReturns the opaque data contained in the item if <code>Some</code> if …\nReturns the data contained in the item if <code>Some</code> if this …\nReturns the parent count and the interior <code>Junctions</code> as a …\nMessages destined to be interpreted by the Relay chain …\nMessages destined to be interpreted by the Relay chain …\nCheck whether the given <code>_message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe minimum period, in blocks, between which parachains …\nThe delay, in blocks, before a validation upgrade is …\nHow much weight was used by the XCM execution attempt.\nConstructor which sets the message ID to the supplied …\nTreat <code>self</code> as a universal location and the context of …\nReturn a <code>Weight</code> where all fields are zero.\nThe EIP-155 chain ID.\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nThe unambiguous administration body (for Polkadot, an …\nAlter the current Origin to another given origin.\nAll assets in Holding.\nAll assets in Holding, up to <code>u32</code> individual assets …\nAll assets in Holding of a given fungibility and ID.\nAll assets in Holding of a given fungibility and ID up to …\nA unit struct which can be converted into a <code>Location</code> of …\nA unit struct which can be converted into a <code>Location</code> of …\nA 16-byte fixed-length datum.\nA 32-byte fixed-length datum.\nA 4-byte fixed-length datum.\nAn 8-byte fixed-length datum.\nEither an amount of a single fungible asset, or a single …\n<code>Asset</code> collection, defined either by a number of <code>Assets</code> or …\nLocation to identify an asset.\nA general identifier for an instance of a non-fungible …\nThe given asset is not handled.\nA <code>Vec</code> of <code>Asset</code>s.\nSome assets.\nNo less than the given proportion of members of the body.\nThe Origin Register does not contain a valid value for …\nThe XCM did not pass the barrier condition for execution.\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\nAn identifier of a pluralistic body.\nA part of a pluralistic body.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nExecution completed successfully; given weight was used.\nThe unambiguous defense body (for Polkadot, an opinion on …\nSpecify the filter as being everything contained by the …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe given message cannot be translated into a format …\nThe given message cannot be translated into a format that …\nThe status of a dispatch attempt using <code>Transact</code>.\nContains the error value\nContains the error value\nExecution did not start due to the given error.\nType to return in case of an error.\nAn Ethereum network specified by its chain ID.\nAttempt to send a message greater than the maximum …\nMessage could not be sent due to its size exceeding the …\nRecursion stack limit reached\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nType of XCM message executor.\nThe outcome of an XCM instruction.\nThe unambiguous executive body (for Polkadot, this would …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nThe message was unable to be exported.\nSend a message on to Non-Local Consensus system.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees needed to be paid in order to send the message and …\nFees were required which the origin could not pay.\nA given number of members of the body, out of some larger …\nClassification of whether an asset is fungible or not, …\nA fungible asset; we record a number of units, as a <code>u128</code> …\nThe asset is fungible.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA global network capable of externalizing its own …\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nExecution started, but did not complete successfully due …\nAn indexed body.\nA compact index. Technically this could be greater than …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nThe basic concrete type of <code>Instruction</code>, which doesn’t …\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nThe unambiguous judicial body (this doesn’t exist on …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nThe unambiguous legislative body (for Polkadot, this could …\nWeight limit imposed of the inner value.\nA relative path between state-bearing consensus systems.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nLock the locally held asset and prevent further transfer …\nSome other error with locking.\nUsed by <code>Transact</code> to indicate that the given weight limit …\nA given number of members of the body.\nA needed argument is <code>None</code> when it should be <code>Some</code>.\nA named body.\nMore than the given proportion of members of the body.\nThe given pallet’s name is different to that expected.\nOrigin should just be the native dispatch origin …\nA global identifier of a data structure existing within …\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nA non-fungible asset. We record the instance identifier in …\nThe asset is not fungible.\nThe message and destination combination was not recognized …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nNo response. Serves as a neutral default.\nContains the success value\nContains the success value\nThe unambiguous child.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nThe provided pallet index was not found.\nThe index, instance name, pallet name and version of some …\nAn indexed parachain belonging to and operated by the …\nA unit struct which can be converted into a <code>Location</code> of …\nA tuple struct which can be converted into a <code>Location</code> of …\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nThe Polkadot Bulletin chain.\nAn identifier for a query.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nInformation regarding the composition of a query response.\n<code>MultiLocation</code> value failed to be reanchored.\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nResponse data to a query.\nThe Rococo testnet Relay-chain.\nError result value when attempting to send an XCM message.\nResult value when attempting to send an XCM message.\nUtility for sending an XCM message to a given location.\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nOrigin should just be the standard account-based origin …\nAsk the destination system to respond with the most recent …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nThe unambiguous technical body (for Polkadot, this would …\nIntermediate value which connects the two phases of the …\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nDestination is routable, but there is some issue with the …\nDestination is routable, but there is some issue with the …\nAlways throws an error of type <code>Trap</code>.\nUsed by the <code>Trap</code> instruction to force an error …\nThe unambiguous treasury body (for Polkadot, an opinion on …\nThe universal location of the local consensus is improper.\nUndefined - used if the non-fungible asset class has only …\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nThe only body in its context.\nSet the Origin Register to be some child of the Universal …\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nNo weight limit imposed.\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nDestination is known to be unroutable.\nDestination is known to be unroutable. This is considered …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nAn XCM version.\nThe given pallet’s version has an incompatible version …\nThe body’s declaration, under whatever means it decides.\nAn optional weight limit.\nExecution of the XCM would potentially result in a greater …\nThe weight of an XCM message is not computable ahead of …\nThe Westend testnet Relay-chain.\nSpecify the filter as the given <code>WildAsset</code> wildcard.\nA wildcard representing a set of assets.\nClassification of whether an asset is fungible or not.\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe Wococo testnet Relay-chain.\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nThis module’s XCM version.\nThe basic concrete type of <code>Xcm</code>, which doesn’t make any …\nOrigin should be interpreted as an XCM native origin and …\nContextual data pertaining to a specific list of XCM …\nError codes used in XCM. The first errors codes have …\nA hash type for identifying messages.\nDeduct some <code>fees</code> to the sovereign account of the given …\nActually carry out the delivery operation for a previously …\nThe destination to which the query response message should …\nThe fungibility of the asset, which contains either the …\nThe overall asset identity (aka <em>class</em>, in the case of a …\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nThe <code>max_weight</code> field of the <code>QueryResponse</code> message.\nThe identity of the XCM; this may be a hash of its …\nThe current value of the Origin register of the <code>XCVM</code>.\nThe number of parent junctions at the beginning of this …\nThe <code>query_id</code> field of the <code>QueryResponse</code> message.\nMutate <code>self</code> so that it represents the same location from …\nConsume <code>self</code> and return a new value representing the same …\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe current value of the Topic register of the <code>XCVM</code>.\nCheck whether the given <code>_message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe EIP-155 chain ID.\nThe key type ID for parachain assignment key.\nAbort the upgrade process. There is something wrong with …\nAbridged version of <code>HostConfiguration</code> (from the …\nAbridged version of <code>HrmpChannel</code> (from the <code>Hrmp</code> parachains …\nAlias to the opaque account ID type for this chain, …\nThe type for looking up accounts. We don’t expect more …\nAlias to the public key used for this chain, actually a …\nFor approval and dispute request.\nAn approval vote from the approval checking phase.\nAn approval vote from the new version. We can’t create …\nA vote of approval on a candidate.\nA vote of approval for multiple candidates.\nApproval voting configuration parameters\nThe public key of a keypair used by a validator for …\nThe full keypair used by a validator for determining …\nCandidate’s acceptance limitations for asynchronous …\nAn authority discovery authority identifier.\nA bitfield concerning availability of backed candidates.\nA backed (or backable, depending on context) candidate.\nFor backing requests.\nA seconded statement on a candidate from the backing phase.\nA valid statement on a candidate from the backing phase.\nThe balance of an account. 128-bits (or 38 significant …\nBlake2-256 Hash implementation.\nBlock type.\nBlock ID.\nThe block number type used by Polkadot. 32-bits will allow …\nThis candidate receipt was backed in the most recent block.\nCommitments made in a <code>CandidateReceipt</code>. Many of these are …\nA unique descriptor of the candidate receipt.\nAn event concerning a candidate.\nUnit type wrapper around <code>Hash</code> that represents a candidate …\nThis candidate receipt was included and became a parablock …\nThe index of the candidate in the list of candidates fully …\nA candidate-receipt.\nThis candidate receipt was not made available in time and …\nIdentifier for a chain. 32-bit should be plenty.\nA <em>checked</em> set of dispute statements.\nA set of <em>checked</em> dispute statements.\nIndex of an availability chunk.\nIdentity that collators use.\nA Parachain collator keypair.\nSignature on candidate’s block data by a collator.\nA candidate-receipt with commitments directly included.\nStatements that can be made about parachain candidates. …\nA consensus log item for polkadot validation. To be used …\nThe unique (during session) index of a core.\nThe state of a particular availability core.\nThe entire state of a dispute.\nA statement about a candidate, to be used within the …\nA set of statements about a specific candidate.\nA message sent from the relay-chain down to a parachain.\nA param is duplicated.\nAn ECDSA/SECP256k1 signature.\nAn Ed25519 signature.\nThis helper trait ensures that we can encode <code>Statement</code> as …\nThe different executor parameters for changing the …\nPossible inconsistencies of executor params.\nDeterministically serialized execution environment …\nUnit type wrapper around <code>Hash</code> that represents an execution …\nUnit type wrapper around <code>Hash</code> that represents a hash of …\nAn explicit statement issued as part of a dispute.\nAn explicit statement issued as part of a dispute.\nAn explicit attestation. This corresponds to issuance of a …\nAn explicit statement on a candidate issued as part of a …\nGovernance requests to auto-approve every candidate …\nThe core is currently free and there is nothing scheduled. …\nThe core was not occupied to begin with.\nApply the pending code change. The parablock that is built …\nThe unique (during session) index of a validator group.\nA helper data-type for tracking validator-group rotations.\nA hash of some data used by the relay chain.\nIdentify by block header hash.\nAbstraction around hashing\nParachain head data included in the chain.\nHeader type.\nA type that uniquely identifies an HRMP channel. An HRMP …\nUnique identifier of a parachain.\nImplicit validity attestation by issuing. This corresponds …\nA wrapped version of <code>DownwardMessage</code>. The difference is …\nAn HRMP message seen from the perspective of a recipient.\nThe candidate occupying the core was made available and …\nTwo param values are incompatible or senseless when put …\nIncrement a counter metric by value.\nIncrement a counter metric with labels by value.\n<code>IndexedVec</code> struct indexed by type specific indices.\nParachains inherent-data passed into the runtime by a …\nAn invalid statement, of the given kind.\nDifferent kinds of statements of invalidity on a candidate.\nThe Ethereum signature is invalid.\nAn invalid statement was made for a claim.\nBacking votes threshold used from the host prior to …\nThe ID of the first publicly registrable parachain.\nMaximum compressed code size we support right now. At the …\nMaximum head data size we support right now.\nMaximum PoV size we support right now.\nCompressed or not the wasm blob can never be less than 9 …\nMaximum number of memory pages (64KiB bytes per page) the …\nAn instant or duration in time.\nA set of dispute statements.\nNo permission to execute the call.\nBit indices in the <code>HostConfiguration.node_features</code> that …\nIndex of a transaction in the relay chain. 32-bit should …\nIdentify by block number.\nDefault queue size we use for the on-demand order book.\nMaximum for maximum queue size.\nObserve histogram value\nThe core is currently occupied.\nInformation about a core which is currently occupied.\nAn assumption being made about the state of an occupied …\nAn HRMP message seen from the perspective of a sender.\nThe hash type produced.\nA param value exceeds its limitation.\nUnique identifier for the Parachains Inherent\nThe key type ID for a parachain validator key.\nA parachain scheduled a code upgrade.\nA parachain upgraded its code.\nA claim on authoring the next block for a given parathread …\nAn entry tracking a claim to ensure it does not pass the …\nThe validation data provides information about how to …\nFor prechecking requests.\nMax. amount of memory the preparation worker is allowed to …\nFor execution and heads-up requests.\nThere is an upgrade restriction and there are no details …\nA statement from the specified validator whether the given …\nType discriminator for PVF execution.\nPVF execution timeouts, in millisecond. Always ensure that …\nType discriminator for PVF preparation.\nPVF preparation timeouts, in millisecond. Always ensure …\nThe information that goes alongside a …\nA signal to revert the block number in the same chain as …\nA metric label.\nA metric label value.\nA set of metric label values.\nA set of metric labels.\nRuntime metric operations.\nRuntime metric update event.\nThe core is currently free, with a para scheduled and …\nInformation about a core which is currently occupied.\nScheduler configuration parameters. All coretime/ondemand …\nScraped runtime backing votes and resolved disputes.\nProposal of a parachain candidate.\nSimple index type with which we can count sessions.\nInformation about validator sets of a session.\nAlias to type for a signature for a transaction on the …\nSigned data with signature already verified.\nA bitfield signed by a particular validator about the …\nA set of signed availability bitfields. Should be sorted …\nA signed compact statement, suitable to be sent to the …\nThe signer has no claim.\nA type returned by runtime with current session index and …\nUnit type wrapper that represents a slot.\nAn Sr25519 signature.\nWasm logical stack size limit (max. number of Wasm values …\nExecutor machine stack size limit, in bytes. If …\nThe candidate occupying the core timed out and freed the …\nSimple blob to hold an extrinsic without committing to its …\nUnchecked signed data, can be converted to <code>Signed</code> by …\nA signed bitfield with signature not yet checked.\nA set of unchecked signed availability bitfields. Should …\nA signed compact statement, with signature not yet checked.\nA struct that the relay-chain communicates to a parachain …\nA possible upgrade restriction that prevents a parachain …\nA message from a parachain to its Relay Chain.\nA valid statement, of the given kind.\nState that a parachain candidate is valid.\nDifferent kinds of statements of validity on  a candidate.\nParachain validation code.\nUnit type wrapper around <code>Hash</code> that represents the …\nIdentity that parachain validators use when signing …\nIndex of the validator is used as a lightweight …\nA Parachain validator keypair.\nSignature with which parachain validators sign blocks.\nAn either implicit or explicit attestation to the validity …\nCustom validity errors used in Polkadot while validating …\nEnables WASM bulk memory proposal\n<code>true</code> if the subject passed pre-checking and <code>false</code> …\nAll the validators actively participating in parachain …\nHow many ancestors of a relay parent are allowed to build …\nReturns a labels as <code>Vec&lt;&amp;str&gt;</code>.\nGet a reference to data as unchecked.\nThe assignment keys for validators.\nAsynchronous backing parameters.\nA bitfield with 1 bit for each validator in the set. <code>1</code> …\nBacked candidates for inclusion in the block.\nSet of backing validators for each candidate, represented …\nSign this payload with the given context and pair.\nImmutably access the signature.\nSigned bitfields by validators about availability.\nCreate a new <code>GroupRotationInfo</code> with one further rotation …\nThe maximum number of validators <code>f</code> which may safely be …\nGet a reference to the committed candidate receipt of the …\nThe descriptor of the candidate occupying the core.\nGet the underlying candidate hash this references.\nThe hash of the candidate occupying the core.\nThe candidate hash.\nThe candidate referenced by this set.\nVerify the backing of the given candidate.\nCheck the signature of the collator within this descriptor.\nCheck params coherence.\nValidate the payload given the context and public key …\nCheck the signature on a dispute statement.\nThe claim.\nReturn the inner values as vec.\nThe collator’s sr25519 public key.\nDEPRECATED: see: …\nGet a collator signature payload on a relay-parent, …\nThe commitments of the candidate receipt.\nThe hash of the encoded commitments made as a result of …\nThe block number at which the dispute concluded on-chain.\nConvert <code>Payload</code> into <code>RealPayload</code>.\nConvert <code>Payload</code> into some claimed <code>SuperPayload</code> if the …\nConvert <code>Payload</code> into some converted <code>SuperPayload</code> if the …\nReturns the index of the group assigned to the given core. …\nDoes this committed candidate receipt corresponds to the …\nThe message payload.\nThe message payload.\nGet a reference to the candidate descriptor.\nGet a reference to the candidate descriptor.\nGet a reference to the descriptor of the candidate.\nThe descriptor of the candidate.\nThe descriptor of the candidate.\nA chain-specific digest of data useful for light clients …\nValidators’ authority discovery keys for the session in …\nThe amount of sessions to keep for disputes.\nOn-chain-recorded set of disputes. Note that the above …\nSets of dispute votes for inclusion,\nAdjust the configured needed backing votes with the size …\nConvert Self into T, then encode T.\nThe root of a block’s erasure encoding Merkle tree.\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempt to convert a reference to a generic digest item …\nCreate a new executor parameter hash from <code>H256</code> hash\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new slot by calculating it from the given …\nReturns a reference to an element indexed using <code>K</code>.\nReturns a mutable reference to an element indexed using <code>K</code>.\nReturns the index of the group needed to validate the core …\nThe group assigned to distribute availability pieces of …\nHow often groups rotate. 0 means never.\nHow often parachain groups should be rotated across …\nReturns the hash of this head data.\nGet the blake2-256 hash of the validation code bytes.\nProduce the hash of some byte-slice.\nReturns hash of the set of execution environment parameters\nComputes the blake2-256 hash of the receipt.\nComputes the hash of the committed candidate receipt.\nCompute the blake2-256 hash of the commitments.\nCompute this candidate’s hash.\nProduce the hash of some codec-encodable value.\nThe head-data produced as a result of execution.\nThe block header.\nHorizontal messages sent by the parachain.\nThe maximum number of outbound HRMP messages can be sent …\nThe mark which specifies the block number up to which all …\nWhether the statement indicates invalidity.\nWhether the statement indicates validity.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a consuming iterator.\nDiscard signing data, get the payload\nConvert back to an unchecked type.\nStatement is backing statement.\nWhether the statement is from the backing phase.\nReturns true if the underlying container is empty.\nIs this core state <code>Self::Occupied</code>?\nReturns true if the given id corresponds to either the …\nReturns an iterator over the underlying vector.\nReturns a mutable iterator over the underlying vector.\nReturns the block number of the last rotation before or …\nReturns number of elements in vector.\nThe amount of blocks ahead to schedule paras.\nThe maximum number of candidates <code>approval-voting</code> can vote …\nThe max number of times a claim can time out in …\nThe maximum number of para blocks between the para head in …\nThe maximum number of messages that can be pending in the …\nThe maximum validation code size, in bytes.\nThe maximum head-data size, in bytes.\nThe maximum message size that could be put into the …\nThe maximum legal size of a POV block, in bytes.\nThe maximum total size of the messages that can be pending …\nThe maximum number of messages that a candidate can …\nThe maximum size of an upward message that can be sent by …\nTotal number of individual messages allowed in the …\nTotal size of messages allowed in the parachain -&gt; …\nThe maximum number of validators to have per core.\nReturns the metric name.\nThe name of the metric.\nA head of the Message Queue Chain for this channel. Each …\nThe actual downward message to processes.\nThe current number of messages pending in the channel. …\nThe number of availability cores used by the protocol …\nThe number of delay tranches in total.\nThe number of validators needed to approve a block.\nUsed to create a <code>Signed</code> from already existing parts.\nUsed to create a <code>UncheckedSigned</code> from already existing …\nCreates a new, empty executor parameter set\nConstructor\nNew validation code.\nReturns the block number of the next rotation after the …\nIf this core is freed by availability, this is the …\nIf this core is freed by being timed-out, this is the …\nHow many slots (BABE / SASSAFRAS) must pass before an …\nThe current block number.\nHow many cores are managed by the coretime chain.\nThe block number.\nThe relay-chain block number this began occupying the core …\nThe minimum amount needed to claim a slot in the spot …\nHow quickly the fee rises in reaction to increased …\nThe maximum queue size of the pay as you go module.\nThe target utilization of the spot price queue in …\nThe operation applied to the metric.\nThe ordered Patricia tree root of the given <code>input</code>.\nHash of the para header that is being generated by this …\nGet the Para currently occupying this core.\nReturns the scheduled <code>ParaId</code> for the core or <code>None</code> if …\nThe ID of the para this is a candidate for.\nThe ID of a para scheduled.\nAvailability timeout for a block on a core, measured in …\nThe parent hash.\nHash of the parent.\nThe parent head-data.\nThe parent block header. Used for checking state proofs.\nImmutably access the payload.\nGet the payload data for this type of dispute statement.\nThe blake2-256 hash of the persisted validation data. This …\nThe blake2-256 hash of the PoV.\nReturns pre-checking memory limit, if any\nReturns hash of preparation-related executor parameters\nThe number of messages processed from the DMQ.\nReturns a PVF execution timeout, if any\nReturns a PVF preparation timeout, if any\nA secure random seed for the session, gathered from BABE.\nGet this candidate’s receipt.\nThe para that will get this message in its downward …\nThe para that acts as the recipient in this channel.\nThe hash of the relay-chain block this is executed in the …\nThe relay-chain block number this is in the context of.\nThe relay-chain block storage root this is in the context …\nThe number of samples we do of <code>relay_vrf_modulo</code>.\nNumber of retries\nRuntime API module declares the <code>trait ParachainHost</code> which …\nSaturating addition.\nSaturating subtraction.\nReturns the core selector and claim queue offset the …\nThe para that acts as the sender in this channel.\nThe block number at which these messages were put into the …\nThe block number at which this message was sent. …\nThe session in which the block was included.\nThe session index of the candidate.\nThe session index of the candidate.\nCurrent session index.\nThe index of a session during which this statement is …\nThe block number where the session started.\nSet the signature. Only should be used for creating …\nUpdate the validator indices and core index in the …\nCreate a new <code>Signed</code> by signing data.\nImmutably access the signature.\nGet a reference to the signature.\nSignature on blake2-256 of components of this receipt: The …\nProduce the underlying signed payload of the attestation, …\nYields the signing payload for this approval vote.\nYields the signing payload for this approval vote.\nProduce the payload used for signing this type of …\nYields the payload used for validator signatures on this …\nProduce the payload used for signing this type of …\nThe block number at which the dispute started on-chain.\nThe state trie merkle root\nStatements about the candidate.\nThe validation code hash that was checked.\nThe supermajority threshold of validators which represents …\nThe relay-chain block this will time-out at, if any.\nTimestamp of the start of the slot.\nProduce the underlying signed payload of the attestation, …\nTransforms this into a plain <code>CandidateReceipt</code>.\nReturns contained vector.\nThe total size in bytes of all message payloads in the …\nThe Patricia tree root of the given mapping.\nTry to convert from <code>UncheckedSigned</code> by checking the …\nCheck signature and convert to <code>Signed</code> if successful.\nThe number of blocks a claim stays in the scheduler’s …\nConvert <code>Payload</code> into <code>RealPayload</code>.\nConvert from an unchecked, the verification of correctness …\nDiscard signing data, get the payload\nImmutably access the payload.\nImmutably access the signature.\nImmutably access the validator index.\nMessages destined to be interpreted by the Relay chain …\n<code>V2</code> primitives.\n<code>V7</code> Primitives.\nWhether the candidate is valid\nThe blake2-256 hash of the validation code bytes.\nThe minimum period, in blocks, between which parachains …\nThe delay, in blocks, before a validation upgrade is …\nValidators in shuffled ordering - these are the validator …\nImmutably access the validator index.\nThe index of the validator from which this statement …\nGet a copy of the validator indices and the assumed core …\nValidators in canonical ordering.\nA bitfield indicating all validators against the candidate.\nA bitfield indicating all validators for the candidate.\nGet a reference to the validity votes of the candidate.\nGet a mutable reference to validity votes of the para.\nStaging Primitives.\nThe zeroth delay tranche width.\nThe API for querying the state of parachains on-chain.\nApproval voting configuration parameters\nReturns the persisted validation data for the given <code>ParaId</code> …\nReturns candidate’s acceptance limitations for …\nYields information on all availability cores as relevant …\nGet a vector of events concerning candidates that occurred …\nGet the receipt of a candidate pending availability. This …\nElastic scaling support\nChecks if the given validation outputs pass the acceptance …\nClaim queue\nReturns a list of all disabled validators at the given …\nReturns all onchain disputes.\nGet all the pending inbound messages in the downward …\nGet the contents of all channels addressed to the given …\nReturns a merkle proof of a validator session key. NOTE: …\nGet the minimum number of backing votes for a parachain …\nGet node features. This is a staging method! Do not use on …\nScrape dispute relevant from on-chain, backing votes and …\nReturns the state of parachain backing for a given para.\nYields the persisted validation data for the given <code>ParaId</code> …\nReturns code hashes of PVFs that require pre-checking by …\nReturns execution parameters for the session.\nReturns the session index expected at a child of the block.\nGet the session info for the given session, if stored.\nSubmits a PVF pre-checking statement into the transaction …\nSubmit an unsigned extrinsic to slash validators who lost …\nReturns a list of validators that lost a past session …\nFetch the validation code used by a para, making the given …\nGet the validation code from its hash.\nFetch the hash of the validation code used by a para, …\nReturns the validator groups and rotation info localized …\nGet the current validators.\nAlias to the opaque account ID type for this chain, …\nThe type for looking up accounts. We don’t expect more …\nAlias to the public key used for this chain, actually a …\nThe balance of an account. 128-bits (or 38 significant …\nBlake2-256 Hash implementation.\nBlock type.\nBlock ID.\nThe block number type used by Polkadot. 32-bits will allow …\nUnit type wrapper around <code>Hash</code> that represents a candidate …\nIdentifier for a chain. 32-bit should be plenty.\nA message sent from the relay-chain down to a parachain.\nAn ECDSA/SECP256k1 signature.\nAn Ed25519 signature.\nA hash of some data used by the relay chain.\nIdentify by block header hash.\nAbstraction around hashing\nHeader type.\nA wrapped version of <code>DownwardMessage</code>. The difference is …\nAn HRMP message seen from the perspective of a recipient.\nAn instant or duration in time.\nIndex of a transaction in the relay chain. 32-bit should …\nIdentify by block number.\nAn HRMP message seen from the perspective of a sender.\nThe hash type produced.\nThe information that goes alongside a …\nAlias to type for a signature for a transaction on the …\nAn Sr25519 signature.\nSimple blob to hold an extrinsic without committing to its …\nThe message payload.\nThe message payload.\nA chain-specific digest of data useful for light clients …\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nProduce the hash of some byte-slice.\nProduce the hash of some codec-encodable value.\nThe block header.\nThe actual downward message to processes.\nThe block number.\nThe ordered Patricia tree root of the given <code>input</code>.\nThe parent hash.\nThe para that will get this message in its downward …\nThe block number at which these messages were put into the …\nThe block number at which this message was sent. …\nThe state trie merkle root\nThe Patricia tree root of the given mapping.\nThe key type ID for parachain assignment key.\nAbort the upgrade process. There is something wrong with …\nAbridged version of <code>HostConfiguration</code> (from the …\nAbridged version of <code>HrmpChannel</code> (from the <code>Hrmp</code> parachains …\nAlias to the opaque account ID type for this chain, …\nThe type for looking up accounts. We don’t expect more …\nAlias to the public key used for this chain, actually a …\nFor approval and dispute request.\nAn approval vote from the approval checking phase.\nAn approval vote from the new version. We can’t create …\nA vote of approval on a candidate.\nA vote of approval for multiple candidates.\nApproval voting configuration parameters\nThe public key of a keypair used by a validator for …\nThe full keypair used by a validator for determining …\nCandidate’s acceptance limitations for asynchronous …\nAn authority discovery authority identifier.\nA bitfield concerning availability of backed candidates.\nA backed (or backable, depending on context) candidate.\nFor backing requests.\nA seconded statement on a candidate from the backing phase.\nA valid statement on a candidate from the backing phase.\nThe balance of an account. 128-bits (or 38 significant …\nBlake2-256 Hash implementation.\nBlock type.\nBlock ID.\nThe block number type used by Polkadot. 32-bits will allow …\nThe key type ID for a collator key.\nThis candidate receipt was backed in the most recent block.\nCommitments made in a <code>CandidateReceipt</code>. Many of these are …\nA unique descriptor of the candidate receipt.\nAn event concerning a candidate.\nUnit type wrapper around <code>Hash</code> that represents a candidate …\nThis candidate receipt was included and became a parablock …\nThe index of the candidate in the list of candidates fully …\nA candidate-receipt.\nThis candidate receipt was not made available in time and …\nIdentifier for a chain. 32-bit should be plenty.\nA <em>checked</em> set of dispute statements.\nA set of <em>checked</em> dispute statements.\nIndex of an availability chunk.\nIdentity that collators use.\nA Parachain collator keypair.\nSignature on candidate’s block data by a collator.\nA candidate-receipt with commitments directly included.\nStatements that can be made about parachain candidates. …\nA consensus log item for polkadot validation. To be used …\nThe unique (during session) index of a core.\nThe state of a particular availability core.\nThe entire state of a dispute.\nA statement about a candidate, to be used within the …\nA set of statements about a specific candidate.\nA message sent from the relay-chain down to a parachain.\nA param is duplicated.\nAn ECDSA/SECP256k1 signature.\nAn Ed25519 signature.\nThis helper trait ensures that we can encode <code>Statement</code> as …\nThe different executor parameters for changing the …\nPossible inconsistencies of executor params.\nDeterministically serialized execution environment …\nUnit type wrapper around <code>Hash</code> that represents an execution …\nUnit type wrapper around <code>Hash</code> that represents a hash of …\nAn explicit statement issued as part of a dispute.\nAn explicit statement issued as part of a dispute.\nAn explicit attestation. This corresponds to issuance of a …\nAn explicit statement on a candidate issued as part of a …\nGovernance requests to auto-approve every candidate …\nThe core is currently free and there is nothing scheduled. …\nThe core was not occupied to begin with.\nApply the pending code change. The parablock that is built …\nThe unique (during session) index of a validator group.\nA helper data-type for tracking validator-group rotations.\nA hash of some data used by the relay chain.\nIdentify by block header hash.\nAbstraction around hashing\nParachain head data included in the chain.\nHeader type.\nA type that uniquely identifies an HRMP channel. An HRMP …\nUnique identifier of a parachain.\nImplicit validity attestation by issuing. This corresponds …\nA wrapped version of <code>DownwardMessage</code>. The difference is …\nAn HRMP message seen from the perspective of a recipient.\nThe candidate occupying the core was made available and …\nTwo param values are incompatible or senseless when put …\nIncrement a counter metric by value.\nIncrement a counter metric with labels by value.\n<code>IndexedVec</code> struct indexed by type specific indices.\nParachains inherent-data passed into the runtime by a …\nAn invalid statement, of the given kind.\nDifferent kinds of statements of invalidity on a candidate.\nThe Ethereum signature is invalid.\nAn invalid statement was made for a claim.\nBacking votes threshold used from the host prior to …\nThe ID of the first publicly registrable parachain.\nMaximum compressed code size we support right now. At the …\nMaximum head data size we support right now.\nMaximum PoV size we support right now.\nCompressed or not the wasm blob can never be less than 9 …\nMaximum number of memory pages (64KiB bytes per page) the …\nAn instant or duration in time.\nA set of dispute statements.\nNo permission to execute the call.\nBit indices in the <code>HostConfiguration.node_features</code> that …\nIndex of a transaction in the relay chain. 32-bit should …\nIdentify by block number.\nDefault queue size we use for the on-demand order book.\nMaximum for maximum queue size.\nObserve histogram value\nThe core is currently occupied.\nInformation about a core which is currently occupied.\nAn assumption being made about the state of an occupied …\nAn HRMP message seen from the perspective of a sender.\nThe hash type produced.\nA param value exceeds its limitation.\nUnique identifier for the Parachains Inherent\nThe key type ID for a parachain validator key.\nConsensus engine id for polkadot v1 consensus engine.\nA parachain scheduled a code upgrade.\nA parachain upgraded its code.\nA claim on authoring the next block for a given parathread …\nAn entry tracking a claim to ensure it does not pass the …\nThe validation data provides information about how to …\nFor prechecking requests.\nMax. amount of memory the preparation worker is allowed to …\nFor execution and heads-up requests.\nThere is an upgrade restriction and there are no details …\nA statement from the specified validator whether the given …\nType discriminator for PVF execution.\nPVF execution timeouts, in millisecond. Always ensure that …\nType discriminator for PVF preparation.\nPVF preparation timeouts, in millisecond. Always ensure …\nThe information that goes alongside a …\nA signal to revert the block number in the same chain as …\nA metric label.\nA metric label value.\nA set of metric label values.\nA set of metric labels.\nRuntime metric operations.\nRuntime metric update event.\nThe core is currently free, with a para scheduled and …\nInformation about a core which is currently occupied.\nScheduler configuration parameters. All coretime/ondemand …\nScraped runtime backing votes and resolved disputes.\nProposal of a parachain candidate.\nSimple index type with which we can count sessions.\nInformation about validator sets of a session.\nAlias to type for a signature for a transaction on the …\nSigned data with signature already verified.\nA bitfield signed by a particular validator about the …\nA set of signed availability bitfields. Should be sorted …\nA signed compact statement, suitable to be sent to the …\nThe signer has no claim.\nA type returned by runtime with current session index and …\nUnit type wrapper that represents a slot.\nAn Sr25519 signature.\nWasm logical stack size limit (max. number of Wasm values …\nExecutor machine stack size limit, in bytes. If …\nThe candidate occupying the core timed out and freed the …\nTrait required for type specific indices e.g. …\nSimple blob to hold an extrinsic without committing to its …\nUnchecked signed data, can be converted to <code>Signed</code> by …\nA signed bitfield with signature not yet checked.\nA set of unchecked signed availability bitfields. Should …\nA signed compact statement, with signature not yet checked.\nA struct that the relay-chain communicates to a parachain …\nA possible upgrade restriction that prevents a parachain …\nA message from a parachain to its Relay Chain.\nA valid statement, of the given kind.\nState that a parachain candidate is valid.\nDifferent kinds of statements of validity on  a candidate.\nParachain validation code.\nUnit type wrapper around <code>Hash</code> that represents the …\nIdentity that parachain validators use when signing …\nIndex of the validator is used as a lightweight …\nA Parachain validator keypair.\nSignature with which parachain validators sign blocks.\nAn either implicit or explicit attestation to the validity …\nCustom validity errors used in Polkadot while validating …\nEnables WASM bulk memory proposal\nA well-known and typed storage key.\n<code>true</code> if the subject passed pre-checking and <code>false</code> …\nAll the validators actively participating in parachain …\nHow many ancestors of a relay parent are allowed to build …\nThe assignment keys for validators.\nAsynchronous backing primitives.\nAsynchronous backing parameters.\nA bitfield with 1 bit for each validator in the set. <code>1</code> …\nBacked candidates for inclusion in the block.\nSet of backing validators for each candidate, represented …\nSigned bitfields by validators about availability.\nThe maximum number of validators <code>f</code> which may safely be …\nThe descriptor of the candidate occupying the core.\nThe hash of the candidate occupying the core.\nThe candidate hash.\nThe candidate referenced by this set.\nVerify the backing of the given candidate.\nThe claim.\nThe collator’s sr25519 public key.\nDEPRECATED: see: …\nGet a collator signature payload on a relay-parent, …\nThe commitments of the candidate receipt.\nThe hash of the encoded commitments made as a result of …\nThe block number at which the dispute concluded on-chain.\nThe message payload.\nThe message payload.\nThe descriptor of the candidate.\nThe descriptor of the candidate.\nA chain-specific digest of data useful for light clients …\nValidators’ authority discovery keys for the session in …\nThe amount of sessions to keep for disputes.\nOn-chain-recorded set of disputes. Note that the above …\nSets of dispute votes for inclusion,\nAdjust the configured needed backing votes with the size …\nConvert Self into T, then encode T.\nThe root of a block’s erasure encoding Merkle tree.\nAbstract execution environment parameter set.\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGets the value or <code>None</code> if it does not exist or decoding …\nThe group assigned to distribute availability pieces of …\nHow often groups rotate. 0 means never.\nHow often parachain groups should be rotated across …\nProduce the hash of some byte-slice.\nProduce the hash of some codec-encodable value.\nThe head-data produced as a result of execution.\nThe block header.\nHorizontal messages sent by the parachain.\nThe maximum number of outbound HRMP messages can be sent …\nThe mark which specifies the block number up to which all …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe raw storage key.\nThe amount of blocks ahead to schedule paras.\nThe maximum number of candidates <code>approval-voting</code> can vote …\nThe max number of times a claim can time out in …\nThe maximum number of para blocks between the para head in …\nThe maximum number of messages that can be pending in the …\nThe maximum validation code size, in bytes.\nThe maximum head-data size, in bytes.\nThe maximum message size that could be put into the …\nThe maximum legal size of a POV block, in bytes.\nThe maximum total size of the messages that can be pending …\nThe maximum number of messages that a candidate can …\nThe maximum size of an upward message that can be sent by …\nTotal number of individual messages allowed in the …\nTotal size of messages allowed in the parachain -&gt; …\nThe maximum number of validators to have per core.\nContains all runtime metrics defined as constants.\nThe name of the metric.\nA head of the Message Queue Chain for this channel. Each …\nThe actual downward message to processes.\nThe current number of messages pending in the channel. …\nThe number of availability cores used by the protocol …\nThe number of delay tranches in total.\nThe number of validators needed to approve a block.\nNew validation code.\nIf this core is freed by availability, this is the …\nIf this core is freed by being timed-out, this is the …\nHow many slots (BABE / SASSAFRAS) must pass before an …\nModule containing feature-specific bit indices into the …\nThe current block number.\nHow many cores are managed by the coretime chain.\nThe block number.\nThe relay-chain block number this began occupying the core …\nThe minimum amount needed to claim a slot in the spot …\nHow quickly the fee rises in reaction to increased …\nThe maximum queue size of the pay as you go module.\nThe target utilization of the spot price queue in …\nThe operation applied to the metric.\nThe ordered Patricia tree root of the given <code>input</code>.\nHash of the para header that is being generated by this …\nThe ID of the para this is a candidate for.\nThe ID of a para scheduled.\nAvailability timeout for a block on a core, measured in …\nThe parent hash.\nHash of the parent.\nThe parent head-data.\nThe parent block header. Used for checking state proofs.\nThe blake2-256 hash of the persisted validation data. This …\nThe blake2-256 hash of the PoV.\nThe number of messages processed from the DMQ.\nA secure random seed for the session, gathered from BABE.\nThe para that will get this message in its downward …\nThe para that acts as the recipient in this channel.\nThe hash of the relay-chain block this is executed in the …\nThe relay-chain block number this is in the context of.\nThe relay-chain block storage root this is in the context …\nThe number of samples we do of <code>relay_vrf_modulo</code>.\nNumber of retries\nThe para that acts as the sender in this channel.\nThe block number at which these messages were put into the …\nThe block number at which this message was sent. …\nThe session in which the block was included.\nThe session index of the candidate.\nThe session index of the candidate.\nCurrent session index.\nThe index of a session during which this statement is …\nThe block number where the session started.\nSets the value.\nSignature on blake2-256 of components of this receipt: The …\nPrimitives types used for dispute slashing.\nThe block number at which the dispute started on-chain.\nThe state trie merkle root\nStatements about the candidate.\nThe validation code hash that was checked.\nThe supermajority threshold of validators which represents …\nThe relay-chain block this will time-out at, if any.\nThe total size in bytes of all message payloads in the …\nThe Patricia tree root of the given mapping.\nThe number of blocks a claim stays in the scheduler’s …\nReturns the index associated to this value.\nMessages destined to be interpreted by the Relay chain …\nWhether the candidate is valid\nThe blake2-256 hash of the validation code bytes.\nThe minimum period, in blocks, between which parachains …\nThe delay, in blocks, before a validation upgrade is …\nValidators in shuffled ordering - these are the validator …\nThe index of the validator from which this statement …\nValidators in canonical ordering.\nA bitfield indicating all validators against the candidate.\nA bitfield indicating all validators for the candidate.\nA declarations of storage keys where an external observer …\nThe zeroth delay tranche width.\nCandidate’s acceptance limitations for asynchronous …\nThe per-parachain state of the backing system, including …\nA candidate pending availability.\nConstraints on the actions that can be taken by a new …\nConstraints on inbound HRMP channels.\nConstraints on outbound HRMP channels.\nHow many ancestors of a relay parent are allowed to build …\nThe maximum bytes that can be written to the channel.\nThe hash of the candidate.\nThe commitments of the candidate.\nThe state-machine constraints of the parachain.\nThe candidate’s descriptor.\nRemaining DMP queue. Only includes sent-at block numbers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe future validation code hash, if any, and at what …\nThe limitations of all registered outbound HRMP channels.\nThe limitations of all registered inbound HRMP channels.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum number of para blocks between the para head in …\nThe maximum new validation code size allowed, in bytes.\nThe maximum number of HRMP messages allowed per candidate.\nThe maximum Proof-of-Validity size allowed, in bytes.\nThe maximum Proof-of-Validity size allowed, in bytes.\nThe maximum number of UMP messages allowed per candidate.\nThe maximum messages that can be written to the channel.\nThe minimum relay-parent number accepted under these …\nThe candidates pending availability. These should be …\nThe candidate’s relay parent’s number.\nThe required parent head-data of the parachain.\nThe amount of UMP messages remaining.\nThe amount of UMP bytes remaining.\nThe code upgrade restriction signal as-of this parachain.\nAn exhaustive set of all valid watermarks, sorted …\nThe expected validation-code-hash of this parachain.\nDefault PVF execution timeout for approval or disputes.\nDefault PVF execution timeout for backing.\nDefault PVF preparation timeout for execution requests.\nDefault maximum number of wasm values allowed for the …\nDefault maximum number of bytes devoted for the stack …\nDefault PVF preparation timeout for prechecking requests.\nA param is duplicated.\nThe different executor parameters for changing the …\nPossible inconsistencies of executor params.\nDeterministically serialized execution environment …\nUnit type wrapper around <code>Hash</code> that represents an execution …\nUnit type wrapper around <code>Hash</code> that represents a hash of …\nTwo param values are incompatible or senseless when put …\nThe upper bound of <code>ExecutorParam::StackLogicalMax</code>.\nThe lower bound of <code>ExecutorParam::StackLogicalMax</code>.\nThe limit of <code>ExecutorParam::MaxMemoryPages</code>.\nMaximum number of memory pages (64KiB bytes per page) the …\nA param value exceeds its limitation.\nThe upper bound of <code>ExecutorParam::PrecheckingMaxMemory</code>.\nThe lower bound of <code>ExecutorParam::PrecheckingMaxMemory</code>.\nMax. amount of memory the preparation worker is allowed to …\nPVF execution timeouts, in millisecond. Always ensure that …\nPVF preparation timeouts, in millisecond. Always ensure …\nWasm logical stack size limit (max. number of Wasm values …\nExecutor machine stack size limit, in bytes. If …\nEnables WASM bulk memory proposal\n<code>Counter</code> metric definition.\n<code>CounterVec</code> metric definition.\n<code>Histogram</code> metric definition\nCounts the number of <code>valid</code> and <code>invalid</code> bitfields signature …\nCounts the number of bitfields processed in …\nCounts the <code>total</code>, <code>sanitized</code> and <code>included</code> number of …\nCounts the number of <code>imported</code>, <code>current</code> and …\nCounts parachain inherent data weights. Use <code>before</code> and …\nMeasures how much time does it take to verify a single …\nThe buckets for the histogram\nThe description of the metric.\nThe description of the metric.\nThe description of the metric.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe label names of the metric.\nThe name of the metric.\nThe name of the metric.\nThe name of the metric.\nTells if the chunk mapping feature is enabled. Enables the …\nEnables node side support of <code>CoreIndex</code> committed candidate …\nThis feature enables the extension of …\nTells if tranch0 assignments could be sent in a single …\nA feature index used to identify a bit into the …\nFirst unassigned feature bit. Every time a new feature …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA minor offence when a validator disputed a valid block.\nWe store most of the information about a lost dispute on …\nTimeslots should uniquely identify offences and are used …\nA severe offence when a validator backed an invalid block.\nAn opaque type used to represent the key ownership proof …\nSlashes that are waiting to be applied once we have …\nThe kind of the dispute offence.\nCandidate hash of the disputed candidate.\nTry to decode this <code>OpaqueKeyOwnershipProof</code> into the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIndices and keys of the validators who lost a dispute and …\nThe dispute outcome.\nThe dispute outcome.\nLength of the encoded proof.\nCreate a new instance of <code>Self</code>.\nCreate a new <code>OpaqueKeyOwnershipProof</code> using the given …\nSession index when the candidate was backed/included.\nTime slot when the dispute occurred.\nThe parachain session key of the validator.\nThe index of the validator who lost a dispute.\nThe currently active host configuration.\nThe current relay chain block randomness\nThe current slot number.\nThe current epoch index.\nThe randomness for one epoch ago\nThe randomness for two epochs ago\nThe MQC head for the downward message queue of the given …\nThe HRMP channel for the given identifier.\nThe list of outbound channels for the given para.\nThe list of inbound channels for the given para.\nHash of the committed head data for a given registered …\nThe upward message dispatch queue remaining capacity for …\nThe upward message dispatch queue for the given para id.\nType safe version of <code>relay_dispatch_queue_size</code>.\nThe signal that indicates whether the parachain should …\nThe signal that indicates whether the parachain is …\nA backed (or backable, depending on context) candidate.\nThis candidate receipt was backed in the most recent block.\nA unique descriptor of the candidate receipt.\nA type representing the version of the candidate …\nAn event concerning a candidate.\nThis candidate receipt was included and became a parablock …\nCandidateReceipt construction errors.\nA candidate-receipt at version 2.\nThis candidate receipt was not made available in time and …\nAn offset in the relay chain claim queue.\nA candidate-receipt with commitments directly included.\nThe core index in commitments doesn’t match the one in …\nA strictly increasing sequence number, typically this …\nThe state of a particular availability core.\nThe core is currently free and there is nothing scheduled. …\nParachains inherent-data passed into the runtime by a …\nA type representing the version of the candidate …\nThe specified core index is invalid.\nThe core selector or claim queue offset is invalid.\nThe parachain is not assigned to any core at specified …\nNo core was selected.\nThe core is currently occupied.\nInformation about a core which is currently occupied.\nThe core is currently free, with a para scheduled and …\nScraped runtime backing votes and resolved disputes.\nA message sent by a parachain to select the core the …\nSignals that a parachain can send to the relay chain via …\nSeparator between <code>XCM</code> and <code>UMPSignal</code>.\nAn unknown version.\nUnknown version.\nThe old candidate descriptor version.\nThe new <code>CandidateDescriptorV2</code>.\nAsync backing primitives\nA bitfield with 1 bit for each validator in the set. <code>1</code> …\nBacked candidates for inclusion in the block.\nSet of backing validators for each candidate, represented …\nSigned bitfields by validators about availability.\nGet a reference to the committed candidate receipt of the …\nThe descriptor of the candidate occupying the core.\nThe hash of the candidate occupying the core.\nChecks if descriptor core index is equal to the commited …\nReturns the collator id if this is a v1 <code>CandidateDescriptor</code>\nThe commitments of the candidate receipt.\nThe hash of the encoded commitments made as a result of …\nReturns the <code>core_index</code> of <code>V2</code> candidate descriptors, <code>None</code> …\nDoes this committed candidate receipt corresponds to the …\nGet a reference to the candidate descriptor.\nGet a reference to the descriptor of the candidate.\nThe descriptor of the candidate.\nThe descriptor of the candidate.\nGet a mutable reference to the descriptor of the …\nSets of dispute votes for inclusion,\nOn-chain-recorded set of disputes. Note that the above …\nReturns the value of $field field.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe group assigned to distribute availability pieces of …\nComputes the blake2-256 hash of the receipt.\nComputes the hash of the committed candidate receipt.\nCompute this candidate’s hash.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructor\nConstructor\nIf this core is freed by availability, this is the …\nIf this core is freed by being timed-out, this is the …\nThe relay-chain block number this began occupying the core …\nReturns the value of $field field.\nReturns the value of $field field.\nThe parent block header. Used for checking state proofs.\nReturns the value of $field field.\nReturns the value of $field field.\nGet this candidate’s receipt.\nReturns the value of $field field.\nThe session in which the block was included.\nReturns the <code>core_index</code> of <code>V2</code> candidate descriptors, <code>None</code> …\nSet the PoV size in the descriptor. Only for tests.\nUpdate the validator indices and core index in the …\nSet the version in the descriptor. Only for tests.\nReturns the collator signature of <code>V1</code> candidate …\nThe relay-chain block this will time-out at, if any.\nTransforms this into a plain <code>CandidateReceipt</code>.\nReturns the value of $field field.\nGet a copy of the validator indices and the assumed core …\nGet a reference to the validity votes of the candidate.\nGet a mutable reference to validity votes of the para.\nReturns the candidate descriptor version. The candidate is …\nThe per-parachain state of the backing system, including …\nA candidate pending availability.\nThe hash of the candidate.\nThe commitments of the candidate.\nThe state-machine constraints of the parachain.\nThe candidate’s descriptor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum Proof-of-Validity size allowed, in bytes.\nThe candidates pending availability. These should be …\nThe candidate’s relay parent’s number.")