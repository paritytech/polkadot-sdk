searchState.loadedDescShard("cumulus_test_service", 0, "Crate used for testing with Cumulus.\nThe signature of the announce block fn.\nUse Aura consensus.\nThe backend type being used by the test service.\nThe client type being used by the test service.\nRecovery handle that fails regularly to simulate …\nSet of test accounts.\nUse the null consensus that will never produce any block.\nThe block-import type being used by the test service.\nAssembly of PartialComponents (enough to run chain ops …\nA Cumulus test node instance used for testing.\nA builder to create a <code>TestNode</code>.\nTransaction pool type used by the test service\nThe <code>MultiaddrWithPeerId</code> to this node. This is useful if …\nA shared backend instance.\nNode’s backend\nUtilities used for benchmarking\nBuild the <code>TestNode</code>.\nA shared client instance.\nClient’s instance.\nMake the node connect to the given parachain node.\nMake the node connect to the given parachain nodes.\nMake the node connect to the given relay chain node.\nMake the node connect to the given relay chain nodes.\nConstruct an extrinsic that can be applied to the test …\nEnable collator for this node.\nAccounts which will have an initial balance.\nInstruct the node to exclusively connect to registered …\nFetch account nonce for key pair\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRecord proofs during import.\nAn import queue.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over all test accounts.\nA keystore container instance.\nNode’s network.\nCreate a new FailingRecoveryHandle\nCreate a new instance of <code>Self</code>.\nStarts a <code>ServiceBuilder</code> for a full service.\nCreate a Cumulus <code>Configuration</code>.\nCreate a crypto <code>Pair</code> from a numeric value.\nGet account id of a <code>numeric</code> account.\nEverything else that needs to be passed into the main …\nRPCHandlers to make RPC queries.\nRun a relay-chain validator node.\nRegister a parachain at this relay chain.\nA chain selection algorithm instance.\nSend an extrinsic to this node.\nStart a node with the given parachain <code>Configuration</code> and …\nThe chain task manager.\nTaskManager’s instance.\nA shared transaction pool.\nNode’s transaction pool\nAllows accessing the parachain storage before the test …\nAllows accessing the relay chain storage before the test …\nConnect to full node via RPC.\nConnect to full node via RPC.\nUse the null consensus that will never author any block.\nWait for <code>count</code> blocks to be imported in the node and then …\nWrap the announce block function of this node.\nCreate accounts by deriving from Alice\nCreates transfer extrinsics pair-wise from elements of …\nCreate a timestamp extrinsic ahead by <code>MinimumPeriod</code> of the …\nCreate a set validation data extrinsic\nPrepare cumulus test runtime for execution\nImport block into the given client and make sure the …\nCreate a block containing setup extrinsics for the glutton …\nSpecialized <code>ChainSpec</code> for the normal parachain runtime.\nThe extensions for the <code>ChainSpec</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nHelper function to generate an account ID from seed.\nGet the chain spec for a specific parachain ID.\nGet the chain spec for a specific parachain ID. The given …\nGenerate collator keys from seed.\nGet the chain spec for a specific parachain ID.\nHelper function to generate a crypto pair from seed\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe id of the Parachain.\nCreates a local testnet genesis with endowed accounts.\nLocal testnet genesis for testing.\nTry to get the extension from the given <code>ChainSpec</code>.")