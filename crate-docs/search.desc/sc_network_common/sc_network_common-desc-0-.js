searchState.loadedDescShard("sc_network_common", 0, "Common data structures of the networking layer.\nMinimum Requirements for a Hash within Networking\nNetwork packet message types. These get serialized and put …\nAbstract interfaces and data structures related to network …\nA unique ID of a request.\nAct as an authority\nThird-party authority.\nActual authority.\nFull node, does not participate in consensus.\nFull node.\nRegular full node.\nLight client node.\nLight node.\nNo network.\nRole that the peer sent to us during the handshake, with …\nRole of the local node.\nBitmask of the roles that a node fulfills.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nTrue for <code>Role::Authority</code>.\nDoes this role represents a client that does not …\nReturns <code>true</code> if no flags are currently stored.\nDoes this role represents a client that holds full chain …\nReturns <code>true</code> for <code>ObservedRole::Light</code>.\nDoes this role represents a client that does not hold full …\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nFull block download and verification.\nDownload blocks and the latest state.\nSync operation mode.\nWarp sync - verify authority set transitions and the …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>self</code> is <code>Self::Warp</code>.\nReturns <code>true</code> if <code>self</code> is <code>Self::LightState</code>.\nNetwork packet message types. These get serialized and put …\nSkip state proof download and verification.\nDownload indexed transactions for recent blocks.\nAnnouncement summary used for debug logging.\nEnumerate in ascending order (from child to parent).\nInclude block body.\nLatest best block.\nHandshake sent when we open a block announces substream.\nNode roles bitmask.\nType alias for using the BlockData type using block type …\nType alias for using the block request type using block …\nType alias for using the BlockResponse type using block …\nBlock state in the chain.\nEnumerate in descending order (from parent to canonical …\nBlock enumeration direction.\nInclude block header.\nInclude indexed transactions for a block.\nInclude a justification for the block.\nInclude block message queue.\nBlock is not part of the best chain.\nInclude block receipt.\nReturns the set containing all flags.\nBest block hash.\nBest block number.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nBlock data for the requested sequence.\nBlock body if requested.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nSequence direction.\nReturns an empty set of flags.\nBits of block data to request.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nStart from this block.\nDecodes attributes, encoded with the <code>encode_to_be_u32()</code> …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGeneric types.\nGenesis block hash.\nBlock header hash.\nBlock header if requested.\nUnique request id.\nId of a request this response was made for.\nBlock body indexed transactions if requested.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nJustification if requested.\nJustifications if requested.\nMaximum number of blocks to return. An implementation …\nBlock message queue if requested.\nReturns the complement of this set of flags.\nBlock receipt if requested.\nRemoves the specified flags in-place.\nRoles of the node.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nEncodes attributes as big endian u32, compatible with …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nAnnounce a new complete block on the network.\nBlock data sent in the response.\nRequest block data from a peer.\nResponse to <code>BlockRequest</code>\nIdentifies starting point of a block sequence.\nStart with given hash.\nStart with given block number.\nBlock data for the requested sequence.\nBlock body if requested.\nData associated with this block announcement, e.g. a …\nSequence direction.\nBits of block data to request.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nStart from this block.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nBlock header hash.\nBlock header if requested.\nNew block header.\nUnique request id.\nId of a request this response was made for.\nBlock body indexed transactions if requested.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nJustification if requested.\nJustifications if requested.\nMaximum number of blocks to return. An implementation …\nBlock message queue if requested.\nBlock receipt if requested.\nBlock state. TODO: Remove <code>Option</code> and custom encoding when …\nDescription of a reputation adjustment for a node.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nNew reputation change with given delta and reason.\nNew reputation change that forces minimum possible …\nReason for reputation change.\nReputation delta.")