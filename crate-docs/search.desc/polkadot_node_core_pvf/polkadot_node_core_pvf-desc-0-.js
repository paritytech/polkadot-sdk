searchState.loadedDescShard("polkadot_node_core_pvf", 0, "The PVF validation host. Responsible for coordinating …\nThe job process (not the worker) has died for one of the …\nThe worker process (not the job) has died during …\nThe response from the worker is received, but the worker …\nCompilation triggered by a candidate validation request.\nConfiguration for the validation host.\nHost could not clear the worker cache after a job.\nHost could not create a hard link to the artifact path.\nCould not create a pipe between the worker and a child …\nCode blob failed to decompress\nCould not find or open compiled artifact file.\nThe temporary file for the artifact could not be created …\nThis priority is used for requests that are required to be …\nThe name of binary spawned to execute a PVF\nThe size of incoming message queue\nPVF execution (compilation is not included) took more time …\nSome communication error occurred with the host.\nPreparation or execution issue caused by an internal …\nSome internal error occurred.\nThe error was raised because the candidate is invalid. …\nA description of an error raised during executing a PVF …\nAn IO error occurred. This state is reported by either the …\nA multiple of the job timeout (in CPU time) for which we …\nThe preparation job process died, due to OOM, a seccomp …\nAn unexpected error has occurred in the preparation job.\nAn unexpected error occurred in the job process and we can…\nSome error occurred when interfacing with the kernel.\nSome error occurred when interfacing with the kernel.\nThe log target for this crate.\nValidation host metrics.\nSome non-deterministic preparation error occurred.\nNormal priority for things that do not require immediate …\nMemory limit reached\nThe name of binary spawned to prepare a PVF artifact\nProof-of-validity failed to decompress correctly\nPossibly transient issue that may resolve after retries. …\nPossibly transient issue that may resolve after retries.\nA prechecking job.\nCompilation failed for the given PVF.\nDeterministic preparation issue. In practice, most of the …\nAn error that occurred during the prepare part of the PVF …\nThe kind of prepare job.\nPreparation statistics, including the CPU time and memory …\nDuring the prevalidation stage of preparation an issue was …\nA priority assigned to preparation of a PVF.\nA struct that carries the exhaustive set of data to …\nThe response from the worker is received, but the file …\nInstantiation of the WASM module instance failed.\nInstantiation of the WASM module instance failed during an …\nStatus of security features on the current system.\nFailed to prepare the PVF due to the time limit.\nA error raised during validation of the candidate.\nA handle to the async process serving the validation host …\nThe candidate is reported to be invalid by the execution …\nThe root directory where the prepared artifacts can be …\nWhether we are able to call <code>clone</code> with all sandboxing …\nWhether the landlock features we use are fully available …\nWhether the seccomp features we use are fully available on …\nWhether we are able to unshare the user namespace and …\nReturns validation code hash\nThe CPU time that elapsed for the preparation job.\nExecute PVF with the given code, execution timeout, …\nThe path to the program that can be used to spawn the …\nThe time allotted for an execute worker to spawn and …\nThe maximum number of execute workers that can run at the …\nReturns executor params\nRead some data prefixed by its length from <code>r</code>.\nWrite some data prefixed by its length into <code>w</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns an instance of the PVF out of the given PVF code …\nCreates a structure for tests.\nCreates a structure for tests.\nCreates a structure for tests.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nUtility to get the version of a worker, used for version …\nSends a signal to the validation host requesting to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>self</code> is <code>Critical</code>\nReturns whether this is a deterministic error, i.e. one …\nReturns PVF code blob\nThe observed memory statistics for the preparation job.\nCreate a new instance of the configuration.\nThe version of the node. <code>None</code> can be passed to skip the …\nThe decompressed Wasm code length observed during the …\nPrecheck PVF with the given code, i.e. verify that it …\nReturns preparation kind.\nReturns preparation timeout.\nThe path to the program that can be used to spawn the …\nThe time allotted for a prepare worker to spawn and report …\nThe absolute number of workers that can be spawned in the …\nThe maximum number of workers that can be spawned in the …\nWhether Secure Validator Mode is enabled. This mode …\nWhether the node is attempting to run as a secure …\nAvailable security features, detected by the host during …\nStart the validation host.\nVarious utilities for testing.\nThe name of binary spawned to execute a PVF\nThe name of binary spawned to prepare a PVF artifact\nCreates a new PVF which artifact id can be uniquely …\nRetrieves the worker paths and builds workers as needed.\nA function that emulates the stitches together behaviors …")