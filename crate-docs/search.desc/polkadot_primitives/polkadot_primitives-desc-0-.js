searchState.loadedDescShard("polkadot_primitives", 0, "Polkadot types shared between the runtime and the …\nAlias to the opaque account ID type for this chain, …\nThe type for looking up accounts. We don’t expect more …\nAlias to the public key used for this chain, actually a …\nAn authority discovery authority identifier.\nThe balance of an account. 128-bits (or 38 significant …\nBlake2-256 Hash implementation.\nBlock type.\nBlock ID.\nThe block number type used by Polkadot. 32-bits will allow …\nUnit type wrapper around <code>Hash</code> that represents a candidate …\nA message sent from the relay-chain down to a parachain.\nAn ECDSA/SECP256k1 signature.\nAn Ed25519 signature.\nA hash of some data used by the relay chain.\nIdentify by block header hash.\nAbstraction around hashing\nParachain head data included in the chain.\nHeader type.\nA type that uniquely identifies an HRMP channel. An HRMP …\nUnique identifier of a parachain.\nA wrapped version of <code>DownwardMessage</code>. The difference is …\nAn HRMP message seen from the perspective of a recipient.\nThe ID of the first publicly registrable parachain.\nAn instant or duration in time.\nIndex of a transaction in the relay chain. 32-bit should …\nIdentify by block number.\nAn HRMP message seen from the perspective of a sender.\nThe hash type produced.\nSimple index type with which we can count sessions.\nAlias to type for a signature for a transaction on the …\nUnit type wrapper that represents a slot.\nAn Sr25519 signature.\nA message from a parachain to its Relay Chain.\nParachain validation code.\nUnit type wrapper around <code>Hash</code> that represents the …\nThe message payload.\nThe message payload.\nA chain-specific digest of data useful for light clients …\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new slot by calculating it from the given …\nReturns the hash of this head data.\nGet the blake2-256 hash of the validation code bytes.\nProduce the hash of some byte-slice.\nProduce the hash of some codec-encodable value.\nThe block header.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the given id corresponds to either the …\nThe actual downward message to processes.\nCreate an <code>Id</code>.\nThe block number.\nThe ordered Patricia tree root of the given <code>input</code>.\nThe parent hash.\nThe para that will get this message in its downward …\nThe para that acts as the recipient in this channel.\nRuntime API module declares the <code>trait ParachainHost</code> which …\nSaturating addition.\nSaturating subtraction.\nThe para that acts as the sender in this channel.\nThe block number at which these messages were put into the …\nThe block number at which this message was sent. …\nThe state trie merkle root\nTimestamp of the start of the slot.\nThe Patricia tree root of the given mapping.\n<code>V7</code> Primitives.\nStaging Primitives.\nThe API for querying the state of parachains on-chain.\nApproval voting configuration parameters\nReturns the persisted validation data for the given <code>ParaId</code> …\nReturns candidate’s acceptance limitations for …\nYields information on all availability cores as relevant …\nGet a vector of events concerning candidates that occurred …\nGet the receipt of a candidate pending availability. This …\nElastic scaling support\nChecks if the given validation outputs pass the acceptance …\nClaim queue\nReturns a list of all disabled validators at the given …\nReturns all onchain disputes.\nGet all the pending inbound messages in the downward …\nGet the contents of all channels addressed to the given …\nReturns a merkle proof of a validator session key. NOTE: …\nGet the minimum number of backing votes for a parachain …\nGet node features. This is a staging method! Do not use on …\nScrape dispute relevant from on-chain, backing votes and …\nReturns the state of parachain backing for a given para.\nYields the persisted validation data for the given <code>ParaId</code> …\nReturns code hashes of PVFs that require pre-checking by …\nReturns execution parameters for the session.\nReturns the session index expected at a child of the block.\nGet the session info for the given session, if stored.\nSubmits a PVF pre-checking statement into the transaction …\nSubmit an unsigned extrinsic to slash validators who lost …\nReturns a list of validators that lost a past session …\nFetch the validation code used by a para, making the given …\nGet the validation code from its hash.\nFetch the hash of the validation code used by a para, …\nReturns the validator groups and rotation info localized …\nGet the current validators.\nThe key type ID for parachain assignment key.\nAbort the upgrade process. There is something wrong with …\nAbridged version of <code>HostConfiguration</code> (from the …\nAbridged version of <code>HrmpChannel</code> (from the <code>Hrmp</code> parachains …\nAlias to the opaque account ID type for this chain, …\nThe type for looking up accounts. We don’t expect more …\nAlias to the public key used for this chain, actually a …\nFor approval and dispute request.\nAn approval vote from the approval checking phase.\nAn approval vote from the new version. We can’t create …\nA vote of approval on a candidate.\nA vote of approval for multiple candidates.\nApproval voting configuration parameters\nThe public key of a keypair used by a validator for …\nThe full keypair used by a validator for determining …\nAn authority discovery authority identifier.\nA bitfield concerning availability of backed candidates.\nA backed (or backable, depending on context) candidate.\nFor backing requests.\nA seconded statement on a candidate from the backing phase.\nA valid statement on a candidate from the backing phase.\nThe balance of an account. 128-bits (or 38 significant …\nBlake2-256 Hash implementation.\nBlock type.\nBlock ID.\nThe block number type used by Polkadot. 32-bits will allow …\nThe key type ID for a collator key.\nThis candidate receipt was backed in the most recent block.\nCommitments made in a <code>CandidateReceipt</code>. Many of these are …\nA unique descriptor of the candidate receipt.\nAn event concerning a candidate.\nUnit type wrapper around <code>Hash</code> that represents a candidate …\nThis candidate receipt was included and became a parablock …\nThe index of the candidate in the list of candidates fully …\nA candidate-receipt.\nThis candidate receipt was not made available in time and …\nIdentifier for a chain. 32-bit should be plenty.\nA <em>checked</em> set of dispute statements.\nA set of <em>checked</em> dispute statements.\nIndex of an availability chunk.\nIdentity that collators use.\nA Parachain collator keypair.\nSignature on candidate’s block data by a collator.\nA candidate-receipt with commitments directly included.\nStatements that can be made about parachain candidates. …\nA consensus log item for polkadot validation. To be used …\nThe unique (during session) index of a core.\nThe state of a particular availability core.\nThe entire state of a dispute.\nA statement about a candidate, to be used within the …\nA set of statements about a specific candidate.\nA message sent from the relay-chain down to a parachain.\nAn ECDSA/SECP256k1 signature.\nAn Ed25519 signature.\nThis helper trait ensures that we can encode <code>Statement</code> as …\nAn explicit statement issued as part of a dispute.\nAn explicit statement issued as part of a dispute.\nAn explicit attestation. This corresponds to issuance of a …\nAn explicit statement on a candidate issued as part of a …\nGovernance requests to auto-approve every candidate …\nThe core is currently free and there is nothing scheduled. …\nThe core was not occupied to begin with.\nApply the pending code change. The parablock that is built …\nThe unique (during session) index of a validator group.\nA helper data-type for tracking validator-group rotations.\nA hash of some data used by the relay chain.\nIdentify by block header hash.\nAbstraction around hashing\nParachain head data included in the chain.\nHeader type.\nA type that uniquely identifies an HRMP channel. An HRMP …\nUnique identifier of a parachain.\nImplicit validity attestation by issuing. This corresponds …\nA wrapped version of <code>DownwardMessage</code>. The difference is …\nAn HRMP message seen from the perspective of a recipient.\nThe candidate occupying the core was made available and …\nIncrement a counter metric by value.\nIncrement a counter metric with labels by value.\n<code>IndexedVec</code> struct indexed by type specific indices.\nParachains inherent-data passed into the runtime by a …\nAn invalid statement, of the given kind.\nDifferent kinds of statements of invalidity on a candidate.\nThe Ethereum signature is invalid.\nAn invalid statement was made for a claim.\nBacking votes threshold used from the host prior to …\nThe ID of the first publicly registrable parachain.\nMaximum compressed code size we support right now. At the …\nMaximum head data size we support right now.\nMaximum PoV size we support right now.\nCompressed or not the wasm blob can never be less than 9 …\nAn instant or duration in time.\nA set of dispute statements.\nNo permission to execute the call.\nBit indices in the <code>HostConfiguration.node_features</code> that …\nIndex of a transaction in the relay chain. 32-bit should …\nIdentify by block number.\nDefault queue size we use for the on-demand order book.\nMaximum for maximum queue size.\nObserve histogram value\nThe core is currently occupied.\nInformation about a core which is currently occupied.\nAn assumption being made about the state of an occupied …\nAn HRMP message seen from the perspective of a sender.\nThe hash type produced.\nUnique identifier for the Parachains Inherent\nThe key type ID for a parachain validator key.\nConsensus engine id for polkadot v1 consensus engine.\nA parachain scheduled a code upgrade.\nA parachain upgraded its code.\nA claim on authoring the next block for a given parathread …\nAn entry tracking a claim to ensure it does not pass the …\nThe validation data provides information about how to …\nFor prechecking requests.\nFor execution and heads-up requests.\nThere is an upgrade restriction and there are no details …\nA statement from the specified validator whether the given …\nType discriminator for PVF execution.\nType discriminator for PVF preparation.\nThe information that goes alongside a …\nA signal to revert the block number in the same chain as …\nA metric label.\nA metric label value.\nA set of metric label values.\nA set of metric labels.\nRuntime metric operations.\nRuntime metric update event.\nThe core is currently free, with a para scheduled and …\nInformation about a core which is currently occupied.\nScheduler configuration parameters. All coretime/ondemand …\nScraped runtime backing votes and resolved disputes.\nProposal of a parachain candidate.\nSimple index type with which we can count sessions.\nInformation about validator sets of a session.\nAlias to type for a signature for a transaction on the …\nSigned data with signature already verified.\nA bitfield signed by a particular validator about the …\nA set of signed availability bitfields. Should be sorted …\nA signed compact statement, suitable to be sent to the …\nThe signer has no claim.\nA type returned by runtime with current session index and …\nUnit type wrapper that represents a slot.\nAn Sr25519 signature.\nThe candidate occupying the core timed out and freed the …\nTrait required for type specific indices e.g. …\nSimple blob to hold an extrinsic without committing to its …\nUnchecked signed data, can be converted to <code>Signed</code> by …\nA signed bitfield with signature not yet checked.\nA set of unchecked signed availability bitfields. Should …\nA signed compact statement, with signature not yet checked.\nA struct that the relay-chain communicates to a parachain …\nA possible upgrade restriction that prevents a parachain …\nA message from a parachain to its Relay Chain.\nA valid statement, of the given kind.\nState that a parachain candidate is valid.\nDifferent kinds of statements of validity on  a candidate.\nParachain validation code.\nUnit type wrapper around <code>Hash</code> that represents the …\nIdentity that parachain validators use when signing …\nIndex of the validator is used as a lightweight …\nA Parachain validator keypair.\nSignature with which parachain validators sign blocks.\nAn either implicit or explicit attestation to the validity …\nCustom validity errors used in Polkadot while validating …\nA well-known and typed storage key.\n<code>true</code> if the subject passed pre-checking and <code>false</code> …\nAll the validators actively participating in parachain …\nReturns a labels as <code>Vec&lt;&amp;str&gt;</code>.\nGet a reference to data as unchecked.\nThe assignment keys for validators.\nAsynchronous backing primitives.\nAsynchronous backing parameters.\nA bitfield with 1 bit for each validator in the set. <code>1</code> …\nBacked candidates for inclusion in the block.\nSet of backing validators for each candidate, represented …\nSign this payload with the given context and pair.\nImmutably access the signature.\nSigned bitfields by validators about availability.\nCreate a new <code>GroupRotationInfo</code> with one further rotation …\nThe maximum number of validators <code>f</code> which may safely be …\nGet a reference to the committed candidate receipt of the …\nThe descriptor of the candidate occupying the core.\nGet the underlying candidate hash this references.\nThe hash of the candidate occupying the core.\nThe candidate hash.\nThe candidate referenced by this set.\nVerify the backing of the given candidate.\nCheck the signature of the collator within this descriptor.\nValidate the payload given the context and public key …\nCheck the signature on a dispute statement.\nThe claim.\nReturn the inner values as vec.\nThe collator’s sr25519 public key.\nDEPRECATED: see: …\nGet a collator signature payload on a relay-parent, …\nThe commitments of the candidate receipt.\nThe hash of the encoded commitments made as a result of …\nThe block number at which the dispute concluded on-chain.\nConvert <code>Payload</code> into <code>RealPayload</code>.\nConvert <code>Payload</code> into some claimed <code>SuperPayload</code> if the …\nConvert <code>Payload</code> into some converted <code>SuperPayload</code> if the …\nReturns the index of the group assigned to the given core. …\nDoes this committed candidate receipt corresponds to the …\nThe message payload.\nThe message payload.\nGet a reference to the candidate descriptor.\nGet a reference to the candidate descriptor.\nGet a reference to the descriptor of the candidate.\nThe descriptor of the candidate.\nThe descriptor of the candidate.\nA chain-specific digest of data useful for light clients …\nValidators’ authority discovery keys for the session in …\nThe amount of sessions to keep for disputes.\nOn-chain-recorded set of disputes. Note that the above …\nSets of dispute votes for inclusion,\nAdjust the configured needed backing votes with the size …\nConvert Self into T, then encode T.\nThe root of a block’s erasure encoding Merkle tree.\nAbstract execution environment parameter set.\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.\nAttempt to convert a reference to a generic digest item …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGets the value or <code>None</code> if it does not exist or decoding …\nReturns a reference to an element indexed using <code>K</code>.\nReturns a mutable reference to an element indexed using <code>K</code>.\nReturns the index of the group needed to validate the core …\nThe group assigned to distribute availability pieces of …\nHow often groups rotate. 0 means never.\nHow often parachain groups should be rotated across …\nProduce the hash of some byte-slice.\nComputes the blake2-256 hash of the receipt.\nComputes the hash of the committed candidate receipt.\nCompute the blake2-256 hash of the persisted validation …\nCompute the blake2-256 hash of the commitments.\nCompute this candidate’s hash.\nProduce the hash of some codec-encodable value.\nThe head-data produced as a result of execution.\nThe block header.\nHorizontal messages sent by the parachain.\nThe maximum number of outbound HRMP messages can be sent …\nThe mark which specifies the block number up to which all …\nWhether the statement indicates invalidity.\nWhether the statement indicates validity.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a consuming iterator.\nDiscard signing data, get the payload\nConvert back to an unchecked type.\nStatement is backing statement.\nWhether the statement is from the backing phase.\nReturns true if the underlying container is empty.\nIs this core state <code>Self::Occupied</code>?\nReturns an iterator over the underlying vector.\nReturns a mutable iterator over the underlying vector.\nThe raw storage key.\nReturns the block number of the last rotation before or …\nReturns number of elements in vector.\nThe amount of blocks ahead to schedule paras.\nThe maximum number of candidates <code>approval-voting</code> can vote …\nThe max number of times a claim can time out in …\nThe maximum number of messages that can be pending in the …\nThe maximum validation code size, in bytes.\nThe maximum head-data size, in bytes.\nThe maximum message size that could be put into the …\nThe maximum legal size of a POV block, in bytes.\nThe maximum total size of the messages that can be pending …\nThe maximum number of messages that a candidate can …\nThe maximum size of an upward message that can be sent by …\nTotal number of individual messages allowed in the …\nTotal size of messages allowed in the parachain -&gt; …\nThe maximum number of validators to have per core.\nContains all runtime metrics defined as constants.\nReturns the metric name.\nThe name of the metric.\nA head of the Message Queue Chain for this channel. Each …\nThe actual downward message to processes.\nThe current number of messages pending in the channel. …\nThe number of availability cores used by the protocol …\nThe number of delay tranches in total.\nThe number of validators needed to approve a block.\nUsed to create a <code>Signed</code> from already existing parts.\nUsed to create a <code>UncheckedSigned</code> from already existing …\nConstructor\nNew validation code.\nReturns the block number of the next rotation after the …\nIf this core is freed by availability, this is the …\nIf this core is freed by being timed-out, this is the …\nHow many slots (BABE / SASSAFRAS) must pass before an …\nModule containing feature-specific bit indices into the …\nThe current block number.\nHow many cores are managed by the coretime chain.\nThe block number.\nThe relay-chain block number this began occupying the core …\nThe minimum amount needed to claim a slot in the spot …\nHow quickly the fee rises in reaction to increased …\nThe maximum queue size of the pay as you go module.\nThe target utilization of the spot price queue in …\nThe operation applied to the metric.\nThe ordered Patricia tree root of the given <code>input</code>.\nHash of the para header that is being generated by this …\nGet the Para currently occupying this core.\nReturns the scheduled <code>ParaId</code> for the core or <code>None</code> if …\nThe ID of the para this is a candidate for.\nThe ID of a para scheduled.\nAvailability timeout for a block on a core, measured in …\nThe parent hash.\nHash of the parent.\nThe parent head-data.\nThe parent block header. Used for checking state proofs.\nImmutably access the payload.\nGet the payload data for this type of dispute statement.\nThe blake2-256 hash of the persisted validation data. This …\nThe blake2-256 hash of the PoV.\nThe number of messages processed from the DMQ.\nA secure random seed for the session, gathered from BABE.\nGet this candidate’s receipt.\nThe para that will get this message in its downward …\nThe para that acts as the recipient in this channel.\nThe hash of the relay-chain block this is executed in the …\nThe relay-chain block number this is in the context of.\nThe relay-chain block storage root this is in the context …\nThe number of samples we do of <code>relay_vrf_modulo</code>.\nNumber of retries\nReturns the core selector and claim queue offset the …\nThe para that acts as the sender in this channel.\nThe block number at which these messages were put into the …\nThe block number at which this message was sent. …\nThe session in which the block was included.\nThe session index of the candidate.\nThe session index of the candidate.\nCurrent session index.\nThe index of a session during which this statement is …\nThe block number where the session started.\nSets the value.\nSet the signature. Only should be used for creating …\nUpdate the validator indices and core index in the …\nCreate a new <code>Signed</code> by signing data.\nImmutably access the signature.\nGet a reference to the signature.\nSignature on blake2-256 of components of this receipt: The …\nProduce the underlying signed payload of the attestation, …\nYields the signing payload for this approval vote.\nYields the signing payload for this approval vote.\nProduce the payload used for signing this type of …\nYields the payload used for validator signatures on this …\nProduce the payload used for signing this type of …\nPrimitives types used for dispute slashing.\nThe block number at which the dispute started on-chain.\nThe state trie merkle root\nStatements about the candidate.\nThe validation code hash that was checked.\nThe supermajority threshold of validators which represents …\nThe relay-chain block this will time-out at, if any.\nProduce the underlying signed payload of the attestation, …\nTransforms this into a plain <code>CandidateReceipt</code>.\nReturns contained vector.\nThe total size in bytes of all message payloads in the …\nThe Patricia tree root of the given mapping.\nTry to convert from <code>UncheckedSigned</code> by checking the …\nCheck signature and convert to <code>Signed</code> if successful.\nThe number of blocks a claim stays in the scheduler’s …\nReturns the index associated to this value.\nConvert <code>Payload</code> into <code>RealPayload</code>.\nConvert from an unchecked, the verification of correctness …\nDiscard signing data, get the payload\nImmutably access the payload.\nImmutably access the signature.\nImmutably access the validator index.\nMessages destined to be interpreted by the Relay chain …\nWhether the candidate is valid\nThe blake2-256 hash of the validation code bytes.\nThe minimum period, in blocks, between which parachains …\nThe delay, in blocks, before a validation upgrade is …\nValidators in shuffled ordering - these are the validator …\nImmutably access the validator index.\nThe index of the validator from which this statement …\nGet a copy of the validator indices and the assumed core …\nValidators in canonical ordering.\nA bitfield indicating all validators against the candidate.\nA bitfield indicating all validators for the candidate.\nGet a reference to the validity votes of the candidate.\nGet a mutable reference to validity votes of the para.\nA declarations of storage keys where an external observer …\nThe zeroth delay tranche width.\nCandidate’s acceptance limitations for asynchronous …\nThe per-parachain state of the backing system, including …\nA candidate pending availability.\nConstraints on the actions that can be taken by a new …\nConstraints on inbound HRMP channels.\nConstraints on outbound HRMP channels.\nHow many ancestors of a relay parent are allowed to build …\nThe maximum bytes that can be written to the channel.\nThe hash of the candidate.\nThe commitments of the candidate.\nThe state-machine constraints of the parachain.\nThe candidate’s descriptor.\nRemaining DMP queue. Only includes sent-at block numbers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe future validation code hash, if any, and at what …\nThe limitations of all registered outbound HRMP channels.\nThe limitations of all registered inbound HRMP channels.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum number of para blocks between the para head in …\nThe maximum new validation code size allowed, in bytes.\nThe maximum number of HRMP messages allowed per candidate.\nThe maximum Proof-of-Validity size allowed, in bytes.\nThe maximum Proof-of-Validity size allowed, in bytes.\nThe maximum number of UMP messages allowed per candidate.\nThe maximum messages that can be written to the channel.\nThe minimum relay-parent number accepted under these …\nThe candidates pending availability. These should be …\nThe candidate’s relay parent’s number.\nThe required parent head-data of the parachain.\nThe amount of UMP messages remaining.\nThe amount of UMP bytes remaining.\nThe code upgrade restriction signal as-of this parachain.\nAn exhaustive set of all valid watermarks, sorted …\nThe expected validation-code-hash of this parachain.\nDefault PVF execution timeout for approval or disputes.\nDefault PVF execution timeout for backing.\nDefault PVF preparation timeout for execution requests.\nDefault maximum number of wasm values allowed for the …\nDefault maximum number of bytes devoted for the stack …\nDefault PVF preparation timeout for prechecking requests.\nA param is duplicated.\nThe different executor parameters for changing the …\nPossible inconsistencies of executor params.\nDeterministically serialized execution environment …\nUnit type wrapper around <code>Hash</code> that represents an execution …\nUnit type wrapper around <code>Hash</code> that represents a hash of …\nTwo param values are incompatible or senseless when put …\nThe upper bound of <code>ExecutorParam::StackLogicalMax</code>.\nThe lower bound of <code>ExecutorParam::StackLogicalMax</code>.\nThe limit of <code>ExecutorParam::MaxMemoryPages</code>.\nMaximum number of memory pages (64KiB bytes per page) the …\nA param value exceeds its limitation.\nThe upper bound of <code>ExecutorParam::PrecheckingMaxMemory</code>.\nThe lower bound of <code>ExecutorParam::PrecheckingMaxMemory</code>.\nMax. amount of memory the preparation worker is allowed to …\nPVF execution timeouts, in millisecond. Always ensure that …\nPVF preparation timeouts, in millisecond. Always ensure …\nWasm logical stack size limit (max. number of Wasm values …\nExecutor machine stack size limit, in bytes. If …\nEnables WASM bulk memory proposal\nCheck params coherence.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new executor parameter hash from <code>H256</code> hash\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns hash of the set of execution environment parameters\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new, empty executor parameter set\nReturns pre-checking memory limit, if any\nReturns hash of preparation-related executor parameters\nReturns a PVF execution timeout, if any\nReturns a PVF preparation timeout, if any\n<code>Counter</code> metric definition.\n<code>CounterVec</code> metric definition.\n<code>Histogram</code> metric definition\nCounts the number of <code>valid</code> and <code>invalid</code> bitfields signature …\nCounts the number of bitfields processed in …\nCounts the <code>total</code>, <code>sanitized</code> and <code>included</code> number of …\nCounts the number of <code>imported</code>, <code>current</code> and …\nCounts parachain inherent data weights. Use <code>before</code> and …\nMeasures how much time does it take to verify a single …\nThe buckets for the histogram\nThe description of the metric.\nThe description of the metric.\nThe description of the metric.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe label names of the metric.\nThe name of the metric.\nThe name of the metric.\nThe name of the metric.\nTells if the chunk mapping feature is enabled. Enables the …\nEnables node side support of <code>CoreIndex</code> committed candidate …\nThis feature enables the extension of …\nTells if tranch0 assignments could be sent in a single …\nA feature index used to identify a bit into the …\nFirst unassigned feature bit. Every time a new feature …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA minor offence when a validator disputed a valid block.\nWe store most of the information about a lost dispute on …\nTimeslots should uniquely identify offences and are used …\nA severe offence when a validator backed an invalid block.\nAn opaque type used to represent the key ownership proof …\nSlashes that are waiting to be applied once we have …\nThe kind of the dispute offence.\nCandidate hash of the disputed candidate.\nTry to decode this <code>OpaqueKeyOwnershipProof</code> into the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIndices and keys of the validators who lost a dispute and …\nThe dispute outcome.\nThe dispute outcome.\nLength of the encoded proof.\nCreate a new instance of <code>Self</code>.\nCreate a new <code>OpaqueKeyOwnershipProof</code> using the given …\nSession index when the candidate was backed/included.\nTime slot when the dispute occurred.\nThe parachain session key of the validator.\nThe index of the validator who lost a dispute.\nThe currently active host configuration.\nThe current relay chain block randomness\nThe current slot number.\nThe current epoch index.\nThe randomness for one epoch ago\nThe randomness for two epochs ago\nThe MQC head for the downward message queue of the given …\nThe HRMP channel for the given identifier.\nThe list of outbound channels for the given para.\nThe list of inbound channels for the given para.\nHash of the committed head data for a given registered …\nThe upward message dispatch queue remaining capacity for …\nThe upward message dispatch queue for the given para id.\nType safe version of <code>relay_dispatch_queue_size</code>.\nThe signal that indicates whether the parachain should …\nThe signal that indicates whether the parachain is …\nA backed (or backable, depending on context) candidate.\nThis candidate receipt was backed in the most recent block.\nA unique descriptor of the candidate receipt.\nA type representing the version of the candidate …\nAn event concerning a candidate.\nThis candidate receipt was included and became a parablock …\nCandidateReceipt construction errors.\nA candidate-receipt at version 2.\nThis candidate receipt was not made available in time and …\nAn offset in the relay chain claim queue.\nA candidate-receipt with commitments directly included.\nThe core index in commitments doesn’t match the one in …\nA strictly increasing sequence number, typically this …\nThe state of a particular availability core.\nThe core is currently free and there is nothing scheduled. …\nParachains inherent-data passed into the runtime by a …\nA type representing the version of the candidate …\nThe specified core index is invalid.\nThe core selector or claim queue offset is invalid.\nThe parachain is not assigned to any core at specified …\nNo core was selected.\nThe core is currently occupied.\nInformation about a core which is currently occupied.\nThe core is currently free, with a para scheduled and …\nScraped runtime backing votes and resolved disputes.\nA message sent by a parachain to select the core the …\nSignals that a parachain can send to the relay chain via …\nSeparator between <code>XCM</code> and <code>UMPSignal</code>.\nAn unknown version.\nUnknown version.\nThe old candidate descriptor version.\nThe new <code>CandidateDescriptorV2</code>.\nAsync backing primitives\nA bitfield with 1 bit for each validator in the set. <code>1</code> …\nBacked candidates for inclusion in the block.\nSet of backing validators for each candidate, represented …\nSigned bitfields by validators about availability.\nGet a reference to the committed candidate receipt of the …\nThe descriptor of the candidate occupying the core.\nThe hash of the candidate occupying the core.\nChecks if descriptor core index is equal to the commited …\nReturns the collator id if this is a v1 <code>CandidateDescriptor</code>\nThe commitments of the candidate receipt.\nThe hash of the encoded commitments made as a result of …\nReturns the <code>core_index</code> of <code>V2</code> candidate descriptors, <code>None</code> …\nDoes this committed candidate receipt corresponds to the …\nGet a reference to the candidate descriptor.\nGet a reference to the descriptor of the candidate.\nThe descriptor of the candidate.\nThe descriptor of the candidate.\nGet a mutable reference to the descriptor of the …\nSets of dispute votes for inclusion,\nOn-chain-recorded set of disputes. Note that the above …\nReturns the value of $field field.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe group assigned to distribute availability pieces of …\nComputes the blake2-256 hash of the receipt.\nComputes the hash of the committed candidate receipt.\nCompute this candidate’s hash.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructor\nConstructor\nIf this core is freed by availability, this is the …\nIf this core is freed by being timed-out, this is the …\nThe relay-chain block number this began occupying the core …\nReturns the value of $field field.\nReturns the value of $field field.\nThe parent block header. Used for checking state proofs.\nReturns the value of $field field.\nReturns the value of $field field.\nGet this candidate’s receipt.\nReturns the value of $field field.\nThe session in which the block was included.\nReturns the <code>core_index</code> of <code>V2</code> candidate descriptors, <code>None</code> …\nSet the PoV size in the descriptor. Only for tests.\nUpdate the validator indices and core index in the …\nSet the version in the descriptor. Only for tests.\nReturns the collator signature of <code>V1</code> candidate …\nThe relay-chain block this will time-out at, if any.\nTransforms this into a plain <code>CandidateReceipt</code>.\nReturns the value of $field field.\nGet a copy of the validator indices and the assumed core …\nGet a reference to the validity votes of the candidate.\nGet a mutable reference to validity votes of the para.\nReturns the candidate descriptor version. The candidate is …\nThe per-parachain state of the backing system, including …\nA candidate pending availability.\nThe hash of the candidate.\nThe commitments of the candidate.\nThe state-machine constraints of the parachain.\nThe candidate’s descriptor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum Proof-of-Validity size allowed, in bytes.\nThe candidates pending availability. These should be …\nThe candidate’s relay parent’s number.")