searchState.loadedDescShard("pallet_im_online", 0, "I’m online Pallet\nHeartbeat which is sent/received.\nA tuple of (ValidatorId, Identification) where …\nAn offence that is filed if a validator didn’t send a …\nA type for representing the validator id in a session.\nAn index of the authority on the list of validators.\nBlock number at the time heartbeat is created..\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStorage migrations for the im-online pallet.\nAuthorities that were unresponsive during the current era.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nIndex of the current session.\nThe current session index in which we report the …\nThe size of the validator set in current session/era.\nThe length of session validator set\nAutogenerated weights for <code>pallet_im_online</code>\nAn i’m online identifier using ed25519 as its crypto.\nAn i’m online keypair using ed25519 as its crypto.\nAn i’m online signature using ed25519 as its crypto.\nClears the pallet’s offchain storage.\nSimple migration that replaces <code>ReceivedHeartbeats</code> values …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAt the end of the session, no offence was committed.\nFor each session index, we keep a mapping of <code>ValidatorId&lt;T&gt;</code>…\nThe identifier type for an authority.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nDuplicated heartbeat.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCan be used to configure the genesis state of this pallet.\nThe block number after which it’s ok to send heartbeats …\nA new heartbeat was received from <code>AuthorityId</code>.\nNon existent public key.\nThe current set of keys that may issue a heartbeat.\nThe maximum number of keys that can be added.\nThe maximum number of peers to be stored in …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nA trait that allows us to estimate the current session …\nThe <code>Pallet</code> struct, the main type that implements traits …\nFor each session index, we keep a mapping of <code>SessionIndex</code> …\nA type that gives us the ability to submit …\nThe overarching event type.\nAt the end of the session, at least one validator was …\nA configuration for base priority of unsigned transactions.\nA type for retrieving the validators supposed to be online …\nWeight information for extrinsics in this pallet.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nComplexity:\nComplexity:\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if a heartbeat has been received for the …\nCreate a call with the variant <code>heartbeat</code>.\nReturns <code>true</code> if a heartbeat has been received for the …\nAuto-generated docs-only module listing all (public and …\nComplexity:\nFor each session index, we keep a mapping of <code>ValidatorId&lt;T&gt;</code>…\nThe block number after which it’s ok to send heartbeats …\nThe current set of keys that may issue a heartbeat.\nFor each session index, we keep a mapping of <code>SessionIndex</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn i’m online identifier using sr25519 as its crypto.\nAn i’m online keypair using sr25519 as its crypto.\nAn i’m online signature using sr25519 as its crypto.\nWeights for <code>pallet_im_online</code> using the Substrate node and …\nWeight functions needed for <code>pallet_im_online</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Session::Validators</code> (r:1 w:0) Proof: …")