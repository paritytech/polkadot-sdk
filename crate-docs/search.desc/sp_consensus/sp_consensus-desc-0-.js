searchState.loadedDescShard("sp_consensus", 0, "Common utilities for building and using consensus engines …\nBlock data origin.\nBlock status.\nBlock that was received from the network and validated in …\nA future that resolves to the proposer.\nExpress that proof recording is disabled.\nIs proof recording enabled?\nExpress that proof recording is enabled.\nEnvironment for a Consensus instance.\nError which can occur upon creation.\nAn error type when fetching data is not possible.\nError type which can occur when proposing or evaluating.\nBlock was imported from a file.\nGenesis block built into the client.\nIn the blockchain, but the state is not available.\nAlready in the blockchain and the state is available.\nInherent data to include in a block.\nBlock or parent is known to be bad.\nBlock was broadcasted on the network.\nBlock is part of the initial sync with the network.\nA synchronization oracle for when there is no network.\nError that is returned when <code>ProofRecording</code> requested to …\nBlock that was collated by this node.\nThe proof type that will be used internally.\nThe proof type used by <code>Self::ProofRecording</code>.\nA trait to express the state of proof recording on type …\nThe supported proof recording by the implementor of this …\nA proposal that is created by a <code>Proposer</code>.\nFuture that resolves to a committed proposal with an …\nLogic for a proposer.\nThe proposer type this creates.\nAdded to the import queue.\nType of the raw storage iterator.\nThe SelectChain trait defines the strategy upon which the …\nA state backend is used to read state data and can have …\nAn oracle for when major synchronization work is being …\nType of trie backend storage.\nNot in the queue or the blockchain.\nAmong those <code>leaves</code> deterministically pick one chain as the …\nThe block that was build.\nBlock announcement validation.\nGet the child merkle value or None if there is nothing …\nGet child keyed child storage or None if there is nothing …\nGet child keyed storage value hash or None if there is …\nCalculate the child storage root, with given delta over …\nGet the merkle value or None if there is nothing …\nCommit given transaction to storage.\nError types for consensus modules.\ntrue if a key exists in child storage.\ntrue if a key exists in storage.\nGet the best descendent of <code>base_hash</code> that we should …\nGet the best descendent of <code>base_hash</code> that we should …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalculate the storage root, with given delta over what is …\nReturns the data for the requested inherent.\nExtend storage info for benchmarking db\nGet the whitelist for tracking db reads/writes\nInitialize the proposal logic on top of a specific header. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the given <code>storage_proof</code> into <code>Self::Proof</code>.\nWhether the synchronization service is undergoing major …\nWhether the synchronization service is offline. Returns …\nGet an iterator over keys.\nGet all leaves of the chain, i.e. block hashes that have …\nGet the number of inherents in this instance\nCreate a new instance.\nReturn the next key in child storage in lexicographic …\nReturn the next key in storage in lexicographic order or …\nGet an iterator over key/value pairs.\nProof that was recorded while building the block.\nEstimate proof size\nCreate a proposal.\nPut data for an inherent into the internal storage.\nReturns a lifetimeless raw storage iterator.\nGet the read/write count of the db\nRegister stats from overlay of state machine.\nReplace the data for an inherent.\nGet the read/write count of the db\nUpdate the whitelist for tracking db reads/writes\nGet keyed storage or None if there is nothing associated.\nThe storage changes while building this block.\nGet keyed storage value hash or None if there is nothing …\nCalculate the storage root, with given delta over what is …\nQuery backend usage statistics (i/o, memory)\nWipe the state database.\nType which checks incoming block announcements.\nA type which provides access to chain information.\nDefault implementation of <code>BlockAnnounceValidator</code>.\nInvalid block announcement.\nValid block announcement.\nResult of <code>BlockAnnounceValidator::validate</code>.\nRetrieve the status of the block denoted by the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nValidate the announced header and its associated data.\nShould we disconnect from this peer?\nIs this the new best block of the node?\nSigning failed.\nError from the client while fetching some data from the …\nError from the client while importing.\nContains the error value\nThe error type for consensus-related operations.\nInvalid authorities set received from the runtime.\nIntermediate is of wrong type.\nJustification requirements not met.\nError checking signature.\nIntermediate missing.\nContains the success value\nSome other error.\nResult type alias.\nMissing state at block with given descriptor.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.")