searchState.loadedDescShard("cumulus_ping", 0, "Pallet to spam the XCM/UMP.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe payload provided is too large, limit is 1024 bytes.\nThe overarching call type; we assume sibling chains use …\nThe overarching event type.\nToo many parachains have been added as a target.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>ping</code>.\nCreate a call with the variant <code>pong</code>.\nCreate a call with the variant <code>start</code>.\nCreate a call with the variant <code>start_many</code>.\nCreate a call with the variant <code>stop</code>.\nCreate a call with the variant <code>stop_all</code>.\nAuto-generated docs-only module listing all (public and …\nWarning: Doc-Only\nWarning: Doc-Only\nWarning: Doc-Only\nWarning: Doc-Only\nWarning: Doc-Only\nWarning: Doc-Only\nThe total number of pings sent.\nThe sent pings.\nThe target parachains to ping.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")