searchState.loadedDescShard("polkadot_node_primitives", 0, "Primitive types used on the node-side.\nThis is the data we keep available for each candidate …\nTypes of allowed slots.\nBABE epoch information\nConfiguration data used by the BABE consensus engine that …\nRandomness type required by BABE operations.\nInvalid relay chain parent.\nValidation function returned invalid data.\nBad collator signature.\nParachain block data.\nThe cumulative weight of a block in a fork-choice rule.\nValidation code hash does not match.\nCode size is over the limit.\nThe output of a collator.\nConfiguration for the collation generator\nResult of the <code>CollatorFn</code> invocation.\nSignal that is being returned when a collation was …\nCollation function.\nValidation has generated different candidate commitments.\nThe given <code>PoV</code> is already compressed.\nHow many blocks after finalization an information about …\nIt would be nice to draw this from the chain state, but we …\nA chunk of erasure-encoded block data.\nFailed to execute <code>validate_block</code>. This includes function …\nCandidate is invalid.\nCandidate invalidity details\nValidation outputs check doesn’t pass.\nLinked to <code>MAX_FINALITY_LAG</code> in relay chain selection, …\nA type that represents a maybe compressed <code>PoV</code>.\nThis error signifies that the Proof length exceeds the trie…\nPossible errors when converting from <code>Vec&lt;Vec&lt;u8&gt;&gt;</code> into …\nThis error signifies that a Proof node exceeds the 16-ary …\nThe current node version, which takes the basic SemVer …\nThe bomb limit for decompressing PoV blobs.\nPara head hash does not match.\nValidation input is over the limit.\nA Proof-of-Validity\nPoV does not decompress correctly.\nPOV hash does not match.\nAllow primary and secondary plain slots.\nAllow primary and secondary VRF slots.\nOnly allow primary slots.\nThis is a convenience type to allow the Erasure chunk …\nA raw <code>PoV</code>, aka not compressed.\nA statement that a validator seconds a candidate.\nA statement that a validator seconds a candidate.\nType of a session window size.\nA statement, the corresponding signature, and the index of …\nA statement, the corresponding signature, and the index of …\nA statement, where the candidate receipt is included in …\nA statement, exactly the same as <code>Statement</code> but where …\nParameters for <code>CollationGenerationMessage::SubmitCollation</code>.\nExecution timeout.\nVariant of <code>SignedFullStatement</code> where the signature has not …\nThe bomb limit for decompressing code blobs.\nA statement that a validator has deemed a candidate valid.\nA statement that a validator has deemed a candidate valid.\nCandidate is valid. The validation process yields these …\nResult of the validation of the candidate.\nWhether this chain should run with secondary slots, which …\nTypes relevant for approval.\nThe authorities and their weights.\nThe block witness data.\nA constant value that is used in the threshold calculation …\nGet the candidate hash referenced by this statement.\nGet the candidate hash referenced by this statement.\nThe erasure-encoded chunk of data belonging to the …\nThe collation that was build.\nThe collation itself (PoV and commitments)\nCollation function. See <code>CollatorFn</code> for more details.\nConfiguration of the epoch.\nThe core index on which the resulting candidate should be …\nDisputes related types.\nDrop the <code>PersistedValidationData</code> from the statement.\nDrop the <code>PersistedValidationData</code> from the statement in a …\nConstruct an invalid dummy proof\nThe duration of this epoch.\nThe epoch index.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet the value as <code>SessionIndex</code> for doing comparisons with …\nGet the blake2-256 hash of the PoV.\nThe head-data produced as a result of execution.\nThe horizontal messages sent by the parachain.\nThe mark which specifies the block number up to which all …\nThe index of this erasure-encoded chunk of data.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into a compressed <code>PoV</code>.\nConvert into the inner values.\nWhether plain secondary slots are allowed.\nWhether VRF secondary slots are allowed.\nThis function allows to convert back to the standard …\nCollator’s authentication key, so it can sign things.\nCompress a PoV, unless it exceeds the <code>POV_BOMB_LIMIT</code>.\nCreate a new checked <code>SessionWindowSize</code> which cannot be 0.\nNew validation code.\nThe parachain that this collator collates for\nThe parent block’s head-data.\nThe Proof-of-Validation of the candidate.\nThe number of messages processed from the DMQ.\nConvert bounded Vec Proof to regular <code>Vec&lt;Vec&lt;u8&gt;&gt;</code>\nProof for this chunk’s branch in the Merkle tree.\nProof to verify the state transition of the parachain.\nRandomness for this epoch.\nThe hash of the relay chain block that was used as context …\nThe relay-parent the collation is built against.\nAn optional result sender that should be informed about a …\nAn optional result sender that should be informed about a …\nConverts the statement to a compact signed statement by …\nThe starting slot of the epoch.\nThe statement about seconding the collation.\nAdd the <code>PersistedValidationData</code> to the statement, if …\nTransform this statement into its compact version, which …\nTransform this statement into its compact version, which …\nMessages destined to be interpreted by the Relay chain …\nThe hash of the validation code the collation was created …\nThe persisted validation data needed for approval checks.\nCriteria for assignment. Assignment criteria VRF …\nTime utilities for approval voting. Time utilities for …\nA list of primitives introduced in v1.\nA list of primitives introduced by v2.\nA trait for producing and checking assignments.\nInformation about the world assignments are being produced …\nCore index is out of bounds.\nInvalid arguments\nAssignment invalid.\nInvalid assignment key.\nFailure conditions when checking an assignment cert.\nNode is in backing group.\nAssignment vrf check resulted in 0 assigned cores.\nDetails pertaining to our assignment on a block.\nSample index is out of bounds.\nDelay core index mismatch.\nDelay output mismatch.\nModulo core index mismatch.\nModulo output mismatch.\nThe validator index is out of bounds.\nThe assignment public keys for validators.\nReturns a reference to the assignment cert.\nCheck the assignment cert for the given relay VRF story …\nCompute the assignments for the given relay VRF story.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the assignment cert.\nMarks the assignment as triggered.\nThe number of availability cores used by the protocol …\nThe number of delay tranches in total.\nCreate a new <code>OurAssignment</code>.\nThe number of samples we do of <code>relay_vrf_modulo</code>.\nReturns the delay tranche of the assignment.\nReturns whether the assignment has been triggered.\nThe groups of validators assigned to each core.\nReturns the validator index of the assignment.\nThe zeroth delay tranche width.\nA clock which allows querying of the current tick as well …\nExtension methods for clocks.\nA list of delayed futures that gets triggered when the …\nA clock which uses the actual underlying system clock.\nThe duration of a single tick in milliseconds.\nHow far in the future a tick can be accepted.\nA base unit of time, starting from the Unix epoch, split …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStarts a single timer per block hash\nassumes <code>slot_duration_millis</code> evenly divided by tick …\nYields the current tick.\nYields the current tick.\nConverts a tick to the slot number.\nReturns the current tranche.\nConverts a tranche from a slot to the tick number.\nYields a future which concludes when the given tick is …\nYields a future which concludes when the given tick is …\nA static context used for transcripts indicating assigned …\nErrors that can occur during the approvals protocol.\nA certification of assignment.\nDifferent kinds of input data or criteria that can prove a …\nMetadata about a block which is now live in the approval …\nA static context associated with producing randomness for …\nValidators assigning to check a particular candidate are …\nAn assignment criterion which refers to the candidate …\nA signed approval vote which references the candidate …\nA static context used for all relay-vrf-modulo VRFs.\nA static context used for all relay-vrf-modulo VRFs.\nA static context used to compute the Relay VRF story based …\nRandomness type required by BABE operations.\nAn assignment story based on the VRF that authorized the …\nAn assignment story based on the VRF that authorized the …\nrandom bytes derived from the VRF submitted within the …\nUnit type wrapper that represents a slot.\nA static context associated with producing randomness for …\nAn unsafe VRF pre-output. Provide BABE Epoch info to …\nVRF pre-output type suitable for schnorrkel operations.\nVRF proof type suitable for schnorrkel operations.\nVRF signature data\nTranscript ready to be used for VRF related operations.\nExtract the slot number and relay VRF from a header.\nA block hash where the candidate appears.\nA block hash where the candidate appears.\nThe index of the candidate in the list of candidates fully …\nThe candidates included by the block. Note that these are …\nThe cert itself.\nCompute the randomness associated with this VRF output.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe hash of the block.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe criterion which is claimed to be met by this cert.\nThe number of the block.\nThe hash of the parent block.\nVRF pre-output.\nVRF proof.\nThe session of the block.\nThe signature by the validator.\nGet the slot.\nThe consensus slot of the block.\nThe validator index.\nThe validator index.\nThe VRF signature showing the criterion is met.\nThe vrf story.\nThe core index chosen in this cert.\nThe sample number used in this cert.\nA static context associated with producing randomness for …\nErrors that can occur when trying to convert to/from …\nHelper trait to convert primitives to <code>BitIndex</code>.\nCertificate is changed compared to <code>AssignmentCertKind</code>:\nA certification of assignment.\nErrors that can occur when trying to convert to/from …\nA bit index in <code>Bitfield</code>.\nA read-only bitvec wrapper\nErrors that can occur when creating and manipulating …\nA static context associated with producing randomness for …\nA <code>read-only</code>, <code>non-zero</code> bitfield. Each 1 bit identifies a …\nAssignment certificate is not supported in v1.\nA bitfield of core assignments.\nAn assignment criterion which refers to the candidate …\nA signed approval vote which references the candidate …\nMore than one candidate was signed.\nAll bits are zero.\nA static context used for all relay-vrf-modulo VRFs for v2 …\nRandomness type required by BABE operations.\nAn assignment story based on the VRF that authorized the …\nDeprecated assignment. Soon to be removed. An assignment …\nMultiple assignment stories based on the VRF that …\nUnit type wrapper that represents a slot.\nVRF pre-output type suitable for schnorrkel operations.\nVRF proof type suitable for schnorrkel operations.\nVRF signature data\nTranscript ready to be used for VRF related operations.\nReturns the index of the corresponding bit in <code>Bitfield</code>.\nReturns the bit value at specified <code>index</code>. If <code>index</code> is …\nA block hash where the candidate appears.\nA block hash where the candidate appears.\nThe index of the candidate in the list of candidates fully …\nThe cert itself.\nReturns the number of 1 bits.\nReturns the index of the first 1 bit.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new slot by calculating it from the given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the inner bitfield and consumes <code>self</code>.\nMap transcript to <code>VrfSignData</code>.\nReturns an iterator over inner bits.\nThe criterion which is claimed to be met by this cert.\nReturns number of bits.\nGenerate output bytes from the given VRF configuration.\nBuild a new transcript instance.\nVRF pre-output.\nVRF proof.\nSaturating addition.\nSaturating subtraction.\nThe signature by the validator.\nTimestamp of the start of the slot.\nThe validator index.\nThe validator index.\nThe VRF showing the criterion is met.\nA bitfield representing the core indices claimed by this …\nThe core index chosen in this cert.\nThe sample number used in this cert.\nThe choice here is fairly arbitrary. But any dispute that …\nThe dispute is active and unconcluded.\nThe statements concerned different candidates.\nTracked votes on candidates, for the purposes of dispute …\nThe dispute has been concluded against the candidate since …\nThe dispute has been concluded in favor of the candidate …\nDispute has been confirmed (more than <code>byzantine_threshold</code> …\nA dispute initiating/participating message that have been …\nThings that can go wrong when constructing a <code>DisputeMessage</code>…\nThe status of dispute.\nProvided receipt had different hash than the <code>CandidateHash</code> …\nAny invalid vote (currently only explicit).\nThe invalid statement validator key did not correspond to …\nInvalid statement should have <code>InvalidDisputeStatementKind</code>.\nProvided index could not be found in <code>SessionInfo</code>.\nThe valid statement validator key did not correspond to …\nType alias for retrieving invalid votes from <code>CandidateVotes</code>\nEncountered a keystore error while signing\nCould not generate signing payload\nThe statements concerned different sessions.\nA checked dispute statement from an associated validator.\nErrors encountered while signing a dispute statement\nTimestamp based on the 1 Jan 1970 UNIX base, which is …\nA <code>DisputeMessage</code> where signatures of statements have not …\nValid candidate votes.\nAny valid vote (backing, approval, explicit).\nValid statement should have <code>ValidDisputeStatementKind</code>.\nProvided index could not be found in <code>SessionInfo</code>.\nType alias for retrieving valid votes from <code>CandidateVotes</code>\nInitialize the status to the active state.\nAccess the underlying candidate hash.\nRead only access to the candidate receipt.\nThe candidate being disputed.\nThe receipt of the candidate itself.\nTransition the status to a new status after observing the …\nTransition the status to a new status after observing the …\nYields the timestamp this dispute concluded at, if any.\nMove status to confirmed status, if not yet …\nReturns true if the dispute has concluded for longer than …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert a unchecked backing statement to a …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nBuild a <code>SignedDisputeMessage</code> and check what can be checked.\nConcluded invalid?\nConcluded valid?\nInsert a vote, replacing any already existing vote.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume self to return the signature.\nVotes of invalidity, sorted by validator index.\nRead only access to the invalid vote.\nThe invalid vote data that makes up this dispute.\nCheck whether the dispute is not a spam dispute.\nWhether the disputed candidate is possibly invalid.\nGet all the validator indices we have votes for.\nKind of dispute statement.\nKind of dispute statement.\nCreate new empty <code>ValidCandidateVotes</code>\nCreate a new <code>SignedDisputeStatement</code>, which is only …\nCreate a new <code>SignedDisputeStatement</code> from information that …\nGet read only direct access to underlying map.\nRetain any votes that match the given criteria.\nRead only access to the <code>SessionIndex</code>.\nAccess the underlying session index.\nThe session the candidate appears in.\nSign this statement with the given keystore and key. Pass …\nThe validator signature, that can be verified when …\nThe validator signature, that can be verified when …\nAccess the underlying dispute statement\nTry to recover the two signed dispute votes from an …\nVotes of validity, sorted by validator index.\nRead only access to the valid vote.\nThe valid vote that makes this dispute request valid.\nThe voting validator index.\nThe voting validator index.\nAccess the underlying validator public key.\nAccess the underlying validator signature.\nGet the set of all validators who have votes in the set, …")