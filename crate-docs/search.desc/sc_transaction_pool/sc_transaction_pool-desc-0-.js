searchState.loadedDescShard("sc_transaction_pool", 0, "Substrate transaction pool implementation.\nBasic implementation of transaction pool that can be …\nBlock type.\nBody future (since block body might be remote)\nConcrete extrinsic validation and query logic.\nError type.\nFull revalidation type.\nThe transaction pool logic for full client.\nA transaction pool for a full node.\nTransaction that is invalid.\nLight revalidation type.\nPool configuration options.\nExtrinsics pool that performs validation.\nQueue limits\nType of revalidation.\nImmutable transaction\nTransaction which validity can’t be determined.\nTransaction that has been validated successfully.\nPre-validated transaction. Validated pool only accepts …\nValidate transaction future.\nGet access to the underlying api\nHow long the extrinsic is banned for.\nReturns a block body given the block.\nReturns a block header given the block id.\nReturns a block hash given the block id.\nReturns a block number given the block id.\nNumber of bytes encoding of the transaction requires.\nMaximal number of transactions in the queue.\nRaw extrinsic representing that transaction.\nExplicit transaction clone.\nTransaction pool error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nFuture queue limits.\nTransaction hash (unique)\nReturns hash and encoding length of the extrinsic.\nReturns transaction hash\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if any of the provided values exceeds the …\nCreate new transaction pool logic.\nCreate a new transaction pool.\nCreate new basic transaction pool for a full node with the …\nCreate new basic transaction pool for a full node with the …\nCreate new basic transaction pool with provided api, for …\nInform the transaction pool about imported and finalized …\nGets shared reference to the underlying pool.\nTransaction priority (higher = better)\nShould that transaction be propagated.\nTags that this transaction provides.\nPrunes ready transactions.\nPrunes known ready transactions.\nPrunes ready transactions that provide given list of tags.\nReady queue limits.\nReject future transactions.\nTags required by the transaction.\nResubmit some transaction that were validated elsewhere.\nResubmit the given extrinsics to the pool.\nSource of that transaction.\nImport a single extrinsic and starts to watch its progress …\nImports a bunch of unverified extrinsics to the pool\nImports one unverified extrinsic to the pool\nMaximal size of encodings of all transactions in the queue.\nCompute a tree-route between two blocks. See <code>TreeRoute</code> for …\nConsume validity result, transaction data and produce …\nAt which block the transaction becomes invalid?\nVerify extrinsic at given block.\nValidates a transaction by calling into the runtime, same …\nget a reference to the underlying validated pool.\nCreate new basic transaction pool with provided api and …\nContains the error value\nTransaction pool error type.\nContains the success value\nTransaction pool result.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.")