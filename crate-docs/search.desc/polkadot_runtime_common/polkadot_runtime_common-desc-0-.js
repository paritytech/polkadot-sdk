searchState.loadedDescShard("polkadot_runtime_common", 0, "Common runtime code for the Relay Chain, e.g. Rococo, …\nWe assume that an on-initialize consumes 1% of the weight …\nThe adjustment variable of the runtime. Higher values will …\nA placeholder since there is currently no provided session …\nConvert a balance to an unsigned 256-bit number, use in …\nContains a variant per dispatchable extrinsic that this …\nMaximum length of block. Up to 5MB.\nNumbers which have upper and lower bounds\nComplex storage builder stuff.\nThe type used for currency conversion.\nChilling.\nWe allow for 2 seconds of compute with a 6 second average …\nThe maximum amount of the multiplier.\nMinimum amount of the multiplier. This value cannot be too …\nWe allow <code>Normal</code> extrinsics to fill up the block up to 75%, …\nDeclaring desire to nominate, delegate, or generally …\nA placeholder since there is currently no provided session …\nParameterized slow adjusting fee updated based on …\nRepresentation of the status of a staker.\nA reasonable benchmarking config for staking pallet.\nThe portion of the <code>NORMAL_DISPATCH_RATIO</code> that we adjust …\nContains a variant per dispatchable extrinsic that this …\nImplementations of some helper traits passed into runtime …\nConvert an unsigned 256-bit number to balance, use in …\nDeclaring desire in validate, i.e author blocks.\nThis pallet allows to assign permanent (long-lived) or …\nAssimilate the storage for this module into pre-existing …\nAuctioning system to determine the set of Parachains in …\nBuild the storage out of this builder.\nBurn the specified liquid free balance from the origin …\nPallet to process claims from Ethereum addresses.\nParachain <code>Crowdloaning</code> pallet\nCode for elections.\nAdjust the total issuance in a saturating way.\nSet the regular balance of a given account.\nExactly as <code>transfer_allow_death</code>, except the origin must be …\nUnreserve some balance from a user by force.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nThis pallet is designed to go into a source chain and …\nImplements the weight types for the elections module and a …\nImplements the weight types for a runtime. It expects the …\nAuxiliary <code>struct</code>/<code>enum</code>s for polkadot runtime.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the largest finite number this type can represent\nReturns the smallest finite number this type can represent\nCreate a call with the variant <code>burn</code>.\nCreate a call with the variant <code>force_adjust_total_issuance</code>.\nCreate a call with the variant <code>force_set_balance</code>.\nCreate a call with the variant <code>force_transfer</code>.\nCreate a call with the variant <code>force_unreserve</code>.\nCreate a call with the variant <code>set</code>.\nCreate a call with the variant <code>transfer_all</code>.\nCreate a call with the variant <code>transfer_allow_death</code>.\nCreate a call with the variant <code>transfer_keep_alive</code>.\nCreate a call with the variant <code>upgrade_accounts</code>.\nPallet to handle parachain registration and related fund …\nA simple wrapper allowing <code>Sudo</code> to call into <code>paras</code> routines.\nMacro to set a value (e.g. when using the <code>parameter_types</code> …\nPallet to process purchase of DOTs.\nSet the current time.\nThe <code>SlotRange</code> struct which succinctly handles the 36 …\nParathread and parachains leasing system. Allows para IDs …\nTraits used across pallets for Polkadot.\nTransfer the entire transferable balance from the caller …\nTransfer some liquid free balance to another account.\nSame as the <code>transfer_allow_death</code> call, but with a check …\nCommon try-runtime only tests for runtimes.\nUpgrade a specified account.\nXCM sender for relay chain.\nInformation about a temporary parachain slot.\nLease period an assigned slot should start from (current, …\nBenchmarking for assigned_slots pallet\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLast lease period this slot had a turn in (incl. current). …\nNumber of leases this temporary slot had (incl. current).\nManager account of the para.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nLease period the parachain slot should ideally start from, …\nNumber of lease period the slot lease will last. This is …\n<code>VersionUncheckedMigrateToV1</code> wrapped in a <code>VersionedMigration</code>…\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nNumber of active temporary slots in current slot lease …\nOrigin for assigning slots.\nContains a variant per dispatchable extrinsic that this …\nCannot downgrade lease holding parachain to on-demand.\nCannot upgrade on-demand parachain to lease holding …\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCan be used to configure the genesis state of this pallet.\nThe type representing the leasing system.\nThe max number of permanent slots that can be assigned.\nThe maximum number of permanent slots has been changed\nThe max number of temporary slots to be scheduled per …\nThe max number of temporary slots that can be assigned.\nThe maximum number of temporary slots has been changed\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nNot a parathread (on-demand parachain).\nAn ongoing lease already exists.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe specified parachain is not registered.\nA parachain was assigned a permanent parachain slot\nNumber of assigned (and active) permanent slots.\nThe number of lease periods a permanent parachain slot …\nAssigned permanent slots, with their start lease period, …\nThe overarching event type.\nPermanent or Temporary slot already assigned.\nPermanent or Temporary slot has not been assigned.\nA parachain was assigned a temporary parachain slot\nNumber of assigned temporary slots.\nThe number of lease periods a temporary parachain slot …\nAssigned temporary slots.\nWeight Information for the Extrinsics in the Pallet\nAssign a permanent parachain slot and immediately create a …\nAssign a permanent parachain slot and immediately create a …\nAssign a temporary parachain slot. The function tries to …\nAssign a temporary parachain slot. The function tries to …\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>assign_perm_parachain_slot</code>.\nCreate a call with the variant <code>assign_temp_parachain_slot</code>.\nCreate a call with the variant <code>set_max_permanent_slots</code>.\nCreate a call with the variant <code>set_max_temporary_slots</code>.\nCreate a call with the variant <code>unassign_parachain_slot</code>.\nSets the storage value <code>MaxPermanentSlots</code>.\nSets the storage value <code>MaxPermanentSlots</code>.\nSets the storage value <code>MaxTemporarySlots</code>.\nSets the storage value <code>MaxTemporarySlots</code>.\nAuto-generated docs-only module listing all (public and …\nUnassign a permanent or temporary parachain slot\nUnassign a permanent or temporary parachain slot\nAssign a permanent parachain slot and immediately create a …\nAssign a temporary parachain slot. The function tries to …\nSets the storage value <code>MaxPermanentSlots</code>.\nSets the storage value <code>MaxTemporarySlots</code>.\nUnassign a permanent or temporary parachain slot\nNumber of active temporary slots in current slot lease …\nThe max number of permanent slots that can be assigned.\nThe max number of temporary slots that can be assigned.\nNumber of assigned (and active) permanent slots.\nAssigned permanent slots, with their start lease period, …\nNumber of assigned temporary slots.\nAssigned temporary slots.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn auction index. We count auctions in this type.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe para is already leased out for part of this range.\nAn auction ended. All funds become unreserved.\nNumber of auctions started so far.\nAuction has already ended.\nThis auction is already in progress.\nInformation relating to the current auction, if there is …\nAn auction started. Provides its index and the block …\nA new bid has been accepted as the current winner.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe number of blocks over which an auction may be …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe origin which may initiate auctions.\nThe lease period is in the past.\nThe type representing the leasing system.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nNot an auction.\nNot a current auction.\nThe <code>Pallet</code> struct, the main type that implements traits …\nPara is not registered\nSomething that provides randomness in the runtime.\nThe parachain registrar type.\nSomeone attempted to lease the same slot twice for a …\nFunds were reserved for a winning bid. First balance is …\nAmounts currently reserved in the accounts of the bidders …\nThe overarching event type.\nThe length of each sample to take during the ending period.\nFunds were unreserved since bidder is no longer active. …\nWeight Information for the Extrinsics in the Pallet\nThe winning bids for each of the 10 ranges at each sample …\nThe winning offset was chosen for an auction. This will …\nMake a new bid from an account (including a parachain …\nMake a new bid from an account (including a parachain …\nCancel an in-progress auction.\nCancel an in-progress auction.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nActually place a bid in the current auction.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new auction.\nCreate a new auction.\nCreate a call with the variant <code>bid</code>.\nCreate a call with the variant <code>cancel_auction</code>.\nCreate a call with the variant <code>new_auction</code>.\nAuto-generated docs-only module listing all (public and …\nMake a new bid from an account (including a parachain …\nCancel an in-progress auction.\nCreate a new auction.\nNumber of auctions started so far.\nInformation relating to the current auction, if there is …\nAmounts currently reserved in the accounts of the bidders …\nThe winning bids for each of the 10 ranges at each sample …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn Ethereum address (i.e. 20 bytes, used to represent an …\nValidate <code>attest</code> calls prior to execution. Needed to avoid …\nStatement required to be made by non-SAFT holders.\nStatement required to be made by SAFT holders.\nThe kind of statement an account needs to make for a claim …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate new <code>SignedExtension</code> to check runtime version.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nContains a variant per dispatchable extrinsic that this …\nSomeone claimed some DOTs.\nStorage type is <code>StorageMap</code> with key type <code>EthereumAddress</code> …\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCan be used to configure the genesis state of this pallet.\nInvalid Ethereum signature.\nA needed statement was not included.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThere’s not enough in the pot to pay out some unvested …\nThe overarching event type.\nAccount ID sending transaction has no claim.\nEthereum address has no claim.\nStorage type is <code>StorageValue</code> with value type …\nThe account already has a vested balance.\nVesting schedule for a claim. First balance is the total …\nAttest to a statement, needed to finalize the claims …\nAttest to a statement, needed to finalize the claims …\nMake a claim to collect your DOTs.\nMake a claim to collect your DOTs.\nMake a claim to collect your DOTs by signing a statement.\nMake a claim to collect your DOTs by signing a statement.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMint a new claim to collect DOTs.\nMint a new claim to collect DOTs.\nCreate a call with the variant <code>attest</code>.\nCreate a call with the variant <code>claim</code>.\nCreate a call with the variant <code>claim_attest</code>.\nCreate a call with the variant <code>mint_claim</code>.\nCreate a call with the variant <code>move_claim</code>.\nAuto-generated docs-only module listing all (public and …\nAttest to a statement, needed to finalize the claims …\nMake a claim to collect your DOTs.\nMake a claim to collect your DOTs by signing a statement.\nMint a new claim to collect DOTs.\nWarning: Doc-Only\nWarning: Doc-Only\nPre-claimed Ethereum accounts, by the Account ID that they …\nThe statement kind that must be signed, if any.\nWarning: Doc-Only\nVesting schedule for a claim. First balance is the total …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInformation on a funding effort for a pre-existing …\nA hard-cap on the amount that may be contributed.\nThe amount of deposit placed.\nThe owning account who placed the deposit.\nBlock number after which the funding must have succeeded. …\nFirst lease period in range to bid on; it’s actually a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nUnique index used to represent this fund.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe most recent block that this had a contribution. …\nLast lease period in range to bid on; it’s actually a …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe total amount raised.\nAn optional verifier. If exists, contributions must be …\nMigrations for using fund index to create fund accounts …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThis migration converts crowdloans to use a crowdloan …\nA parachain has been moved to <code>NewRaise</code>\nAll loans in a fund have been refunded.\nThe fund is already in <code>NewRaise</code>\nThe type representing the auctioning system.\nThis parachain’s bid or lease is still active and …\nContains a variant per dispatchable extrinsic that this …\nThe campaign ends before the current block number. The end …\nContributions exceed maximum amount.\nConfiguration trait of this pallet.\nContributed to a crowd sale.\nThe contribution period has already ended.\nThe contribution was below the minimum, <code>MinContribution</code>.\nCreate a new crowdloaning campaign.\nFund is dissolved.\nThe configuration to a crowdloan has been edited.\nThe end date for this crowdloan is not sensible.\nThe number of auctions that have entered into their ending …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe current lease period is more than the first lease …\nThe first lease period needs to at least be less than 3 …\nThe crowdloan has not yet ended.\nInfo on all of the funds.\nThe result of trying to submit a new bid to the Slots …\nThe origin of this call is invalid.\nInvalid fund index.\nInvalid signature.\nLast lease period must be greater than first lease period.\nThe last lease period cannot be more than 3 periods after …\nThis parachain lease is still active and retirement cannot …\nThe maximum length for the memo attached to a crowdloan …\nThe provided memo is too large.\nA memo has been updated.\nThe minimum amount that may be contributed into a …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe funds that have had additional contributions during …\nTracker for the next available fund index\nThere are no contributions stored in this crowdloan.\nA lease period has not started yet, due to an offset in …\nThis crowdloan does not correspond to a parachain.\nThe crowdloan is not ready to dissolve. Potentially still …\nThere was an overflow.\nThe <code>Pallet</code> struct, the main type that implements traits …\n<code>PalletId</code> for the crowdloan pallet. An appropriate value …\nThe loans in a fund have been partially dissolved, i.e. …\nThe parachain registrar type. We just use this to ensure …\nMax number of storage keys to remove per extrinsic call.\nThe amount to be held on deposit by the depositor of a …\nNo contributions allowed during the VRF delay\nWeight Information for the Extrinsics in the Pallet\nWithdrew full balance of a contributor.\nAdd an optional memo to an existing crowdloan contribution.\nAdd an optional memo to an existing crowdloan contribution.\nContribute to a crowd sale. This will transfer some …\nContribute to a crowd sale. This will transfer some …\nContribute your entire balance to a crowd sale. This will …\nContribute your entire balance to a crowd sale. This will …\nCreate a new crowdloaning campaign for a parachain slot …\nCreate a new crowdloaning campaign for a parachain slot …\nAuto-generated docs-only module listing all defined …\nRemove a fund after the retirement period has ended and …\nRemove a fund after the retirement period has ended and …\nEdit the configuration for an in-progress crowdloan.\nEdit the configuration for an in-progress crowdloan.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe account ID of the fund pot.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>add_memo</code>.\nCreate a call with the variant <code>contribute</code>.\nCreate a call with the variant <code>contribute_all</code>.\nCreate a call with the variant <code>create</code>.\nCreate a call with the variant <code>dissolve</code>.\nCreate a call with the variant <code>edit</code>.\nCreate a call with the variant <code>poke</code>.\nCreate a call with the variant <code>refund</code>.\nCreate a call with the variant <code>withdraw</code>.\nPoke the fund into <code>NewRaise</code>\nPoke the fund into <code>NewRaise</code>\nAutomatically refund contributors of an ended crowdloan. …\nAutomatically refund contributors of an ended crowdloan. …\nAuto-generated docs-only module listing all (public and …\nWithdraw full balance of a specific contributor.\nWithdraw full balance of a specific contributor.\nAdd an optional memo to an existing crowdloan contribution.\nContribute to a crowd sale. This will transfer some …\nContribute your entire balance to a crowd sale. This will …\nCreate a new crowdloaning campaign for a parachain slot …\nRemove a fund after the retirement period has ended and …\nEdit the configuration for an in-progress crowdloan.\nPoke the fund into <code>NewRaise</code>\nAutomatically refund contributors of an ended crowdloan. …\nWithdraw full balance of a specific contributor.\nThe number of auctions that have entered into their ending …\nInfo on all of the funds.\nThe funds that have had additional contributions during …\nTracker for the next available fund index\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe numbers configured here could always be more than the …\nThe accuracy type used for genesis election provider;\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nTrait to handle reaping identity from state.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nWhat to do when an identity is reaped. For example, the …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe deposits held for <code>who</code> were updated. <code>identity</code> is the …\nThe <code>Event</code> enum of this pallet\nThe identity and all sub accounts were reaped for <code>who</code>.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nA handler for what to do when an identity is reaped.\nThe origin that can reap identities. Expected to be …\nOverarching event type.\nWeight information for the extrinsics in the pallet.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>poke_deposit</code>.\nCreate a call with the variant <code>reap_identity</code>.\nUpdate the deposit of <code>who</code>. Meant to be called by the …\nUpdate the deposit of <code>who</code>. Meant to be called by the …\nReap the <code>IdentityInfo</code> of <code>who</code> from the Identity pallet of <code>T</code>…\nReap the <code>IdentityInfo</code> of <code>who</code> from the Identity pallet of <code>T</code>…\nAuto-generated docs-only module listing all (public and …\nUpdate the deposit of <code>who</code>. Meant to be called by the …\nReap the <code>IdentityInfo</code> of <code>who</code> from the Identity pallet of <code>T</code>…\nAdapter for <code>Contains</code> trait to match <code>VersionedLocatableAsset</code>…\nParameters passed into <code>relay_era_payout</code> function.\nConverts the <code>VersionedLocatableAsset</code> to the …\nLogic for the author to get a portion of fees.\nVersioned locatable asset type which contains both an XCM …\nConverts the <code>VersionedLocation</code> to the <code>xcm::latest::Location</code>…\nFalloff used to calculate era payouts.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nIdeal stake ratio, which is deducted by …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLegacy auction proportion, which substracts from …\nMaximum inflation rate.\nMinimum inflation rate.\nFraction of the era period used to calculate era payouts.\nA specialized function to compute the inflation of the …\nTotal stakable amount.\nTotal staked amount.\nProvides a factory method for the <code>VersionedLocatableAsset</code>. …\nProvide factory methods for the <code>VersionedLocatableAsset</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns if the para is locked.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe ID is already registered.\nContains a variant per dispatchable extrinsic that this …\nCannot deregister para\nCannot schedule downgrade of lease holding parachain to …\nCannot perform a parachain slot / lifecycle swap. Check …\nCannot schedule upgrade of on-demand parachain to lease …\nInvalid para code size.\nConfiguration trait of this pallet.\nThe system’s currency for on-demand parachain payment.\nThe deposit to be paid per byte stored on chain.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCan be used to configure the genesis state of this pallet.\nInvalid para head data size.\nThe validation code is invalid.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe next free <code>ParaId</code>.\nThe caller is not the owner of this Id.\nPara is not a Parachain.\nPara is not a Parathread (on-demand parachain).\nThe ID is not registered.\nThe ID given for registration has not been reserved.\nRuntime hook for when a lease holding parachain and …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe deposit to be paid to run a on-demand parachain. This …\nPara is locked from manipulation by the manager. Must use …\nAmount held on deposit for each para and the original …\nThe overarching event type.\nThe aggregated origin type must support the <code>parachains</code> …\nWeight Information for the Extrinsics in the Pallet\nAdd a manager lock from a para. This will prevent the …\nAdd a manager lock from a para. This will prevent the …\nDeregister a Para Id, freeing all data and returning any …\nDeregister a Para Id, freeing all data and returning any …\nAuto-generated docs-only module listing all defined …\nForce the registration of a Para Id on the relay chain.\nForce the registration of a Para Id on the relay chain.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the manager <code>AccountId</code> of a para if one exists.\nCreate a call with the variant <code>add_lock</code>.\nCreate a call with the variant <code>deregister</code>.\nCreate a call with the variant <code>force_register</code>.\nCreate a call with the variant <code>register</code>.\nCreate a call with the variant <code>remove_lock</code>.\nCreate a call with the variant <code>reserve</code>.\nCreate a call with the variant <code>schedule_code_upgrade</code>.\nCreate a call with the variant <code>set_current_head</code>.\nCreate a call with the variant <code>swap</code>.\nRegister head data and validation code for a reserved Para …\nRegister head data and validation code for a reserved Para …\nRemove a manager lock from a para. This will allow the …\nRemove a manager lock from a para. This will allow the …\nReserve a Para Id on the relay chain.\nReserve a Para Id on the relay chain.\nSchedule a parachain upgrade.\nSchedule a parachain upgrade.\nSet the parachain’s current head.\nSet the parachain’s current head.\nAuto-generated docs-only module listing all (public and …\nSwap a lease holding parachain with another parachain, …\nSwap a lease holding parachain with another parachain, …\nAdd a manager lock from a para. This will prevent the …\nDeregister a Para Id, freeing all data and returning any …\nForce the registration of a Para Id on the relay chain.\nRegister head data and validation code for a reserved Para …\nRemove a manager lock from a para. This will allow the …\nReserve a Para Id on the relay chain.\nSchedule a parachain upgrade.\nSet the parachain’s current head.\nSwap a lease holding parachain with another parachain, …\nThe next free <code>ParaId</code>.\nAmount held on deposit for each para and the original …\nPending swap operations.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nContains a variant per dispatchable extrinsic that this …\nCannot downgrade lease holding parachain to on-demand.\nCannot upgrade on-demand parachain to lease holding …\nConfiguration trait of this pallet.\nCould not schedule para cleanup.\nThe <code>Error</code> enum of this pallet.\nA DMP message couldn’t be sent because it exceeds the …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nNot a lease holding parachain.\nNot a parathread (on-demand parachain).\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe specified parachain is already registered.\nThe specified parachain is not registered.\nThere are more cores than supported by the runtime.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>sudo_establish_hrmp_channel</code>.\nCreate a call with the variant <code>sudo_queue_downward_xcm</code>.\nCreate a call with the variant <code>sudo_schedule_para_cleanup</code>.\nCreate a call with the variant …\nCreate a call with the variant …\nCreate a call with the variant …\nAuto-generated docs-only module listing all (public and …\nForcefully establish a channel from the sender to the …\nForcefully establish a channel from the sender to the …\nSend a downward XCM to the given para.\nSend a downward XCM to the given para.\nSchedule a para to be cleaned up at the start of the next …\nSchedule a para to be cleaned up at the start of the next …\nSchedule a para to be initialized at the start of the next …\nSchedule a para to be initialized at the start of the next …\nDowngrade a lease holding parachain to an on-demand …\nDowngrade a lease holding parachain to an on-demand …\nUpgrade a parathread (on-demand parachain) to a lease …\nUpgrade a parathread (on-demand parachain) to a lease …\nForcefully establish a channel from the sender to the …\nSend a downward XCM to the given para.\nSchedule a para to be cleaned up at the start of the next …\nSchedule a para to be initialized at the start of the next …\nDowngrade a lease holding parachain to an on-demand …\nUpgrade a parathread (on-demand parachain) to a lease …\nAll information about an account regarding the purchase of …\nThe kind of statement an account needs to make for a claim …\nAccount has completed the purchase process.\nAccount has initiated the account creation process.\nAccount is not valid.\nAccount is pending validation.\nAccount is valid with a high contribution amount.\nAccount is valid with a low contribution amount.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nWARNING: Executing this function will clear all storage …\nA new account was created.\nAccount has already completed the purchase process.\nSomeone’s purchase balance was updated.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe origin allowed to make configurations to the pallet.\nBalances Pallet\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nAccount used in the purchase already exists.\nAccount is not currently valid to use.\nProvided signature is invalid\nThe statement is too long to be stored on chain.\nThe unlock block is in the past!\nThe maximum statement length for the statement users to …\nThe maximum amount of locked DOTs that we will unlock.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nAn overflow occurred when doing calculations.\nThe <code>Pallet</code> struct, the main type that implements traits …\nA new payment account was set.\nA payout was made to a purchaser.\nThe overarching event type.\nA new statement was set.\nA new statement was set. <code>[block_number]</code>\nThe amount of purchased locked DOTs that we will unlock …\nThe origin allowed to set account status.\nSomeone’s account validity was updated.\nVesting Pallet\nVesting schedule already exists for this account.\nCreate a new account. Proof of existence through a valid …\nCreate a new account. Proof of existence through a valid …\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>create_account</code>.\nCreate a call with the variant <code>payout</code>.\nCreate a call with the variant <code>set_payment_account</code>.\nCreate a call with the variant <code>set_statement</code>.\nCreate a call with the variant <code>set_unlock_block</code>.\nCreate a call with the variant <code>update_balance</code>.\nCreate a call with the variant <code>update_validity_status</code>.\nPay the user and complete the purchase process.\nPay the user and complete the purchase process.\nSet the account that will be used to payout users in the …\nSet the account that will be used to payout users in the …\nSet the statement that must be signed for a user to …\nSet the statement that must be signed for a user to …\nSet the block where locked DOTs will become unlocked.\nSet the block where locked DOTs will become unlocked.\nAuto-generated docs-only module listing all (public and …\nUpdate the balance of a valid account.\nUpdate the balance of a valid account.\nUpdate the validity status of an existing account. If set …\nUpdate the validity status of an existing account. If set …\nCreate a new account. Proof of existence through a valid …\nPay the user and complete the purchase process.\nSet the account that will be used to payout users in the …\nSet the statement that must be signed for a user to …\nSet the block where locked DOTs will become unlocked.\nUpdate the balance of a valid account.\nUpdate the validity status of an existing account. If set …\nWarning: Doc-Only\nWarning: Doc-Only\nWarning: Doc-Only\nWarning: Doc-Only\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA compactly represented sub-range from the series.\nReturn a tuple representation of the <code>SlotRange</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn true if two <code>SlotRange</code> intersect in their lease …\nCalls <code>U::from(self)</code>.\nReturn the length of occupying a <code>SlotRange</code>.\nConstruct a <code>SlotRange</code> from the current lease period, the …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nMigrations for using fund index to create fund accounts …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe currency type used for bidding.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe origin which may forcibly create or clear leases. Root …\nThere was an error with the lease.\nThe number of blocks to offset each lease period by.\nThe number of blocks over which a single period lasts.\nA para has won the right to a continuous set of lease …\nAmounts held on deposit for each (possibly future) leased …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nA new <code>[lease_period]</code> is beginning.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe parachain ID is not onboarding.\nThe parachain registrar type.\nThe overarching event type.\nWeight Information for the Extrinsics in the Pallet\nClear all leases for a Para Id, refunding any deposits …\nClear all leases for a Para Id, refunding any deposits …\nAuto-generated docs-only module listing all defined …\nJust a connect into the <code>lease_out</code> call, in case Root wants …\nJust a connect into the <code>lease_out</code> call, in case Root wants …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>clear_all_leases</code>.\nCreate a call with the variant <code>force_lease</code>.\nCreate a call with the variant <code>trigger_onboard</code>.\nAuto-generated docs-only module listing all (public and …\nTry to onboard a parachain that has a lease for the …\nTry to onboard a parachain that has a lease for the …\nClear all leases for a Para Id, refunding any deposits …\nJust a connect into the <code>lease_out</code> call, in case Root wants …\nTry to onboard a parachain that has a lease for the …\nAmounts held on deposit for each (possibly future) leased …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe account ID type that encodes a parachain manager ID.\nAn account identifier for a leaser.\nAn account identifier for a leaser.\nThe period to be leased has already ended.\nThere is already a lease on at least one period for the …\nAn enum which tracks the status of the auction system, and …\nThe currency type in which the lease is taken.\nThe currency type in which the lease is taken.\nWe are in the ending period of the auction, where we are …\nError type for something that went wrong with leasing.\nThe measurement type for counting lease periods (generally …\nThe measurement type for counting lease periods (generally …\nLease manager. Used by the auction module to handle …\nA lease period has not started yet, due to an offset in …\nAn auction has not started yet.\nRuntime hook for when we swap a lease holding parachain …\nParachain registration API.\nUnable to reserve the funds in the leaser’s account.\nWe are in the starting period of the auction, collecting …\nWe have completed the bidding process and are waiting for …\nReturns true if the parachain already has a lease in any …\nApply a lock to the para registration so that it cannot be …\nGiven the current block number, return the current auction …\nReturn the amount of balance currently held in reserve on …\nDeregister a Para ID, free any data, and return any …\nExecute any pending state transitions for paras. For …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCheck if the para and user combination has won an auction …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>Some(sample, sub_sample)</code> if the auction is in the …\nReturns true if the auction is in any state other than …\nReturn if a <code>ParaId</code> is a lease holding Parachain.\nReturn if a <code>ParaId</code> is a Parathread (on-demand parachain).\nReturn if a <code>ParaId</code> is registered in the system.\nReturn true if the auction is in the starting period.\nReturns true if the auction is in the <code>VrfDelay</code> period.\nLease a new parachain slot for <code>para</code>.\nReturns the lease period at <code>block</code>, and if this is the …\nReturns the lease period at <code>block</code>, and if this is the …\nThe length of a lease period, and any offset which may be …\nThe length of a lease period, and any offset which may be …\nElevate a para to parachain status.\nDowngrade lease holding parachain into parathread …\nReport the manager (permissioned owner) of a parachain, if …\nCreate a new auction.\nUpdates any needed state/references to enact a logical …\nAll lease holding parachains. Ordered ascending by <code>ParaId</code>. …\nPlace a bid in the current auction.\nRegister a Para ID under control of <code>who</code>. Registration may …\nRemove any lock on the para registration.\nregister all inactive nominators for fast-unstake, and …\nXCM sender for relay chain. It only sends downward message.\nImplementation of <code>PriceForMessageDelivery</code> which returns a …\nEnsure more initialization for <code>ParaId</code>. (e.g. open HRMP …\nImplementation of <code>PriceForMessageDelivery</code> which returns an …\nType used for charging different prices to different …\nSimple value-bearing trait for determining/expressing the …\nImplementation of <code>xcm_builder::EnsureDelivery</code> which helps …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the assets required to deliver <code>message</code> to the given …")