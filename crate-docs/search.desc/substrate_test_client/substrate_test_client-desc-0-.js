searchState.loadedDescShard("substrate_test_client", 0, "Client testing utilities.\nSet of test accounts.\nDisk backend.\nKnown bad block hashes.\nBlock data origin.\nAn extension trait for <code>BlockchainEvents</code>.\nBlock pruning settings.\nUses the Wasmtime compiled runtime.\nBlock that was received from the network and validated in …\nSet of test accounts.\nA producer of execution extensions for offchain calls.\nBlock was imported from a file.\nExpected hashes of blocks at given heights.\nGenesis block built into the client.\nA genesis storage initialization trait.\nKeep full block history, of every block that was ever …\nKeep full finalized block history.\nSomething that generates, stores and provides access to …\nA shared pointer to a keystore implementation.\nBlock was broadcasted on the network.\nBlock is part of the initial sync with the network.\nNo value.\nNo value.\nBlock that was collated by this node.\nA running RPC service that can perform in-memory RPC …\nAn extension trait for <code>RpcHandlers</code>.\nAn error for when the RPC call fails.\nThe output of an RPC transaction.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nKeep N recent finalized blocks.\nSet of test accounts.\nStruct containing data needed for a storage.\nChild trie storage data.\nA builder for creating a test client instance.\nSpecification of different methods of executing the …\nAn abstraction over Wasm code executor. Supports selecting …\nExtend child storage\nIgnore missing function imports if set true.\nGive access to the underlying backend of these clients\nGenerate a new bandersnatch key pair for the given key …\nReturns all the bandersnatch public keys for the given key …\nGenerate a bandersnatch ring-VRF signature for the given …\nGenerate an bandersnatch signature for a given message.\nGenerate a bandersnatch VRF pre-output for a given input …\nGenerate a bandersnatch VRF signature for the given data.\nGenerate a new bls381 key pair for the given key type and …\nReturns all bls12-381 public keys for the given key type.\nGenerate a bls381 signature for a given message.\nBuild the test client with the given native executor.\nBuild the test client with the given native executor.\nInstantiate a builder for creating an instance of <code>Self</code>.\nAssociated child info for a child trie.\nChildren trie storage data. Key does not include prefix, …\nSubstrate Client and associated logic.\nClient extension for tests.\nA Number that indicates the error type that occurred.\nA Primitive or Structured value that contains additional …\nChild data for storage.\nGenerate a new (ecdsa,bls381) key pair for the given key …\nReturns all (ecdsa,bls12-381) paired public keys for the …\nGenerate a (ecdsa,bls381) signature pair for a given …\nHashes the <code>message</code> using keccak256 and then signs it using …\nGenerate a new ecdsa key pair for the given key type and …\nReturns all ecdsa public keys for the given key type.\nGenerate an ecdsa signature for a given message.\nGenerate an ecdsa signature for a given pre-hashed message.\nGenerate a new ed25519 key pair for the given key type and …\nReturns all ed25519 public keys for the given key type.\nGenerate an ed25519 signature for a given message.\nEnable proof recording on import.\nEnable the offchain indexing api.\nExpose the Database that is used by this backend. The …\nExpose the Storage that is used by this backend.\nProduces default extensions based on the input parameters.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAlter the genesis storage parameters.\nConstruct genesis storage.\nProvides access to the underlying <code>RpcModule</code>\nChecks if the private keys for the given public key and …\nInsert a new secret key.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if this is an archive pruning mode (either KeepAll or …\nReturns an iterator over all test accounts.\nReturns an iterator over all test accounts.\nList all supported keys of a given type.\nProvides access to listen addresses\nA String providing a short description of the error.\nCreate new instance.\nCreate new <code>ExecutionExtensions</code> given an <code>extensions_factory</code>.\nCreate a new instance of database backend.\nCreate PRC handlers instance.\nCreate new memory-backed client backend for tests.\nCreate new memory-backed client backend for tests.\nCreate a crypto <code>Pair</code> from a numeric value.\nGet account id of a <code>numeric</code> account.\nAn async receiver if data will be returned via a callback.\nReset the shared trie cache.\nThe output string of the transaction if any.\nStarts an RPC query.\nSend a transaction through the RpcHandlers.\nSets custom block rules.\nSet the new extensions_factory\nDisable writing genesis.\nConvenience method to sign a message using the given key …\nGenerate a new sr25519 key pair for the given key type and …\nReturns all the sr25519 public keys for the given key type.\nGenerate an sr25519 signature for a given message.\nGenerate an sr25519 VRF pre-output for a given input data.\nGenerate an sr25519 VRF signature for the given data.\nTop trie storage data.\nWait for <code>count</code> blocks to be imported in the node and then …\nCreate a new instance of the test client builder.\nCreate new <code>TestClientBuilder</code> with default backend.\nExecute the given closure <code>f</code> with the latest runtime (based …\nCreate new <code>TestClientBuilder</code> with default backend and …\nCreate new <code>TestClientBuilder</code> with default backend and …\nThe instantiation strategy to use.\nSubstrate Client\nClient configuration items.\nCall executor that executes methods locally, querying all …\nGet block status.\nGet block body by id.\nGet blockchain info.\nCheck block preconditions.\nGet the code at a given block.\nEnable recording of storage proofs during block import\nreturns a reference to the finality notification sinks …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nQuery auxiliary data from key-value store.\nGet block header by id.\nImport a checked and validated block.\nreturns a reference to the block import notification sinks …\nGet block import event stream.\nInsert auxiliary data into key-value store.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates new instance of local call executor.\nCreates new Substrate Client with given blockchain and …\nCreate an instance of in-memory client.\nCreate a client with the explicitly provided backend. This …\nSkip writing genesis state on first start.\nIf true, allows access from the runtime to write into …\nEnable the offchain worker db.\nAttempts to revert the chain by <code>n</code> blocks guaranteeing that …\nGet the RuntimeVersion at a given block.\nGet a reference to the state at a given block.\nGet storage changes event stream.\nGets the uncles of the block with <code>target_hash</code> going back …\nAttempts to revert the chain by <code>n</code> blocks disregarding …\nGet usage info about current client.\nPath where WASM files exist to override the on-chain WASM.\nMap of WASM runtime substitute starting at the child of …\nBlock data origin.\nExtension trait for a test client around block importing.\nExtension trait for a test client.\nBlock that was received from the network and validated in …\nBlock was imported from a file.\nGenesis block built into the client.\nBlock was broadcasted on the network.\nBlock is part of the initial sync with the network.\nBlock that was collated by this node.\nFinalize a block.\nReturns hash of the genesis block.\nImport block to the chain. No finality.\nImport a block and make it our best block if possible.\nImport a block and finalize it.\nImport block with justification(s), finalizes block.")