searchState.loadedDescShard("polkadot_node_core_approval_voting", 0, "The Approval Voting Subsystem.\nThe approval voting subsystem.\nTrait for providing approval voting subsystem with work.\nInformation about the world assignments are being produced …\nA trait for producing and checking assignments.\nConfiguration for the approval voting subsystem\nApproval Voting metrics.\nApproval DB accessors and writers for on-disk persisted …\nThe assignment public keys for validators.\nCheck the assignment cert for the given relay VRF story …\nThe column family in the DB where approval-voting data is …\nCompute the assignments for the given relay VRF story.\nAssignment criteria VRF generation and checking.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe number of availability cores used by the protocol …\nThe number of delay tranches in total.\nThe number of samples we do of <code>relay_vrf_modulo</code>.\nRevert to the block corresponding to the specified <code>hash</code>. …\nThe slot duration of the consensus algorithm, in …\nThe groups of validators assigned to each core.\nCreate a new approval voting subsystem with the given …\nCreate a new approval voting subsystem with the given …\nThe zeroth delay tranche width.\nCommon helper functions for all versions of …\nVersion 1 of the DB schema.\nVersion 2 of the DB schema.\nVersion 3 of the DB schema.\nThe database config.\n<code>DbBackend</code> is a concrete implementation of the higher-level …\nContains the error value\nErrors while accessing things from the DB.\nContains the success value\nResult alias for DB errors.\nA range from earliest..last block number stored within the …\nThe column family in the database where data is stored.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn all blocks which have entries in the DB, ascending, …\nLoad a block entry from the aux store.\nLoad a blocks-at-height entry for a given block number.\nLoad a candidate entry from the aux store in current …\nLoad the stored-blocks key from the state.\nCreate a new <code>DbBackend</code> with the supplied key-value store …\nMetadata regarding approval of a particular candidate …\nMetadata regarding approval of a particular block, by way …\nMetadata regarding approval of a particular candidate.\nDetails pertaining to our assignment on a block.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRandom bytes derived from the VRF submitted within the …\nMetadata regarding approval of a particular candidate …\nConvenience type definition\nMetadata regarding approval of a particular block, by way …\nMetadata regarding approval of a particular candidate.\nDetails pertaining to our assignment on a block.\nMetadata regarding a specific tranche of assignments for a …\nOur assignment certificate.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad a block entry from the aux store in v1 format.\nLoad a candidate entry from the aux store in v1 format.\nApproval DB migration helpers.\nRandom bytes derived from the VRF submitted within the …\nThe tranche for which the assignment refers to.\nWhether the assignment has been triggered already.\nOur validator index for the session in which the …\nMigrates <code>OurAssignment</code>, <code>CandidateEntry</code> and <code>ApprovalEntry</code> …\nMetadata regarding approval of a particular candidate …\nRe-export this structs as v3 since they did not change …\nMetadata regarding approval of a particular block, by way …\nMetadata regarding approval of a particular candidate.\nContext needed for creating an approval signature for a …\nMetadata about our approval signature\nRe-export this structs as v3 since they did not change …\nRe-export this structs as v3 since they did not change …\nRe-export this structs as v3 since they did not change …\nThe candidate hash, to be included in the signature.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad a block entry from the aux store in v2 format.\nLoad a candidate entry from the aux store in v2 format.\nApproval DB migration helpers.\nRandom bytes derived from the VRF submitted within the …\nThe latest tick we have to create and send the approval.\nThe signature for the candidates hashes pointed by indices.\nThe indices of the candidates signed in this approval.\nMigrates <code>BlockEntry</code>, <code>CandidateEntry</code>, <code>ApprovalEntry</code> and …\nA trait for producing and checking assignments.\nInformation about the world assignments are being produced …\nCore index is out of bounds.\nInvalid arguments\nAssignment invalid.\nInvalid assignment key.\nFailure conditions when checking an assignment cert.\nNode is in backing group.\nAssignment vrf check resulted in 0 assigned cores.\nDetails pertaining to our assignment on a block.\nSample index is out of bounds.\nDelay core index mismatch.\nDelay output mismatch.\nModulo core index mismatch.\nModulo output mismatch.\nThe validator index is out of bounds.\nThe assignment public keys for validators.\nReturns a reference to the assignment cert.\nCheck the assignment cert for the given relay VRF story …\nCompute the assignments for a given block. Returns a map …\nCompute the assignments for the given relay VRF story.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the assignment cert.\nMarks the assignment as triggered.\nThe number of availability cores used by the protocol …\nThe number of delay tranches in total.\nCreate a new <code>OurAssignment</code>.\nThe number of samples we do of <code>relay_vrf_modulo</code>.\nReturns the delay tranche of the assignment.\nReturns whether the assignment has been triggered.\nThe groups of validators assigned to each core.\nReturns the validator index of the assignment.\nThe zeroth delay tranche width.")