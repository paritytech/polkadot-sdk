searchState.loadedDescShard("pallet_tx_pause", 0, "Transaction Pause\nThe stringy name of a call (within a pallet) from …\nThe stringy name of a pallet from <code>GetCallMetadata</code> for …\nA fully specified pallet (<code>PalletNameOf</code>) and optional call (…\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for <code>pallet_tx_pause</code>\nContains a variant per dispatchable extrinsic that this …\nThis pallet, or a specific call is now paused.\nThis pallet, or a specific call is now unpaused.\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nConfigure the initial state of this pallet in the genesis …\nThe call is paused.\nThe call is unpaused.\nMaximum length for pallet name and call name SCALE encoded …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe only origin that can pause calls.\nThe set of calls that are explicitly paused.\nThe overarching call type.\nThe overarching event type.\nThe call is whitelisted and cannot be paused.\nThe only origin that can un-pause calls.\nContains all calls that cannot be paused.\nReturn whether the call is allowed to be dispatched.\nAuto-generated docs-only module listing all defined …\nEnsure that this call can be paused.\nEnsure that this call can be un-paused.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn whether this call is paused.\nSame as <code>Self::is_paused</code> but for inputs unbound by …\nCreate a call with the variant <code>pause</code>.\nCreate a call with the variant <code>unpause</code>.\nPause a call.\nPause a call.\nInitially paused calls.\nAuto-generated docs-only module listing all (public and …\nUn-pause a call.\nUn-pause a call.\nPause a call.\nUn-pause a call.\nThe set of calls that are explicitly paused.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_tx_pause</code> using the Substrate node and …\nWeight functions needed for <code>pallet_tx_pause</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>TxPause::PausedCalls</code> (r:1 w:1) Proof: …\nStorage: <code>TxPause::PausedCalls</code> (r:1 w:1) Proof: …")