searchState.loadedDescShard("assets_common", 0, "<code>Location</code> vs <code>AssetIdForPoolAssets</code> converter for <code>PoolAssets</code>.\n<code>Location</code> vs <code>AssetIdForTrustBackedAssets</code> converter for …\n<code>Location</code> vs <code>CollectionId</code> converter for <code>Uniques</code>\n<code>MatchedConvertedConcreteId</code> converter dedicated for storing …\n<code>MatchedConvertedConcreteId</code> converter dedicated for …\n<code>MatchedConvertedConcreteId</code> converter dedicated for …\n<code>MatchedConvertedConcreteId</code> converter dedicated for …\n<code>MatchedConvertedConcreteId</code> converter dedicated for <code>Uniques</code>\nRuntime API definition for assets.\nRuntime API definition for fungibles.\nCreates asset pairs for liquidity pools with <code>Target</code> always …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\n<code>EnsureOriginWithArg</code> impl for <code>CreateOrigin</code> that allows only …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nConverting any [<code>(AssetId, Balance)</code>] to <code>Asset</code>\nChecks for <code>Location</code>.\nHelper function to convert collections with […\nHelper function to convert <code>Balance</code> with Location<code>to</code>Asset`\nConverts a given <code>Location</code> to <code>Either::Left</code> based on the …\nConverts a given <code>Location</code> to <code>Either::Left</code> when equal to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if <code>a</code> is from the expected global consensus network. …\nChecks if <code>a</code> is from sibling location <code>b</code>. Checks that …\nAccepts an asset if it is from the origin.\nAccept an asset if it is native to <code>AssetsAllowedNetworks</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>u128</code> amount to currency <code>Balance</code> conversion failed.\n<code>Location</code> to <code>AssetId</code>/<code>ClassId</code> conversion failed.\nThe possible errors that can happen querying the storage …\nThe API for querying account’s balances from runtime.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the list of all <code>Asset</code> that an <code>AccountId</code> has.\nReturns the list of all <code>Asset</code> that an <code>AccountId</code> has.")