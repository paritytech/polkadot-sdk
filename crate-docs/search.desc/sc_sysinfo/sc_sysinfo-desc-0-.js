searchState.loadedDescShard("sc_sysinfo", 0, "This crate contains the code necessary to gather basic …\nBlake2-256 hashing algorithm.\nBlake2-256 hashing algorithm executed in parallel\nLimit by the maximal duration and maximal number of …\nDisk random write.\nDisk sequential write.\nLimit the execution time of a benchmark.\nHardware benchmark results for the node.\nLimit by the maximal duration.\nLimit by the maximal number of iterations.\nCopying data in RAM.\nA single hardware metric.\nA single requirement for the hardware.\nMultiple requirements for the hardware.\nSR25519 signature verification.\nThe CPU ISA architecture part of the current target …\nThe environment part of the current target triplet.\nThe operating system part of the current target triplet.\nThroughput as measured in bytes per second.\n<code>Self</code> as number of byte/s.\n<code>Self</code> as number of gibibyte/s.\n<code>Self</code> as number of kibibyte/s.\n<code>Self</code> as number of mebibyte/s.\nBenchmarks the verification speed of sr25519 signatures.\nThe category of the metric.\nWhether the hardware requirements are met by the provided …\nThe CPU speed, as measured in how many MB/s it can hash …\nRandom disk write speed in MB/s.\nSequential disk write speed in MB/s.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct <code>Self</code> from gibibyte/s.\nConstruct <code>Self</code> from kibibyte/s.\nConstruct <code>Self</code> from mebibyte/s.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreates a new execution limit with the passed seconds as …\nBenchmarks the hardware and returns the results of those …\nGathers information about node’s hardware and software.\nInitializes the hardware benchmarks telemetry.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the duration limit or <code>MAX</code> if none is present.\nReturns the iterations limit or <code>MAX</code> if none is present.\nMemory bandwidth in MB/s, calculated by measuring the …\nThe metric to measure.\nThe minimal throughput that needs to be archived for this …\nThe name of the metric. It is always prefixed by the […\nNormalizes <code>Self</code> to use the largest unit possible.\nThe number of expected cores used for computing the …\nThe parallel CPU speed, as measured in how many MB/s it …\nPrints out the results of the hardware benchmarks in the …\nPrints out the system software/hardware information in the …\nSerializes <code>Throughput</code> and uses MiBs as the unit.\nSerializes <code>Option&lt;Throughput&gt;</code> and uses MiBs as the unit.\nCheck this requirement only for relay chain validator …")