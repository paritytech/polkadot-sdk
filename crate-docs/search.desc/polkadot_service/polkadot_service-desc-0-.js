searchState.loadedDescShard("polkadot_service", 0, "Polkadot service. Specialized wrapper over substrate …\nThe concrete type that provides the api.\nAuxiliary wrapper that holds an api instance and binds it …\nNo pruning. Canonicalization is a no-op.\nCanonicalization discards non-canonical nodes. All the …\nActual authority.\nThe authority discovery api.\nCheck given path, and see if there is an existing database …\nProvides access to an auxiliary database.\nAPI necessary for block authorship with BABE.\nClient backend.\nThe backend used by the node.\nBlake2-256 Hash implementation.\nBlock type.\nBlock ID.\nBlock import trait.\nAssociated block insertion operation type.\nThe block number type used by Polkadot. 32-bits will allow …\nSomething which fulfills the abstract idea of a Substrate …\nAssociated blockchain backend type.\nMethod call executor.\nIdentifies the variant of the chain.\nCommon interface of a chain specification.\nThis node is running as in-process node for a parachain …\nA Parachain collator keypair.\nService configuration.\nMaintain a pruning window.\nSomething that can be constructed to a runtime api.\nThe <code>Core</code> runtime api that every Substrate runtime needs to …\nUse a custom already-open database.\nWhere to find the database..\nError used in case the header metadata is not found.\nExternalities error type.\nThe error type.\nHost functions for custom runtime interfaces that should …\nType for extrinsics.\nRegular full node.\nThis node is running as in-process node for a parachain …\nThis runtime API is only implemented for the test runtime!\nA handle used to communicate with the <code>Overseer</code>.\nA hash of some data used by the relay chain.\nIdentify by block header hash.\nHeader hash type\nBlock hash type.\nHashing algorithm\nHeader type.\nBlockchain database header backend. Does not perform any …\nHandles header metadata: hash, number, parent hash, etc.\nProvides the header and block number for a hash.\nDecoupling the provider.\nSomething which fulfills the abstract idea of a Substrate …\nCan be called for a <code>Configuration</code> to identify which …\nIs this node running as in-process node for a parachain …\nKusama.\nImplement Longest Chain Select implementation where ‘…\nDelegate for dispatching a CodeExecutor call.\nThis node is not running as in-process node for a …\nIdentify by block number.\nHeader number.\nExtract the number type for a block.\nOffchain workers local storage.\nThe orchestra.\nExternal connector.\nHandle for an orchestra.\nUnique identifier of a parachain.\nThe API for querying the state of parachains on-chain.\nLoad a ParityDb database from a given path.\nPolkadot.\nConfiguration of the Prometheus endpoint.\nA proposal that is created by a <code>Proposer</code>.\nSomething that provides a runtime api.\nPruning mode.\nLoad a RocksDB database from a given path. Recommended for …\nRococo or one of its derivations.\nRole of the local node.\nThe actual runtime api that will be constructed.\nThe SelectChain trait defines the strategy upon which the …\nA chain-selection implementation which provides safety for …\nAssociated state backend type.\nService errors.\nFull client backend type.\nFull client call executor type.\nFull client type.\nHelper struct to manage background/async tasks in Service.\nPool configuration options.\nUnknown chain?\nWestend.\nA user specified addendum field.\nA user specified addendum field.\nAdd a bootnode to the list.\nRegister another TaskManager to terminate and gracefully …\nAnnounce block automatically after they have been imported\nAppend justification to the block with the given <code>hash</code>.\nApproval voting configuration parameters\nObtain access to the orchestra handle.\nObtain access to the orchestra handle.\nReturn spec as JSON.\nAllow access to the inner chain, for usage during the node …\nReturn StorageBuilder for this spec.\nReturns the persisted validation data for the given <code>ParaId</code> …\nReturns candidate’s acceptance limitations for …\nRetrieve authority identifiers of the current and next …\nYields information on all availability cores as relevant …\nHow long the extrinsic is banned for.\nBase path of the configuration. This is shared between …\nBegin a new block insertion transaction with given parent …\nNote an operation to contain state transition.\nCode related to benchmarking a node.\nAmong those <code>leaves</code> deterministically pick one chain as the …\nThe block that was build.\nInform the <code>Overseer</code> that some block was finalized.\nConvert an arbitrary block ID into a block hash.\nInform the <code>Overseer</code> that that some block was imported.\nConvert an arbitrary block ID into a block hash.\nReturns reference to blockchain backend.\nCreate a mode that keeps given number of blocks.\nNumber of blocks to keep in the db.\nA list of bootnode addresses.\nBroadcast a signal to all subsystems.\nBuild a full node.\nCreate a new orchestra utilizing the builder.\nExecute a call to a contract on top of state in a block of …\nGet a vector of events concerning candidates that occurred …\nGet the receipt of a candidate pending availability. This …\nElastic scaling support\nPolkadot chain configurations.\nChain configuration.\nType of the chain.\nCheck block preconditions.\nChecks if the given validation outputs pass the acceptance …\nClaim queue\nReturns a cloned <code>Box&lt;dyn ChainSpec&gt;</code>.\nReturns code substitutes that should be used for the on …\nCommit block insertion.\nReturn the configuration for BABE.\nReturn the configuration for BABE. Version 1.\nConstruct an instance of the runtime api.\nExecute a contextual call on top of state in a block of a …\nReturns information regarding the current epoch.\nReturns the slot that started the current epoch.\nData path root for the configured chain.\nConfiguration for the database.\nReturns the database config for creating the backend.\nSplit the block into header and list of extrinsics.\nDevelopment key seed.\nReturns a reference to the digest.\nGet a mutable reference to the digest.\nDisable GRANDPA when running in validator mode\nReturns a list of all disabled validators at the given …\nDispatch a method in the runtime.\nReturns a string displaying the node role.\nReturns all onchain disputes.\nGet all the pending inbound messages in the downward …\nEnable approval voting processing in parallel.\nCreates an encoded block from the given <code>header</code> and …\nExecute the given block.\nAn optional number of the maximum number of pvf execute …\nReturns the <code>ExecutionExtensions</code>.\nRuntime executor configuration.\nConvert an arbitrary block ID into a block hash. Returns …\nConvert an arbitrary block ID into a block number. Returns …\nGet block header. Returns <code>UnknownBlock</code> error if block is …\nReturns a reference to the defined chain spec extensions.\nReturns a mutable reference to the defined chain spec …\nReturns a reference to the list of extrinsics.\nThe accompanying extrinsics.\nReturns a reference to the extrinsics root.\nGet the best descendent of <code>base_hash</code> that we should …\nFinalize block with given <code>hash</code>.\nEnable authoring even when offline.\nWhether to enable the block authoring backoff on …\nOptional network fork identifier. <code>None</code> by default.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn a future that will end with success if the signal …\nFuture queue limits.\nGenerates a proof of key ownership for the given authority …\nGeneric implementations of <code>crate::traits::Header</code>, …\nQuery auxiliary data from key-value store.\nQuery auxiliary data from key-value store.\nGain access to the import lock around this backend.\nReturns the last timestamp of a runtime.\nReturns the last timestamp of a runtime.\nObtain a clone of the handle.\nGet block hash by number. Returns <code>None</code> if the header is …\nReturns the hash of the header.\nReturns the hash of the block.\nReturns true if state for given block is available.\nGet block header. Returns <code>None</code> if block is not found.\nObtain the header for a hash.\nReturns a reference to the header.\nThe block header.\nSpec id.\nReturns the pruning mode\nIdentifies the variant of the chain.\nImplementation name\nImplementation version (see sc-cli to see an example of …\nImport a block.\nGet the contents of all channels addressed to the given …\nGet blockchain info.\nInitialize a block with the given header and return the …\nInitialize a block with the given header.\nInsert auxiliary data into key-value store.\nInsert auxiliary data into key-value store.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume <code>self</code> and return the <code>TaskRegistry</code>.\nIs this an archive (either ArchiveAll or ArchiveCanonical) …\nTrue for <code>Role::Authority</code>.\nReturns true if this configuration is for a development …\nReturns if this is a configuration for the <code>Kusama</code> network.\nReturns if this is a configuration for the <code>Polkadot</code> …\nReturns if this is a configuration for the <code>Rococo</code> network.\nReturns if this is a configuration for the <code>Versi</code> test …\nReturns if this is a configuration for the <code>Westend</code> network.\nSet what the task manager should keep alive, can be called …\nReturns a merkle proof of a validator session key. NOTE: …\nConfiguration for the keystore.\nGet all leaves of the chain, i.e. block hashes that have …\nExtract information from each subsystem.\nA user specified addendum field.\nGet the minimum number of backing votes for a parachain …\nSpec name.\nProvide native runtime version.\nNetwork configuration.\nCreates new header.\nCreates new block from header and extrinsics.\nCreate a new <code>Handle</code>.\nInstantiate a new LongestChain for Backend B\nCreate an <code>Id</code>.\nIf a Prometheus registry is passed, it will be used to …\nBuilds a new object suitable for chain operations.\nCreate a new full node of arbitrary runtime and executor.\nUse the plain longest chain algorithm exclusively.\nCreate a new config using the default registry.\nCreate a new <code>SelectRelayChain</code> wrapping the given chain …\nReturns information regarding the next epoch (which was …\nReturns true if the genesis state writing will be skipped …\nGet node features. This is a staging method! Do not use on …\nThe version of the node. TESTING ONLY: <code>None</code> can be passed …\nGet block number by hash. Returns <code>None</code> if the header is …\nObtain the block number for a hash.\nReturns a reference to the header number.\nReturns a handle to offchain storage.\nShould offchain workers be executed.\nScrape dispute relevant from on-chain, backing votes and …\nReturns the state of parachain backing for a given para.\nReturns a reference to the parent hash.\nReturn path for databases that are stored on disk.\nYields the persisted validation data for the given <code>ParaId</code> …\nPin the block to keep body, justification and state …\nPort to use.\nAn optional absolute number of pvf workers that can be …\nAn optional maximum number of pvf workers that can be …\nPrometheus endpoint configuration. <code>None</code> if disabled.\nReturns the prometheus metrics registry, if available.\nProof that was recorded while building the block.\nAdditional loosely-typed properties of the chain.\nNetwork protocol id.\nReturns the network protocol id from the chain spec, or …\nProve the execution of the given <code>method</code>.\nReturns code hashes of PVFs that require pre-checking by …\nReady queue limits.\nA metrics registry to use. Useful for setting the metric …\nReject future transactions.\nDiscard non-best, unfinalized leaf block.\nTells whether the backend requires full-sync mode.\nAttempts to revert the chain by <code>n</code> blocks. If …\nReverts the node state down to at most the last finalized …\nNode role.\nRoute a particular message to a subsystem that consumes …\nRPC configuration.\nRun the <code>Overseer</code>.\nReturns the runtime api. The returned instance will keep …\nPrimitives for the runtime modules.\nExtract RuntimeVersion of given block\nWhether the node is attempting to run as a secure …\nSend some message to one of the <code>Subsystem</code>s.\nSend a message not providing an origin.\nReturns execution parameters for the session.\nReturns the session index expected at a child of the block.\nGet the session info for the given session, if stored.\nSets the extrinsic root.\nSets the header number.\nSets the parent hash.\nSet path for databases that are stored on disk.\nSets the state root.\nSet the storage that should be used by this chain spec.\nA user specified addendum field.\nGet a handle for spawning essential tasks.\nGet a handle for spawning tasks.\nGet access to internal task spawner.\nReturns state backend with post-state of given block.\nState pruning settings.\nReturns a reference to the state root.\nGet block status.\nTell <code>Overseer</code> to shutdown.\nThe storage changes while building this block.\nSubmits a PVF pre-checking statement into the transaction …\nSubmit an unsigned extrinsic to slash validators who lost …\nSubmits an unsigned extrinsic to report an equivocation. …\nA user specified addendum field.\nTelemetry endpoints (if any)\nTelemetry service URL. <code>None</code> if disabled.\nHandle to the tokio runtime. Will be used to spawn futures …\nTracing receiver\nTracing targets\nExtrinsic pool configuration.\nMaximum size of internal trie cache in bytes.\nReturns a list of validators that lost a past session …\nUnpin the block to allow pruning.\nReturns current usage statistics.\nFetch the validation code used by a para, making the given …\nGet the validation code from its hash.\nFetch the hash of the validation code used by a para, …\nReturns the validator groups and rotation info localized …\nGet the current validators.\nReturns the version of the runtime.\nWait for a block with the given hash to be in the …\nSend the given signal, a termination signal, to all …\nDirectory where local WASM runtimes live. These runtimes …\nCreate a new connector with non-default event channel …\nUtilities and tests for locating the PVF worker binaries.\nOptional custom names for the prepare and execute workers.\nAn optional path to a directory containing the workers.\nCache size in MiB. Used only by <code>RocksDb</code> variant of …\nCache size in MiB.\nthe handle to the custom storage\nPath to the paritydb database.\nPath to the database.\nPath to the database.\nif set, the <code>create</code> flag will be required to open such …\nPath to the rocksdb database.\nGenerates <code>System::Remark</code> extrinsics for the benchmarks.\nGenerates <code>Balances::TransferKeepAlive</code> extrinsics for the …\nGenerates inherent data for benchmarking Polkadot, Kusama, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Self</code> from the given client.\nCreates a new <code>Self</code> from the given client and the arguments …\nNode <code>ChainSpec</code> extensions.\nThe <code>ChainSpec</code> parameterized for the rococo runtime.\nThe <code>ChainSpec</code> parameterized for the westend runtime.\nKnown bad block hashes.\nBlock numbers with known hashes.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nHelper function to generate an account ID from seed\nHelper function to generate a crypto pair from seed\nCalls <code>U::from(self)</code>.\nThe light sync state.\nRococo development config (single validator Alice)\nRococo local testnet config (multivalidator Alice + Bob)\nRococo staging testnet config.\n<code>Versi</code> development config (single validator Alice)\n<code>Versi</code> local testnet config (multivalidator Alice + Bob + …\nVersi staging testnet config.\nWestend development config (single validator Alice)\nWestend local testnet config (multivalidator Alice + Bob)\nWestend staging testnet config.\nAbstraction over a substrate block.\nSomething to identify a block.\nDefinition of something that the external world might want …\nA message from the runtime to the consensus engine. This …\nA message from the runtime to the consensus engine. This …\nType corresponding to DigestItem::Consensus.\nGeneric header digest.\nDigest item that is able to encode/decode ‘system’ …\nA ‘referencing view’ for digest item. Does not own its …\nAn era to describe the longevity of a transaction.\nIdentify by block header hash.\nAbstraction over a block header for a substrate chain.\nThe transaction is valid forever. The genesis hash must be …\nPeriod and phase are encoded:\nIdentify by block number.\nType of a digest item that contains raw data; this also …\nSome other thing. Unsupported and experimental.\nAny ‘non-system’ digest item, opaque to the native …\nSome other (non-prescribed) type.\nEra phase\nA pre-runtime digest.\nA pre-runtime digest.\nType corresponding to DigestItem::PreRuntime.\nAn indication for the light clients that the runtime …\nRuntime code or heap pages updated.\nPut a Seal on it. This is only used by native code, and is …\nPut a Seal on it. This is only used by native code, and is …\nType corresponding to DigestItem::Seal.\nAbstraction over a substrate block and justification.\nA payload that has been signed for an unchecked extrinsics.\nAn extrinsic right from the external world. This is …\nReturns <code>Some</code> if this entry is the <code>Consensus</code> entry.\nCast this digest item into <code>Consensus</code>\nReturns Some if <code>self</code> is a <code>DigestItem::Other</code>.\nCast this digest item into <code>PreRuntime</code>\nReturns <code>Some</code> if this entry is the <code>PreRuntime</code> entry.\nCast this digest item into <code>PreRuntime</code>\nReturns <code>Some</code> if this entry is the <code>Seal</code> entry.\nCast this digest item into <code>Seal</code>\nGet the block number of the start of the era whose …\nFull block.\nTry to match this to a <code>Self::Consensus</code>, check <code>id</code> matches …\nTry to match this to a <code>Self::Consensus</code>, check <code>id</code> matches …\nGet a conversion of the first digest item that …\nGet the block number of the first block at which the era …\nDeconstruct the payload into it’s components.\nA chain-specific digest of data useful for light clients …\nReturns a ‘referencing view’ for this digest item.\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nCreate new <code>SignedPayload</code> from raw components.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe function that should be called.\nThe function that should be called.\nCreate a block ID from a hash.\nConvenience helper for computing the hash of the header …\nThe block header.\nCreate an “immortal” transaction.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>true</code> if this is an immortal transaction.\nCheck if this block ID refers to the pre-genesis state.\nBlock justification.\nGet reference to the first digest item that matches the …\nGet reference to all digest items.\nA list of logs in the digest.\nCreate a new era based on a period (which should be a …\nCreate new <code>SignedPayload</code>.\nA new header with the given number and default hash for …\nNew instance of a signed extrinsic aka “transaction”.\nNew instance of an unsigned extrinsic aka “inherent”.\nCreate a block ID from a number.\nThe block number.\nThe parent hash.\nPop a digest item.\nCreate a block ID for a pre-genesis state.\nTry to match this to a <code>Self::PreRuntime</code>, check <code>id</code> matches …\nTry to match this to a <code>Self::PreRuntime</code>, check <code>id</code> matches …\nPush new digest item.\nTry to match this to a <code>Self::Seal</code>, check <code>id</code> matches and …\nTry to match this to a <code>Self::Seal</code>, check <code>id</code> matches and …\nThe signature, address, number of extrinsics have come …\nWho this purports to be from and the number of extrinsics …\nThe state trie merkle root\nReturns the opaque data contained in the item if <code>Some</code> if …\nTry to match this digest item to the given opaque item …\nReturns the data contained in the item if <code>Some</code> if this …\nTry to match this digest item to the given opaque item …\nGet an encoded version of this payload.\nThe Approval Distribution subsystem.\nThe approval voting parallel subsystem.\nThe approval voting subsystem.\nThe availability distribution subsystem.\nThe Availability Recovery Subsystem.\nAn implementation of the Availability Store subsystem.\nThe bitfield distribution subsystem.\nThe bitfield signing subsystem.\nThe candidate backing subsystem.\nThe candidate validation subsystem.\nThe Chain API Subsystem implementation.\nThe chain selection subsystem.\nCollation Generation Subsystem\nCollators operate on a parachain.\nReduced set of subsystems, to use in collator and collator…\nThe collator protocol subsystem.\nAn implementation of the dispute coordinator subsystem.\nThe dispute distribution subsystem.\nThe Gossip Support subsystem.\nWhether a header supports parachain consensus or not.\nMetrics for the network bridge.\nThe network bridge subsystem - network receiving side.\nThe network bridge subsystem.\nNo protocol side, just disable it.\nTrait for the <code>fn</code> generating the overseer.\nArguments passed for overseer construction.\nThe prospective parachains subsystem.\nWhat side of the collator protocol is being engaged\nThe provisioner subsystem.\nPVF pre-checking subsystem.\nThe <code>RuntimeApiSubsystem</code>. See module docs for more details.\nThe statement distribution subsystem.\nValidators operate on the relay chain.\nThe regular set of subsystems.\nGet the approval distribution metrics.\nConfiguration for the approval voting subsystem.\nGet the approval voting metrics.\nUnderlying authority discovery service.\nConfiguration for the availability store subsystem.\nReceiver for available data requests.\nReceiver for incoming candidate requests.\nConfiguration for the candidate validation subsystem.\nConfiguration for the chain selection subsystem.\nErasure chunk request v1 receiver.\nErasure chunk request v2 receiver.\nCollations request receiver for network protocol v1.\nCollations request receiver for network protocol v2.\nObtain a prepared collator <code>Overseer</code>, that is initialized …\nConfiguration for the dispute coordinator subsystem.\nReceiver for incoming disputes.\nCreate an overseer with all subsystem being <code>Sub</code>.\nEnable approval-voting-parallel subsystem and disable the …\nOptional availability recovery fetch chunks threshold. If …\nCreate a new instance of <code>AvailabilityRecoverySubsystem</code> …\nCreate an optimised new instance of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nOverwrite the full generation of the overseer, including …\nHandles a from orchestra message received by approval …\nReturn true if the given header supports parachain …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermines the behavior of the collator.\nThe keystore to use for i.e. validator keys.\nUnderlying network service implementation.\nCreate a new Chain API subsystem with the given client.\nCreate a new instance of the <code>BitfieldSigningSubsystem</code>.\nCreate a new instance of the <code>CollationGenerationSubsystem</code>.\nCreate a new instance of the <code>GossipSupport</code> subsystem.\nCreate a new instance of the <code>BitfieldDistribution</code> …\nCreate a new instance of the <code>ApprovalDistribution</code> …\nCreate a new <code>AvailabilityStoreSubsystem</code> with a given …\nCreate a new network bridge subsystem with underlying …\nCreate a new instance of the <code>CandidateBackingSubsystem</code>.\nCreate a new instance of the <code>ProvisionerSubsystem</code>.\nCreate a new network bridge subsystem with underlying …\nCreate a new instance of the subsystem with the given …\nCreate a new Runtime API subsystem wrapping the given …\nCreate a new instance of the availability distribution.\nCreate a new instance of the dispute distribution.\nCreate a new instance of the <code>ProspectiveParachainsSubsystem</code>…\nStart the collator protocol. If <code>id</code> is <code>Some</code> this is a …\nCreate a new instance of the subsystem.\nCreate a new Statement Distribution Subsystem\nCreate a new instance of the <code>ApprovalDistribution</code> …\nNotification services for validation/collation protocols.\nOverseer channel capacity override.\nThe underlying key value store for the parachains.\n<code>PeerSet</code> protocol names to protocols mapping.\nPOV request receiver.\nPrometheus registry, commonly used for production systems, …\nRequest-response protocol names source.\nRevert to the block corresponding to the specified <code>hash</code>. …\nRevert to the block corresponding to the specified <code>hash</code>. …\nStarts the inner subsystem loop.\nRuntime client generic, providing the <code>ProvideRuntimeApi</code> …\nTask spawner to be used throughout the overseer and the …\nReceiver for incoming large statement requests.\nUnderlying syncing service implementation.\nTry to register the metrics.\nObtain a prepared validator <code>Overseer</code>, that is initialized …\nObtain a prepared validator <code>Overseer</code>, that is initialized …\nCreate a new <code>CandidateValidationSubsystem</code>.\nCreate a new approval voting subsystem with the given …\nCreate a new approval voting subsystem with the given …\nCreate a new approval voting subsystem with the given …\nCreate a new approval voting subsystem with the given …\nCustomise the recovery strategy kind Currently only useful …\nParachain collator pair.\nAn eviction policy for inactive peers or validators.\nThe keystore holding validator keys.\nPrometheus metrics for validators.\nMetrics.\nLocal peer id.\nReceiver for v1 collation fetching requests.\nReceiver for v2 collation fetching requests.\nThe account ID that this can be transformed into.\nType of the signer.\nThe type which encodes the sender identity.\nThis type can be converted into and possibly from an …\nA lookup implementation returning the <code>AccountId</code> from a …\nAny additional data that will go into the signed payload. …\nMeans of signature verification of an application key.\nInput that adds infinite number of zero after wrapped …\nAn “executable” piece of information, used by the …\nA meta trait for arithmetic.\nA meta trait for arithmetic.  Same as <code>AtLeast32Bit</code>, but …\nAn error type that indicates that the origin is invalid.\nBlake2-256 Hash implementation.\nA “checkable” piece of information, used by the …\nSomething which fulfills the abstract idea of a Substrate …\nSomething that can convert a <code>BlockId</code> to a number or a hash.\nSuper trait with all the attributes for a block number.\nType of <code>BlockNumber</code> to provide.\nGet current block number\nNumbers which have upper and lower bounds\nThe function call.\nThe type which encodes the call to be dispatched.\nType by which we can dispatch. Restricts the …\nThe call to validate\nSomething that can be checked for equality and printed out …\nExtract the digest type for a block. A “checkable” …\nReturned if <code>check</code> succeeds.\nReturned if <code>check</code> succeeds.\nPerforms addition that returns <code>None</code> instead of wrapping …\nConvenience type to work around the highly unergonomic …\nPerforms division that returns <code>None</code> instead of panicking …\nPerforms multiplication that returns <code>None</code> instead of …\nA <code>TryMorph</code> implementation to reduce a scalar by a …\nPerforms a left shift that returns <code>None</code> on shifts larger …\nPerforms a right shift that returns <code>None</code> on shifts larger …\nPerforms subtraction that returns <code>None</code> instead of wrapping …\nTrait for things that can be clear (have no bits set). For …\n…\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nInfallible conversion trait. Generic over both source and …\nReversing infallible conversion trait. Generic over both …\nA structure that performs standard conversion using the …\nAdapter which turns a Get implementation into a Convert …\n<code>?</code> formatting.\nDerive macro generating an impl of the trait <code>Debug</code>.\nShortcut to reference the <code>Info</code> type of a <code>Dispatchable</code>.\nA lazy call (module function and argument values) that can …\nPerforms addition that returns <code>ArithmeticError</code> instead of …\nPerforms self addition that returns <code>ArithmeticError</code> …\nPerforms division that returns <code>ArithmeticError</code> instead of …\nPerforms self division that returns <code>ArithmeticError</code> …\nExtends <code>FixedPointNumber</code> with the Ensure family functions.\nSimilar to <code>TryFrom</code> but returning an <code>ArithmeticError</code> error.\nSimilar to <code>TryInto</code> but returning an <code>ArithmeticError</code> error.\nPerforms multiplication that returns <code>ArithmeticError</code> …\nPerforms self multiplication that returns <code>ArithmeticError</code> …\nMeta trait that supports all immutable arithmetic <code>Ensure*</code> …\nMeta trait that supports all assigned arithmetic <code>Ensure*</code> …\nPerforms subtraction that returns <code>ArithmeticError</code> instead …\nPerforms self subtraction that returns <code>ArithmeticError</code> …\nThe error type that gets returned when a collection can’…\nThe error type that will be returned by the functions.\nSomething that acts like an <code>Extrinsic</code>.\nType for extrinsics.\nImplementor is an <code>Extrinsic</code> and provides metadata about …\nA trait for querying a single value from a type.\nImplement Get by returning Default for any type that …\nA marker trait for something that knows the type of the …\nA marker trait for something that knows the type of the …\nAbstraction around hashing\nHeader hash type\nBlock hash type.\nSuper trait with all the attributes for a hashing output.\nHashing algorithm\nExtract the hashing type for a block.\nSomething which fulfills the abstract idea of a Substrate …\nHeader type.\nUnique identifier of this signed extension.\nSome type that is able to be collapsed into an account ID. …\nA structure that performs identity conversion.\nA lookup implementation returning the input value.\nAn opaque set of information attached to the transaction. …\nA trait implementing integer square root.\nDetermine if a <code>MemberId</code> is a valid member.\nKeccak-256 Hash implementation.\nTypes bound to this opaque keys that provide the key type …\nA lazy value.\nMeans of changing one type into another in a manner …\nAn error that indicates that a lookup failed.\nFallible conversion trait returning an Option. Generic …\nReversing fallible conversion trait returning an Option. …\nA type that implements Display when in std environment.\nDefinition for a bi-directional, fallible conversion …\nA type that implements FromStr when in std environment.\nA type that implements Hash when in std environment.\nA type that implements Serialize when in std environment …\nA type that implements Serialize, DeserializeOwned and …\nA type that can be used in runtime structures.\nExtensible conversion trait. Generic over only source …\nImplementation of <code>Morph</code> which converts between types using …\nA <code>TryMorph</code> implementation to enforce an upper limit for a …\nThe <code>NodeBlock</code> type.\nHeader number.\nExtract the number type for a block.\nDefines a multiplicative identity element for <code>Self</code>.\nOpaque data type that may be destructured into a series of …\nThe type into which <code>A</code> is mutated.\nThe type into which <code>A</code> is mutated.\nThe output type of the product of <code>self</code> and <code>Other</code>.\nThe hash type produced.\nZero-sized type used to mark things that “act like” …\nShortcut to reference the <code>PostInfo</code> type of a <code>Dispatchable</code>.\nAdditional information that is returned by <code>dispatch</code>. Can …\nThe type that encodes information that can be passed from …\nTrait for things which can be printed from the runtime.\nMutator which reduces a scalar by a particular amount.\nMorpher to disregard the source value and replace with …\nMorpher to disregard the source value and replace with the …\nThe <code>RuntimeBlock</code> type.\nEvery function call from your runtime has an origin, which …\nConvenience type to work around the highly unergonomic …\nSaturating arithmetic operations, returning maximum or …\nMultiply and divide by a number that isn’t necessarily …\nThe signature type of the extrinsic.\nThe type of the address that signed the extrinsic.\nThe additional data that is specific to the signed …\nSomething that acts like a <code>SignaturePayload</code> of an <code>Extrinsic</code>…\nThe payload we carry for signed extrinsics.\nMeans by which a transaction may be extended. This type …\nInformation about a <code>SignedExtension</code> for the runtime …\nSigned extensions attached to this <code>Extrinsic</code>.\nType of the signer.\nA meta trait for all bit ops.\nType to lookup from.\nType to lookup from.\nMeans of changing one type into another in a manner …\nImplementation of <code>Morph</code> to retrieve just the first element …\nType to lookup into.\nType to lookup into.\nInput that adds infinite number of zero after wrapped …\nTry and collect into a collection <code>C</code>.\nFallible conversion trait which returns the argument in …\nReversing fallible conversion trait which returns the …\nA structure that performs standard conversion using the …\nExtensible conversion trait. Generic over only source …\nImplementation of <code>TryMorph</code> which attempts to convert …\nThe type which is returned.\nA trait for querying a single value from a type defined in …\nJust like <code>From</code> except that if the source value is too big …\nJust like <code>Into</code> except that if the source value is too big …\nThe format version of the <code>Extrinsic</code>.\nProvide validation for unsigned extrinsics.\nMeans of signature verification.\nDefines an additive identity element for <code>Self</code>.\nConstruct any additional data that should be in the signed …\nThe type of the <code>SignedExtension</code> additional signed data for …\nExecutes all necessary logic needed prior to dispatch and …\nCheck self, given an instance of Context.\nCheck self.\nPerform the equality check.\nAdds two numbers, checking for overflow. If overflow …\nDivides two numbers, checking for underflow, overflow and …\nConvert from a value of <code>T</code> into an equivalent instance of …\nConsume self to return <code>Some</code> equivalent value of <code>Option&lt;T&gt;</code>.\nMultiplies two numbers, checking for underflow or …\nRaises a value to the power of exp, returning <code>None</code> if an …\nChecked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …\nChecked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …\nSubtracts two numbers, checking for underflow. If …\nReturn the value of Self that is clear.\nMake conversion.\nAttempt to convert reference of <code>A</code> into value of <code>B</code>, …\nMake conversion back.\nAttempt to convert reference of <code>B</code> into value of <code>A</code>, …\nReturns the current block number.\nSplit the block into header and list of extrinsics.\nReturns a reference to the digest.\nGet a mutable reference to the digest.\nActually dispatch this call and return the result of it.\n@return the integer division of <code>self</code> and <code>other</code>.\nCreates an encoded block from the given <code>header</code> and …\nAdds two numbers, checking for overflow.\nAdds two numbers overwriting the left hand one, checking …\nDivides two numbers, checking for overflow.\nDivides two numbers overwriting the left hand one, …\nEnsure division for integer type <code>N</code>. Equal to <code>self / d</code>.\nPerforms the conversion returning an <code>ArithmeticError</code> if …\nCreates <code>self</code> from a rational number. Equal to <code>n / d</code>.\nPerforms the conversion returning an <code>ArithmeticError</code> if …\nMultiplies two numbers, checking for overflow.\nMultiplies two numbers overwriting the left hand one, …\nEnsure multiplication for integer type <code>N</code>. Equal to <code>self * n</code>…\nRaises a value to the power of exp, returning …\nSubtracts two numbers, checking for overflow.\nSubtracts two numbers overwriting the left hand one, …\nReturns a reference to the list of extrinsics.\nReturns a reference to the extrinsics root.\nFormats the value using the given formatter.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn the current value.\nReturn the current value.\nGet a reference to the underlying value.\nGet the decoded key with key-type ID <code>i</code>.\nGet the raw bytes of key with key-type ID <code>i</code>.\nProduce the hash of some byte-slice.\nReturns the hash of the header.\nReturns the hash of the block.\nProduce the hash of some codec-encodable value.\nReturns a reference to the header.\nThe unique identifier of the <code>SignedExtension</code>.\nFind the integer square root.\nFind the integer square root, returning <code>None</code> if the number …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTransform into an account.\nConvert into an account ID. This is infallible, and may …\nConvert this value amalgamated with the a secondary “sub…\nTrue iff no bits are set.\nIs the given <code>MemberId</code> a valid member?\nReturns <code>true</code> if <code>self</code> is equal to the multiplicative …\nIs this <code>Extrinsic</code> signed? If no information are available …\nReturns <code>true</code> if <code>self</code> is equal to the additive identity.\nReturn the key-type IDs supported by this set.\nAttempt a lookup.\nAttempt a lookup.\nReturns the largest finite number this type can represent\nAttempt to make conversion.\nAttempt to make conversion back.\nReturns the metadata for this signed extension.\nReturns the smallest finite number this type can represent\nMake conversion.\n@return the product of <code>self</code> and <code>other</code>.\nCreates new header.\nCreates new block from header and extrinsics.\nCreate new instance of the extrinsic.\nCreate a new instance from the given byte array.\nCreate a new instance from the given byte array.\nReturns a reference to the header number.\nReturns the multiplicative identity element of <code>Self</code>, <code>1</code>.\nThe ordered Patricia tree root of the given <code>input</code>.\nVerify a proof of ownership for the keys.\nCreate new implementations of the <code>Get</code> trait.\nReturns a reference to the parent hash.\nDo any post-flight stuff for an extrinsic.\nDo any pre-flight stuff for a signed transaction.\nValidate the call right before dispatch.\nDo any pre-flight stuff for a unsigned transaction.\nPrint the object.\n@return the modulo remainder of <code>self</code> and <code>other</code>.\nConvert from a value of <code>T</code> into an equivalent instance of …\nConsume self to return an equivalent value of <code>T</code>.\nIncrement self by some <code>amount</code>, saturating.\nSaturating addition. Compute <code>self + rhs</code>, saturating at the …\nDecrement self by one, saturating at zero.\nIncrement self by one, saturating.\nDecrement self by one, saturating at zero.\nSaturating multiply. Compute <code>self * rhs</code>, saturating at the …\nIncrement self by one, saturating at the numeric bounds …\nSaturating exponentiation. Compute <code>self.pow(exp)</code>, …\nDecrement self by some <code>amount</code>, saturating at zero.\nSaturating subtraction. Compute <code>self - rhs</code>, saturating at …\nUtility function only to be used in benchmarking scenarios …\nSets the extrinsic root.\nSets the header number.\nSets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…\nSets the parent hash.\nSets the state root.\nSets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.\nReturns a reference to the state root.\nConvert the given <code>block_id</code> to the corresponding block hash.\nConvert the given <code>block_id</code> to the corresponding block …\nThe Patricia tree root of the given mapping.\nConsume self and try to collect the results into <code>C</code>.\nAttempt to make conversion. If returning Result::Err, the …\nAttempt to make conversion back. If returning Result::Err, …\nTry to convert an account ID into this type. Might not …\nTry to convert an account ID into this type. Might not …\nConvert into an account ID, checking that all bytes of the …\nSame as <code>into_sub_account_truncating</code>, but ensuring that all …\nMake conversion.\nThe type of the <code>SignedExtension</code>.\nBlindly check self.\nConvert from a value of <code>T</code> into an equivalent instance of …\nConsume self to return an equivalent value of <code>T</code>.\nConvert from Target back to Source.\nChecks to see if this is a valid <em>transaction</em>. It returns …\nValidate a signed transaction for the transaction queue.\nReturn the validity of the call\nValidate an unsigned transaction for the transaction queue.\nVerify a signature.\nVerify a signature. Return <code>true</code> if signature is valid for …\nReturns the additive identity element of <code>Self</code>, <code>0</code>.\nCreate a new instance which only contains zeroes as input.\nDetermines the final set of paths to use for the PVF …")