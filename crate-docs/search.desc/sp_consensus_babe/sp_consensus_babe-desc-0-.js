searchState.loadedDescShard("sp_consensus_babe", 0, "Primitives for BABE.\nTypes of allowed slots.\nA Babe authority identifier. Necessarily equivalent to the …\nThe index of an authority.\nA Babe authority keypair. Necessarily equivalent to the …\nA Babe authority signature.\nThe <code>ConsensusEngineId</code> of BABE.\nAPI necessary for block authorship with BABE.\nThe weight of an authority.\nThe cumulative weight of a BABE block, i.e. sum of block …\nConfiguration data used by the BABE consensus engine.\nConfiguration data used by the BABE consensus engine.\nConfiguration data used by the BABE consensus engine that …\nAn consensus log item for BABE.\nBABE epoch information\nAn equivocation proof for multiple block authorships on …\nKey type for BABE module.\nHow many blocks to wait before running the median …\nThe epoch has changed, and the epoch after the current one …\nThe epoch has changed. This provides information about the …\nDisable the authority with given index.\nAn opaque type used to represent the key ownership proof …\nThe length of the public key\nAllow primary and secondary plain slots.\nAllow primary and secondary VRF slots.\nOnly allow primary slots.\nVRF output length for per-slot randomness.\nVRF context used for per-slot randomness generation.\nRandomness type required by BABE operations.\nUnit type wrapper that represents a slot.\nA slot duration defined in milliseconds.\nVRF input.\nVRF pre-output type suitable for schnorrkel operations.\nVRF proof type suitable for schnorrkel operations.\nVRF input ready to be used for VRF sign and verify …\nVRF signature data\nTranscript ready to be used for VRF related operations.\nType of allowed slots.\nWhether this chain should run with secondary slots, which …\nReturns <code>self</code> as <code>core::time::Duration</code>.\nReturns <code>self</code> as a <code>u64</code> representing the duration in …\nThe authorities for the genesis epoch.\nThe authorities\nThe authorities and their weights.\nA constant value that is used in the threshold calculation …\nA constant value that is used in the threshold calculation …\nA constant value that is used in the threshold calculation …\nVerifies the equivocation proof by making sure that: both …\nConfiguration of the epoch.\nReturn the configuration for BABE.\nReturn the configuration for BABE. Version 1.\nReturns information regarding the current epoch.\nReturns the slot that started the current epoch.\nTry to decode this <code>OpaqueKeyOwnershipProof</code> into the given …\nPrivate implementation details of BABE digests.\nThe duration of this epoch.\nReturns the epoch index the given slot belongs to.\nThe epoch index.\nThe duration of epochs in slots.\nThe duration of epochs in slots.\nReturns the first slot at the given epoch index.\nThe first header involved in the equivocation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitialize from the given milliseconds.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new slot by calculating it from the given …\nGenerates a proof of key ownership for the given authority …\nInherents for BABE\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMap transcript to <code>VrfSignData</code>.\nWhether plain secondary slots are allowed.\nWhether VRF secondary slots are allowed.\nGenerate output bytes from the given VRF configuration.\nMake VRF signing data suitable for BABE’s protocol.\nMake VRF input suitable for BABE’s randomness generation.\nCreate a new <code>OpaqueKeyOwnershipProof</code> using the given …\nBuild a new transcript instance.\nBuild a new instance ready to be used for VRF signer and …\nReturns information regarding the next epoch (which was …\nReturns the authority id of the equivocator.\nVRF pre-output.\nVRF proof.\nThe randomness for the genesis epoch.\nThe randomness\nRandomness for this epoch.\nSaturating addition.\nSaturating subtraction.\nThe second header involved in the equivocation.\nWhether this chain should run with secondary slots, which …\nThe slot at which the equivocation happened.\nConvenience method to get the slot duration as a …\nThe slot duration in milliseconds for BABE. Currently, only\nThe slot duration in milliseconds for BABE. Currently, only\nThe starting slot of the epoch.\nSubmits an unsigned extrinsic to report an equivocation. …\nTimestamp of the start of the slot.\nAdd some extra data to be signed.\nA digest item which is usable with BABE consensus.\nInformation about the next epoch config, if changed. This …\nInformation about the next epoch. This is broadcast in the …\nA BABE pre-runtime digest. This contains all data required …\nA primary VRF-based slot assignment.\nRaw BABE primary slot assignment pre-digest.\nA secondary deterministic slot assignment.\nBABE secondary slot assignment pre-digest.\nA secondary deterministic slot assignment with VRF outputs.\nBABE secondary deterministic slot assignment with VRF …\nVersion 1.\nReturns the weight <em>added</em> by this digest, not the …\nIf this item is an BABE pre-digest, return it.\nIf this item is a BABE signature, return the signature.\nIf this item is a BABE config descriptor, return it.\nIf this item is a BABE epoch descriptor, return it.\nThe authorities.\nReturns the slot number of the pre digest.\nAuthority index\nAuthority index\nAuthority index\nConstruct a digest item which contains a BABE pre-digest.\nConstruct a digest item which contains a BABE seal.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this pre-digest is for a primary slot …\nThe value of randomness to use for the slot-assignment.\nReturns the slot of the pre digest.\nSlot\nSlot\nSlot\nReturns the VRF output and proof, if they exist.\nVRF signature\nVRF signature\nValue of <code>allowed_slots</code> in <code>BabeEpochConfiguration</code>.\nValue of <code>c</code> in <code>BabeEpochConfiguration</code>.\nAuxiliary trait to extract BABE inherent data.\nThe BABE inherent identifier.\nProvides the slot duration inherent data for BABE.\nThe type of the BABE inherent.\nGet BABE inherent data.\nReplace BABE inherent data.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreates the inherent data provider by calculating the slot …\nCalls <code>U::from(self)</code>.\nCreate new inherent data provider from the given <code>slot</code>.\nReturns the <code>slot</code> of this inherent data provider.")