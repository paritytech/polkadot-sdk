searchState.loadedDescShard("pallet_dev_mode", 0, "Dev Mode Example Pallet\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe Hasher requirement is skipped by <code>dev_mode</code>. So, second …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe MEL requirement for bounded pallets is skipped by …\nThe <code>Event</code> enum of this pallet\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe overarching event type.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>add_dummy</code>.\nCreate a call with the variant <code>set_bar</code>.\nAuto-generated docs-only module listing all (public and …\nWarning: Doc-Only\nWarning: Doc-Only\nThe Hasher requirement is skipped by <code>dev_mode</code>. So, second …\nThe MEL requirement for bounded pallets is skipped by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")