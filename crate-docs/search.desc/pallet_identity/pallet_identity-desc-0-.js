searchState.loadedDescShard("pallet_identity", 0, "Identity Pallet\nOnly the Blake2 hash of the data is stored. The preimage …\nEither underlying data blob if it is at most 32 bytes, or …\nThe data is erroneous. This may be indicative of malicious …\nNo judgement is yet in place, but a deposit is reserved as …\nType capable of holding information on which identity …\nInformation concerning the identity of the controller of …\nAn attestation of a registrar over how accurate some …\nOnly the Keccak-256 hash of the data is stored. The …\nThe target is known directly by the registrar and the …\nThe data is imprecise or of sufficiently low-quality to be …\nNo data here.\nThe data was once good but is currently out of date. There …\nThe data is stored directly.\nThe data appears to be reasonably acceptable in terms of …\nAn identifier for a single name registrar/identity …\nInformation concerning a registrar.\nInformation on an identity along with judgements from …\nOnly the SHA2-256 hash of the data is stored. The preimage …\nOnly the SHA3-256 hash of the data is stored. The preimage …\nThe default value; no opinion is held.\nThe account of the registrar.\nThe identity information representation for all identity …\nCreate a basic instance of the identity information.\nAmount held on deposit for this information.\nAmount required to be given to the registrar for them to …\nRelevant fields for this registrar. Registrar judgements …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCheck if an identity registered information for some given …\nInformation on the identity.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nJudgements from the registrars on this identity. Stored …\nStorage migrations for the Identity pallet.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for <code>pallet_identity</code>\nThe fields that we use to identify the owner of an account …\nInformation concerning the identity of the controller of …\nAdditional fields of the identity that are not catered for …\nA reasonable display name for the controller of the …\nThe email address of the controller of the account.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nA graphic image representing the controller of the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe full legal name in the local jurisdiction of the …\nThe PGP/GPG public key of the controller of the account.\nThe Riot/Matrix handle held by the controller of the …\nThe Twitter identity. The leading <code>@</code> character may be …\nA representative website held by the controller of the …\nMigration to add usernames to Identity info.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReverse lookup from <code>username</code> to the <code>AccountId</code> that has …\nAccount ID is already named.\nA username authority was added.\nA username authority was removed.\nThe amount held on deposit for a registered identity.\nThe amount held on deposit per encoded byte for a …\nIdentity pallet declaration.\nConfiguration trait of this pallet.\nThe currency trait.\nA dangling username (as in, a username corresponding to an …\nEmpty index.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nFee is changed.\nThe origin which may forcibly set or remove a name. Root …\nA name was cleared, and the given balance returned.\nStructure holding information about an identity.\nA name was removed and the given balance slashed.\nInformation that is pertinent to identify the entity …\nA name was set or reset (which will remove all judgements).\nThe index is invalid.\nInvalid judgement.\nThe signature on a username was not valid.\nThe provided suffix is too long.\nThe target is invalid.\nThe username does not meet the requirements.\nThe provided judgement was for a different identity.\nJudgement given.\nA judgement was given by a registrar.\nError that occurs when there is an issue paying for …\nA judgement was asked from a registrar.\nA judgement request was retracted.\nMaximum number of registrars allowed in the system. Needed …\nThe maximum number of sub-accounts allowed per identified …\nThe maximum length of a suffix.\nThe maximum length of a username, including its suffix and …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe authority cannot allocate any more usernames.\nNo identity found.\nThe requested username does not exist.\nThe username cannot be forcefully removed because it can …\nAccount isn’t found.\nAccount isn’t named.\nSub-account isn’t owned by sender.\nSender is not a sub-account.\nThe sender does not have permission to issue a username.\nSignature type for pre-authorizing usernames off-chain.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe number of blocks within which a username grant must be …\nUsernames that an authority has granted, but that the …\nA queued username passed its expiration without being …\nA username was set as a primary and can be looked up from …\nA registrar was added.\nThe origin which may add or remove registrars. Root can …\nThe set of registrars. Not expected to get very big as can …\nSetting this username requires a signature, but none was …\nThe overarching event type.\nPublic key that corresponds to an on-chain <code>Self::AccountId</code>.\nWhat to do with slashed funds.\nSticky judgement.\nThe amount held on deposit for a registered subaccount. …\nA sub-identity was added to an identity and the deposit …\nA sub-identity was removed from an identity and the …\nA sub-identity was cleared, and the given deposit …\nAlternative “sub” identities of this account.\nThe super-identity of an alternative “sub” identity …\nMaximum amount of registrars reached. Cannot add any more.\nToo many subs-accounts.\nA map of the accounts who are authorized to grant …\nThe origin which may add or remove username authorities. …\nA username was queued, but <code>who</code> must accept it prior to …\nA username was set for <code>who</code>.\nThe username is already taken.\nWeight information for extrinsics in this pallet.\nAccept a given username that an <code>authority</code> granted. The …\nAccept a given username that an <code>authority</code> granted. The …\nAdd a registrar to the system.\nAdd a registrar to the system.\nAdd the given account to the sender’s subs.\nAdd the given account to the sender’s subs.\nAdd an <code>AccountId</code> with permission to grant usernames with a …\nAdd an <code>AccountId</code> with permission to grant usernames with a …\nA map of the accounts who are authorized to grant …\nCancel a previous request.\nCancel a previous request.\nClear an account’s identity info and all sub-accounts …\nClear an account’s identity info and all sub-accounts …\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCheck if the account has corresponding identity …\nInformation that is pertinent to identify the entity …\nA username has met all conditions. Insert the relevant …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemove an account’s identity and sub-account information …\nRemove an account’s identity and sub-account information …\nCreate a call with the variant <code>accept_username</code>.\nCreate a call with the variant <code>add_registrar</code>.\nCreate a call with the variant <code>add_sub</code>.\nCreate a call with the variant <code>add_username_authority</code>.\nCreate a call with the variant <code>cancel_request</code>.\nCreate a call with the variant <code>clear_identity</code>.\nCreate a call with the variant <code>kill_identity</code>.\nCreate a call with the variant <code>provide_judgement</code>.\nCreate a call with the variant <code>quit_sub</code>.\nCreate a call with the variant <code>remove_dangling_username</code>.\nCreate a call with the variant <code>remove_expired_approval</code>.\nCreate a call with the variant <code>remove_sub</code>.\nCreate a call with the variant <code>remove_username_authority</code>.\nCreate a call with the variant <code>rename_sub</code>.\nCreate a call with the variant <code>request_judgement</code>.\nCreate a call with the variant <code>set_account_id</code>.\nCreate a call with the variant <code>set_fee</code>.\nCreate a call with the variant <code>set_fields</code>.\nCreate a call with the variant <code>set_identity</code>.\nCreate a call with the variant <code>set_primary_username</code>.\nCreate a call with the variant <code>set_subs</code>.\nCreate a call with the variant <code>set_username_for</code>.\nUpdate the deposits held by <code>target</code> for its identity info.\nUsernames that an authority has granted, but that the …\nProvide a judgement for an account’s identity.\nProvide a judgement for an account’s identity.\nA username was granted by an authority, but must be …\nRemove the sender as a sub-account.\nRemove the sender as a sub-account.\nReap an identity, clearing associated storage items and …\nThe set of registrars. Not expected to get very big as can …\nRemove a username that corresponds to an account with no …\nRemove a username that corresponds to an account with no …\nRemove an expired username approval. The username was …\nRemove an expired username approval. The username was …\nRemove the given account from the sender’s subs.\nRemove the given account from the sender’s subs.\nRemove <code>authority</code> from the username authorities.\nRemove <code>authority</code> from the username authorities.\nAlter the associated name of the given sub-account.\nAlter the associated name of the given sub-account.\nRequest a judgement from a registrar.\nRequest a judgement from a registrar.\nChange the account associated with a registrar.\nChange the account associated with a registrar.\nSet the fee required for a judgement to be requested from …\nSet the fee required for a judgement to be requested from …\nSet the field information for a registrar.\nSet the field information for a registrar.\nSet an account’s identity information and reserve the …\nSet an account’s identity information and reserve the …\nSet an identity with zero deposit. Used for benchmarking …\nSet a given username as the primary. The username should …\nSet a given username as the primary. The username should …\nSet the sub-accounts of the sender.\nSet the sub-accounts of the sender.\nSet subs with zero deposit and default name. Only used for …\nSet the username for <code>who</code>. Must be called by a username …\nSet the username for <code>who</code>. Must be called by a username …\nAuto-generated docs-only module listing all (public and …\nGet the subs of an account.\nAlternative “sub” identities of this account.\nThe super-identity of an alternative “sub” identity …\nReverse lookup from <code>username</code> to the <code>AccountId</code> that has …\nValidate a signature. Supports signatures on raw <code>data</code> or …\nAccept a given username that an <code>authority</code> granted. The …\nAdd a registrar to the system.\nAdd the given account to the sender’s subs.\nAdd an <code>AccountId</code> with permission to grant usernames with a …\nCancel a previous request.\nClear an account’s identity info and all sub-accounts …\nRemove an account’s identity and sub-account information …\nProvide a judgement for an account’s identity.\nRemove the sender as a sub-account.\nRemove a username that corresponds to an account with no …\nRemove an expired username approval. The username was …\nRemove the given account from the sender’s subs.\nRemove <code>authority</code> from the username authorities.\nAlter the associated name of the given sub-account.\nRequest a judgement from a registrar.\nChange the account associated with a registrar.\nSet the fee required for a judgement to be requested from …\nSet the field information for a registrar.\nSet an account’s identity information and reserve the …\nSet a given username as the primary. The username should …\nSet the sub-accounts of the sender.\nSet the username for <code>who</code>. Must be called by a username …\nReverse lookup from <code>username</code> to the <code>AccountId</code> that has …\nInformation that is pertinent to identify the entity …\nUsernames that an authority has granted, but that the …\nThe set of registrars. Not expected to get very big as can …\nAlternative “sub” identities of this account.\nThe super-identity of an alternative “sub” identity …\nA map of the accounts who are authorized to grant …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_identity</code> using the Substrate node and …\nWeight functions needed for <code>pallet_identity</code>.\nStorage: <code>Identity::PendingUsernames</code> (r:1 w:1) Proof: …\nStorage: <code>Identity::Registrars</code> (r:1 w:1) Proof: …\nStorage: <code>Identity::IdentityOf</code> (r:1 w:0) Proof: …\nStorage: <code>Identity::UsernameAuthorities</code> (r:0 w:1) Proof: …\nStorage: <code>Identity::IdentityOf</code> (r:1 w:1) Proof: …\nStorage: <code>Identity::SubsOf</code> (r:1 w:1) Proof: <code>Identity::SubsOf</code>…\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Identity::SubsOf</code> (r:1 w:1) Proof: <code>Identity::SubsOf</code>…\nStorage: <code>Identity::Registrars</code> (r:1 w:0) Proof: …\nStorage: <code>Identity::SuperOf</code> (r:1 w:1) Proof: …\nStorage: <code>Identity::AccountOfUsername</code> (r:1 w:1) Proof: …\nStorage: <code>Identity::PendingUsernames</code> (r:1 w:1) Proof: …\nStorage: <code>Identity::IdentityOf</code> (r:1 w:0) Proof: …\nStorage: <code>Identity::UsernameAuthorities</code> (r:1 w:1) Proof: …\nStorage: <code>Identity::IdentityOf</code> (r:1 w:0) Proof: …\nStorage: <code>Identity::Registrars</code> (r:1 w:0) Proof: …\nStorage: <code>Identity::Registrars</code> (r:1 w:1) Proof: …\nStorage: <code>Identity::Registrars</code> (r:1 w:1) Proof: …\nStorage: <code>Identity::Registrars</code> (r:1 w:1) Proof: …\nStorage: <code>Identity::IdentityOf</code> (r:1 w:1) Proof: …\nStorage: <code>Identity::AccountOfUsername</code> (r:1 w:0) Proof: …\nStorage: <code>Identity::IdentityOf</code> (r:1 w:0) Proof: …\nStorage: <code>Identity::IdentityOf</code> (r:1 w:0) Proof: …\nStorage: <code>Identity::UsernameAuthorities</code> (r:1 w:1) Proof: …")