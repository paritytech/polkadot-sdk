searchState.loadedDescShard("pallet_safe_mode", 0, "Safe Mode\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for <code>pallet_safe_mode</code>\nThe account already has a deposit reserved and can …\nContains a variant per dispatchable extrinsic that this …\nCould not hold funds for entering or extending the …\nCould not release funds for entering or extending the …\nThis deposit cannot be released yet.\nConfiguration trait of this pallet.\nCurrency type for this pallet, used for Deposits.\nAn error from the underlying <code>Currency</code>.\nAn account reserved funds for either entering or extending …\nAn account had a reserve released that was reserved.\nAn account had reserve slashed that was reserved.\nHolds the reserve that was taken from an account at a …\nThe amount that will be reserved upon calling <code>Pallet::enter</code>…\nFor how many blocks the safe-mode will be entered by …\nFunds are held for entering or extending the safe-mode.\nThe safe-mode is (already or still) entered.\nThe safe-mode was entered until inclusively this block.\nContains the last block number that the safe-mode will …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe reason why the safe-mode was deactivated.\nThe safe-mode is (already or still) exited.\nExited the safe-mode for a specific reason.\nThe amount that will be reserved upon calling …\nFor how many blocks the safe-mode can be extended by each …\nThe safe-mode was extended until inclusively this block.\nThe safe-mode was forcefully deactivated by …\nThe only origin that can force to release or slash a …\nThe origin that may call <code>Pallet::force_enter</code>.\nThe origin that may call <code>Pallet::force_enter</code>.\nThe origin that may call <code>Pallet::force_extend</code>.\nConfigure the initial state of this pallet in the genesis …\nA reason for the pallet placing a hold on funds.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThere is no balance reserved.\nThis functionality of the pallet is disabled by the …\nNotifies external logic when the safe-mode is being …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe minimal duration a deposit will remain reserved after …\nThe overarching event type.\nThe hold reason when reserving funds for entering or …\nThe safe-mode was automatically deactivated after it’s …\nContains all runtime calls in any pallet that can be …\nReturn whether the given call is allowed to be dispatched.\nAuto-generated docs-only module listing all defined …\nEnter safe-mode permissionlessly for <code>Config::EnterDuration</code> …\nEnter safe-mode permissionlessly for <code>Config::EnterDuration</code> …\nExtend the safe-mode permissionlessly for …\nExtend the safe-mode permissionlessly for …\nEnter safe-mode by force for a per-origin configured …\nEnter safe-mode by force for a per-origin configured …\nExit safe-mode by force.\nExit safe-mode by force.\nExtend the safe-mode by force for a per-origin configured …\nExtend the safe-mode by force for a per-origin configured …\nForce to release a deposit for an account that entered …\nForce to release a deposit for an account that entered …\nSlash a deposit for an account that entered or extended …\nSlash a deposit for an account that entered or extended …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn whether the given call is allowed to be dispatched.\nReturn whether <code>safe-mode</code> is entered.\nCreate a call with the variant <code>enter</code>.\nCreate a call with the variant <code>extend</code>.\nCreate a call with the variant <code>force_enter</code>.\nCreate a call with the variant <code>force_exit</code>.\nCreate a call with the variant <code>force_extend</code>.\nCreate a call with the variant <code>force_release_deposit</code>.\nCreate a call with the variant <code>force_slash_deposit</code>.\nCreate a call with the variant <code>release_deposit</code>.\nAutomatically exits safe-mode when the current block …\nPermissionlessly release a deposit for an account that …\nPermissionlessly release a deposit for an account that …\nAuto-generated docs-only module listing all (public and …\nEnter safe-mode permissionlessly for <code>Config::EnterDuration</code> …\nExtend the safe-mode permissionlessly for …\nEnter safe-mode by force for a per-origin configured …\nExit safe-mode by force.\nExtend the safe-mode by force for a per-origin configured …\nForce to release a deposit for an account that entered …\nSlash a deposit for an account that entered or extended …\nPermissionlessly release a deposit for an account that …\nHolds the reserve that was taken from an account at a …\nContains the last block number that the safe-mode will …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_safe_mode</code> using the Substrate node and …\nWeight functions needed for <code>pallet_safe_mode</code>.\nStorage: <code>SafeMode::EnteredUntil</code> (r:1 w:1) Proof: …\nStorage: <code>SafeMode::EnteredUntil</code> (r:1 w:1) Proof: …\nStorage: <code>SafeMode::EnteredUntil</code> (r:1 w:1) Proof: …\nStorage: <code>SafeMode::EnteredUntil</code> (r:1 w:1) Proof: …\nStorage: <code>SafeMode::EnteredUntil</code> (r:1 w:1) Proof: …\nStorage: <code>SafeMode::Deposits</code> (r:1 w:1) Proof: …\nStorage: <code>SafeMode::Deposits</code> (r:1 w:1) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>SafeMode::EnteredUntil</code> (r:1 w:1) Proof: …\nStorage: <code>SafeMode::EnteredUntil</code> (r:1 w:0) Proof: …\nStorage: <code>SafeMode::Deposits</code> (r:1 w:1) Proof: …")