searchState.loadedDescShard("bp_parachains", 0, "Primitives of parachains module.\nBest known parachain head hash.\nA minimized version of <code>pallet-bridge-parachains::Call</code> that …\nCan be use to access the runtime storage key of the …\nBest known parachain head as it is stored in the runtime …\nStored data of the parachain head. It is encoded version …\nStored parachain head data builder.\nCan be use to access the runtime storage key of the …\nBlock hash of the bridged relay chain.\nHasher of the bridged relay chain.\nBlock number of the bridged relay chain.\nHelper for using single parachain as …\nHeader data that we’re storing on-chain.\nInfo about a <code>SubmitParachainHeads</code> call which tries to …\nNumber and hash of the finalized relay block that has been …\nNumber of relay block where this head has been read.\nBest known parachain head hash.\nDecode stored parachain head data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nHash of parachain head.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf <code>true</code>, then the call must be free (assuming that …\nMaximal parachain head size that we may accept for free. …\nCurrent ring buffer position for this parachain.\nHeader number.\nHash of the bundled parachain head.\nParachain identifier.\nReturns runtime storage key of given parachain head at the …\nHeader state root.\n<code>pallet-bridge-parachains::Call::submit_parachain_heads</code>\nReturn number of parachains that are supported by this …\nTry to build head data from encoded head of parachain with …\nRelay chain block, for which we have submitted the …\nParachain heads proof.\nParachain identifiers and their head hashes.")