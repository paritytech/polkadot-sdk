searchState.loadedDescShard("cumulus_client_parachain_inherent", 0, "Client side code for generating the parachain inherent.\nThe identifier for the parachain inherent.\nInherent data provider that supplies mocked validation …\nParameters for how the Mock inherent data provider should …\nThe inherent data that is passed by the collator to the …\nCreate the <code>ParachainInherentData</code> at the given <code>relay_parent</code>.\nThe current block number of the local block chain (the …\nThe current block head data of the local block chain (the …\nDownward messages in the order they were sent.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nHRMP messages grouped by channels. The messages in the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a MockXcmConfig by reading the mqc_heads directly …\nNumber of parachain blocks per relay chain epoch Mock …\nThe parachain ID of the parachain for that the inherent …\nInbound downward XCM messages to be injected into the …\nThe number of relay blocks that elapses between each …\nA storage proof of a predefined set of keys from the …\nThe relay block in which this parachain appeared to start. …\nFunction to mock BABE one epoch ago randomness.\nThe starting state of the dmq_mqc_head.\nThe starting state of each parachain’s mqc head\nXCM messages and associated configuration information.")