searchState.loadedDescShard("frame_remote_externalities", 0, "Remote Externalities\nBuilder for remote-externalities.\nThe execution mode.\nOffline. Uses a state snapshot file and needs not any …\nConfiguration of the offline execution.\nPrefer using a snapshot file if it exists, else use a …\nOnline. Potentially writes to a snapshot file.\nConfiguration of the online execution.\nUse HTTP connection.\nAn externalities that acts exactly the same as …\nConfiguration of the state snapshot.\nDescription of the transport protocol (for online …\nUse the <code>URI</code> to open a new WebSocket connection.\nThe block hash at which to get the runtime state. Will be …\nBlacklist this hashed key from the final externalities. …\nLookout for child-keys, and scrape them as well if set to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nStorage entry keys to be injected into the externalities. …\nStorage entry key prefixes to be injected into the …\nThe block header which we created this externality env.\nInject a manual list of key and values to the storage.\nThe inner externalities.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConfigure a state snapshot to be used.\nCreate a new builder.\nThe state version to use.\nThe pallets to scrape. These values are hashed and added …\nThe path to the snapshot file.\nThe configuration of the state snapshot file to use. It …\nAn optional state snapshot file to WRITE to, not for …\nTransport config.")