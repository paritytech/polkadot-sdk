searchState.loadedDescShard("solochain_template_runtime", 0, "Some way of identifying an account on the chain. We …\nThe address format for describing accounts.\nIt’s a 20 byte representation.\nIt’s a 32 byte representation.\nAll pallets included in the runtime as a nested tuple of …\nAll pallets included in the runtime as a nested tuple of …\nBalance of an account.\nContains a variant per dispatchable extrinsic that this …\nBlock type as expected by this runtime.\nBlockId type as expected by this runtime.\nAn index to a block.\nComplex storage builder stuff.\nExistential deposit.\nAn ECDSA/SECP256k1 signature.\nAn Ed25519 signature.\nExecutive: handles dispatch to the various modules.\nA hash of some data used by the chain.\nIdentify by block header hash.\nBlock header type as expected by this runtime.\nIt’s an account ID (pubkey).\nIt’s an account index.\nThis determines the average expected block time that we …\nIndex of a transaction in the chain.\nIdentify by block number.\nProvides an implementation of <code>PalletInfo</code> to provide …\nIt’s some arbitrary raw bytes.\nThe aggregated runtime call type.\nA reason for placing a freeze on funds.\nA reason for placing a hold on funds.\nAn identifier for each lock placed on funds.\nThe runtime origin type representing the origin of a call.\nA reason for slashing funds.\nAn aggregation of all <code>Task</code> enums across all pallets …\nAlias to 512-bit hash when used in the context of a …\nA Block signed with a Justification\nThe SignedExtension to the basic transaction logic.\nThe payload being signed in transactions.\nAn Sr25519 signature.\nContains a variant per dispatchable extrinsic that this …\nContains a variant per dispatchable extrinsic that this …\nUnchecked extrinsic type as expected by this runtime.\nCalls <code>add_benchmark</code> with all configs from <code>define_benchmarks</code>\nProvide the preimage (runtime binary) <code>code</code> for an upgrade …\nAssimilate the storage for this module into pre-existing …\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nFull block.\nBuild the storage out of this builder.\nBurn the specified liquid free balance from the origin …\nDecode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …\nA chain-specific digest of data useful for light clients …\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nAdjust the total issuance in a saturating way.\nSet the regular balance of a given account.\nExactly as <code>transfer_allow_death</code>, except the origin must be …\nUnreserve some balance from a user by force.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert to runtime origin, using as filter: …\nConvert to runtime origin with caller being system signed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nOptionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe function that should be called.\nGenerate a set of keys with optionally using the given …\nThe block header.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.\nBlock justification.\nThe <code>AccountId</code> of the sudo key.\nKill all storage items with a key that starts with the …\nKill some items from storage.\nCalls <code>list_benchmark</code> with all configs from …\nThe version information used to identify this runtime when …\nCreate a call with the variant <code>apply_authorized_upgrade</code>.\nCreate a call with the variant <code>authorize_upgrade</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>burn</code>.\nCreate a call with the variant <code>do_task</code>.\nCreate a call with the variant <code>force_adjust_total_issuance</code>.\nCreate a call with the variant <code>force_set_balance</code>.\nCreate a call with the variant <code>force_transfer</code>.\nCreate a call with the variant <code>force_unreserve</code>.\nCreate a call with the variant <code>kill_prefix</code>.\nCreate a call with the variant <code>kill_storage</code>.\nCreate a call with the variant <code>remark</code>.\nCreate a call with the variant <code>remark_with_event</code>.\nCreate a call with the variant <code>set</code>.\nCreate a call with the variant <code>set_code</code>.\nCreate a call with the variant <code>set_code_without_checks</code>.\nCreate a call with the variant <code>set_heap_pages</code>.\nCreate a call with the variant <code>set_storage</code>.\nCreate a call with the variant <code>transfer_all</code>.\nCreate a call with the variant <code>transfer_allow_death</code>.\nCreate a call with the variant <code>transfer_keep_alive</code>.\nCreate a call with the variant <code>upgrade_accounts</code>.\nCreate with system none origin and …\nThe block number.\nOpaque types. These are used by the CLI to instantiate …\nThe parent hash.\nMake some on-chain remark.\nMake some on-chain remark and emit event.\nCreate with system root origin and …\nSet the current time.\nSet the new runtime code.\nSet the new runtime code without doing any checks of the …\nSet the number of pages in the WebAssembly environment’s …\nSet some items of storage.\nThe signature, address, number of extrinsics have come …\nCreate with system signed origin and …\nThe state trie merkle root\nTransfer the entire transferable balance from the caller …\nTransfer some liquid free balance to another account.\nSame as the <code>transfer_allow_death</code> call, but with a check …\nUpgrade a specified account.\nImplements all runtime apis for the client side.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWe allow for 2 seconds of compute with a 6 second average …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOpaque block type.\nOpaque block identifier type.\nOpaque block hash type.\nIdentify by block header hash.\nOpaque block header type.\nIdentify by block number.\nSimple blob to hold an extrinsic without committing to its …\nA chain-specific digest of data useful for light clients …\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nReturns the argument unchanged.\nConvert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe block header.\nCalls <code>U::from(self)</code>.\nThe block number.\nThe parent hash.\nThe state trie merkle root")