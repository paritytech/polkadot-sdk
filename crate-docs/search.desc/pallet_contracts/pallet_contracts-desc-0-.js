searchState.loadedDescShard("pallet_contracts", 0, "Contracts Pallet\nProvides the contract address generation method.\nDefines the current version of the HostFn APIs. This is …\nThe transaction increased storage consumption.\nReference to an existing code hash or a new wasm module.\nResult type of a <code>bare_code_upload</code> call.\nThe result of successfully uploading a contract.\nDetermines whether events should be collected during …\nThe possible errors that can happen querying the storage …\nResult type of a <code>bare_call</code> call as well as …\nResult type of a <code>bare_instantiate</code> call as well as …\nResult type of a <code>bare_call</code> or <code>bare_instantiate</code> call as …\nThe API used to dry-run contract interactions.\nDetermines whether debug messages will be collected.\nDefault address generator.\nDefines the required determinism level of a wasm blob when …\nThe given address doesn’t point to a contract.\nThe execution should be deterministic and hence no …\nList of all runtime configurable types that are used in …\nWrapper around <code>PhantomData</code> to prevent it being filtered by …\nContains the error value\nContains the error value\nOutput of a contract call or instantiation which ran to …\nThe code hash of an on-chain wasm blob.\nRepresents one entry in the call stack.\nResult type of a <code>get_storage</code> call.\nThe result of a successful contract instantiation.\nGas metering of Wasm executed instructions is being done …\nStorage key cannot be decoded from the provided input data.\nDescribes the upper limits on various metrics.\nStorage is migrating. Try again later.\nContains the success value\nContains the success value\nThe type of origins supported by the contracts pallet.\nThe transaction reduced storage consumption.\nAllow calling or uploading an indeterministic code.\nDefinition of the cost schedule and other …\nSkip event collection.\nSkip collection of debug messages.\nThe amount of balance that was either charged or refunded …\nCollect events.\nCollect debug messages.\nA wasm module as raw bytes.\nThe type parameter is used in the default implementation.\nReturns the AccountId of a Signed Origin or an error if …\nThe account id of the new contract.\nDocumentation of the API (host functions) available to …\nIf the amount of deposit (this type) is constrained by a …\nBase instruction <code>ref_time</code> Weight. Should match to wasmi’…\nPerform a call from a specified account to a given …\nA mechanism for runtime authors to augment the …\nReturns how much balance is charged or <code>0</code> in case of a …\nThe key under which the new code is stored.\nThe address of a contract based on the given instantiate …\nFormula: …\nBuffer passed along by <code>seal_return</code>. Empty when <code>seal_return</code> …\nAn optional debug message. This message is only filled …\nAn optional debug message. This message is only filled …\nAn optional debug message. This message is only filled …\nWe execute 6 different instructions therefore we have to …\nThe deposit that was reserved at the caller. Is zero when …\nThe additional ref_time added to the <code>deposit_event</code> host …\nThe maximum number of topics supported by an event.\nThe events that were emitted during execution. It is an …\nThe events that were emitted during execution. It is an …\nThe events that were emitted during execution. It is an …\nFlags passed along by <code>seal_return</code>. Empty when <code>seal_return</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new Signed Caller from an AccountId.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreates a new Origin from a <code>RuntimeOrigin</code>.\nHow much weight was consumed during execution.\nHow much weight was consumed during execution.\nHow much weight was consumed during execution.\nHow much weight is required as gas limit in order to …\nHow much weight is required as gas limit in order to …\nHow much weight is required as gas limit in order to …\nQuery a given storage key in a given contract.\nInstantiate a new contract.\nThe weights for individual wasm instructions.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDescribes the upper limits on various metrics.\nThe maximum memory size in bytes that a contract can …\nMaximum number of memory pages allowed for a contract.\nMulti-block Migration framework for pallet-contracts.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe maximum size of a storage value and event payload in …\nReturns the reference time per engine fuel.\nThe execution result of the wasm code.\nThe execution result of the wasm code.\nThe execution result of the wasm code.\nThe output of the called constructor.\nThe maximum node runtime memory. This is for integrity …\nThis is essentially a saturating signed add.\nThis is essentially a saturating signed sub.\nHow much balance was paid by the origin into the contract…\nHow much balance was paid by the origin into the contract…\nHow much balance was paid by the origin into the contract…\nThe maximum length of a subject in bytes used for PRNG …\nShared utilities for testing contracts. This is not part …\nUpload new code without instantiating a contract from it.\nThe maximum validator node runtime memory. This is for …\nAutogenerated weights for <code>pallet_contracts</code>\nContains only the latest version of each function.\nAll functions available in the <strong>seal0</strong> module\nAll functions available in the <strong>seal1</strong> module\nAll functions available in the <strong>seal2</strong> module\nReturns the number of times specified contract exists on …\nReturns the number of times specified contract exists on …\nStores the address of the current contract into the …\nStores the address of the current contract into the …\nStores the <em>free</em> balance of the current account into the …\nStores the <em>free</em> balance of the current account into the …\nStores the current block number of the current contract …\nStores the current block number of the current contract …\nMake a call to another contract. See […\nMake a call to another contract.\nMake a call to another contract. See […\nMake a call to another contract. See […\nCall into the chain extension provided by the chain if any.\nCall into the chain extension provided by the chain if any.\nCall some dispatchable of the runtime. See […\nCall some dispatchable of the runtime. See […\nStores the address of the caller into the supplied buffer. …\nStores the address of the caller into the supplied buffer. …\nChecks whether the caller of the current contract is the …\nChecks whether the caller of the current contract is the …\nChecks whether the caller of the current contract is root. …\nChecks whether the caller of the current contract is root. …\nClear the value at the given key in the contract storage. …\nClear the value at the given key in the contract storage. …\nClear the value at the given key in the contract storage. …\nClear the value at the given key in the contract storage.\nClear the value at the given key in the contract storage.\nRetrieve the code hash for a specified contract address. …\nRetrieve the code hash for a specified contract address. …\nChecks whether there is a value stored under the given key.\nChecks whether there is a value stored under the given key.\nChecks whether there is a value stored under the given key.\nChecks whether there is a value stored under the given key …\nChecks whether there is a value stored under the given key …\nEmit a custom debug message.\nEmit a custom debug message.\nExecute code in the context (storage, caller, value) of …\nExecute code in the context (storage, caller, value) of …\nDeposit a contract event with the data buffer and optional …\nDeposit a contract event with the data buffer and optional …\nRecovers the ECDSA public key from the given message hash …\nRecovers the ECDSA public key from the given message hash …\nCalculates Ethereum address from the ECDSA compressed …\nCalculates Ethereum address from the ECDSA compressed …\nStores the amount of weight left into the supplied buffer. …\nStores the weight left into the supplied buffer. See […\nStores the amount of weight left into the supplied buffer. …\nRetrieve the value under the given key from storage. See […\nRetrieve the value under the given key from storage. See […\nRetrieve the value under the given key from storage. See […\nRetrieve the value under the given key from transient …\nRetrieve the value under the given key from transient …\nComputes the BLAKE2 128-bit hash on the given input buffer.\nComputes the BLAKE2 128-bit hash on the given input buffer.\nComputes the BLAKE2 256-bit hash on the given input buffer.\nComputes the BLAKE2 256-bit hash on the given input buffer.\nComputes the KECCAK 256-bit hash on the given input buffer.\nComputes the KECCAK 256-bit hash on the given input buffer.\nComputes the SHA2 256-bit hash on the given input buffer. …\nComputes the SHA2 256-bit hash on the given input buffer. …\nStores the input passed by the caller into the supplied …\nStores the input passed by the caller into the supplied …\nInstantiate a contract with the specified code hash. See […\nInstantiate a contract with the specified code hash. See […\nInstantiate a contract with the specified code hash. See […\nInstantiate a contract with the specified code hash. See […\nReturns a nonce that is unique per contract instantiation. …\nReturns a nonce that is unique per contract instantiation. …\nChecks whether a specified address belongs to a contract. …\nChecks whether a specified address belongs to a contract. …\nAdds a new delegate dependency to the contract. See […\nAdds a new delegate dependency to the contract. See […\nStores the minimum balance (a.k.a. existential deposit) …\nStores the minimum balance (a.k.a. existential deposit) …\nNoop function used to benchmark the time it takes to …\nNoop function used to benchmark the time it takes to …\nLoad the latest block timestamp into the supplied buffer …\nLoad the latest block timestamp into the supplied buffer …\nRetrieve the code hash of the currently executing contract.\nRetrieve the code hash of the currently executing contract.\nDeprecated\nDeprecated\nDeprecated\nReturns the number of times the currently executing …\nReturns the number of times the currently executing …\nDeprecated\nDeprecated\nDeprecated\nDeprecated\nDeprecated\nThis is just an alias function to <code>address()</code> with …\nThis is just an alias function to <code>balance()</code> with …\nThis is just an alias function to <code>block_number()</code> with …\nThis is just an alias function to <code>call()</code> with …\nThis is just an alias function to <code>call()</code> with …\nThis is just an alias function to <code>call_chain_extension()</code> …\nThis is just an alias function to <code>caller()</code> with …\nThis is just an alias function to <code>caller_is_origin()</code> with …\nThis is just an alias function to <code>clear_storage()</code> with …\nThis is just an alias function to <code>clear_storage()</code> with …\nThis is just an alias function to <code>code_hash()</code> with …\nThis is just an alias function to <code>contains_storage()</code> with …\nThis is just an alias function to <code>contains_storage()</code> with …\nThis is just an alias function to <code>debug_message()</code> with …\nThis is just an alias function to <code>delegate_call()</code> with …\nThis is just an alias function to <code>deposit_event()</code> with …\nThis is just an alias function to <code>ecdsa_recover()</code> with …\nThis is just an alias function to <code>ecdsa_to_eth_address()</code> …\nThis is just an alias function to <code>gas_left()</code> with …\nThis is just an alias function to <code>get_storage()</code> with …\nThis is just an alias function to <code>get_storage()</code> with …\nThis is just an alias function to <code>hash_blake2_128()</code> with …\nThis is just an alias function to <code>hash_blake2_256()</code> with …\nThis is just an alias function to <code>hash_keccak_256()</code> with …\nThis is just an alias function to <code>hash_sha2_256()</code> with …\nThis is just an alias function to <code>input()</code> with …\nThis is just an alias function to <code>instantiate()</code> with …\nThis is just an alias function to <code>instantiate()</code> with …\nThis is just an alias function to <code>is_contract()</code> with …\nThis is just an alias function to <code>minimum_balance()</code> with …\nThis is just an alias function to <code>now()</code> with …\nThis is just an alias function to <code>own_code_hash()</code> with …\nDeprecated\nDeprecated\nDeprecated\nDeprecated\nDeprecated\nCease contract execution and save a data buffer as a …\nCease contract execution and save a data buffer as a …\nThis is just an alias function to <code>set_code_hash()</code> with …\nDeprecated\nDeprecated\nThis is just an alias function to <code>set_storage()</code> with …\nThis is just an alias function to <code>set_storage()</code> with …\nThis is just an alias function to <code>set_storage()</code> with …\nThis is just an alias function to <code>take_storage()</code> with …\nThis is just an alias function to <code>terminate()</code> with …\nThis is just an alias function to <code>terminate()</code> with …\nDeprecated\nThis is just an alias function to <code>transfer()</code> with …\nThis is just an alias function to <code>value_transferred()</code> with …\nThis is just an alias function to <code>weight_to_fee()</code> with …\nReplace the contract code at the specified address with …\nReplace the contract code at the specified address with …\nDeprecated\nDeprecated\nDeprecated\nSet the value at the given key in the contract storage. …\nSet the value at the given key in the contract storage. …\nSet the value at the given key in the contract storage. …\nSet the value at the given key in the contract storage. …\nSet the value at the given key in the contract transient …\nSet the value at the given key in the contract transient …\nVerify a sr25519 signature See […\nVerify a sr25519 signature See […\nRetrieve and remove the value under the given key from …\nRetrieve and remove the value under the given key from …\nRetrieve and remove the value under the given key from …\nRetrieve and remove the value under the given key from …\nRemove the calling account and transfer remaining <strong>free</strong> …\nRemove the calling account and transfer remaining balance. …\nRemove the calling account and transfer remaining <strong>free</strong> …\nDeprecated\nDeprecated\nTransfer some value to another account. See […\nTransfer some value to another account. See […\nRemoves the delegate dependency from the contract. see […\nRemoves the delegate dependency from the contract. see […\nStores the value transferred along with this …\nStores the value transferred along with this …\nStores the price for the specified amount of weight into …\nStores the price for the specified amount of gas into the …\nStores the price for the specified amount of weight into …\nExecute an XCM program locally, using the contract’s …\nExecute an XCM program locally, using the contract’s …\nSend an XCM program from the contract to the specified …\nSend an XCM program from the contract to the specified …\nData to be associated with an account (other than …\nThe user account identifier type for the runtime.\nThe basic call filter to use in Origin. All origins are …\nThe Block type used by the runtime. This is used by …\nMaximum number of block number to block hash mappings to …\nThe maximum length of a block (in bytes).\nBlock &amp; extrinsics weights: base values and limits.\nA state that uses a buffer as input.\nUses a buffer for input and a buffer for output.\nA state that uses a buffer as output.\nA trait used to extend the set of contract callable …\nThe chain extensions returns the supplied value to its …\nThe weight of runtime database operations the runtime can …\nThis type is used to describe a storage change when …\nThe control does <strong>not</strong> return to the calling contract.\nGrants the chain extension access to its parameters and …\nContains the error value\nAn interface that provides access to the external …\nThe output of the <code>Hashing</code> function.\nThe hashing system (algorithm) being used in the runtime …\nThe extensions globally unique identifier.\nThe initial state of an <code>Environment</code>.\nConverting trait to take a source type and convert to …\nThe maximum number of consumers allowed on a single …\nThe migrator that is used to run Multi-Block-Migrations.\nThis stores the number of previous transactions associated …\nContains the success value\nA function that is invoked when an account has been …\nHandler for when a new account has just been created.\nWhat to do if the runtime wants to change the code to …\nA state that uses all arguments as primitive inputs.\nProvides information about the pallet setup in the runtime.\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly before …\nA state that uses primitive inputs.\nA state that uses two arguments as primitive inputs and …\nA state that uses primitive outputs.\nIf this bit is set all changes made by the contract …\nA <code>ChainExtension</code> that can be composed with other …\nResult that returns a <code>DispatchError</code> on error.\nDetermines the exit behaviour and return value of a chain …\nFlags used by a contract to customize exit behaviour.\nThe aggregated <code>RuntimeCall</code> type.\nThe aggregated event type of the runtime.\nThe <code>RuntimeOrigin</code> type used by dispatchable calls.\nThe aggregated <code>RuntimeTask</code> type.\nThe designated SS58 prefix of this chain.\nAll migrations that should run in the next runtime upgrade.\nAny state of an <code>Environment</code> implements this trait. See …\nConfiguration trait of this pallet.\nGet the chain’s in-code version.\nReturns the number of times the specified contract exists …\nReturns a reference to the account id of the current …\nAdjust a previously charged amount down to its actual …\nReturns the set containing all flags.\nAppend a string to the debug buffer.\nReturns the balance of the current contract.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the current block number.\nUse input and output arguments as pointers to a buffer.\nHow many bytes were added to storage.\nHow many bytes were removed from storage.\nCall (possibly transferring some amount of funds) into the …\nCall the chain extension logic.\nCall some dispatchable and return the result.\nReturns the caller.\nCheck if the caller of the current contract is the origin …\nCheck if the caller is origin, and this origin is root.\nCharges <code>diff</code> from the meter.\nCharge the passed <code>amount</code> of weight from the overall limit.\nReturns the code hash of the contract for the given <code>address</code>…\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nTests sometimes need to modify and inspect the contract …\nReturns <code>true</code> if debug message recording is enabled. …\nDecrement the reference count of a stored code by one.\nExecute code in the current frame.\nDeposit an event with the given topics.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nRecovers ECDSA compressed public key based on signature …\nReturns Ethereum address from the ECDSA compressed public …\nReturns an empty set of flags.\nDetermines whether chain extensions are enabled for this …\nGrants access to the execution environment of the current …\nThe chain extension id within the <code>id</code> passed by a contract.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe function id within the <code>id</code> passed by a contract.\nGet an immutable reference to the nested gas meter.\nGet a mutable reference to the nested gas meter.\nReturns the storage entry of the executing account by the …\nReturns <code>Some(len)</code> (in bytes) if a storage item exists at …\nReturns the transient storage entry of the executing …\nReturns <code>Some(len)</code> (in bytes) if a transient storage item …\nReturns the price for the specified amount of weight.\nThe length of the input as passed in as <code>input_len</code>.\nIncrement the reference count of a of a stored code by one.\nInserts the specified flags in-place.\nInstantiate a contract from the given code.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nCheck if a contract lives at the specified <code>address</code>.\nReturns <code>true</code> if no flags are currently stored.\nCheck if running in read-only context.\nHow many storage items were added to storage.\nHow many storage items were removed from storage.\nAdds a delegate dependency to <code>ContractInfo</code>’s …\nReturns the number of locked delegate dependencies.\nReturns the maximum allowed size of a storage item.\nReturns the minimum balance that is required for creating …\nReturns a nonce that is incremented for every instantiated …\nReturns the complement of this set of flags.\nReturns a reference to the timestamp of the current block\nUse all arguments as integer values.\nReturns the code hash of the contract being executed.\nUse input arguments as integer and output arguments as …\nReturns a random number for the current block with the …\nReads <code>min(max_len, in_len)</code> from contract memory.\nReads and decodes a type with a size fixed at compile time …\nReads and decodes a type with a dynamic size from contract …\nReads `min(buffer.len(), in_len) from contract memory.\nReturns the number of times the currently executing …\nRemoves the specified flags in-place.\nGet a reference to the schedule used by the current call.\nInserts or removes the specified flags depending on the …\nSets new code hash for existing contract.\nSets the storage entry by the given key to the specified …\nSets the transient storage entry for the given key to the …\nVerify a sr25519 signature.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nTransfer all funds to <code>beneficiary</code> and delete the contract.\nToggles the specified flags in-place.\nTransfer some amount of funds into the specified account.\nGet a mutable reference to the transient storage. Useful …\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nRemoves a delegate dependency from <code>ContractInfo</code>’s …\nCalculate how much of a charge or refund results from …\nThe <code>input_ptr</code> argument.\nThe <code>input_len</code> argument.\nThe <code>output_ptr</code> argument.\nThe <code>output_len_ptr</code> argument.\nReturns the value transferred along with this call.\nWrite the supplied buffer to contract memory.\nThe function which is executed when a contract is called.\nProvides an interface for intercepting contract calls.\nDefines a span of execution for a contract call.\nThe type of <code>CallSpan</code> that is created by this trait.\nThe constructor function which is executed on deployment …\nUmbrella trait for all interfaces that serves for …\nContains the error value\nOutput of a contract call or instantiation which ran to …\nDescribes the different functions that can be exported by …\nContains the success value\nDefines methods to capture contract calls, enabling …\nCalled just after the execution of a contract.\nBuffer passed along by <code>seal_return</code>. Empty when <code>seal_return</code> …\nThe contract did revert all storage changes.\nFlags passed along by <code>seal_return</code>. Empty when <code>seal_return</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAllows to intercept contract calls and decide whether they …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new call span to encompass the upcoming contract …\nAll migrations are completed\nThe cursor used to encode the position (usually the last …\nA migration is in progress\nIsFinished describes whether a migration is finished or …\nThe result of running the migration.\nDefines a sequence of migrations.\nPerforms all necessary migrations based on <code>StorageVersion</code>.\nA trait that allows to migrate storage from one version to …\nNo migration currently in progress\nNo migration was performed\nThe result of running a migration step.\nReturns the version of the migration.\nReturns the range of versions that this migrations …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nVerify that the migration step fits into <code>Cursor</code>, and that …\nVerify that the migration step fits into <code>Cursor</code>, and that …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether migrating from <code>in_storage</code> to <code>target</code> is …\nReturns the maximum weight that can be consumed in a …\nReturns the default cursor for the given version.\nExecute some post-checks after running the last step of …\nExecute some pre-checks prior to running the first step of …\nProcess one step of the migration.\nExecute the migration step until the available weight is …\nUpdate <code>CodeStorage</code> with the new <code>determinism</code> field.\nDon’t rely on reserved balances keeping an account alive …\nOverflowing bounded DeletionQueue. See …\nMove <code>OwnerInfo</code> to <code>CodeInfo</code>, add <code>determinism</code> field to the …\nAdd <code>delegate_dependencies</code> to <code>ContractInfo</code>. See …\nUpdate the code owner balance, make the code upload …\nMove contracts’ <em>reserved</em> balance from the <code>deposit_account</code>…\nRemove ED from storage base deposit. See …\nThe Migration Steps used for benchmarking the migration …\nThe latest migration version, pulled from the latest …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe address generator used to generate the addresses of …\nThe address generator used to generate the addresses of …\nThe version of the HostFn APIs that are available in the …\nThe version of the HostFn APIs that are available in the …\nContains a variant per dispatchable extrinsic that this …\nFilter that is applied to calls dispatched by contracts.\nFilter that is applied to calls dispatched by contracts.\nThe type of the call stack determines the maximum nesting …\nA contract was called either by a plain account or another …\nCan not add a delegate dependency to the code hash of the …\nType that allows the runtime authors to add new host …\nType that allows the runtime authors to add new host …\nThe percentage of the storage deposit that should be held …\nThe percentage of the storage deposit that should be held …\nCode removal was denied because the code is still in use …\nNo code info could be found at the supplied code hash.\nNo code could be found at the supplied code hash.\nThe contract’s code was found to be invalid during …\nA code with the specified hash was removed.\nCode with the specified hash has been stored.\nThe code supplied to <code>instantiate_with_code</code> exceeds the …\nThe Pallet has reserved it for storing code on-chain.\nConfiguration trait of this pallet.\nA contract’s code was updated.\nA custom event emitted by the contract.\nNo contract was found at the specified address.\nThe contract ran to completion but decided to revert its …\nContract trapped during execution.\nThe fungible in which fees are paid and contract balances …\nNote\nNote\nInput passed to a contract API function failed to decode …\nBased on <code>Config</code>. Auto-generated by …\nFallback value to limit the storage deposit if it’s not …\nFallback value to limit the storage deposit if it’s not …\nA contract delegate called a code hash.\nThe contract already depends on the given delegate …\nThe dependency was not found in the contract’s delegate …\nThe amount of balance a caller has to pay for each byte of …\nThe amount of balance a caller has to pay for each byte of …\nThe amount of balance a caller has to pay for each storage …\nThe amount of balance a caller has to pay for each storage …\nA contract with the same AccountId already exists.\nType that bundles together all the runtime configurable …\nType that bundles together all the runtime configurable …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA reason for the pallet contracts placing a hold on funds.\nAn indeterministic code was used in a context where this …\n<code>seal_call</code> forwarded this contracts input. It therefore is …\nOrigin allowed to instantiate code.\nOrigin allowed to instantiate code.\nContract deployed by address at the specified address.\nInvalid combination of flags supplied to <code>seal_call</code> or …\nInvalid schedule supplied, e.g. with zero weight of a …\nPerforming a call was denied because the calling depth …\nThe maximum length of a contract code in bytes.\nThe maximum length of a contract code in bytes.\nThe maximum length of the debug buffer in bytes.\nThe maximum length of the debug buffer in bytes.\nThe maximum number of delegate_dependencies that a …\nThe maximum number of delegate_dependencies that a …\nThe contract has reached its maximum number of delegate …\nThe maximum allowable length in bytes for storage keys.\nThe maximum allowable length in bytes for storage keys.\nThe maximum size of the transient storage in bytes. This …\nThe maximum size of the transient storage in bytes. This …\nA pending migration needs to complete before the extrinsic …\nThe sequence of migration steps that will be applied …\nThe sequence of migration steps that will be applied …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe chain does not provide a chain extension. Calling the …\nMigrate dispatch call was attempted but no migration was …\nA buffer outside of sandbox memory was passed to a …\nThe executed contract exhausted its gas limit.\nCan not add more data to transient storage.\nThe output buffer supplied to a contract API call was too …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe subject passed to <code>seal_random</code> exceeds the limit.\nThe generator used to supply randomness to contracts …\nThe generator used to supply randomness to contracts …\nA call tried to invoke a contract that is flagged as …\nThe overarching call type.\nThe overarching call type.\nThe overarching event type.\nThe overarching event type.\nOverarching hold reason.\nOverarching hold reason.\nCost schedule and limits.\nA contract attempted to invoke a state modifying API while …\nMore storage was created than allowed by the storage …\nOrigin doesn’t have enough balance to pay the required …\nThe Pallet has reserved it for storage deposit.\nSome funds have been transferred and held as storage …\nSome storage deposit funds have been transferred and …\nContract has been removed.\nA contract self destructed in its constructor.\nTermination of a contract is not allowed while the …\nThe time implementation used to supply timestamps to …\nThe time implementation used to supply timestamps to …\nThe amount of topics passed to <code>seal_deposit_events</code> exceeds …\nPerforming the requested transfer failed. Probably because …\nMake contract callable functions marked as <code>#[unstable]</code> …\nMake contract callable functions marked as <code>#[unstable]</code> …\nOrigin allowed to upload code.\nOrigin allowed to upload code.\nThe size defined in <code>T::MaxValueSize</code> was exceeded.\nDescribes the weights of the dispatchables of this module …\nDescribes the weights of the dispatchables of this module …\nUsed to answer contracts’ queries regarding the current …\nUsed to answer contracts’ queries regarding the current …\nFailed to decode the XCM program.\nA type that exposes XCM APIs, allowing contracts to …\nA type that exposes XCM APIs, allowing contracts to …\nPerform a call to a specified contract.\nInstantiate a new contract.\nUpload new code without instantiating a contract from it.\nMakes a call to an account, optionally transferring some …\nMakes a call to an account, optionally transferring some …\nDeprecated version if <code>Self::call</code> for use in an in-storage …\nDeprecated version if <code>Self::call</code> for use in an in-storage …\nReturns the code hash of the contract specified by <code>account</code> …\nContainer for different types that implement <code>DefaultConfig</code>`…\nDetermine the address of a contract.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nQuery storage of a specified contract under a specified …\nInstantiates a contract from a previously deployed wasm …\nInstantiates a contract from a previously deployed wasm …\nDeprecated version if <code>Self::instantiate</code> for use in an …\nDeprecated version if <code>Self::instantiate</code> for use in an …\nInstantiates a new contract from the supplied <code>code</code> …\nInstantiates a new contract from the supplied <code>code</code> …\nDeprecated version if <code>Self::instantiate_with_code</code> for use …\nDeprecated version if <code>Self::instantiate_with_code</code> for use …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhen a migration is in progress, this dispatchable can be …\nWhen a migration is in progress, this dispatchable can be …\nCreate a call with the variant <code>call</code>.\nCreate a call with the variant <code>call_old_weight</code>.\nCreate a call with the variant <code>instantiate</code>.\nCreate a call with the variant <code>instantiate_old_weight</code>.\nCreate a call with the variant <code>instantiate_with_code</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>migrate</code>.\nCreate a call with the variant <code>remove_code</code>.\nCreate a call with the variant <code>set_code</code>.\nCreate a call with the variant <code>upload_code</code>.\nRemove the code stored under <code>code_hash</code> and refund the …\nRemove the code stored under <code>code_hash</code> and refund the …\nPrivileged function that changes the code of an existing …\nPrivileged function that changes the code of an existing …\nAuto-generated docs-only module listing all (public and …\nUpload new <code>code</code> without instantiating a contract from it.\nUpload new <code>code</code> without instantiating a contract from it.\nThe account that received the contracts remaining balance\nThe caller of the <code>contract</code>.\nThe code hash that was delegate called.\nThe contract that was terminated.\nThe contract that emitted the event.\nThe contract that has been updated.\nThe contract that was called.\nThe contract that performed the delegate call and hence in …\nData supplied by the contract. Metadata generated during …\nNew code hash that was set for the contract.\nPrevious code hash of the contract.\nA type providing default configurations for this pallet in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMakes a call to an account, optionally transferring some …\nDeprecated version if [<code>Self::call</code>] for use in an …\nInstantiates a contract from a previously deployed wasm …\nDeprecated version if [<code>Self::instantiate</code>] for use in an …\nInstantiates a new contract from the supplied <code>code</code> …\nDeprecated version if [<code>Self::instantiate_with_code</code>] for …\nWhen a migration is in progress, this dispatchable can be …\nRemove the code stored under <code>code_hash</code> and refund the …\nPrivileged function that changes the code of an existing …\nUpload new <code>code</code> without instantiating a contract from it.\nA mapping from a contract’s code hash to its code info.\nThe code associated with a given account.\nEvicted contracts that await child trie deletion.\nA pair of monotonic counters used to track the latest …\nA migration can span across multiple blocks. This storage …\nThis is a <strong>monotonic</strong> counter incremented on contract …\nA mapping from a contract’s code hash to its code.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn opaque 32-byte cryptographic identifier.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate a new instance from its raw inner byte value.\nA builder to construct a bare_call call\nA builder to construct a bare_instantiate call\nA builder to construct a call call\nA builder to construct a instantiate call\nA builder to construct a instantiate_with_code call\nCreate a <code>BareCallBuilder</code> with default values.\nBuild the instantiate_with_code call\nBuild the instantiate call\nBuild the bare_instantiate call\nBuild the call call\nBuild the bare_call call\nBuild the instantiate call and unwrap the account id.\nBuild the instantiate call and unwrap the result.\nBuild the call and unwrap the result.\nCreate a <code>CallBuilder</code> with default values.\nSet the code\nSet the code\nSet the code_hash\nSet the collect_events\nSet the collect_events\nSet the data\nSet the data\nSet the data\nSet the data\nSet the data\nSet the debug\nSet the debug\nSet the dest\nSet the dest\nSet the determinism\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSet the gas_limit\nSet the gas_limit\nSet the gas_limit\nSet the gas_limit\nSet the gas_limit\nCreate an <code>InstantiateBuilder</code> with default values.\nCreate an <code>InstantiateWithCodeBuilder</code> with default values.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the origin\nSet the origin\nSet the origin\nSet the origin\nSet the origin\nSet the salt\nSet the salt\nSet the salt\nSet the storage_deposit_limit\nSet the storage_deposit_limit\nSet the storage_deposit_limit\nSet the storage_deposit_limit\nSet the storage_deposit_limit\nSet the value\nSet the value\nSet the value\nSet the value\nSet the value\nWeights for <code>pallet_contracts</code> using the Substrate node and …\nWeight functions needed for <code>pallet_contracts</code>.\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:0) Proof: …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:0) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:0) Proof: …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:0) Proof: …\nThe range of component <code>r</code> is <code>[0, 5000]</code>.\nCalls <code>U::from(self)</code>.\nStorage: <code>Contracts::CodeInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:1) Proof: …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:1) Proof: …\nThe range of component <code>r</code> is <code>[0, 1600]</code>.\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Contracts::DeletionQueueCounter</code> (r:1 w:0) Proof: …\nStorage: UNKNOWN KEY …\nStorage: UNKNOWN KEY …\nStorage: UNKNOWN KEY …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:0) Proof: …\nStorage: <code>Contracts::ContractInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 16384]</code>.\nStorage: <code>Contracts::ContractInfoOf</code> (r:1 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 16384]</code>.\nThe range of component <code>i</code> is <code>[0, 1048576]</code>.\nStorage: <code>Contracts::CodeInfoOf</code> (r:1 w:0) Proof: …\nStorage: <code>System::EventTopics</code> (r:4 w:4) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 16384]</code>.\nThe range of component <code>n</code> is <code>[0, 1048576]</code>.\nThe range of component <code>n</code> is <code>[0, 1048576]</code>.\nThe range of component <code>n</code> is <code>[0, 1048576]</code>.\nThe range of component <code>n</code> is <code>[0, 1048576]</code>.\nThe range of component <code>n</code> is <code>[0, 1048572]</code>.\nStorage: <code>Contracts::CodeInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Contracts::Nonce</code> (r:1 w:0) Proof: <code>Contracts::Nonce</code>…\nStorage: <code>Contracts::ContractInfoOf</code> (r:1 w:0) Proof: …\nStorage: <code>RandomnessCollectiveFlip::RandomMaterial</code> (r:1 w:0)\nThe range of component <code>n</code> is <code>[0, 1048572]</code>.\nStorage: <code>Contracts::CodeInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 16384]</code>. The range of …\nThe range of component <code>n</code> is <code>[0, 125697]</code>.\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 16384]</code>.\nStorage: <code>Contracts::DeletionQueueCounter</code> (r:1 w:1) Proof: …\nStorage: <code>TransactionPayment::NextFeeMultiplier</code> (r:1 w:0) …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Contracts::CodeInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:0) Proof: …\nStorage: <code>Contracts::MigrationInProgress</code> (r:1 w:0) Proof: …\nStorage: <code>Contracts::ContractInfoOf</code> (r:2 w:1) Proof: …\nStorage: <code>Contracts::DeletionQueue</code> (r:1 w:1025) Proof: …\nStorage: UNKNOWN KEY …\nStorage: <code>Contracts::ContractInfoOf</code> (r:2 w:1) Proof: …\nStorage: <code>Contracts::CodeInfoOf</code> (r:2 w:0) Proof: …\nStorage: <code>Contracts::ContractInfoOf</code> (r:2 w:1) Proof: …\nStorage: <code>Contracts::ContractInfoOf</code> (r:2 w:1) Proof: …\nStorage: UNKNOWN KEY …")