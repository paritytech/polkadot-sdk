searchState.loadedDescShard("sp_io", 0, "Substrate Primitives: IO\nAll keys to remove were removed, return number of …\nIncorrect value of R or S\nInvalid signature\nIncorrect value of V\nCrossing is a helper wrapping any Encode-Decodeable type …\nError verifying ECDSA signature\nThe outcome of calling <code>storage_kill</code>. Returned value is the …\nResults concerning an operation to remove many keys.\nNot all key to remove were removed, return number of …\nThe host functions Substrate provides for the Wasm runtime …\nType alias for Externalities implementation used in tests.\nExtension to signal to [<code>crypt::ed25519_verify</code>] to use the …\nWasm only interface that provides functions for calling …\nStorage backend.\nThe number of items removed from the backend database.\nInterfaces for working with crypto related types from …\nDeconstruct into the internal components.\nInterface for accessing the child storage for default …\nExtensions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nInterface that provides functions for hashing with …\nInitialize tracing of sp_tracing not necessary – noop. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into the inner type\nInterface that provides functions for logging from within …\nThe number of iterations (each requiring a storage …\nA continuation cursor which, if <code>Some</code> must be provided to …\nInterface that provides miscellaneous functions for …\nInterface that provides functions to access the offchain …\nInterface that provides functions to access the Offchain …\nWASM-only interface which allows for aborting the …\nState version to use during tests.\nInterface for accessing the storage from within the …\nInterface that provides transaction indexing API.\nInterface that provides trie related functionality.\nThe number of unique keys removed, taking into account …\nCrashes the execution of the program.\nInterface to provide tracing facilities for wasm. Modelled …\nProvides implementations for the extern host functions.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nProvides implementations for the extern host functions.\nGenerate a <code>bandersnatch</code> key pair for the given key type …\nGenerate an <code>bls12-381</code> key for the given key type using an …\nGenerate an <code>(ecdsa,bls12-381)</code> key for the given key type …\nGenerate an <code>ecdsa</code> key for the given key type using an …\nReturns all <code>ecdsa</code> public keys for the given key id from …\nSign the given <code>msg</code> with the <code>ecdsa</code> key that corresponds to …\nSign the given a pre-hashed <code>msg</code> with the <code>ecdsa</code> key that …\nVerify <code>ecdsa</code> signature.\nVerify <code>ecdsa</code> signature with pre-hashed <code>msg</code>.\nGenerate an <code>ed22519</code> key for the given key type using an …\nReturns all <code>ed25519</code> public keys for the given key id from …\nSign the given <code>msg</code> with the <code>ed25519</code> key that corresponds …\nVerify <code>ed25519</code> signature.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nVerify and recover a SECP256k1 ECDSA signature.\nVerify and recover a SECP256k1 ECDSA signature.\nGenerate an <code>sr22519</code> key for the given key type using an …\nReturns all <code>sr25519</code> public keys for the given key id from …\nSign the given <code>msg</code> with the <code>sr25519</code> key that corresponds …\nVerify <code>sr25519</code> signature.\nProvides implementations for the extern host functions.\nClear a child storage key.\nClear the child storage of each key-value pair where the …\nCheck a child storage key.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a default child storage value for a given key.\nCalls <code>U::from(self)</code>.\nChild storage key iteration.\nAllocation efficient variant of <code>get</code>.\nDefault child root calculation.\nSet a child storage value.\nClear a child storage key.\nProvides implementations for the extern host functions.\nConduct a 128-bit Blake2 hash.\nConduct a 256-bit Blake2 hash.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nConduct a 256-bit Keccak hash.\nConduct a 512-bit Keccak hash.\nConduct a 256-bit Sha2 hash.\nConduct two XX hashes to give a 128-bit result.\nConduct four XX hashes to give a 256-bit result.\nConduct two XX hashes to give a 64-bit result.\nProvides implementations for the extern host functions.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nRequest to print a log message on the host.\nReturns the max log level used by the host.\nProvides implementations for the extern host functions.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nPrint any <code>u8</code> slice as hex.\nPrint a number.\nPrint any valid <code>utf8</code> buffer.\nExtract the runtime version of the given wasm blob by …\nProvides implementations for the extern host functions.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAppend header to the request.\nInitiates a http request given HTTP verb and the URL.\nWrite a chunk of request body.\nRead all response headers.\nRead a chunk of body response to given buffer.\nBlock and wait for the responses for given requests.\nCalls <code>U::from(self)</code>.\nReturns if the local node is a potential validator.\nRemove a value from the local storage.\nSets a value in the local storage if it matches current …\nGets a value from the local storage.\nSets a value in the local storage.\nReturns information about the local node’s network state.\nReturns a random seed.\nSet the authorized nodes and authorized_only flag.\nPause the execution until <code>deadline</code> is reached.\nSubmit an encoded transaction to the pool.\nReturns current UNIX timestamp (in millis)\nProvides implementations for the extern host functions.\nRemove a key and its associated value from the Offchain DB.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nWrite a key value pair to the Offchain DB database in a …\nProvides implementations for the extern host functions.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nProvides implementations for the extern host functions.\nAppend the encoded <code>value</code> to the storage item at <code>key</code>.\nAlways returns <code>None</code>. This function exists for …\nClear the storage of the given <code>key</code> and its value.\nClear the storage of each key-value pair where the key …\nCommit the last transaction started by <code>start_transaction</code>.\nCheck whether the given <code>key</code> exists in storage.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the data for <code>key</code> in the storage or <code>None</code> if the key …\nCalls <code>U::from(self)</code>.\nGet the next key in storage after the given one in …\nGet <code>key</code> from storage, placing the value into <code>value_out</code> and …\nRollback the last transaction started by <code>start_transaction</code>.\n“Commit” all existing operations and compute the …\nSet <code>key</code> to <code>value</code> in the storage.\nStart a new nested transaction.\nProvides implementations for the extern host functions.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAdd transaction index. Returns indexed content hash.\nCalls <code>U::from(self)</code>.\nConduct a 512-bit Keccak hash.\nProvides implementations for the extern host functions.\nA trie root formed from the enumerated items.\nA trie root formed from the iterated items.\nVerify trie proof\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA trie root formed from the enumerated items.\nA trie root formed from the iterated items.\nVerify trie proof\nProvides implementations for the extern host functions.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.")