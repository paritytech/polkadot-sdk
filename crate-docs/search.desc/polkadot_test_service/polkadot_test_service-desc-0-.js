searchState.loadedDescShard("polkadot_test_service", 0, "Polkadot test service only.\nThe client type being used by the test service.\nThis runtime API is only implemented for the test runtime!\nA Polkadot test node instance used for testing.\nThe <code>MultiaddrWithPeerId</code> to this node. This is useful if …\nChain specifications for the test runtime.\nClient’s instance.\nConstruct an extrinsic that can be applied to the test …\nConstruct a transfer extrinsic.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the last timestamp of a runtime.\nCalls <code>U::from(self)</code>.\nCreate a new full node.\nCreate a Polkadot <code>Configuration</code>.\nA handle to Overseer.\nRegister the collator functionality in the overseer of …\nRegister a parachain at this relay chain.\n<code>RPCHandlers</code> to make RPC queries.\nRun a test collator node that uses the test runtime.\nRun a test validator node that uses the test runtime and …\nSend an extrinsic to this node.\n<code>TaskManager</code>’s instance.\nReturns a prometheus config usable for testing.\nWait for <code>count</code> blocks to be imported in the node and then …\nWait for <code>count</code> blocks to be finalized and then exit. …\nCan be called for a <code>Configuration</code> to check if it is a …\nThe <code>ChainSpec</code> parameterized for polkadot test runtime.\nHelper function to generate an account ID from seed\nHelper function to generate a crypto pair from seed\nReturns if this is a configuration for the <code>Test</code> network.\nReturns the properties for the <code>PolkadotChainSpec</code>.\nLocal testnet config (multivalidator Alice + Bob)\nLocal testnet genesis config (multivalidator Alice + Bob)")