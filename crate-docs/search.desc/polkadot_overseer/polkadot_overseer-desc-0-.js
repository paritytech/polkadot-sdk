searchState.loadedDescShard("polkadot_overseer", 0, "Overseer\nActivated leaf.\nSubsystems should adjust their jobs to start and stop work …\nChanges in the set of active leaves: the parachain heads …\nGenerated message type wrapper over all possible messages …\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nAccumulative trait for a particular subsystem wrapper.\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nA abstracting trait for usage with subsystems.\nBinds a generated type covering all declared outgoing …\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nA block was finalized with i.e. babe or another consensus …\n<code>Subsystem</code> is informed of a finalized block by its block …\nA new block was imported.\nAn event telling the <code>Overseer</code> on the particular block that …\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nOffers header utilities.\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nCollection of channels to the individual subsystems.\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nSome other <code>Subsystem</code>’s message.\nConclude the work of the <code>Overseer</code> and all <code>Subsystem</code>s.\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nContains the error value\nThe error type.\nAn event from outside the overseer scope, such as the …\nSome request from outer world.\nA request from the outer world.\nDefer initialization to a point where the <code>handle</code> is …\nA message type that a subsystem receives from an orchestra.\nPer origin (or subsystem) annotations to wrap an error.\nPer origin (or subsystem) annotations to wrap an error.\nGenerated by the <code>#[overseer(..)]</code> proc-macro\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nA handle used to communicate with the <code>Overseer</code>.\nWhether a header supports parachain consensus or not.\nHigh priority.\nHigh priority.\nType for the initialized field of the orchestra builder\nType used to represent a builder where all fields are …\nA helper trait to map a subsystem to smth. else.\nThe message type of this context. Subsystems launched with …\nA wrapping type for messages.\nSubsystem- or job-specific Prometheus metrics.\nCreate a stream of ticks with a defined cycle duration.\nType marker for the uninitialized field of the orchestra …\nMessage as sent to a subsystem.\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nNormal priority.\nNormal priority.\nContains the success value\nA subsystem that the orchestrator orchestrates.\nThe overarching messages <code>enum</code> for this particular …\nThe associated <em>outgoing</em> messages for a subsystem that …\nThe output type of the mapping.\nThe orchestra.\nBuilder pattern to create compile time safe construction …\nExternal connector.\nAn error type that describes faults that may happen\nHandle for an orchestra.\nConnector to send messages towards all subsystems, while …\nSignals sent by an overseer to a subsystem.\nA context type that is given to the <code>Subsystem</code> upon …\nDescribes the priority of the message.\nPriority of messages sending to the individual subsystems. …\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nExposes all runtime calls that are used by the runtime API …\nThe sender type as provided by <code>sender()</code> and underlying.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSender.\nSignal from the <code>Orchestra</code>.\nAnd the same for signals.\nWatermark to track the received signals.\nSame as <code>SpawnJob</code> but for blocking tasks to be executed on a\nGlue to connect <code>trait orchestra::Spawner</code> and <code>SpawnNamed</code> …\nA message that wraps something the <code>Subsystem</code> is desiring to\nA spawner\nAccumulative trait for a particular subsystem wrapper.\nA abstracting trait for usage with subsystems.\nStop the overseer on i.e. a UNIX signal.\nA trait that describes the <code>Subsystem</code>s that can run on the …\nA context type that is given to the <code>Subsystem</code> upon …\nAn error type that describes faults that may happen\nIncoming messages from both the bounded and unbounded …\nA running instance of some <code>Subsystem</code>.\nSet of readouts of the <code>Meter</code>s of a subsystem.\nCollection of meters related to a subsystem.\nEase the use of subsystem errors.\nSender end of a channel to interface with a subsystem.\nTask kind to launch.\nExtends <code>Future</code> to allow time-limited futures.\nA type of messages that are sent from a <code>Subsystem</code> to the …\nA bounded channel error when trying to send a message …\nKeeps the state of a specific block pinned in memory while …\nDirectly initialize the subsystem with the given subsystem …\nWait for the activation of a particular hash and be …\nNew relay chain block of interest.\nSpecify the baggage in the builder when it has been …\nSpecify the baggage in the builder when it was not …\nA user specified addendum field.\nSpecify the baggage in the builder when it has been …\nSpecify the baggage in the builder when it was not …\nA user specified addendum field.\nParachain host API version\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nApproval voting configuration parameters\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nObtain access to the orchestra handle.\nObtain access to the orchestra handle.\nReturns the persisted validation data for the given <code>ParaId</code> …\nReturns candidate’s acceptance limitations for …\nRetrieve authority identifiers of the current and next …\nYields information on all availability cores as relevant …\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nInform the <code>Overseer</code> that some block was finalized.\nInform the <code>Overseer</code> that that some block was imported.\nBroadcast a signal to all subsystems.\nComplete the construction and create the orchestra type.\nComplete the construction and create the orchestra type.\nComplete the construction and create the orchestra type …\nComplete the construction and create the orchestra type …\nCreate a new orchestra utilizing the builder.\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nGet a vector of events concerning candidates that occurred …\nGet the receipt of a candidate pending availability. This …\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nGet the receipts of all candidates pending availability …\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nChecks if the given validation outputs pass the acceptance …\nFetch the <code>ClaimQueue</code> from scheduler pallet\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nReturns information regarding the current epoch.\nRelay chain block hashes no longer of interest.\nGets the disabled validators at a specific block height\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nReturns all onchain disputes. This is a staging method! Do …\nGet all the pending inbound messages in the downward …\nA dummy subsystem, mostly useful for placeholders and …\nEquality for <code>ActiveLeavesUpdate</code> doesn’t imply bitwise …\nGlues together the <code>Overseer</code> and <code>BlockchainEvents</code> by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nObtain a clone of the handle.\nGet block hash by number. Returns <code>None</code> if the header is …\nHash of the block.\nThe block hash.\nReturn true if the given header supports parachain …\nGet block header. Returns <code>None</code> if block is not found.\nGet the contents of all channels addressed to the given …\nIncrease the number of signals by one.\nGet blockchain info.\nThe instance.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the inner value.\nReturns <code>true</code> if we could not send to channel as it was …\nIs this update empty and doesn’t contain any information?\nReturns <code>true</code> if we could not send to channel as it was full\nReturns a merkle proof of a validator session key in a …\nSpawn a task, it depends on the implementer if this is …\nLoad the current value of received signals.\nConsumes a <code>T</code> per subsystem, and maps it to <code>Self::Output</code>.\nExtract information from each subsystem.\nThe message to be sent/consumed.\nSet the interconnecting message channel capacities. This …\nThe exclusive home of all generated dummy messages (if any …\nAll meters of the particular subsystem instance.\nPrometheus metrics related to the overseer and its …\nSpecify the baggage in the builder when it was not …\nSpecify the baggage in the builder when it has been …\nA user specified addendum field.\nGet the minimum number of backing votes.\nName of the subsystem instance.\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nCreate a new metronome source with a defined cycle …\nCreate a new <code>Handle</code>.\nGet the node features.\nGet block number by hash. Returns <code>None</code> if the header is …\nBlock’s number.\nThe block number.\nScrape dispute relevant from on-chain, backing votes and …\nReturns the state of parachain backing for a given para. …\nHash of the parent block.\nYields the persisted validation data for the given <code>ParaId</code> …\nThe priority level.\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nReturns code hashes of PVFs that require pre-checking by …\nRead the values of all subsystem <code>Meter</code>s.\nReceive a signal or a message.\nReceive a signal.\nConvenience method to register metrics in the optional …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nReplace a subsystem by another implementation for the …\nRoute a particular message to a subsystem that consumes …\nRun the <code>Overseer</code>.\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nSend a message via a bounded channel.\nSend a direct message to some other <code>Subsystem</code>, routed …\nSend a direct message to some other <code>Subsystem</code>, routed …\nSend a message to the wrapped subsystem.\nSend a direct message with defined priority to some other …\nSend multiple direct messages to other <code>Subsystem</code>s, routed …\nSend multiple direct messages to other <code>Subsystem</code>s, routed …\nSend some message to one of the <code>Subsystem</code>s.\nSend a message not providing an origin.\nSend a signal to the wrapped subsystem.\nSend a message to another subsystem via an unbounded …\nSend a message onto the unbounded queue of some other …\nSend a message using the unbounded connection.\nObtain the sender.\nGet the execution environment parameter set by parent …\nReturns the session index expected at a child of the block.\nGet the session info for the given session, if stored.\nSet the interconnecting signal channel capacity. This will …\nThe number of signals already received. Required to assure …\nSignal level at the point of reception.\nAn associated <code>jaeger::Span</code>.\nSpecify the baggage in the builder when it was not …\nSpecify the baggage in the builder when it has been …\nA user specified addendum field.\nSpawn task of kind <code>self</code> using spawner <code>S</code>.\nSpawn the given non-blocking future.\nSpawn a child task on the executor.\nSpawn the given blocking future.\nSpawn a blocking child task on the executor’s dedicated …\nSpawn the metrics metronome task.\nGet access to internal task spawner.\nThe <code>spawner</code> to use for spawning tasks.\nStart this <code>Subsystem</code> and return <code>SpawnedSubsystem</code>.\nCreate a <code>ActiveLeavesUpdate</code> with a single activated hash\nSpecify the subsystem in the builder directly\nBounded channel sender, connected to a subsystem.\nUnbounded channel sender, connected to a subsystem.\nSpecify the the initialization function for a subsystem\nTell <code>Overseer</code> to shutdown.\nCreate a <code>ActiveLeavesUpdate</code> with a single deactivated hash\nSubmits a PVF pre-checking statement into the transaction …\nSubmits an unsigned extrinsic to slash validators who lost …\nSpecify the baggage in the builder when it was not …\nSpecify the baggage in the builder when it has been …\nA user specified addendum field.\nAdds a timeout of <code>duration</code> to the given <code>Future</code>. Returns a …\nTransform the inner value.\nTry to asynchronously receive a message.\nTry to register metrics in the Prometheus registry.\nTry to send a message via a bounded channel.\nTries to send a direct message to some other <code>Subsystem</code>, …\nTries to send a direct message with defined priority to …\nTries to send a signal to the wrapped subsystem without …\nTransform the inner value, fail-able version.\nSend sink for <code>Message</code>s to be sent to a subsystem.\nSend sink for <code>Signal</code>s to be sent to a subsystem.\nReturns a list of validators that lost a past session …\nA handle to unpin the block on drop.\nA handle to unpin the block on drop.\nFetch the validation code used by a para, making the given …\nGet the validation code from its hash.\nFetch the hash of the validation code used by a para, …\nReturns the validator groups and rotation info localized …\nGet the current validators.\nWait for a block with the given hash to be in the …\nSend the given signal, a termination signal, to all …\nCreate a new connector with non-default event channel …\nAdds a <code>str</code> as <code>origin</code> to the given error <code>err</code>.\nThe actual message.\nThe originating subsystem name.\nThe relay parent for which activation to wait for.\nResponse channel to await on.\nContained message\nAn additional annotation tag for the origin of <code>source</code>.\nThe wrapped error. Marked as source for tracking the error …\nAn additional annotation tag for the origin of <code>source</code>.\nThe wrapped error. Marked as source for tracking the error …\nName of the task to spawn which be shown in jaeger and …\nName of the task to spawn which be shown in jaeger and …\nThe future to execute.\nThe future to execute.\nSubsystem of the task to spawn which be shown in jaeger …\nSubsystem of the task to spawn which be shown in jaeger …\nA dummy subsystem that implements <code>Subsystem</code> for all types …\nCreate an overseer with all subsystem being <code>Sub</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate an overseer with all subsystem being <code>Sub</code>.\nA dummy implementation to satisfy the current internal …\nA dummy implementation to satisfy the current internal …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA shareable metrics type for usage with the overseer.\nSubsystem- or job-specific Prometheus metrics.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThis module reexports Prometheus types and defines the …\nConvenience method to register metrics in the optional …\nTry to register metrics in the Prometheus registry.\nSubsystem- or job-specific Prometheus metrics.\nConvenience method to register metrics in the optional …\nTry to register metrics in the Prometheus registry.\nA duplicate metric collector has already been registered.\nThe underlying implementation for <code>Counter</code> and <code>IntCounter</code>.\nThe underlying implementation for <code>CounterVec</code> and …\nA atomic float.\nThe underlying implementation for <code>Gauge</code> and <code>IntGauge</code>.\nThe underlying implementation for <code>GaugeVec</code> and <code>IntGaugeVec</code>.\nA <code>Metric</code> counts individual observations from an event or …\nA struct that bundles the options for creating a <code>Histogram</code> …\nA <code>Collector</code> that bundles a set of Histograms that all …\nHttp request error.\nHyper internal error.\nA atomic signed integer.\nThe label cardinality was inconsistent.\ni/o error.\nAn error containing a <code>std::io::Error</code>.\nA source of values for a <code>SourcedMetric</code>.\nAn error message which is only a string.\nThe type of the collected values.\nA struct that bundles the options for creating most <code>Metric</code> …\nThe error types for prometheus.\nA struct for registering Prometheus collectors, collecting …\nA counter whose values are obtained from an existing …\nA gauge whose values are obtained from an existing source.\nA metric whose values are obtained from an existing source,\nA atomic unsigned integer.\nAdd the given value to the gauge. (The value can be …\n<code>buckets</code> set the buckets.\nDefines the buckets into which observations are counted. …\nCollects the current values of the metrics from the source.\nA container holding various options.\n<code>const_label</code> adds a const label.\n<code>const_label</code> adds a const label.\n<code>const_labels</code> sets the const labels.\n<code>const_labels</code> sets the const labels.\nconst_labels are used to attach fixed labels to this …\nDecrease the gauge by 1.\nCreate <code>count</code> buckets, where the lowest bucket has an upper …\n<code>fq_name</code> returns the fq_name.\n<code>fq_name</code> returns the fq_name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\n<code>gather</code> calls the Collect method of the registered …\nReturn the counter value.\nReturn the gauge value.\nReturn count of all samples.\nReturn accumulated sum of all samples.\nhelp provides information about this metric. Mandatory!\nIncrease the counter by 1.\nIncrease the gauge by 1.\nIncrease the given value to the counter.\nIncrement the value by a given amount with the provided …\nInitializes the metrics context, and starts an HTTP server …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn a <code>GenericLocalCounter</code> for single thread usage.\nReturn a <code>LocalHistogram</code> for single thread usage.\nnamespace, subsystem, and name are components of the …\n<code>namespace</code> sets the namespace.\n<code>namespace</code> sets the namespace.\nnamespace, subsystem, and name are components of the …\nCreates a new metric that obtains its values from the …\nCreate a <code>GenericCounter</code> with the <code>name</code> and <code>help</code> arguments.\nCreate a <code>GenericGauge</code> with the <code>name</code> and <code>help</code> arguments.\nCreate a <code>HistogramOpts</code> with the <code>name</code> and <code>help</code> arguments.\n<code>new</code> creates the Opts with the <code>name</code> and <code>help</code> arguments.\n<code>new</code> creates a Registry.\nCreate a new registry, with optional custom prefix and …\nAdd a single observation to the <code>Histogram</code>.\nObserve execution time of a closure, in second.\n<code>register</code> registers a new <code>Collector</code> to be included in …\nRestart the counter, resetting its value back to 0.\nSet the gauge to an arbitrary value.\nReturn a <code>HistogramTimer</code> to track a duration.\nSubtract the given value from the gauge. (The value can be …\n<code>subsystem</code> sets the sub system.\n<code>subsystem</code> sets the sub system.\nnamespace, subsystem, and name are components of the …\nStore the value, returning the previous value.\nStores a value into the atomic integer, returning the …\n<code>unregister</code> unregisters the <code>Collector</code> that equals the …\n<code>variable_label</code> adds a variable label.\n<code>variable_label</code> adds a variable label.\n<code>variable_labels</code> sets the variable labels.\n<code>variable_labels</code> sets the variable labels.\nvariable_labels contains names of labels for which the …\nCreate a <code>GenericCounter</code> with the <code>opts</code> options.\nCreate a <code>GenericGauge</code> with the <code>opts</code> options.\n<code>with_opts</code> creates a <code>Histogram</code> with the <code>opts</code> options.\nThe expected number of labels.\nThe actual number of labels.\nA duplicate metric collector has already been registered.\nA <code>Metric</code> represents a single numerical value that only …\nA <code>Collector</code> that bundles a set of <code>Counter</code>s that all share …\nThe default <code>Histogram</code> buckets. The default buckets are …\nAn interface for encoding metric families into an …\nContains the error value\nThe error types for prometheus.\nA <code>Metric</code> represents a single numerical value that can …\nA <code>Collector</code> that bundles a set of <code>Gauge</code>s that all share …\nA <code>Metric</code> counts individual observations from an event or …\nA struct that bundles the options for creating a <code>Histogram</code> …\nTimer to measure and record the duration of an event.\nA <code>Collector</code> that bundles a set of Histograms that all …\nThe label cardinality was inconsistent.\nThe integer version of <code>Counter</code>. Provides better …\nThe integer version of <code>CounterVec</code>. Provides better …\nThe integer version of <code>Gauge</code>. Provides better performance …\nThe integer version of <code>GaugeVec</code>. Provides better …\nAn error containing a <code>std::io::Error</code>.\nAn error message which is only a string.\nContains the success value\nA struct that bundles the options for creating most <code>Metric</code> …\nA struct for registering Prometheus collectors, collecting …\nA specialized Result type for prometheus.\nThe text format of metric family.\nAn implementation of an <code>Encoder</code> that converts a …\nDefines the buckets into which observations are counted. …\nA container holding various options.\nconst_labels are used to attach fixed labels to this …\nCore traits and types.\nDefault registry (global static).\n<code>encode</code> converts a slice of MetricFamily proto messages …\nConverts metrics to <code>String</code>.\nAppends metrics to a given <code>String</code> buffer.\nCreate <code>count</code> buckets, where the lowest bucket has an upper …\n<code>format_type</code> returns target format.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn all <code>MetricFamily</code> of <code>DEFAULT_REGISTRY</code>.\nhelp provides information about this metric. Mandatory!\nCreate a <code>HistogramOpts</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate labels with specified name-value pairs.\nCreate <code>count</code> buckets, each <code>width</code> wide, where the lowest …\nUnsync local metrics, provides better performance.\nnamespace, subsystem, and name are components of the …\nnamespace, subsystem, and name are components of the …\nCreate a new text encoder.\nObserve and record timer duration (in seconds).\nCreate an <code>Opts</code>.\nNon-generated version of required structures provided by …\nRegisters a new <code>Collector</code> to be included in metrics …\nCreate a <code>Counter</code> and registers to default registry.\nCreate a <code>CounterVec</code> and registers to default registry.\nCreate a <code>CounterVec</code> and registers to a custom registry.\nCreate a <code>Counter</code> and registers to a custom registry.\nCreate a <code>Gauge</code> and registers to default registry.\nCreate a <code>GaugeVec</code> and registers to default registry.\nCreate a <code>GaugeVec</code> and registers to a custom registry.\nCreate a <code>Gauge</code> and registers to a custom registry.\nCreate a <code>Histogram</code> and registers to default registry.\nCreate a <code>HistogramVec</code> and registers to default registry.\nCreate a <code>HistogramVec</code> and registers to default registry.\nCreate a <code>Histogram</code> and registers to a custom registry.\nCreate an <code>IntCounter</code> and registers to default registry.\nCreate an <code>IntCounterVec</code> and registers to default registry.\nCreate an <code>IntCounterVec</code> and registers to a custom registry.\nCreate an <code>IntCounter</code> and registers to a custom registry.\nCreate an <code>IntGauge</code> and registers to default registry.\nCreate an <code>IntGaugeVec</code> and registers to default registry.\nCreate an <code>IntGaugeVec</code> and registers to a custom registry.\nCreate an <code>IntGauge</code> and registers to a custom registry.\nObserve and return timer duration (in seconds).\nObserve, record and return timer duration (in seconds).\nnamespace, subsystem, and name are components of the …\nUnregisters the <code>Collector</code> that equals the <code>Collector</code> passed …\nvariable_labels contains names of labels for which the …\nThe expected number of labels.\nThe actual number of labels.\nAn interface for atomics. Used to generically model float …\nA atomic float.\nA atomic signed integer.\nA atomic unsigned integer.\nAn interface for collecting metrics.\nThe descriptor used by every Prometheus <code>Metric</code>. It is …\nAn interface for describing the immutable meta-data of a …\nThe underlying implementation for <code>Counter</code> and <code>IntCounter</code>.\nThe underlying implementation for <code>CounterVec</code> and …\nThe underlying implementation for <code>Gauge</code> and <code>IntGauge</code>.\nThe underlying implementation for <code>GaugeVec</code> and <code>IntGaugeVec</code>.\nThe underlying implementation for <code>LocalCounter</code> and …\nThe underlying implementation for <code>LocalCounterVec</code> and …\nThe associated Metric collected.\nAn interface models a single sample value with its meta …\nA <code>Collector</code> to bundle metrics of the same name that differ …\nAn interface for building a metric vector.\nAn interface for numbers. Used to generically model float …\nA struct that bundles the options for creating most <code>Metric</code> …\nThe associated describer.\nThe numeric type associated with this atomic.\n<code>build</code> builds a <code>Metric</code> with option and corresponding label …\nCollect metrics.\nconst_label_pairs contains precalculated DTO label pairs …\nconst_labels are used to attach fixed labels to this …\n<code>create</code> creates a MetricVec with description <code>desc</code>, a metric …\nDecrement the value by a given amount.\nReturn descriptors for metrics.\n<code>describe</code> returns a <code>Desc</code>.\ndim_hash is a hash of the label names (preset and …\nFlush the local metrics to the <code>CounterVec</code> metric.\nFlush the local metrics to the <code>CounterVec</code> metric.\nFlush the local metrics to the <code>Counter</code>.\nFlush the local metrics to the <code>Counter</code>.\nfq_name has been built from Namespace, Subsystem, and Name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n<code>std::convert::From&lt;i64&gt; for f64</code> is not implemented, so …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet the value.\nReturn the local counter value.\n<code>get_metric_with</code> returns the <code>Metric</code> for the given Labels …\n<code>get_metric_with_label_values</code> returns the <code>Metric</code> for the …\nhelp provides some helpful information about this metric.\nhelp provides information about this metric. Mandatory!\nid is a hash of the values of the ConstLabels and fqName. …\nIncrease the local counter by 1.\nIncrement the value by a given amount.\nIncrease the given value to the local counter.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert to a f64.\nReturn a <code>GenericLocalCounterVec</code> for single thread usage.\nReturn a <code>LocalHistogramVec</code> for single thread usage.\nReturn the protocol Metric.\nnamespace, subsystem, and name are components of the …\nnamespace, subsystem, and name are components of the …\nCreate a new atomic value.\nInitializes a new <code>Desc</code>. Errors are recorded in the Desc …\nCreate a new <code>GenericCounterVec</code> based on the provided <code>Opts</code> …\nCreate a new <code>GenericGaugeVec</code> based on the provided <code>Opts</code> …\nCreate a new <code>HistogramVec</code> based on the provided …\n<code>remove</code> removes the metric where the variable labels are …\nRemove a <code>GenericLocalCounter</code> by label values. See more …\n<code>remove_label_values</code> removes the metric where the variable …\nRestart the counter, resetting its value back to 0.\n<code>reset</code> deletes all metrics in this vector.\nSet the value to the provided value.\nnamespace, subsystem, and name are components of the …\nvariable_labels contains names of labels for which the …\nvariable_labels contains names of labels for which the …\n<code>with</code> works as <code>get_metric_with</code>, but panics if an error …\nGet a <code>GenericLocalCounter</code> by label values. See more …\n<code>with_label_values</code> works as <code>get_metric_with_label_values</code>, …\nAuto flush-able local counter\nAuto flush-able local counter\nDelegator for auto flush-able local counter\nFor auto_flush::AFLocalCounter to use to make type …\nDelegator for auto flush-able local counter\nAn unsync <code>Counter</code>.\nAn unsync <code>CounterVec</code>.\nAn unsync <code>Histogram</code>.\nAn unsync <code>HistogramTimer</code>.\nAn unsync <code>HistogramVec</code>.\nThe integer version of <code>LocalCounter</code>. Provides better …\nThe integer version of <code>LocalCounterVec</code>. Provides better …\nAn interface models a Metric only usable in single thread …\nAn interface models a LocalMetric with try to flush …\nthe exact type which implements Atomic\nClear the local metric.\nClear the local metric.\nFlush the local metrics to the global one.\ntrigger flush of LocalKey\nFlush the local metrics to the <code>Histogram</code> metric.\nFlush the local metrics to the <code>Histogram</code> metric.\nFlush the local metrics to the <code>Histogram</code> metric.\nFlush the local metrics to the <code>HistogramVec</code> metric.\nFlush the local metrics to the <code>HistogramVec</code> metric.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn the local counter value.\nGet the final counter for delegate\nGet the final counter for delegate\nGet the root local metric for delegate\nGet the root local metric for delegate\nReturn count of local samples.\nReturn count of local samples.\nReturn accumulated sum of local samples.\nReturn accumulated sum of local samples.\nIncrease the local counter by 1, and try to flush to …\nIncrease the given value to the local counter, and try to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOpen to implementation to fill try_flush parameters\nConstruct a new AFLocalCounter from delegator.\nConstruct a new AFLocalHistogram from delegator\nAdd a single observation to the <code>Histogram</code>.\nAdd a single observation to the <code>Histogram</code>.\nObserve execution time of a closure, in second.\nObserve execution time of a closure, in second.\nObserve and record timer duration (in seconds).\nRemove a <code>LocalHistogram</code> by label values. See more …\nRestart the counter, resetting its value back to 0.\nReturn a <code>LocalHistogramTimer</code> to track a duration.\nObserve and return timer duration (in seconds).\nObserve, record and return timer duration (in seconds).\nIf the LocalMetric is already flushed in last …\nGet a <code>LocalHistogram</code> by label values. See more …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")