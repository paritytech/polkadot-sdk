searchState.loadedDescShard("pallet_nfts", 0, "Nfts Module\nAn attribute was set by pre-approved account.\nCan thaw items, force transfers and burn items from any …\nAllow/disallow transfer approvals.\nInformation about the reserved attribute deposit.\nAttribute namespaces for non-fungible tokens.\nAllow/disallow setting attributes.\nA witness data to cancel attributes approval operation.\nCollection’s configuration.\nInformation about a collection.\nInformation about the collection’s metadata.\nAn attribute was set by collection’s owner.\nSupport for up to 8 different roles for collections.\nA wrapper type that implements <code>Codec</code>.\nSupport for up to 64 user-enabled features on a collection.\nWrapper type for <code>BitFlags&lt;CollectionSetting&gt;</code> that …\nWhen this isn’t set then the deposit is required to hold …\nWitness data for the destroy transactions.\nCan freeze items.\nOnly holders of items in specified collection could mint …\nOnly an <code>Issuer</code> could mint items.\nCan mint items.\nItem’s configuration.\nInformation about the reserved item deposit.\nInformation concerning the ownership of a single unique …\nInformation about the item’s metadata.\nInformation about the reserved item’s metadata deposit.\nAn attribute was set by item’s owner.\nSupport for up to 64 user-enabled features on an item.\nWrapper type for <code>BitFlags&lt;ItemSetting&gt;</code> that implements …\nInformation about the tip.\nThe log target of this pallet.\nHolds the information about minting.\nMint type. Can the NFT be create by anyone, or only the …\nWitness data for items mint transactions.\nAn attribute was set by the pallet.\nA list of possible pallet-level attributes.\nSupport for up to 64 system-enabled features on a …\nWrapper type for <code>BitFlags&lt;PalletFeature&gt;</code> that implements …\nInformation about the pending swap.\nSpecifies whether the tokens will be sent or received.\nHolds the details about the price.\nAnyone could mint items.\nTokens will be received.\nTokens will be sent.\nAllow/disallow atomic items swap.\nEnable/disable trading operations.\nMarks an item as being restricted from transferring.\nThis item is transferable.\nItems in this collection are transferable.\nAttributes of this collection can be modified.\nAttributes of this item can be modified.\nThe supply of this collection can be modified.\nThe metadata of this collection can be modified.\nThe metadata of this item can be modified.\nMarks an item as being used in order to claim another item.\nAn amount of attributes previously created by account.\nAn amount the sender is willing to tip.\nAn amount.\nThe total number of attributes for this collection.\nAdditional item’s key-value attributes.\nKey-value attributes.\nThe collection of the item.\nA collection of the item to be minted.\nCollection’s ID.\nA deadline for the signature.\nA deadline for the signature.\nDefault settings each item will get during the mint.\nA direction (send or receive).\nWhen the mint ends.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn item of which the tip is sent for.\nItem’s ID.\nItem’s ID.\nThe total number of outstanding item configs of this …\nThe total number of items in this collection that have …\nCollection’s max supply.\nAdditional item’s metadata.\nThe price specified in mint settings.\nAn optional price the claimer would need to pay for the …\nDefault settings each item will get during the mint.\nWhether anyone can mint or if minters are restricted to …\nAttributes’ namespace.\nRestrict the claim to a particular account.\nProvide the id of the item in a required collection.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAn optional price per mint.\nA sender of the tip.\nEnable/disable the given code depending on …\nCollection’s settings.\nItem’s settings.\nWhen the mint starts.\nAutogenerated weights for <code>pallet_nfts</code>\nA migration utility to update the storage version from v0 …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe items held by any given account; set out this way so …\nAll approvals of an item got cancelled.\nThe provided Item was already used for claiming.\nThe item ID has already been used for an item.\nAn approval for a <code>delegate</code> account to transfer the <code>item</code> of …\nThe approval had a deadline that expired, so the approval …\nThe maximum approvals an item could have.\nAttributes of a collection.\nAttribute metadata has been cleared for a <code>collection</code> or …\nThe basic amount of funds that must be reserved when …\nThe provided attribute can’t be found.\nNew attribute metadata has been set for a <code>collection</code> or …\nThe witness data given does not match the current state of …\nThe provided bid is too low.\nAn <code>item</code> was destroyed.\nContains a variant per dispatchable extrinsic that this …\nDetails of a collection.\nThe collections owned by any given account; set out this …\nA <code>collection</code> has had its config changed by the <code>Force</code> …\nConfig of a collection.\nThe basic amount of funds that must be reserved for …\nIdentifier for the collection of item.\nCollection ID is already taken.\nSome <code>collection</code> was locked.\nMax supply has been set for a collection.\nMetadata has been cleared for a <code>collection</code>.\nMetadata of a collection.\nNew metadata has been set for a <code>collection</code>.\nMint settings for a collection had changed.\nCan’t delete non-empty collections.\nThe items in existence and their ownership details. Stores …\nConfiguration trait of this pallet.\nStandard collection creation is only allowed if the origin …\nA <code>collection</code> was created.\nThe currency mechanism, used for paying for reserves.\nThe deadline has already expired.\nThe additional funds that must be reserved for the number …\nA <code>collection</code> was destroyed.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nDisables some of pallet’s features.\nA <code>collection</code> was force-created.\nThe origin which may forcibly create or destroy an item or …\nA set of helper functions for benchmarking.\nItem’s config already exists and should be equal to the …\nThe provided data is incorrect.\nThe provided metadata might be too long.\n<code>Instance1</code> to be used for instantiable pallets defined with …\nAn <code>item</code> was issued.\nThe items in existence and their ownership details.\nA new approval to modify item attributes was added.\nA new approval to modify item attributes was removed.\nThe maximum attributes approvals an item could have.\nItem attribute approvals.\nAn item was bought.\nConfig of an item.\nThe basic amount of funds that must be reserved for an …\nThe type used to identify a unique item within a …\nThe item is locked (non-transferable).\nMetadata has been cleared for an item.\nMetadata of an item.\nNew metadata has been set for an item.\nA price of an item.\nThe price for the item was removed.\nThe price was set for the item.\n<code>item</code> metadata or attributes were locked.\nAn <code>item</code> became non-transferable.\nAn <code>item</code> became transferable.\nItems within that collection are non-transferable.\nThe maximum length of an attribute key.\nCollection’s attributes are locked.\nCollection’s metadata is locked.\nItem’s attributes are locked.\nItem’s metadata is locked.\nLocker trait to enable Locking mechanism downstream.\nCan’t set more attributes per one call.\nThe max number of attributes a user could set per call.\nThe max duration in blocks for deadlines.\nThe max supply is locked and can’t be changed.\nAll items have been minted.\nThe provided max supply is less than the number of items a …\nThe max number of tips a user could send.\nThe basic amount of funds that must be reserved when …\nThe given item has no metadata set.\nThe method is disabled by system settings.\nMint has already ended.\nMint has not started yet.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nStores the <code>CollectionId</code> that is going to be used for the …\nEvent gets emitted when the <code>NextCollectionId</code> gets …\nConfig for a collection or an item can’t be found.\nThe signing account has no permission to do the operation.\nThe provided account is not a delegate.\nItem is not for sale.\nOff-Chain public key.\nOff-Chain signature type.\nThe owner changed.\nThe collection, if any, of which an account is willing to …\nOwnership acceptance has changed for an account.\nThe <code>Pallet</code> struct, the main type that implements traits …\nA new attribute in the <code>Pallet</code> namespace was set for the …\nHandles all the pending swaps.\nNew attributes have been set for an <code>item</code> of the <code>collection</code>.\nThe item has reached its approval limit.\nThe deposit for a set of <code>item</code>s within a <code>collection</code> has …\nSome roles were not cleared.\nThe overarching event type.\nThe maximum length of data stored on-chain.\nThe swap was cancelled.\nThe swap has been claimed.\nAn <code>item</code> swap intent was created.\nThe management team changed.\nA tip was sent.\nAn <code>item</code> of a <code>collection</code> has been approved by the <code>owner</code> for …\nAn <code>item</code> was transferred.\nThe named owner has not signed ownership acceptance of the …\nNo approval exists that would allow the transfer.\nThe given item ID is unknown.\nThe given item ID is unknown.\nSwap doesn’t exist.\nThe maximum length of an attribute value.\nWeight information for extrinsics in this pallet.\nThe witness data should be provided.\nThe delegate turned out to be different to what was …\nThe duration provided should be less than or equal to …\nThe provided namespace isn’t supported in this call.\nThe extrinsic was sent by the wrong origin.\nThe owner turned out to be different to what was expected.\nThe provided setting can’t be set.\nThe provided signature is incorrect.\nApprove item’s attributes to be changed by a delegated …\nApprove item’s attributes to be changed by a delegated …\nApprove an item to be transferred by a delegated …\nApprove an item to be transferred by a delegated …\nReturns the attribute value of <code>item</code> of <code>collection</code> …\nDestroy a single item.\nDestroy a single item.\nAllows to buy an item if it’s up for sale.\nAllows to buy an item if it’s up for sale.\nReturns <code>true</code> if the <code>item</code> of <code>collection</code> may be transferred.\nCancel one of the transfer approvals for a specific item.\nCancel one of the transfer approvals for a specific item.\nCancel the previously provided approval to change item’s …\nCancel the previously provided approval to change item’s …\nCancel an atomic swap.\nCancel an atomic swap.\nClaim an atomic swap. This method executes a pending swap, …\nClaim an atomic swap. This method executes a pending swap, …\nCancel all the approvals of a specific item.\nCancel all the approvals of a specific item.\nClear an attribute for a collection or item.\nClear an attribute for a collection or item.\nClear the metadata for a collection.\nClear the metadata for a collection.\nClear the metadata for an item.\nClear the metadata for an item.\nReturns the attribute value of <code>item</code> of <code>collection</code> …\nGet the owner of the collection, if the collection exists.\nReturns an iterator of the collections in existence.\nA helper method to construct an attribute’s key.\nA helper method to construct an attribute’s value.\nA helper method to construct metadata.\nIssue a new collection of non-fungible items from a public …\nIssue a new collection of non-fungible items from a public …\nCreate a <code>collection</code> of nonfungible items to be owned by <code>who</code>…\nCreate a collection of nonfungible items with <code>collection</code> …\nRegister a new atomic swap, declaring an intention to send …\nRegister a new atomic swap, declaring an intention to send …\nReturns the custom attribute value of <code>item</code> of <code>collection</code> …\nDestroy a collection of fungible items.\nDestroy a collection of fungible items.\nAuto-generated docs-only module listing all defined …\nBurns the specified item with the given <code>collection</code>, <code>item</code>, …\nCreate a new collection with the given <code>collection</code>, <code>owner</code>, …\nDestroy the specified collection with the given <code>collection</code>…\nMint a new unique item with the given <code>collection</code>, <code>item</code>, …\nTransfer an NFT to the specified destination account.\nChange the config of a collection.\nChange the config of a collection.\nChange the Owner of a collection.\nChange the Owner of a collection.\nIssue a new collection of non-fungible items from a …\nIssue a new collection of non-fungible items from a …\nMint an item of a particular collection from a privileged …\nMint an item of a particular collection from a privileged …\nForce-set an attribute for a collection or item.\nForce-set an attribute for a collection or item.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGroups provided roles by account, given one account could …\nA helper method to check whether a system attribute is set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator of the items of a <code>collection</code> in …\nDisallows specified settings for the whole collection.\nDisallows specified settings for the whole collection.\nDisallows changing the metadata or attributes of the item.\nDisallows changing the metadata or attributes of the item.\nDisallow further unprivileged transfer of an item.\nDisallow further unprivileged transfer of an item.\nMint an item of a particular collection.\nMint an item of a particular collection.\nMint an item by providing the pre-signed approval.\nMint an item by providing the pre-signed approval.\nCreate a call with the variant <code>approve_item_attributes</code>.\nCreate a call with the variant <code>approve_transfer</code>.\nCreate a call with the variant <code>burn</code>.\nCreate a call with the variant <code>buy_item</code>.\nCreate a call with the variant <code>cancel_approval</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>cancel_swap</code>.\nCreate a call with the variant <code>claim_swap</code>.\nCreate a call with the variant <code>clear_all_transfer_approvals</code>…\nCreate a call with the variant <code>clear_attribute</code>.\nCreate a call with the variant <code>clear_collection_metadata</code>.\nCreate a call with the variant <code>clear_metadata</code>.\nCreate a call with the variant <code>create</code>.\nCreate a call with the variant <code>create_swap</code>.\nCreate a call with the variant <code>destroy</code>.\nCreate a call with the variant <code>force_collection_config</code>.\nCreate a call with the variant <code>force_collection_owner</code>.\nCreate a call with the variant <code>force_create</code>.\nCreate a call with the variant <code>force_mint</code>.\nCreate a call with the variant <code>force_set_attribute</code>.\nCreate a call with the variant <code>lock_collection</code>.\nCreate a call with the variant <code>lock_item_properties</code>.\nCreate a call with the variant <code>lock_item_transfer</code>.\nCreate a call with the variant <code>mint</code>.\nCreate a call with the variant <code>mint_pre_signed</code>.\nCreate a call with the variant <code>pay_tips</code>.\nCreate a call with the variant <code>redeposit</code>.\nCreate a call with the variant <code>set_accept_ownership</code>.\nCreate a call with the variant <code>set_attribute</code>.\nCreate a call with the variant <code>set_attributes_pre_signed</code>.\nCreate a call with the variant <code>set_collection_max_supply</code>.\nCreate a call with the variant <code>set_collection_metadata</code>.\nCreate a call with the variant <code>set_metadata</code>.\nCreate a call with the variant <code>set_price</code>.\nCreate a call with the variant <code>set_team</code>.\nCreate a call with the variant <code>transfer</code>.\nCreate a call with the variant <code>transfer_ownership</code>.\nCreate a call with the variant <code>unlock_item_transfer</code>.\nCreate a call with the variant <code>update_mint_settings</code>.\nReturns an iterator of the items of all collections owned …\nReturns an iterator of the items of <code>collection</code> owned by <code>who</code>…\nGet the owner of the item, if the item exists.\nAllows to pay the tips.\nAllows to pay the tips.\nRe-evaluate the deposits on some items.\nRe-evaluate the deposits on some items.\nSet (or reset) the acceptance of ownership for a …\nSet (or reset) the acceptance of ownership for a …\nSet an attribute for a collection or item.\nSet an attribute for a collection or item.\nSet attributes for an item by providing the pre-signed …\nSet attributes for an item by providing the pre-signed …\nSet the maximum number of items a collection could have.\nSet the maximum number of items a collection could have.\nSet the metadata for a collection.\nSet the metadata for a collection.\nSet the metadata for an item.\nSet the metadata for an item.\nSet (or reset) the price for an item.\nSet (or reset) the price for an item.\nChange the Issuer, Admin and Freezer of a collection.\nChange the Issuer, Admin and Freezer of a collection.\nAuto-generated docs-only module listing all (public and …\nReturns the system attribute value of <code>item</code> of <code>collection</code> …\nMove an item from the sender account to another.\nMove an item from the sender account to another.\nChange the Owner of a collection.\nChange the Owner of a collection.\nRe-allow unprivileged transfer of an item.\nRe-allow unprivileged transfer of an item.\nUpdate mint settings.\nUpdate mint settings.\nValidates the signature of the given data with the …\nApprove item’s attributes to be changed by a delegated …\nApprove an item to be transferred by a delegated …\nDestroy a single item.\nAllows to buy an item if it’s up for sale.\nCancel one of the transfer approvals for a specific item.\nCancel the previously provided approval to change item’s …\nCancel an atomic swap.\nClaim an atomic swap. This method executes a pending swap, …\nCancel all the approvals of a specific item.\nClear an attribute for a collection or item.\nClear the metadata for a collection.\nClear the metadata for an item.\nIssue a new collection of non-fungible items from a public …\nRegister a new atomic swap, declaring an intention to send …\nDestroy a collection of fungible items.\nChange the config of a collection.\nChange the Owner of a collection.\nIssue a new collection of non-fungible items from a …\nMint an item of a particular collection from a privileged …\nForce-set an attribute for a collection or item.\nDisallows specified settings for the whole collection.\nDisallows changing the metadata or attributes of the item.\nDisallow further unprivileged transfer of an item.\nMint an item of a particular collection.\nMint an item by providing the pre-signed approval.\nAllows to pay the tips.\nRe-evaluate the deposits on some items.\nSet (or reset) the acceptance of ownership for a …\nSet an attribute for a collection or item.\nSet attributes for an item by providing the pre-signed …\nSet the maximum number of items a collection could have.\nSet the metadata for a collection.\nSet the metadata for an item.\nSet (or reset) the price for an item.\nChange the Issuer, Admin and Freezer of a collection.\nMove an item from the sender account to another.\nChange the Owner of a collection.\nRe-allow unprivileged transfer of an item.\nUpdate mint settings.\nThe items held by any given account; set out this way so …\nAttributes of a collection.\nDetails of a collection.\nThe collections owned by any given account; set out this …\nConfig of a collection.\nMetadata of a collection.\nThe items in existence and their ownership details. Stores …\nThe items in existence and their ownership details.\nItem attribute approvals.\nConfig of an item.\nMetadata of an item.\nA price of an item.\nStores the <code>CollectionId</code> that is going to be used for the …\nThe collection, if any, of which an account is willing to …\nHandles all the pending swaps.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_nfts</code> using the Substrate node and …\nWeight functions needed for <code>pallet_nfts</code>.\nStorage: <code>Nfts::Item</code> (r:1 w:0) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::Item</code> (r:1 w:1) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::Attribute</code> (r:1 w:0) Proof: <code>Nfts::Attribute</code> (…\nStorage: <code>Nfts::Item</code> (r:1 w:1) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::Item</code> (r:1 w:1) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::Item</code> (r:1 w:0) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::PendingSwapOf</code> (r:1 w:1) Proof: …\nStorage: <code>Nfts::Item</code> (r:2 w:2) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::Item</code> (r:1 w:1) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::Attribute</code> (r:1 w:1) Proof: <code>Nfts::Attribute</code> (…\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::NextCollectionId</code> (r:1 w:1) Proof: …\nStorage: <code>Nfts::Item</code> (r:2 w:0) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::Collection</code> (r:1 w:1) Proof: <code>Nfts::Collection</code>…\nStorage: <code>Nfts::Collection</code> (r:1 w:0) Proof: <code>Nfts::Collection</code>…\nStorage: <code>Nfts::Collection</code> (r:1 w:1) Proof: <code>Nfts::Collection</code>…\nStorage: <code>Nfts::NextCollectionId</code> (r:1 w:1) Proof: …\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::Collection</code> (r:1 w:1) Proof: <code>Nfts::Collection</code>…\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Nfts::Collection</code> (r:1 w:0) Proof: <code>Nfts::Collection</code>…\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::CollectionConfigOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::CollectionRoleOf</code> (r:2 w:0) Proof: …\nThe range of component <code>n</code> is <code>[0, 10]</code>.\nStorage: <code>Nfts::Collection</code> (r:1 w:0) Proof: <code>Nfts::Collection</code>…\nStorage: <code>Nfts::OwnershipAcceptance</code> (r:1 w:1) Proof: …\nStorage: <code>Nfts::Collection</code> (r:1 w:1) Proof: <code>Nfts::Collection</code>…\nStorage: <code>Nfts::Item</code> (r:1 w:0) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::CollectionConfigOf</code> (r:1 w:1) Proof: …\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::Item</code> (r:1 w:0) Proof: <code>Nfts::Item</code> (<code>max_values</code>…\nStorage: <code>Nfts::Collection</code> (r:1 w:1) Proof: <code>Nfts::Collection</code>…\nStorage: <code>Nfts::Collection</code> (r:1 w:0) Proof: <code>Nfts::Collection</code>…\nStorage: <code>Nfts::OwnershipAcceptance</code> (r:1 w:1) Proof: …\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …\nStorage: <code>Nfts::CollectionRoleOf</code> (r:1 w:0) Proof: …")