searchState.loadedDescShard("pallet_nomination_pools", 0, "Nomination Pools for Staking Delegation\nThe balance type used by the currency system.\nThe pool is blocked. No one else can join.\nHow to increase the bond of a member.\nThe type of bonding that can happen to a pool.\nA wrapper for bonded pools, with utility functions.\nPool permissions and state\nThe permission a pool member can set for other accounts to …\nPool commission.\nPool commission change rate preferences.\nPossible operations on the configuration values of this …\nSomeone is bonding into the pool upon creation.\nThe pool is in the process of being destroyed.\nSomeone is adding more funds later to this pool.\nTake from the free balance.\nThe log target of this pallet.\nDon’t change.\nThe pool is open to be joined, and is working normally.\nOnly the pool member themselves can claim their rewards.\nAnyone can withdraw and compound rewards on a pool member…\nAnyone can compound rewards on a pool member’s behalf.\nAnyone can withdraw rewards on a pool member’s behalf.\nType used for unique identifier of each pool.\nA member in a pool.\nPool administration roles.\nA pool’s possible states.\nRemove from storage.\nA reward pool.\nTake the entire amount from the accumulated rewards.\nSet the given value.\nThe maximum amount of eras an unbonding pool can exist …\nAn unbonding pool. This is always mapped with an era.\nCan change the pools state and kick members if the pool is …\nOptional configuration around how often commission can be …\nThe commission rate of the pool.\nOptional commission rate of the pool along with the …\nCreates the pool and is the initial member. They can only …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet <code>Self</code> from storage. Returns <code>None</code> if no entry for …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe reward counter at the time of this member’s last …\nOptional maximum commission that can be set by the pool …\nThe maximum amount the commission can be updated by per …\nCount of members that belong to the pool.\nHow often an update can take place.\nCan select which validators the pool nominates.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe quantity of points this member has in the bonded pool …\nTotal points of all the members in the pool who are …\nThe identifier of the pool to which <code>who</code> belongs.\nSee <code>PoolRoles</code>.\nCan change the nominator, bouncer, or itself and can …\nThe current state of the pool.\nThe block from where throttling should be checked from. …\nTotal balance of the member, both active and unbonding. …\nThe eras in which this member is unbonding, mapped from …\nAutogenerated weights for <code>pallet_nomination_pools</code>\nMember funds are delegated to pool account and staked.\nA staking strategy implementation that supports delegation …\nA type that only belongs in context of a pool member.\nA type that only belongs in context of a pool.\nAn adapter trait that can support multiple staking …\nTypes of stake strategies.\nMember funds are transferred to pool account and staked.\nA staking strategy implementation that supports transfer …\nSee <code>StakingInterface::active_stake</code>.\nSee <code>StakingInterface::bonding_duration</code>.\nSee <code>StakingInterface::chill</code>.\nSee <code>StakingInterface::current_era</code>.\nDissolve the pool account.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAmount of tokens delegated by the member.\nSlash the member account with <code>amount</code> against pending …\nWithdraw funds from pool account to member account.\nMigrate member balance from pool account to member account.\nMigrate pool account from being a direct nominator to a …\nSee <code>StakingInterface::minimum_nominator_bond</code>.\nSee <code>StakingInterface::nominate</code>.\nList of validators nominated by the pool account.\nCheck if there is any pending slash for the pool.\nPledge <code>amount</code> towards <code>pool_account</code> and update the pool …\nWhich strategy the pool account is using.\nRemove the pool account as agent.\nThe type of staking strategy of the current adapter.\nTotal balance of the pool including amount that is …\nSee <code>StakingInterface::total_stake</code>.\nBalance that can be transferred from pool account to …\nSee <code>StakingInterface::unbond</code>.\nSee <code>StakingInterface::withdraw_unbonded</code>.\nExports for versioned migration <code>type</code>s for this pallet.\nMigrate existing pools from …\nChecks and updates <code>TotalValueLocked</code> if out of sync.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrivial migration which makes the roles of each pool …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMigrate the pool reward scheme to the new version, as per …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis migration removes stale bonded-pool metadata, if any.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nWarning\nMigrates from <code>v3</code> directly to <code>v5</code> to avoid the broken <code>v4</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis migration adds <code>total_commission_pending</code> and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nWrapper over <code>MigrateToV6</code> with convenience version checks.\nMigration V6 to V7 wrapped in a …\nv8: Adds commission claim permissions to <code>BondedPools</code>.\nAll pallets included in the runtime as a nested tuple of …\nAll pallets included in the runtime as a nested tuple of …\nProvides an implementation of <code>PalletInfo</code> to provide …\nThe aggregated runtime call type.\nA reason for placing a freeze on funds.\nA reason for placing a hold on funds.\nAn identifier for each lock placed on funds.\nThe runtime origin type representing the origin of a call.\nA reason for slashing funds.\nAn aggregation of all <code>Task</code> enums across all pallets …\nAll events of the <code>Balances</code> pallet.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert to runtime origin with caller being system signed …\nConvert to runtime origin, using as filter: …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nOptionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSame as <code>fully_unbond</code>, in permissioned setting.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the key for this parameter type.\nReturns the key for this parameter type.\nReturns the key for this parameter type.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nCreate with system none origin and …\nAll events of this pallet.\nCreate with system root origin and …\nHelper to run a specified amount of blocks.\nHelper to run to a specific block.\nSet the internal value.\nSet the internal value.\nSet the internal value.\nSet the value of this parameter type in the storage.\nSet the value of this parameter type in the storage.\nSet the internal value.\nSet the internal value.\nSet the value of this parameter type in the storage.\nSet the internal value.\nSet the internal value.\nSet the internal value.\nSet the internal value.\nCreate with system signed origin and …\nMimics a slash towards a pool specified by <code>pool_id</code>. This …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nAn account is already delegating in another pool. An …\nThe origin that can manage pool configurations.\nThe pool or member delegation has already migrated to …\nInfallible method for converting <code>Currency::Balance</code> to <code>U256</code>.\nBonding extra is restricted to the exact pending reward …\nA member has became bonded in a pool.\nStorage for bonded pools.\nThe bonded account should only be killed by the staking …\nContains a variant per dispatchable extrinsic that this …\nThe pools state cannot be changed.\nNone of the funds can be withdrawn yet because the bonding …\nMap from a pool member account to their opted claim …\nThe submitted changes to commission change rate are not …\nNot enough blocks have surpassed since the last commission …\nThe supplied commission exceeds global maximum commission.\nThe supplied commission exceeds the max allowed commission.\nConfiguration trait of this pallet.\nA pool has been created.\nThe currency type used for nomination pool.\nSome error occurred that should never happen. This should …\nThe delegation feature is unsupported.\nA pool has been destroyed.\nThe caller does not have adequate permissions.\nThe <code>Error</code> enum of this pallet.\nEvents of this pallet.\nA reason for freezing funds.\nThe member is fully unbonded (and thus cannot access the …\nCan be used to configure the genesis state of this pallet.\nThe maximum commission that can be charged by a pool. Used …\nPool id provided is not correct/usable.\nEver increasing number of all pools created so far.\nThe pool’s max commission cannot be set higher than the …\nThe maximum length, in bytes, that a pools metadata maybe.\nThe maximum pool points-to-balance ratio that an <code>open</code> pool …\nMaximum number of members that can exist in the system. If …\nToo many members in the pool or system.\nMaximum number of members that may belong to pool. If <code>None</code>…\nMaximum number of nomination pools that can exist. If <code>None</code>…\nThe system is maxed out on pools.\nThe maximum number of simultaneous unbonding chunks that …\nThe member cannot unbond further chunks due to reaching …\nA member has been removed from a pool.\nMetadata for the pool.\nMetadata exceeds <code>Config::MaxMetadataLen</code>\nTopped up deficit in frozen ED of the reward pool.\nClaimed excess frozen ED of af the reward pool.\nMinimum bond required to create a pool.\nMinimum amount to bond to join a pool.\nThe amount does not meet the minimum bond to either join …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nNo commission current has been set.\nThere is no pending commission to claim.\nA pool must be in <code>PoolState::Destroying</code> in order for the …\nThere isn’t enough space in the unbond pool.\nEither a) the caller cannot make a valid kick or b) the …\nThe pool or member delegation has not migrated yet to …\nThe caller does not have nominating permissions for the …\nThe pool is not open to join\nThis call is not allowed in the current state of the …\nNo imbalance in the ED deposit for the pool.\nNo slash pending that can be applied to the member.\nThe transaction could not be executed due to overflow risk …\nA payout has been made to a member.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe nomination pool’s pallet id.\nPartial unbonding now allowed permissionlessly.\nA pool’s commission <code>change_rate</code> has been changed.\nPool commission claim permission has been updated.\nPool commission has been claimed.\nA pool’s commission setting has been changed.\nPool id currently in use.\nA pool’s maximum commission setting has been changed.\nAn account is not a member.\nActive members.\nPool reward account is restricted from going below …\nA (bonded) pool id does not exist.\nA (bonded) pool id does not exist.\nThe active balance of pool <code>pool_id</code> has been slashed to …\nThe amount of eras a <code>SubPools::with_era</code> pool can exist …\nA reverse lookup from the pool’s account id to its id.\nThe type that is used for reward counter.\nA reward pool does not exist. In all cases this is a …\nA reward pool does not exist. In all cases this is a …\nReward pools. This is where there rewards for each pool …\nThe roles of a pool have been updated to the given new …\nThe overarching event type.\nThe overarching freeze reason.\nUnable to slash to the member of the pool.\nThe interface for nominating.\nThe state of a pool has changed\nA sub pool does not exist.\nA sub pool does not exist.\nGroups of unbonding pools. Each group of unbonding pools …\nThe sum of funds across all pools.\nInfallible method for converting <code>U256</code> to <code>Currency::Balance</code>.\nA member has unbonded from their pool.\nThe unbond pool at <code>era</code> of pool <code>pool_id</code> has been slashed to …\nWeight information for extrinsics in this pallet.\nA member has withdrawn from their pool.\nTop up the deficit or withdraw the excess ED from the pool.\nTop up the deficit or withdraw the excess ED from the pool.\nReturns the equivalent <code>new_funds</code> balance to point …\nChecks whether member delegation needs to be migrated to …\nReturns the unapplied slash of a member.\nContribution of the member in the pool.\nReturns the pending rewards for the specified <code>who</code> account.\nReturns the points to balance conversion for a specified …\nTotal balance contributed to the pool.\nChecks whether pool needs to be migrated to …\nReturns the unapplied slash of the pool.\nApply a pending slash on a member.\nApply a pending slash on a member.\nBond <code>extra</code> more funds from <code>origin</code> into the pool to which …\nBond <code>extra</code> more funds from <code>origin</code> into the pool to which …\n<code>origin</code> bonds funds from <code>extra</code> for some pool member <code>member</code> …\n<code>origin</code> bonds funds from <code>extra</code> for some pool member <code>member</code> …\nCheck if any pool have an incorrect amount of ED frozen.\nChill on behalf of the pool.\nChill on behalf of the pool.\nClaim pending commission.\nClaim pending commission.\nA bonded member can use this to claim their payout based …\nA bonded member can use this to claim their payout based …\n<code>origin</code> can claim payouts on some pool member <code>other</code>’s …\n<code>origin</code> can claim payouts on some pool member <code>other</code>’s …\nCreate a new delegation pool.\nCreate a new delegation pool.\nCreate a new delegation pool with a previously used pool id\nCreate a new delegation pool with a previously used pool id\nThe amount of bond that MUST REMAIN IN BONDED in ALL POOLS.\nAuto-generated docs-only module listing all defined …\nRemove everything related to the given bonded pool.\nEnsure the correctness of the state of this pallet.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nFully unbond the shares of <code>member</code>, when executed from …\nCreate the main, bonded account of a pool with the given …\nCreate the reward account of a pool with the given id.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStake funds with a pool. The amount to bond is transferred …\nStake funds with a pool. The amount to bond is transferred …\nMigrates delegated funds from the pool account to the …\nMigrates delegated funds from the pool account to the …\nMigrate pool from <code>adapter::StakeStrategyType::Transfer</code> to …\nMigrate pool from <code>adapter::StakeStrategyType::Transfer</code> to …\nCreate a call with the variant <code>adjust_pool_deposit</code>.\nCreate a call with the variant <code>apply_slash</code>.\nCreate a call with the variant <code>bond_extra</code>.\nCreate a call with the variant <code>bond_extra_other</code>.\nCreate a call with the variant <code>chill</code>.\nCreate a call with the variant <code>claim_commission</code>.\nCreate a call with the variant <code>claim_payout</code>.\nCreate a call with the variant <code>claim_payout_other</code>.\nCreate a call with the variant <code>create</code>.\nCreate a call with the variant <code>create_with_pool_id</code>.\nCreate a call with the variant <code>join</code>.\nCreate a call with the variant <code>migrate_delegation</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>nominate</code>.\nCreate a call with the variant <code>pool_withdraw_unbonded</code>.\nCreate a call with the variant <code>set_claim_permission</code>.\nCreate a call with the variant <code>set_commission</code>.\nCreate a call with the variant <code>set_commission_change_rate</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>set_commission_max</code>.\nCreate a call with the variant <code>set_configs</code>.\nCreate a call with the variant <code>set_metadata</code>.\nCreate a call with the variant <code>set_state</code>.\nCreate a call with the variant <code>unbond</code>.\nCreate a call with the variant <code>update_roles</code>.\nCreate a call with the variant <code>withdraw_unbonded</code>.\nNominate on behalf of the pool.\nNominate on behalf of the pool.\nReduces the balances of the <code>SubPools</code>, that belong to the …\nReduces the overall <code>TotalValueLocked</code> if a withdrawal …\nCall <code>withdraw_unbonded</code> for the pools account. This call …\nCall <code>withdraw_unbonded</code> for the pools account. This call …\nAllows a pool member to set a claim permission to allow or …\nAllows a pool member to set a claim permission to allow or …\nSet the commission of a pool. Both a commission percentage …\nSet the commission of a pool. Both a commission percentage …\nSet the commission change rate for a pool.\nSet the commission change rate for a pool.\nSet or remove a pool’s commission claim permission.\nSet or remove a pool’s commission claim permission.\nSet the maximum commission of a pool.\nSet the maximum commission of a pool.\nUpdate configurations for the nomination pools. The origin …\nUpdate configurations for the nomination pools. The origin …\nSet a new metadata for the pool.\nSet a new metadata for the pool.\nSet a new state for the pool.\nSet a new state for the pool.\nAuto-generated docs-only module listing all (public and …\nUnbond up to <code>unbonding_points</code> of the <code>member_account</code>’s …\nUnbond up to <code>unbonding_points</code> of the <code>member_account</code>’s …\nRemoves the ED freeze on the reward account of <code>pool_id</code>.\nUpdate the roles of the pool.\nUpdate the roles of the pool.\nWithdraw unbonded funds from <code>member_account</code>. If no bonded …\nWithdraw unbonded funds from <code>member_account</code>. If no bonded …\nTop up the deficit or withdraw the excess ED from the pool.\nApply a pending slash on a member.\nBond <code>extra</code> more funds from <code>origin</code> into the pool to which …\n<code>origin</code> bonds funds from <code>extra</code> for some pool member <code>member</code> …\nChill on behalf of the pool.\nClaim pending commission.\nA bonded member can use this to claim their payout based …\n<code>origin</code> can claim payouts on some pool member <code>other</code>’s …\nCreate a new delegation pool.\nCreate a new delegation pool with a previously used pool id\nStake funds with a pool. The amount to bond is transferred …\nMigrates delegated funds from the pool account to the …\nMigrate pool from <code>adapter::StakeStrategyType::Transfer</code> to …\nNominate on behalf of the pool.\nCall <code>withdraw_unbonded</code> for the pools account. This call …\nAllows a pool member to set a claim permission to allow or …\nSet the commission of a pool. Both a commission percentage …\nSet the commission change rate for a pool.\nSet or remove a pool’s commission claim permission.\nSet the maximum commission of a pool.\nUpdate configurations for the nomination pools. The origin …\nSet a new metadata for the pool.\nSet a new state for the pool.\nUnbond up to <code>unbonding_points</code> of the <code>member_account</code>’s …\nUpdate the roles of the pool.\nWithdraw unbonded funds from <code>member_account</code>. If no bonded …\nStorage for bonded pools.\nMap from a pool member account to their opted claim …\nThe maximum commission that can be charged by a pool. Used …\nEver increasing number of all pools created so far.\nMaximum number of members that can exist in the system. If …\nMaximum number of members that may belong to pool. If <code>None</code>…\nMaximum number of nomination pools that can exist. If <code>None</code>…\nMetadata for the pool.\nMinimum bond required to create a pool.\nMinimum amount to bond to join a pool.\nActive members.\nA reverse lookup from the pool’s account id to its id.\nReward pools. This is where there rewards for each pool …\nGroups of unbonding pools. Each group of unbonding pools …\nThe sum of funds across all pools.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_nomination_pools</code> using the Substrate …\nWeight functions needed for <code>pallet_nomination_pools</code>.\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::PoolMembers</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::PoolMembers</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::ClaimPermissions</code> (r:1 w:0) …\nStorage: <code>NominationPools::PoolMembers</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::ClaimPermissions</code> (r:1 w:0) …\nStorage: <code>NominationPools::LastPoolId</code> (r:1 w:1) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>NominationPools::MinJoinBond</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::PoolMembers</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::PoolMembers</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::MinJoinBond</code> (r:0 w:1) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:0) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::PoolMembers</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::BondedPools</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::PoolMembers</code> (r:1 w:1) Proof: …\nStorage: <code>NominationPools::PoolMembers</code> (r:1 w:1) Proof: …")