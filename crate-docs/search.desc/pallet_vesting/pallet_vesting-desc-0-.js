searchState.loadedDescShard("pallet_vesting", 0, "Vesting Pallet\nStruct to encode the vesting schedule of an individual …\nBlock number at which the schedule ends (as type <code>Balance</code>).\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nValidate parameters for <code>VestingInfo</code>. Note that this does …\nLocked amount at schedule creation.\nAmount locked at block <code>n</code>.\nStorage migrations for the vesting pallet.\nInstantiate a new <code>VestingInfo</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAmount that gets unlocked every block after <code>starting_block</code>…\nStarting block for unlocking(vesting).\nAutogenerated weights for <code>pallet_vesting</code>\nMigrate from single schedule to multi schedule storage. …\nAmount being transferred is too low to create a vesting …\nThe account already has <code>MaxVestingSchedules</code> count of …\nProvider for the block number.\nConvert the block number into a balance.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe currency trait.\nError for the vesting pallet.\nThe <code>Event</code> enum of this pallet\nCan be used to configure the genesis state of this pallet.\nFailed to create a new schedule because some parameter was …\nMaximum number of vesting schedules an account may have at …\nThe minimum amount transferred to call <code>vested_transfer</code>.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe account given is not vesting.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe overarching event type.\nAn index was out of bounds of the vesting schedules.\nReasons that determine under which conditions the balance …\nInformation regarding the vesting of a given account.\nAn [account] has become fully vested.\nThe amount vested has been updated. This could indicate a …\nWeight information for extrinsics in this pallet.\nAdds a vesting schedule to a given account.\nAuto-generated docs-only module listing all defined …\nForce remove a vesting schedule\nForce remove a vesting schedule\nForce a vested transfer.\nForce a vested transfer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMerge two vesting schedules together, creating a new …\nMerge two vesting schedules together, creating a new …\nCreate a call with the variant …\nCreate a call with the variant <code>force_vested_transfer</code>.\nCreate a call with the variant <code>merge_schedules</code>.\nCreate a call with the variant <code>vest</code>.\nCreate a call with the variant <code>vest_other</code>.\nCreate a call with the variant <code>vested_transfer</code>.\nRemove a vesting schedule for a given account.\nAuto-generated docs-only module listing all (public and …\nUnlock any vested funds of the sender account.\nUnlock any vested funds of the sender account.\nUnlock any vested funds of a <code>target</code> account.\nUnlock any vested funds of a <code>target</code> account.\nCreate a vested transfer.\nCreate a vested transfer.\nGet the amount that is currently being vested and cannot …\nForce remove a vesting schedule\nForce a vested transfer.\nMerge two vesting schedules together, creating a new …\nUnlock any vested funds of the sender account.\nUnlock any vested funds of a <code>target</code> account.\nCreate a vested transfer.\nStorage version of the pallet.\nInformation regarding the vesting of a given account.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_vesting</code> using the Substrate node and …\nWeight functions needed for <code>pallet_vesting</code>.\nStorage: <code>Vesting::Vesting</code> (r:1 w:1) Proof: <code>Vesting::Vesting</code>…\nStorage: <code>Vesting::Vesting</code> (r:1 w:1) Proof: <code>Vesting::Vesting</code>…\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Vesting::Vesting</code> (r:1 w:1) Proof: <code>Vesting::Vesting</code>…\nStorage: <code>Vesting::Vesting</code> (r:1 w:1) Proof: <code>Vesting::Vesting</code>…\nStorage: <code>Vesting::Vesting</code> (r:1 w:1) Proof: <code>Vesting::Vesting</code>…\nStorage: <code>Vesting::Vesting</code> (r:1 w:1) Proof: <code>Vesting::Vesting</code>…\nStorage: <code>Vesting::Vesting</code> (r:1 w:1) Proof: <code>Vesting::Vesting</code>…\nStorage: <code>Vesting::Vesting</code> (r:1 w:1) Proof: <code>Vesting::Vesting</code>…\nStorage: <code>Vesting::Vesting</code> (r:1 w:1) Proof: <code>Vesting::Vesting</code>…")