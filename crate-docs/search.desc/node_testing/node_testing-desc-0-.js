searchState.loadedDescShard("node_testing", 0, "A set of testing utilities for Substrate Node.\nBenchmarking module.\nUtilities to build a <code>TestClient</code> for <code>kitchensink-runtime</code>.\nGenesis Configuration.\nTest accounts.\nBenchmarking/test context holding instantiated client and …\nPre-initialized benchmarking database.\nKeyring full of accounts for benching.\nContent of the generated block.\nIterator for block content.\nType of block for generation\nType of backend database.\ned25519 signing keys\nKey types to be used in benching keyring\nBunch of “no-op” calls.\nParity DB backend.\nBunch of random transfers.\nBunch of random transfers that drain all of the source …\nRocksDb backend.\nsr25519 signing keys\nBenchmarking task executor.\nGenerate genesis with accounts from this keyring endowed …\nGet account id at position <code>index</code>\nNode backend.\nIterate over some block content with transaction signed …\nGet client for this database operations.\nNode client.\nGenerated account id-s from keyring keypairs.\nClone this database and create context for …\nDrop system cache.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate new block using this database.\nGenerate list of required inherents.\nImport some block.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNew immutable benchmarking database.\nNew keyring.\nDatabase path.\nDatabase path for the current context.\nSign transaction with keypair from this keyring.\nSpawn handle.\nCreate block content description with specified number of …\nNew immutable benchmarking database.\nRe-export test-client utilities. Set of test accounts.\nDefault backend type.\nRe-export test-client utilities. Known bad block hashes.\nRe-export test-client utilities. Block data origin.\nRe-export test-client utilities. An extension trait for …\nRe-export test-client utilities. Block pruning settings.\nTest client type.\nRe-export test-client utilities. Extension trait for a …\nRe-export test-client utilities. Extension trait for a …\nUses the Wasmtime compiled runtime.\nBlock that was received from the network and validated in …\nRe-export test-client utilities. Set of test accounts.\nRe-export test-client utilities. A producer of execution …\nBlock was imported from a file.\nRe-export test-client utilities. Expected hashes of blocks …\nGenesis block built into the client.\nRe-export test-client utilities. A genesis storage …\nGenesis configuration parameters for <code>TestClient</code>.\nKeep full block history, of every block that was ever …\nKeep full finalized block history.\nRe-export test-client utilities. Something that generates, …\nRe-export test-client utilities. A shared pointer to a …\nBlock was broadcasted on the network.\nBlock is part of the initial sync with the network.\nNo value.\nNo value.\nBlock that was collated by this node.\nRe-export test-client utilities. A running RPC service …\nRe-export test-client utilities. An extension trait for …\nRe-export test-client utilities. An error for when the RPC …\nRe-export test-client utilities. The output of an RPC …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nKeep N recent finalized blocks.\nRe-export test-client utilities. Set of test accounts.\nRe-export test-client utilities. Struct containing data …\nRe-export test-client utilities. Child trie storage data.\nRe-export test-client utilities. A builder for creating a …\nA <code>test-runtime</code> extensions to <code>TestClientBuilder</code>.\nRe-export test-client utilities. Specification of …\nRe-export test-client utilities. An abstraction over Wasm …\nExtend child storage\nIgnore missing function imports if set true.\nGive access to the underlying backend of these clients\nGenerate a new bandersnatch key pair for the given key …\nReturns all the bandersnatch public keys for the given key …\nGenerate a bandersnatch ring-VRF signature for the given …\nGenerate an bandersnatch signature for a given message.\nGenerate a bandersnatch VRF pre-output for a given input …\nGenerate a bandersnatch VRF signature for the given data.\nGenerate a new bls381 key pair for the given key type and …\nReturns all bls12-381 public keys for the given key type.\nGenerate a bls381 signature for a given message.\nBuild the test client.\nBuild the test client with the given native executor.\nBuild the test client with the given native executor.\nInstantiate a builder for creating an instance of <code>Self</code>.\nAssociated child info for a child trie.\nChildren trie storage data. Key does not include prefix, …\nRe-export test-client utilities. Substrate Client and …\nRe-export test-client utilities. Client extension for …\nA Number that indicates the error type that occurred.\nA Primitive or Structured value that contains additional …\nChild data for storage.\nGenerate a new (ecdsa,bls381) key pair for the given key …\nReturns all (ecdsa,bls12-381) paired public keys for the …\nGenerate a (ecdsa,bls381) signature pair for a given …\nHashes the <code>message</code> using keccak256 and then signs it using …\nGenerate a new ecdsa key pair for the given key type and …\nReturns all ecdsa public keys for the given key type.\nGenerate an ecdsa signature for a given message.\nGenerate an ecdsa signature for a given pre-hashed message.\nGenerate a new ed25519 key pair for the given key type and …\nReturns all ed25519 public keys for the given key type.\nGenerate an ed25519 signature for a given message.\nEnable proof recording on import.\nEnable the offchain indexing api.\nProduces default extensions based on the input parameters.\nFinalize a block.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns hash of the genesis block.\nAlter the genesis storage parameters.\nConstruct genesis storage.\nProvides access to the underlying <code>RpcModule</code>\nChecks if the private keys for the given public key and …\nImport block to the chain. No finality.\nImport a block and make it our best block if possible.\nImport a block and finalize it.\nImport block with justification(s), finalizes block.\nInsert a new secret key.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if this is an archive pruning mode (either KeepAll or …\nReturns an iterator over all test accounts.\nReturns an iterator over all test accounts.\nList all supported keys of a given type.\nProvides access to listen addresses\nA String providing a short description of the error.\nCreate test client builder.\nCreate new instance.\nCreate new <code>ExecutionExtensions</code> given an <code>extensions_factory</code>.\nCreate PRC handlers instance.\nCreate a crypto <code>Pair</code> from a numeric value.\nGet account id of a <code>numeric</code> account.\nAn async receiver if data will be returned via a callback.\nThe output string of the transaction if any.\nStarts an RPC query.\nSend a transaction through the RpcHandlers.\nSets custom block rules.\nSet the new extensions_factory\nDisable writing genesis.\nConvenience method to sign a message using the given key …\nGenerate a new sr25519 key pair for the given key type and …\nReturns all the sr25519 public keys for the given key type.\nGenerate an sr25519 signature for a given message.\nGenerate an sr25519 VRF pre-output for a given input data.\nGenerate an sr25519 VRF signature for the given data.\nTop trie storage data.\nWait for <code>count</code> blocks to be imported in the node and then …\nCreate a new instance of the test client builder.\nCreate new <code>TestClientBuilder</code> with default backend.\nExecute the given closure <code>f</code> with the latest runtime (based …\nCreate new <code>TestClientBuilder</code> with default backend and …\nCreate new <code>TestClientBuilder</code> with default backend and …\nThe instantiation strategy to use.\nSubstrate Client\nClient configuration items.\nCall executor that executes methods locally, querying all …\nGet block status.\nGet block body by id.\nGet blockchain info.\nCheck block preconditions.\nGet the code at a given block.\nEnable recording of storage proofs during block import\nreturns a reference to the finality notification sinks …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nQuery auxiliary data from key-value store.\nGet block hash by number. Returns <code>None</code> if the header is …\nGet block header by id.\nGet block header. Returns <code>None</code> if block is not found.\nImport a checked and validated block.\nreturns a reference to the block import notification sinks …\nGet block import event stream.\nGet blockchain info.\nInsert auxiliary data into key-value store.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates new instance of local call executor.\nCreates new Substrate Client with given blockchain and …\nCreate an instance of in-memory client.\nCreate a client with the explicitly provided backend. This …\nSkip writing genesis state on first start.\nGet block number by hash. Returns <code>None</code> if the header is …\nIf true, allows access from the runtime to write into …\nEnable the offchain worker db.\nAttempts to revert the chain by <code>n</code> blocks guaranteeing that …\nGet the RuntimeVersion at a given block.\nGet a reference to the state at a given block.\nGet storage changes event stream.\nGets the uncles of the block with <code>target_hash</code> going back …\nAttempts to revert the chain by <code>n</code> blocks disregarding …\nGet usage info about current client.\nPath where WASM files exist to override the on-chain WASM.\nMap of WASM runtime substitute starting at the child of …\nBlock data origin.\nExtension trait for a test client around block importing.\nExtension trait for a test client.\nBlock that was received from the network and validated in …\nBlock was imported from a file.\nGenesis block built into the client.\nBlock was broadcasted on the network.\nBlock is part of the initial sync with the network.\nBlock that was collated by this node.\nFinalize a block.\nReturns hash of the genesis block.\nImport block to the chain. No finality.\nImport a block and make it our best block if possible.\nImport a block and finalize it.\nImport block with justification(s), finalizes block.\nNo pruning. Canonicalization is a no-op.\nCanonicalization discards non-canonical nodes. All the …\nCheck given path, and see if there is an existing database …\nDisk backend.\nState that manages the backend database reference. Allows …\nDatabase transaction\nBlock database\nBlock pruning settings.\nMaintain a pruning window.\nUse a custom already-open database.\nDatabase settings.\nWhere to find the database..\nHash type that this backend uses for the database.\nDB-backed patricia trie state, transaction type is an …\nBuilder for <code>DbState</code>.\nKeep full block history, of every block that was ever …\nKeep full finalized block history.\nLoad a ParityDb database from a given path.\nPruning mode.\nA raw iterator over the <code>RefTrackingState</code>.\nA reference tracking state.\nLoad a RocksDB database from a given path. Recommended for …\nKeep N recent finalized blocks.\nState backend that’s useful for benchmarking\nCreate a mode that keeps given number of blocks.\nBlock pruning mode.\nCommit the <code>transaction</code> to the database atomically. Any …\nCheck if the value exists in the database without …\nExpose the Database that is used by this backend. The …\nExpose the Storage that is used by this backend.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRetrieve the value previously stored against <code>key</code> or <code>None</code> if\nGet block hash by number. Returns <code>None</code> if the header is …\nGet block header. Returns <code>None</code> if block is not found.\nReturns the pruning mode\nGet blockchain info.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this an archive (either ArchiveAll or ArchiveCanonical) …\nCreate a new instance that creates a database in a …\nCreate a new instance of database backend.\nCreate new memory-backed client backend for tests.\nCreate new memory-backed client backend for tests.\nGet block number by hash. Returns <code>None</code> if the header is …\nRocksDB-based offchain workers local storage.\nReturn path for databases that are stored on disk.\nGet the key tracking information for the state db.\nGet the proof recorder for this state\nReset the key tracking information for the state db.\nReset the shared trie cache.\nRemove a possible path-prefix from the key.\nSet path for databases that are stored on disk.\nWhere to find the database.\nRequested state pruning mode.\nCheck if database supports internal ref counting for state …\nThe maximum trie cache size in bytes.\nCheck value size in the database possibly without …\nCall <code>f</code> with the value previously stored against <code>key</code>.\nCache size in MiB. Used only by <code>RocksDb</code> variant of …\nCache size in MiB.\nthe handle to the custom storage\nPath to the paritydb database.\nPath to the database.\nPath to the database.\nif set, the <code>create</code> flag will be required to open such …\nPath to the rocksdb database.\nState that manages the backend database reference. Allows …\nA raw iterator over the <code>BenchmarkingState</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nOffchain local storage\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreate offchain local storage with given <code>KeyValueDB</code> …\nCreate new offchain storage for tests (backed by memorydb)\nTrait that allows zero-copy read/write of value-references …\nUses the Wasmtime compiled runtime.\nDefault heap allocation pages.\nDefault heap allocation strategy.\nAllocate the initial heap pages as requested by the wasm …\nHost functions for custom runtime interfaces that should …\nThe Substrate externalities.\nDefines the heap pages allocation strategy the wasm …\nSomething that provides implementations for host functions.\nA generic <code>CodeExecutor</code> implementation that uses a delegate …\nDelegate for dispatching a CodeExecutor call.\nThe version of the native runtime.\nPool the instances to avoid initializing everything from …\nPool the instances to avoid initializing everything from …\nRecreate the instance from scratch on every instantiation. …\nRecreate the instance from scratch on every instantiation. …\nRuntime version. This should not be thought of as classic …\nExtracts the runtime version of a given runtime code.\nAllocate a static number of heap pages.\nSpecification of different methods of executing the …\nAn abstraction over Wasm code executor. Supports selecting …\nThe instantiation strategy to use for the WASM executor.\nIgnore missing function imports if set true.\nReturns the api version found for api with <code>id</code>.\nList of supported API “features” along with their …\n<code>authoring_version</code> is the version of the authorship …\nCheck if this version matches other version for authoring …\nAuthoring runtimes (<code>spec_version</code>s) that this native …\nCheck if this version matches other version for calling …\nRead child runtime storage.\nGet child storage value hash.\nGet the trie root of a child storage map.\nClear child storage entries which keys are start with the …\nClear a child storage entry (<code>key</code>) of current contract …\nClear storage entries which keys are start with the given …\nClear a storage entry (<code>key</code>) of current contract being …\n…\n<code>Decode</code> while giving a “version hint”\nDisable to use native runtime when possible just behave …\nDispatch a method in the runtime.\nRust executor possible errors.\nWhether a child storage entry exists.\nWhether a storage entry exists.\nReturns the state version to use for Extrinsics root.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\n…\n…\nCheck if the given api with <code>api_id</code> is implemented and the …\nReturns the host functions <code>Self</code> provides.\nName of the implementation of the spec. This is of little …\nVersion of the implementation of the specification.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClear an entire child storage.\nProvide native runtime version.\nCreate new instance.\nCreate a new instance using the given <code>WasmExecutor</code>.\nReturns the key immediately following the given key, if it …\nReturns the key immediately following the given key, if it …\nSet or clear a child storage entry.\nSet or clear a storage entry (<code>key</code>) of current contract …\n…\nTake the runtime blob and scan it for the custom wasm …\n…\nStatically registers the host functions.\n…\nExtract <code>RuntimeVersion</code> of the given <code>runtime_code</code>.\nBasic runtime version info.\nSet child storage entry <code>key</code> of current contract being …\nWrite a key value pair to the offchain storage database.\nSet storage entry <code>key</code> of current contract being called …\n…\nIdentifies the different Substrate runtimes. There’ll be …\nVersion of the runtime specification.\nReturns state version to use for update.\nRead runtime storage.\nAppend storage item.\nCommit the last transaction started by …\nGet storage value hash.\nIndex specified transaction slice and store it.\nRenew existing piece of transaction storage.\nRollback the last transaction started by …\nGet the trie root of the current storage map.\nStart a new nested transaction.\nVersion of the system implementation used by this runtime. …\nAll existing calls (dispatchables) are fully compatible …\n…\nSet up the externalities and safe calling environment to …\nThe number of pages that will be added on top of the …\nThe absolute maximum size of the linear memory (in pages).\nThe instantiation strategy to use.\nA WASM backtrace.\nFailure to erase the wasm memory.\nContains the error value\nError type.\nInstantiation error.\nAn error message with an attached backtrace.\nContains the success value\nOther error happened.\nResult type alias.\nType for errors occurring during Wasm runtime construction.\nThe backtrace associated with the error message.\nThe string containing the backtrace.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe error message.\nMaximum number of bytes <code>ReturnValue</code> might occupy when …\nContains the error value\nA wrapper which merges two sets of host functions, and …\nAn <code>f32</code> value type.\nA 32-bit floating-point number stored as raw bit pattern.\nAn <code>f64</code> value type.\nA 64-bit floating-point number stored as raw bit pattern.\nSomething that provides a function implementation on the …\nContext used by <code>Function</code> to interact with the allocator …\nA trait used to statically register host callbacks with …\nSomething that provides implementations for host functions.\nAn <code>i32</code> value type.\nA 32-bit integer.\nAn <code>i64</code> value type.\nA 64-bit integer.\nSomething that can be converted into a wasm compatible …\nA trait that requires <code>RefUnwindSafe</code> when <code>feature = std</code>.\nContains the success value\nType to represent a pointer in wasm at the host.\nSomething that can be wrapped in a wasm <code>Pointer</code>.\nResult type used by traits in this crate.\nTyped value that can be returned from a function.\nThe size of the type in wasm.\nThe Signature of a function\nSomething that can may be created from a wasm <code>Value</code>.\nFor returning nothing.\nThe type of the value in wasm.\nValues supported by Substrate on the boundary between …\nFor returning some concrete value.\nValue types supported by Substrate on the boundary between …\nA trait for types directly usable at the WASM FFI boundary …\nThe word size used in wasm. Normally known as <code>usize</code> in …\nAllocate a memory instance of <code>size</code> bytes.\nThe arguments of a function.\nReturn <code>Self</code> as <code>i32</code>.\nCast this pointer of type <code>T</code> to a pointer of type <code>R</code>.\nDeallocate a given memory instance.\nExecute this function with the given arguments.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the host functions <code>Self</code> provides.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert <code>self</code> into a wasm <code>Value</code>.\nReturns the name of this function.\nCreate a new instance of <code>Self</code>.\nCreate a new instance of <code>Signature</code>.\nCreate a new instance of <code>Signature</code> with the given <code>args</code> and …\nCreate a null pointer.\nCalculate the offset from this pointer.\nRead memory from <code>address</code> into a vector.\nRead memory into the given <code>dest</code> buffer from <code>address</code>.\nRegisters a panic error message within the executor.\nStatically registers the host functions.\nRegisters a given host function with the WASM executor.\nThe optional return value of a function.\nReturns the signature of this function.\nTry to convert the given <code>Value</code> into <code>Self</code>.\nReturns the type of this value.\nWraps the given <code>caller</code> in a type which implements …\nWrite the given data at <code>address</code> into the memory.\nIterator of a chain of source errors.\nProvides the <code>context</code> method for <code>Result</code>.\nContains the error value\nThe <code>Error</code> type, a wrapper around a dynamic error type.\nEquivalent to Ok::&lt;_, anyhow::Error&gt;(value).\nContains the success value\n<code>Result&lt;T, Error&gt;</code>\nConstruct an ad-hoc error from a string or existing non-…\nGet the backtrace for this Error.\nReturn early with an error.\nAn iterator of the chain of source errors contained by …\nWrap the error value with additional context.\nWrap the error value with additional context.\nAttempt to downcast the error object to a concrete type.\nDowncast this error object by mutable reference.\nDowncast this error object by reference.\nReturn early with an error if a condition is not satisfied.\nConstruct an ad-hoc error from a string or existing non-…\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if <code>E</code> is the type held by this error object.\nCreate a new error object from a printable error message.\nCreate a new error object from any error type.\nThe lowest level cause of this error — this error’s …\nWrap the error value with additional context that is …\nWhen the <code>component-model</code> feature is enabled this trap …\nA trait used to get shared access to a <code>Store</code> in Wasmtime.\nA trait used to get exclusive mutable access to a <code>Store</code> in …\nUsed to indicate that a trap was raised by atomic wait …\nAn indicator that the compilation strategy should be …\nFailed float-to-int conversion.\nSignature mismatch on indirect call.\nImplementation of an incremental compilation’s key/value …\nPassed to the argument of <code>Store::call_hook</code> to indicate a …\nA structure representing the caller’s context when …\nIndicates the VM is calling a host function, from …\nIndicates the VM is calling a WebAssembly function, from …\nGlobal configuration options used to create an <code>Engine</code> and …\nThe global is constant and its value does not change\nCurrently the default backend, Cranelift aims to be a …\nUse a custom version string. Must be at most 255 bytes.\nValue returned by <code>ResourceLimiter::instances</code> default method\nValue returned by <code>ResourceLimiter::memories</code> default method\nValue returned by <code>ResourceLimiter::tables</code> default method\nThe host information associated with the <code>Store</code>, aka the <code>T</code> …\nSupport is disabled, and wasmtime will not parse debug …\nSupport is unconditionally enabled and wasmtime will parse …\nAn <code>Engine</code> which is a global context for compilation and …\nSupport for backtrace details is conditional on the …\nContains the error value\nThe <code>Error</code> type, a wrapper around a dynamic error type.\nAn exported WebAssembly value.\nA descriptor for an exported WebAssembly value.\nAn external item to a WebAssembly module, or a list of …\nRepresents an opaque reference to any data within …\nA reference to opaque data in the Wasm instance.\nAn <code>externref</code> value which can hold opaque data to the Wasm …\nA list of all possible types which can be externally …\nFloating point 32 bit integer.\nA 32-bit float.\nFloating point 64 bit integer.\nA 64-bit float.\nDescription of a frame in a backtrace for a <code>WasmBacktrace</code>.\nDebug information for a symbol that is attached to a …\nA WebAssembly function which can be called.\nA WebAssembly <code>func</code> which can be called.\nThis external type is the type of a WebAssembly function.\nA reference to a Wasm function.\nA first-class reference to a WebAssembly function.\nA descriptor for a function in a WebAssembly module.\nA WebAssembly <code>global</code> value which can be read and written …\nA WebAssembly <code>global</code> which acts like a <code>Cell&lt;T&gt;</code> of sorts, …\nThis external type is the type of a WebAssembly global.\nA WebAssembly global descriptor.\nA wasm atomic operation was presented with a …\nSigned 32 bit integer.\nA 32-bit integer\nSigned 64 bit integer.\nA 64-bit integer\nA descriptor for an imported value into a wasm module.\nIndirect call to a null table entry.\nAn instantiated WebAssembly module.\nRepresents the module instance allocation strategy to use.\nAn instance, pre-instantiation, that is ready to be …\nAn integer division by zero.\nAn integer arithmetic operation caused an overflow.\nExecution has potentially run too long and may be …\nInternal trait implemented for all arguments that can be …\nCollect profiling info for “jitdump” file format, used …\nA linear memory. This trait provides an interface for raw …\nStructure used to link wasm modules/instances together.\nA WebAssembly linear memory.\nA WebAssembly linear memory.\nThis external type is the type of a WebAssembly memory.\nError for out of bounds <code>Memory</code> access.\nA memory creator. Can be used to provide a memory creator …\nAn out-of-bounds memory access.\nA descriptor for a WebAssembly memory type.\nIndicates that <code>wait</code> did not complete and instead returned …\nA compiled WebAssembly module, ready to be instantiated.\nConfigure the strategy used for versioning in serializing …\nIndicator of whether a global is mutable or not\nEmit no version string in serialization, and accept all …\nNo optimizations performed, minimizes compilation time by …\nNo profiler support.\nContains the success value\nIndicates that a <code>wait</code> completed by being awoken by a …\nThe on-demand instance allocation strategy.\nPossible optimization levels for the Cranelift codegen …\nWhen wasm code is configured to consume fuel and it runs …\nCollect function name information as the “perf map” …\nThe pooling instance allocation strategy.\nConfiguration options used with …\nSelect which profiling technique to support.\nUsed by hosts to limit resource consumption of instances.\n<code>Result&lt;T, Error&gt;</code>\nIndicates the VM is returning from a host function, to …\nIndicates the VM is returning from a WebAssembly function, …\nA constructor for externally-created shared memory.\nA WebAssembly shared memory; these are handled separately …\nGenerates the fastest possible code, but may take longer.\nSimilar to <code>speed</code>, but also performs transformations aimed …\nThe current stack space was exhausted.\nA <code>Store</code> is a collection of WebAssembly instances and …\nA temporary handle to a <code>&amp;Store&lt;T&gt;</code>.\nA temporary handle to a <code>&amp;mut Store&lt;T&gt;</code>.\nProvides limits for a <code>Store</code>.\nUsed to build <code>StoreLimits</code>.\nPossible Compilation strategies for a wasm module.\nA WebAssembly <code>table</code>, or an array of values.\nA WebAssembly <code>table</code> which is an array of <code>Val</code> reference …\nThis external type is the type of a WebAssembly table.\nAn out-of-bounds access to a table.\nA descriptor for a table in a WebAssembly module.\nIndicates that <code>wait</code> completed with a timeout, meaning that …\nA statically typed WebAssembly function.\nError for an unresolvable import.\nCode that was supposed to have been unreachable was …\nA 128 bit number.\nA 128-bit number\nCollect profiling info using the “ittapi”, used with …\nPossible runtime values that a WebAssembly module can …\nA “raw” and unsafe representation of a WebAssembly …\nA list of all possible value types in WebAssembly.\nThe value of the global can change over time\nResult of <code>Memory::atomic_wait32</code> and <code>Memory::atomic_wait64</code>\nRepresentation of a backtrace of function frames in a …\nSelect how wasm backtrace detailed information is handled.\nA trait used for <code>Func::typed</code> and with <code>TypedFunc</code> to …\nA trait used for <code>Func::typed</code> and with <code>TypedFunc</code> to …\nA trait implemented for types which can be returned from …\nA trait implemented for types which can be arguments and …\nUse the wasmtime crate’s Cargo package version.\nInject more fuel into this store to be consumed when …\nInject more fuel into this store to be consumed when …\nAdds fuel to this <code>Store</code> for wasm to consume while …\nGet the map from <code>.text</code> section offsets to Wasm binary …\nAliases one item’s name as another.\nAliases one module’s name as another.\nSets the instance allocation strategy to use.\nConfigures whether this <code>Linker</code> will shadow previous …\nConfigures whether this <code>Linker</code> will allow unknown exports …\nReturns the store context that this type provides access …\nReturns the store context that this type provides access …\nReturn the allocated memory as a mutable pointer to u8.\nEquivalent of the WebAssembly <code>memory.atomic.notify</code> …\nEquivalent of the WebAssembly <code>memory.atomic.wait32</code> …\nEquivalent of the WebAssembly <code>memory.atomic.wait64</code> …\nConsumes this builder and returns the <code>StoreLimits</code>.\nReturns the number of allocated bytes which are accessible …\nLoads cache configuration specified at <code>path</code>.\nLoads cache configuration from the system default path.\nInvokes this WebAssembly function with the specified …\nInvokes this function with the <code>params</code> given and writes …\nConfigure a function that runs on calls and returns …\nInvokes this function in an “unchecked” fashion, …\nCaptures a trace of the WebAssembly frames on the stack …\nReturns the 1-indexed source code column number this …\nReturns the configuration settings that this engine is …\nSynthetically consumes fuel from the store.\nSynthetically consume fuel from this store.\nSynthetically consumes fuel from this <code>Store</code>.\nConfigures whether execution of WebAssembly will “…\nReturns the value type of this global descriptor.\nCopy <code>len</code> elements from <code>src_table[src_index..]</code> into …\nConfigures whether the debug verifier of Cranelift is …\nAllows setting a Cranelift boolean flag or preset. This …\nAllows settings another Cranelift flag defined by a flag …\nConfigures whether Cranelift should perform a …\nConfigures the Cranelift code generator optimization level.\nConfigures the Cranelift code generator to use its “…\nAccess the underlying data owned by this <code>Store</code>.\nAccess the underlying data owned by this <code>Store</code>.\nAccess the underlying data owned by this <code>Store</code>.\nAccess the underlying data owned by this <code>Store</code>.\nReturns this memory as a native Rust slice.\nReturn access to the available portion of the shared …\nGet the underlying data for this <code>ExternRef</code>.\nSame as <code>Memory::data_mut</code>, but also returns the <code>T</code> from the …\nAccess the underlying data owned by this <code>Store</code>.\nAccess the underlying data owned by this <code>Store</code>.\nAccess the underlying data owned by this <code>Store</code>.\nReturns this memory as a native Rust mutable slice.\nReturns the base pointer, in the host’s address space, …\nReturns the byte length of this memory.\nReturns the byte length of this memory.\nConfigures whether DWARF debug information will be emitted …\nDefines a new item in this <code>Linker</code>.\nSame as <code>Linker::define</code>, except only the name of the import …\nImplement any function imports of the <code>Module</code> with a …\nImplement any imports of the given <code>Module</code> with a function …\nDeserializes an in-memory compiled module previously …\nSame as <code>deserialize</code>, except that the contents of <code>path</code> are …\nDisable caching.\nConfigures the size, in bytes, of the guard region used at …\nConfigures the size, in bytes, of the extra virtual memory …\nReturns the element value type of this table.\nReturns the underlying <code>Engine</code> this store is connected to.\nReturns the <code>Engine</code> this is connected to.\nReturns the underlying <code>Engine</code> this store is connected to.\nReturns the underlying <code>Engine</code> this store is connected to.\nReturns the <code>Engine</code> that this store is associated with.\nReturns the <code>Engine</code> that this <code>Module</code> was compiled by.\nIndicates the VM is entering host code (exiting …\nConfigures epoch-deadline expiration to invoke a custom …\nConfigures epoch-deadline expiration to trap.\nConfigures epoch-deadline expiration to trap.\nEnables epoch-based interruption.\nIndicates the VM is exiting host code (entering …\nReturns the list of exported items from this <code>Instance</code>.\nReturns the list of exports that this <code>Module</code> has and will …\nCreates a WebAssembly <code>externref</code> value\nAttempt to access the underlying <code>externref</code> value of this …\nCreates a WebAssembly <code>f32</code> value\nAttempt to access the underlying value of this <code>Val</code>, …\nCreates a WebAssembly <code>f64</code> value\nAttempt to access the underlying value of this <code>Val</code>, …\nReturns the source code filename this symbol was defined …\nFill <code>table[dst..(dst + len)]</code> with the given value.\nUnconditionally captures a trace of the WebAssembly frames …\nA configuration option to force the usage of <code>memfd_create</code> …\nReturns a list of function frames in WebAssembly this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new WebAssembly <code>Module</code> from the given in-memory …\nCreates a new WebAssembly <code>Module</code> from the contents of the …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nConverts the raw representation of a <code>funcref</code> into an …\nCreates a new strongly-owned <code>ExternRef</code> from the raw value …\nConvenience method to convert a <code>ValRaw</code> into a <code>Val</code>.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreates a new WebAssembly <code>Module</code> from the contents of the …\nReturns the fuel consumed by this store.\nReturns the fuel consumed by this store.\nReturns the fuel consumed by this store.\nReturns the amount of fuel consumed by this store’s …\nReturns the underlying <code>Func</code> that this is wrapping, losing …\nAttempt to return the underlying type of this external …\nReturns the WebAssembly function index for this frame.\nReturns a descriptive name of the function for this frame, …\nCreates a <code>Func::new</code>-style function named in this linker.\nCreates a <code>Func::new_unchecked</code>-style function named in this …\nReturns the offset from the original wasm module’s …\nDefine a host function within this linker.\nCreates a WebAssembly <code>funcref</code> value\nAttempt to access the underlying value of this <code>Val</code>, …\nGet the locations of functions in this module’s <code>.text</code> …\nPerform garbage collection of <code>ExternRef</code>s.\nPerform garbage collection of <code>ExternRef</code>s.\nPerform garbage collection of <code>ExternRef</code>s.\nConfigures whether compiled artifacts will contain …\nTry to retrieve an arbitrary cache key entry, and returns …\nLooks up a previously defined value in this <code>Linker</code>, …\nReturns the current <code>Val</code> of this global.\nReturns the table element value at <code>index</code>.\nLooks up a value in this <code>Linker</code> which matches the <code>import</code> …\nReturns the “default export” of a module.\nLooks up an export from the caller’s module by the <code>name</code> …\nLooks up an exported <code>Extern</code> value by name.\nLooks up an export in this <code>Module</code> by name.\nGets the WebAssembly <code>externref</code> value\nGets the WebAssembly <code>f32</code> value\nGets the WebAssembly <code>f64</code> value\nLooks up an exported <code>Func</code> value by name.\nGets the WebAssembly <code>funcref</code> value\nLooks up an exported <code>Global</code> value by name.\nGets the WebAssembly <code>i32</code> value\nGets the WebAssembly <code>i64</code> value\nLooks up an exported <code>Memory</code> value by name.\nLooks up an exported <code>SharedMemory</code> value by name.\nLooks up an exported <code>Table</code> value by name.\nLooks up an exported <code>Func</code> value by name and with its type.\nGets the WebAssembly <code>i32</code> value\nGets the WebAssembly <code>i64</code> value\nGets the WebAssembly <code>v128</code> value\nAttempt to return the underlying type of this external …\nGrows the size of this table by <code>delta</code> more elements, …\nGrows this WebAssembly memory by <code>delta</code> pages.\nGrows this WebAssembly memory by <code>delta</code> pages.\nGrows this memory to have the <code>new_size</code>, in bytes, …\nIndicates whether a guard region is present before …\nCreates a WebAssembly <code>i32</code> value\nAttempt to access the underlying value of this <code>Val</code>, …\nCreates a WebAssembly <code>i64</code> value\nAttempt to access the underlying value of this <code>Val</code>, …\nReturns the range of bytes in memory where this module’s …\nReturns the list of imports that this <code>Module</code> has and must …\nIncrements the epoch.\nForce initialization of copy-on-write images to happen …\nGiven an arbitrary key and bytes, stores them in the cache.\nConvenience wrapper to define an entire <code>Instance</code> in this …\nThe maximum number of concurrent instances supported …\nThe maximum number of defined linear memories for a module …\nThe maximum number of pages for any linear memory defined …\nThe maximum size, in bytes, allocated for an instance and …\nThe maximum table elements for any table defined in a …\nThe maximum number of defined tables for a module (default …\nThe maximum number of instances that can be created for a …\nThe maximum number of instances that can be created for a …\nInstantiates this instance, creating a new instance within …\nAttempts to instantiate the <code>module</code> provided.\nPerforms all checks necessary for instantiating <code>module</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this <code>Store</code>, destroying it, and returns the …\nConsume this <code>Export</code> and return the contained <code>Extern</code>.\nReturns the underlying <code>Func</code>, if this external is a …\nConsume this <code>Export</code> and return the contained <code>Func</code>, if it’…\nReturns the underlying <code>Global</code>, if this external is a …\nConsume this <code>Export</code> and return the contained <code>Global</code>, if it…\nReturns the underlying <code>Memory</code>, if this external is a …\nConsume this <code>Export</code> and return the contained <code>Memory</code>, if it…\nReturns the underlying <code>SharedMemory</code>, if this external is a …\nReturns the underlying <code>Table</code>, if this external is a table.\nConsume this <code>Export</code> and return the contained <code>Table</code>, if it…\nReturns whether this is a 64-bit memory or not.\nReturns true if <code>ValType</code> matches any of the numeric types. …\nReturns true if <code>ValType</code> matches either of the reference …\nReturns whether this is a shared memory or not.\nReturns an iterator over all items defined in this <code>Linker</code>, …\nConfigures the <code>ResourceLimiter</code> used to limit resource …\nReturns the 1-indexed source code line number this symbol …\nHow much memory, in bytes, to keep resident for each …\nConfigures the maximum number of “unused warm slots” …\nConfigures the maximum amount of stack space available for …\nReturns the optionally-specified maximum number of …\nReturns the optionally-specified maximum number of pages …\nReturns the maximum number of bytes the memory can grow to.\nThe maximum number of linear memories that can be created …\nThe maximum number of linear memories that can be created …\nAttempt to return the underlying type of this external …\nNotifies the resource limiter that growing a linear …\nNotifies the resource limiter that an instance’s linear …\nConfigures the “guaranteed dense image size” for …\nConfigures whether copy-on-write memory-mapped data is …\nThe maximum number of bytes a linear memory can grow to.\nReturns minimum number of elements this table must have\nReturns minimum number of WebAssembly pages this memory …\nReturns a reference to the module that this <code>InstancePre</code> …\nDefine automatic instantiations of a <code>Module</code> in this linker.\nReturns the module name that the unknown import was …\nReturns the module name that this import is expected to …\nReturns the identifer of the module that this frame is for.\nReturns the offset within the original wasm module this …\nConfigure the version information used in serialized and …\nReturns whether or not this global is mutable.\nReturns the name by which this export is known.\nReturns the field name of the module that the unknown …\nReturns identifier/name that this <code>Module</code> has. This name is …\nReturns the function name associated with this symbol.\nReturns the field name of the module that this import is …\nReturns the name by which this export is known.\nConfigures whether to generate native unwind information …\nCreates a new <code>StoreLimitsBuilder</code>.\nCreates a new <code>Linker</code>.\nCreates a new <code>Store</code> to be associated with the given <code>Engine</code> …\nCreates a new <code>Func</code> with the given arguments, typically to …\nCreates a new configuration object with the default …\nCreates a new <code>Engine</code> with the specified compilation and …\nCreates a new WebAssembly <code>global</code> value with the provide …\nCreates a new <code>Table</code> with the given parameters.\nCreates a new <code>Instance</code> from the previously compiled <code>Module</code> …\nCreates a new WebAssembly memory given the configuration …\nConstruct a <code>SharedMemory</code> by providing both the <code>minimum</code> and …\nCreates a new WebAssembly <code>Module</code> from the given in-memory …\nCreates a new instance of <code>ExternRef</code> wrapping the given …\nCreates a new function descriptor from the given …\nCreates a new global descriptor of the specified <code>content</code> …\nCreates a new table descriptor which will contain the …\nCreates a new descriptor for a 32-bit WebAssembly memory …\nCreates a new descriptor for a 64-bit WebAssembly memory …\nCreate a new <code>LinearMemory</code> object from the specified …\nAn unchecked version of <code>Func::typed</code> which does not perform …\nCreates a new <code>Func</code> with the given arguments, although has …\nReturns a null <code>externref</code> value.\nConfigures this <code>Store</code> to yield while executing futures …\nConfigures this <code>Store</code> to yield while executing futures …\nConfigures a <code>Store</code> to yield execution of async WebAssembly …\nConfigures this <code>Store</code> to trap whenever fuel runs out.\nConfigures this <code>Store</code> to trap whenever fuel runs out.\nConfigures a <code>Store</code> to generate a <code>Trap</code> whenever it runs out …\nConfigure wether wasmtime should compile a module using …\nReturns the list of parameter types for this function.\nThe default pooling instance allocation strategy.\nAhead-of-time (AOT) compiles a WebAssembly module.\nCreates a default profiler based on the profiling strategy …\nDoes this <code>ExternRef</code> point to the same inner value as <code>other</code>?\nSafely reads memory contents at the given offset into a …\nThis option can be used to control the behavior of the …\nReturns the list of result types for this function.\nReturns whether the engine <code>a</code> and <code>b</code> refer to the same …\nSerializes this module to a vector of bytes.\nAttempts to set the current value of this global to <code>Val</code>.\nWrites the <code>val</code> provided into <code>index</code> within this table.\nSets the epoch deadline to a certain number of ticks in …\nSets the epoch deadline to a certain number of ticks in …\nCreates a new descriptor for shared WebAssembly memory …\nReturns the current size of this table.\nReturns the size, in WebAssembly pages, of this wasm …\nReturns the size, in WebAssembly pages, of this wasm …\nIndicates that the “static” style of memory should …\nConfigures the size, in bytes, of the guard region used at …\nConfigures the maximum size, in bytes, where a linear …\nConfigures which compilation strategy will be used for …\nGet the strong reference count for this <code>ExternRef</code>.\nReturns the debug symbols found, if any, for this function …\nAttempt to return the underlying type of this external …\nThe maximum number of elements in a table.\nNotifies the resource limiter that growing a linear …\nNotifies the resource limiter that an instance’s table …\nHow much memory, in bytes, to keep resident for each table …\nThe maximum number of tables that can be created for a …\nThe maximum number of tables that can be created for a …\nSets the target triple for the <code>Config</code>.\nGet this module’s code object’s <code>.text</code> section, …\nEagerly initialize thread-local functionality shared by …\nExtracts the raw value of this <code>Func</code>, which is owned by …\nConverts this <code>ExternRef</code> to a raw value suitable to store …\nConvenience method to convert this <code>Val</code> into a <code>ValRaw</code>.\nReturns the underlying wasm type that this <code>Func</code> has.\nReturns the type associated with this <code>Extern</code>.\nReturns the underlying type of this <code>global</code>.\nReturns the underlying type of this table, including its …\nReturn the <code>ExternType</code> of this export.\nReturns the type of the unknown import.\nReturns the underlying type of this memory.\nReturn the type of the shared memory.\nReturns the expected type of this import.\nReturns the type of this export.\nReturns the corresponding <code>ValType</code> for this <code>Val</code>.\nAttempts to extract a typed object from this <code>Func</code> through …\nCreates a WebAssembly <code>i32</code> value\nCreates a WebAssembly <code>i64</code> value\nUnix-specific extension for the <code>wasmtime</code> crate.\nReturns the underlying <code>externref</code> value of this <code>Val</code>, …\nReturns the underlying value of this <code>Val</code>, panicking if it…\nReturns the underlying value of this <code>Val</code>, panicking if it…\nReturns the underlying descriptor of this <code>ExternType</code>, …\nReturns the underlying value of this <code>Val</code>, panicking if it…\nReturns the underlying descriptor of this <code>ExternType</code>, …\nReturns the underlying value of this <code>Val</code>, panicking if it…\nReturns the underlying value of this <code>Val</code>, panicking if it…\nReturns the underlying descriptor of this <code>ExternType</code>, …\nReturns the underlying descriptor of this <code>ExternType</code>, …\nReturns the underlying value of this <code>Val</code>, panicking if it…\nCreates a WebAssembly <code>v128</code> value\nAttempt to access the underlying value of this <code>Val</code>, …\nValidates <code>binary</code> input data as a WebAssembly binary given …\nReturns the range of native addresses that WebAssembly can …\nConfigures whether <code>WasmBacktrace</code> will be present in the …\nConfigures whether backtraces in <code>Trap</code> will parse debug …\nConfigures whether the WebAssembly bulk memory operations …\nConfigures whether the WebAssembly memory64 proposal will …\nConfigures whether the WebAssembly multi-memory proposal …\nConfigures whether the WebAssembly multi-value proposal …\nConfigures whether the WebAssembly reference types proposal\nConfigures whether the WebAssembly Relaxed SIMD proposal …\nConfigures whether the WebAssembly SIMD proposal will be …\nConfigures whether the WebAssembly threads proposal will …\nSets a custom memory creator.\nCreates a new <code>Func</code> from the given Rust closure.\nSafely writes contents of a buffer to this memory at the …\nExtensions for the <code>Store</code> type only available on Unix.\nThe signal handler must be async-signal-safe.\nBlock data origin.\nBlock status.\nSigning failed.\nError from the client while fetching some data from the …\nError from the client while importing.\nBlock that was received from the network and validated in …\nA future that resolves to the proposer.\nExpress that proof recording is disabled.\nIs proof recording enabled?\nExpress that proof recording is enabled.\nEnvironment for a Consensus instance.\nThe error type for consensus-related operations.\nError which can occur upon creation.\nAn error type when fetching data is not possible.\nError type which can occur when proposing or evaluating.\nBlock was imported from a file.\nGenesis block built into the client.\nIn the blockchain, but the state is not available.\nAlready in the blockchain and the state is available.\nInherent data to include in a block.\nInvalid authorities set received from the runtime.\nIntermediate is of wrong type.\nJustification requirements not met.\nError checking signature.\nBlock or parent is known to be bad.\nBlock was broadcasted on the network.\nBlock is part of the initial sync with the network.\nIntermediate missing.\nA synchronization oracle for when there is no network.\nError that is returned when <code>ProofRecording</code> requested to …\nSome other error.\nBlock that was collated by this node.\nThe proof type that will be used internally.\nThe proof type used by <code>Self::ProofRecording</code>.\nA trait to express the state of proof recording on type …\nThe supported proof recording by the implementor of this …\nA proposal that is created by a <code>Proposer</code>.\nFuture that resolves to a committed proposal with an …\nLogic for a proposer.\nThe proposer type this creates.\nAdded to the import queue.\nType of the raw storage iterator.\nThe SelectChain trait defines the strategy upon which the …\nA state backend is used to read state data and can have …\nMissing state at block with given descriptor.\nAn oracle for when major synchronization work is being …\nType of trie backend storage.\nNot in the queue or the blockchain.\nAmong those <code>leaves</code> deterministically pick one chain as the …\nThe block that was build.\nBlock announcement validation.\nGet the child merkle value or None if there is nothing …\nGet child keyed child storage or None if there is nothing …\nGet child keyed storage value hash or None if there is …\nCalculate the child storage root, with given delta over …\nGet the merkle value or None if there is nothing …\nCommit given transaction to storage.\nError types for consensus modules.\ntrue if a key exists in child storage.\ntrue if a key exists in storage.\nGet the best descendent of <code>base_hash</code> that we should …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalculate the storage root, with given delta over what is …\nReturns the data for the requested inherent.\nExtend storage info for benchmarking db\nGet the whitelist for tracking db reads/writes\nInitialize the proposal logic on top of a specific header. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the given <code>storage_proof</code> into <code>Self::Proof</code>.\nWhether the synchronization service is undergoing major …\nWhether the synchronization service is offline. Returns …\nGet an iterator over keys.\nGet all leaves of the chain, i.e. block hashes that have …\nGet the number of inherents in this instance\nCreate a new instance.\nReturn the next key in child storage in lexicographic …\nReturn the next key in storage in lexicographic order or …\nGet an iterator over key/value pairs.\nProof that was recorded while building the block.\nEstimate proof size\nCreate a proposal.\nPut data for an inherent into the internal storage.\nReturns a lifetimeless raw storage iterator.\nGet the read/write count of the db\nRegister stats from overlay of state machine.\nReplace the data for an inherent.\nGet the read/write count of the db\nUpdate the whitelist for tracking db reads/writes\nGet keyed storage or None if there is nothing associated.\nThe storage changes while building this block.\nGet keyed storage value hash or None if there is nothing …\nCalculate the storage root, with given delta over what is …\nQuery backend usage statistics (i/o, memory)\nWipe the state database.\nType which checks incoming block announcements.\nA type which provides access to chain information.\nDefault implementation of <code>BlockAnnounceValidator</code>.\nInvalid block announcement.\nValid block announcement.\nResult of <code>BlockAnnounceValidator::validate</code>.\nRetrieve the status of the block denoted by the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nValidate the announced header and its associated data.\nShould we disconnect from this peer?\nIs this the new best block of the node?\nSigning failed.\nError from the client while fetching some data from the …\nError from the client while importing.\nContains the error value\nThe error type for consensus-related operations.\nInvalid authorities set received from the runtime.\nIntermediate is of wrong type.\nJustification requirements not met.\nError checking signature.\nIntermediate missing.\nContains the success value\nSome other error.\nResult type alias.\nMissing state at block with given descriptor.\nCreate genesis runtime configuration for tests.\nCreate genesis runtime configuration for tests with some …\nAlice’s account id.\nBob’s account id.\nCharlie’s account id.\nDave’s account id.\nEve’s account id.\nFerdie’s account id.\nConvert keyrings into <code>SessionKeys</code>.\nSign given <code>CheckedExtrinsic</code>.\nReturns transaction extra.")