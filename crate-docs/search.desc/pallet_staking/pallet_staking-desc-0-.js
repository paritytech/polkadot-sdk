searchState.loadedDescShard("pallet_staking", 0, "Staking Pallet\nPay into a specified account.\nThe active era information, it holds index and start.\nInformation regarding the active era (era in used in …\nThe origin which can manage less critical staking …\nStash is already bonded.\nRewards for this era have already been claimed for this …\nController is already paired.\nInternal state has become somehow corrupted and the …\nA nomination target was supplied that was blocked or …\nThe balance type of this pallet.\nConfigurations of the benchmarking of the pallet.\nSome parameters of the benchmarking.\nSome parameters of the benchmarking.\nMap from all locked “stash” accounts to the controller …\nAn account has bonded this amount. [stash, amount]\nNumber of eras that staked funds must remain bonded for.\nNumber of eras that staked funds must remain bonded for.\nSome bound is not met.\nContains a variant per dispatchable extrinsic that this …\nThe amount of currency given to reporters of a slash event …\nThe user has enough bond and thus cannot be chilled …\nCannot reset a ledger.\nAn account has stopped participating as either a validator …\nHistory of claimed paged rewards by era and validator.\nCommission is too low. Must be at least <code>MinCommission</code>.\nConfiguration trait of this pallet.\nPossible operations on the configuration values of this …\nReport of a controller batch deprecation.\nUsed when attempting to use deprecated controller account …\nAdaptor to turn a <code>PiecewiseLinear</code> curve definition into an …\nThe staking balance.\nJust the <code>Currency::Balance</code> type; we have this item to …\nJust the <code>Currency::Balance</code> type; we have this item to …\nConvert a balance into a number used for election …\nConvert a balance into a number used for election …\nThe current era index.\nThe last planned session scheduled by the session pallet.\nBased on <code>Config</code>. Auto-generated by …\nIndices of validators that have offended in the active …\nControls validator disabling\n<code>DisablingStragegy</code> controls how validators are disabled\n<code>DisablingStragegy</code> controls how validators are disabled\nDuplicate index.\nSomething that provides the election functionality.\nTargets cannot be empty.\nWrapper struct for Era related information. It is not a …\nThe era payout has been set; the first balance is the …\nHandler for determining how much of a balance should be …\nThe payout for validators and the system for the current …\nReward points of an era. Used to split era total payout …\nRewards for the last <code>Config::HistoryDepth</code> eras. If reward …\nExposure of validator at era.\nClipped Exposure of validator at era.\nSummary of validator exposure at a given era.\nPaginated exposure of a validator at given era.\nThe session index at which the era start for the last …\nThe total amount staked for the last <code>Config::HistoryDepth</code> …\nSimilar to <code>ErasStakers</code>, this holds the preferences of …\nThe total validator era payout for the last …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nSomething that listens to staking updates and performs …\nSomething that listens to staking updates and performs …\nA snapshot of the stake backing a single validator in the …\nA typed conversion from stash account ID to the active …\nFilter historical offences out and only allow those from …\nA nomination quota that allows up to MAX nominations for …\nForce a new era at the end of all sessions indefinitely.\nMode of era forcing.\nA new force era mode was set.\nForce a new era, then reset to <code>NotForcing</code> as soon as it is …\nAvoid a new era indefinitely.\nMode of era-forcing.\nAttempting to target a stash that still has funds.\nCan be used to configure the genesis state of this pallet.\nSomething that provides the election functionality at …\nNumber of eras to keep in history.\nNumber of eras to keep in history.\nChilling.\nIncorrect previous history depth input provided.\nIncorrect number of slashing spans provided.\nThe amount of exposure for an era that an individual …\nCannot have a validator or nominator role, with value less …\nInvalid era to reward.\nInvalid number of nominations.\nNo nominators exist on this page.\nSlash record index out of bounds.\nAny validators that may never be slashed or forcibly …\nA nominator has been kicked from a validator.\nMap from all (unlocked) “controller” accounts to the …\nThe maximum amount of controller accounts that can be …\nThe maximum amount of controller accounts that can be …\nThe maximum size of each <code>T::ExposurePage</code>.\nThe maximum size of each <code>T::ExposurePage</code>.\nStrict maximum number of nominations that caps the …\nMaximum number of nominations per nominator.\nThe maximum number of nominators to use.\nThe maximum nominator count before we stop allowing new …\nMaximum staked rewards, i.e. the percentage of the era …\nThe maximum number of <code>unlocking</code> chunks a <code>StakingLedger</code> can …\nThe maximum number of <code>unlocking</code> chunks a <code>StakingLedger</code> can …\nThe maximum number of validators to use.\nThe maximum validator count before we stop allowing new …\nMaximum number of winners (aka. active validators), as …\nThe minimum amount of commission that validators can set.\nThe minimum active bond to become and maintain the role of …\nThe minimum active bond to become and maintain the role of …\nThe minimum active nominator stake of the last successful …\nMinimum number of staking participants before emergency …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nSomething that can estimate the next session change, …\nSomething that can estimate the next session change, …\nCan not schedule more unlock chunks.\nCan not rebond without unlocking chunks.\nA record of the nominations made by a specific account.\nSomething that defines the maximum number of nominations …\nSomething that defines the maximum number of nominations …\nSomething that defines the maximum number of nominations …\nDeclaring desire to nominate, delegate, or generally …\nThe map from nominator stash key to their nomination …\nReceive no reward.\nDon’t change.\nNot a controller account.\nNot enough funds available to withdraw.\nNot forcing anything - just let whatever happen.\nItems are not sorted and unique.\nNot a stash account.\nAn old slashing report from a prior era was discarded …\nFacade struct to encapsulate <code>PagedExposureMetadata</code> and a …\nThe <code>Pallet</code> struct, the main type that implements traits …\nWhere the reward payment should be made. Keyed by stash.\nThe stakers’ rewards are getting paid.\nRemove from storage.\nHandler for the unbalanced increment when rewarding a …\nHandler for the unbalanced increment when rewarding a …\nA destination account for payment.\nProvided reward destination is not allowed.\nCounter for the number of “reward” points earned by a …\nTokens have been minted and are unused for …\nTokens have been minted and are unused for …\nThe nominator has been rewarded by this amount to this …\nThe overarching event type.\nThe overarching event type.\nMeans for interacting with a specialized version of the …\nInterface for interacting with a session pallet.\nInterface for interacting with a session pallet.\nNumber of sessions per era.\nNumber of sessions per era.\nSet the given value.\nHandler for the unbalanced reduction when slashing a …\nHandler for the unbalanced reduction when slashing a …\nNumber of eras that slashes are deferred by, after …\nNumber of eras that slashes are deferred by, after …\nA slash for the given validator, for the given percentage …\nThe percentage of the slash that is distributed to …\nA staker (validator or nominator) has been slashed by the …\nSlashing spans for stash accounts.\nTargets size limit reached.\nVoters size limit reached.\nPay into the stash account, increasing the amount at stake …\nRepresentation of the status of a staker.\nA new set of stakers was elected.\nThe election failed. No new era is planned.\nThe ledger of a (bonded) stash.\nPay into the stash account, not increasing the amount at …\nA <code>Convert</code> implementation that finds the stash of the given …\nWIP: This is a noop as of now, the actual business logic …\nA mock benchmarking config for pallet-staking.\nThere are too many nominators in the system. Governance …\nToo many nomination targets supplied.\nThere are too many validator candidates in the system. …\nA pending slash record. The value of the slash has been …\nAll unapplied slashes that are queued for later.\nAn account has unbonded this amount.\nTime used for computing era duration.\nJust a Balance/BlockNumber tuple to encode when a chunk of …\nImplementation of <code>DisablingStrategy</code> which disables …\nA simple voter list implementation that does not require …\nA simple sorted list implementation that does not require …\nDeclaring desire in validate, i.e author blocks.\nThe ideal number of active validators.\nPreference of what happens regarding validation.\nA validator has set their preferences.\nThe map from (wannabe) validator stash key to the …\nOperation not allowed for virtual stakers.\nStakers whose funds are managed by other pallets.\nSomething that provides a best-effort sorted list of …\nWeight information for extrinsics in this pallet.\nWeight information for extrinsics in this pallet.\nAn account has called <code>withdraw_unbonded</code> and removed …\nThe total amount of the stash’s balance that will be at …\nAn auto-generated getter for <code>ActiveEra</code>.\nReturns the current nominations quota for nominators.\nStaking pallet benchmarking.\nWhether or not this validator is accepting more …\nTake the origin account as a stash and lock up <code>value</code> of …\nTake the origin account as a stash and lock up <code>value</code> of …\nAdd some extra amount that have appeared in the stash …\nAdd some extra amount that have appeared in the stash …\nFetches the controller bonded to a stash account, if any.\nCancel enactment of a deferred slash.\nCancel enactment of a deferred slash.\nAn auto-generated getter for <code>CanceledSlashPayout</code>.\nDeclare no desire to either validate or nominate.\nDeclare no desire to either validate or nominate.\nDeclare a <code>controller</code> to stop participating as either a …\nDeclare a <code>controller</code> to stop participating as either a …\nAn auto-generated getter for <code>ClaimedRewards</code>.\nReward that validator takes up-front; only the rest is …\nDefault implementations of <code>DefaultConfig</code>, which can be …\nAn auto-generated getter for <code>CurrentEra</code>.\nAn auto-generated getter for <code>CurrentPlannedSession</code>.\nReturns the voter’s nomination quota based on its …\nMake a disabling decision. Returns the index of the …\nInitializes the default object using the given <code>validator</code>.\nUpdates a batch of controller accounts to their …\nUpdates a batch of controller accounts to their …\nDisabling limit calculated from the total number of …\nDisable the validator at the given index, returns <code>false</code> if …\nAuto-generated docs-only module listing all defined …\nThis function will add a nominator to the <code>Nominators</code> …\nThis function will add a validator to the <code>Validators</code> …\nThis function will remove a nominator from the <code>Nominators</code> …\nThis function will remove a validator from the <code>Validators</code> …\nA static size tracker for the election snapshot data.\nDetermine the payout for this era.\nAn auto-generated getter for <code>ErasRewardPoints</code>.\nReturns full exposure of a validator for a given era.\nAn auto-generated getter for <code>ErasStakersClipped</code>.\nAn auto-generated getter for <code>ErasStartSessionIndex</code>.\nAn auto-generated getter for <code>ErasTotalStake</code>.\nAn auto-generated getter for <code>ErasValidatorPrefs</code>.\nAn auto-generated getter for <code>ErasValidatorReward</code>.\nForce a validator to have at least the minimum commission. …\nForce a validator to have at least the minimum commission. …\nAn auto-generated getter for <code>ForceEra</code>.\nForce there to be a new era at the end of the next …\nForce there to be a new era at the end of the next …\nForce there to be a new era at the end of sessions …\nForce there to be a new era at the end of sessions …\nForce there to be no new eras indefinitely.\nForce there to be no new eras indefinitely.\nForce a current staker to become completely unstaked, …\nForce a current staker to become completely unstaked, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new instance of <code>PagedExposure</code> from legacy clipped …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet full exposure of the validator at a given era.\nGet the targets for an upcoming npos election.\nGet all of the voters that are eligible for the npos …\nGet exposure for a validator at a given era and page.\nReturns the voter’s nomination quota within reasonable …\nIncrements the ideal number of validators up to maximum of …\nIncrements the ideal number of validators up to maximum of …\nIndex of era.\nThe reward points earned by a given validator.\nThis module expose one function <code>P_NPoS</code> (Payout NPoS) or …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSplits an <code>Exposure</code> into <code>PagedExposureMetadata</code> and multiple …\nAn auto-generated getter for <code>Invulnerables</code>.\nWhether <code>who</code> is a virtual staker whose funds are managed by …\nReturns iterator over voter list, which can have <code>take</code> …\nRemove the given nominations from the calling validator.\nRemove the given nominations from the calling validator.\nA Ledger implementation for stakers.\nFetches the ledger associated with a controller or stash …\nList of eras for which the stakers behind a validator have …\nStorage migrations for the Staking pallet. The changelog …\nAn auto-generated getter for <code>MinimumValidatorCount</code>.\nReturns a new instance of a staking ledger.\nCreate a call with the variant <code>bond</code>.\nCreate a call with the variant <code>bond_extra</code>.\nCreate a call with the variant <code>cancel_deferred_slash</code>.\nCreate a call with the variant <code>chill</code>.\nCreate a call with the variant <code>chill_other</code>.\nCreate a call with the variant <code>deprecate_controller_batch</code>.\nCreate a call with the variant <code>force_apply_min_commission</code>.\nCreate a call with the variant <code>force_new_era</code>.\nCreate a call with the variant <code>force_new_era_always</code>.\nCreate a call with the variant <code>force_no_eras</code>.\nCreate a call with the variant <code>force_unstake</code>.\nCreate a call with the variant <code>increase_validator_count</code>.\nCreate a call with the variant <code>kick</code>.\nCreate a call with the variant <code>nominate</code>.\nCreate a call with the variant <code>payout_stakers</code>.\nCreate a call with the variant <code>payout_stakers_by_page</code>.\nCreate a call with the variant <code>reap_stash</code>.\nCreate a call with the variant <code>rebond</code>.\nCreate a call with the variant <code>restore_ledger</code>.\nCreate a call with the variant <code>scale_validator_count</code>.\nCreate a call with the variant <code>set_controller</code>.\nCreate a call with the variant <code>set_invulnerables</code>.\nCreate a call with the variant <code>set_min_commission</code>.\nCreate a call with the variant <code>set_payee</code>.\nCreate a call with the variant <code>set_staking_configs</code>.\nCreate a call with the variant <code>set_validator_count</code>.\nCreate a call with the variant <code>unbond</code>.\nCreate a call with the variant <code>update_payee</code>.\nCreate a call with the variant <code>validate</code>.\nCreate a call with the variant <code>withdraw_unbonded</code>.\nDeclare the desire to nominate <code>targets</code> for the origin …\nDeclare the desire to nominate <code>targets</code> for the origin …\nAn auto-generated getter for <code>Nominators</code>.\nReturns the portions of nominators stashes that are …\nThe portions of nominators stashes that are exposed.\nReturns validator’s own stake that is exposed\nThe validator’s own stash that is exposed.\nReturns total exposure of this validator for the current …\nPay out next page of the stakers behind a validator for …\nPay out next page of the stakers behind a validator for …\nPay out a page of the stakers behind a validator for the …\nPay out a page of the stakers behind a validator for the …\nReturns true if validator has one or more page of era …\nPrune historical session tries up to but not including the …\nRemove all data structures concerning a staker/stash once …\nRemove all data structures concerning a staker/stash once …\nRebond a portion of the stash scheduled to be unlocked.\nRebond a portion of the stash scheduled to be unlocked.\nRestores the state of a ledger which is in an inconsistent …\nRestores the state of a ledger which is in an inconsistent …\nAdd reward points to validators using their stash account …\nScale up the ideal number of validators by a factor up to …\nScale up the ideal number of validators by a factor up to …\n(Re-)sets the controller of a stash to the stash itself. …\n(Re-)sets the controller of a stash to the stash itself. …\nStore exposure for elected validators at start of an era.\nSet the validators who cannot be slashed (if any).\nSet the validators who cannot be slashed (if any).\nSets the minimum amount of commission that each validators …\nSets the minimum amount of commission that each validators …\n(Re-)set the payment target for a controller.\n(Re-)set the payment target for a controller.\nUpdate the various staking configurations .\nUpdate the various staking configurations .\nSets the ideal number of validators.\nSets the ideal number of validators.\nSlash the staker for a given amount of balance.\nAn auto-generated getter for <code>SlashRewardFraction</code>.\nThe total balance that can be slashed from a stash account …\nInternal impl of <code>Self::slashable_balance_of</code> that returns …\nA slashing implementation for NPoS systems.\nAn auto-generated getter for <code>SlashingSpans</code>.\nMoment of start expressed as millisecond from <code>$UNIX_EPOCH</code>.\nThe stash account whose balance is actually locked and at …\nAuto-generated docs-only module listing all (public and …\nProcess the output of the election.\nThe era the nominations were submitted.\nWhether the nominations have been suppressed. This can …\nThe targets of nomination.\nTesting utils for staking. Provides some common functions …\nReturns total exposure of this validator across pages\nThe total balance backing this validator.\nTotal number of points. Equals the sum of reward points …\nThe total amount of the stash’s balance that we are …\nPlan a new era.\nSchedule a portion of the stash to be unlocked ready for …\nSchedule a portion of the stash to be unlocked ready for …\nAny balance that is becoming free, which may eventually be …\nMigrates an account’s <code>RewardDestination::Controller</code> to …\nMigrates an account’s <code>RewardDestination::Controller</code> to …\nDeclare the desire to validate for the origin controller.\nDeclare the desire to validate for the origin controller.\nAn auto-generated getter for <code>ValidatorCount</code>.\nGet the validators from session.\nAn auto-generated getter for <code>Validators</code>.\nAmount of funds exposed.\nVirtually bonds <code>keyless_who</code> to <code>payee</code> with <code>value</code>.\nSame as <code>weight_of_fn</code>, but made for one time use.\nReturns a closure around <code>slashable_balance_of_vote_weight</code> …\nAutogenerated weights for <code>pallet_staking</code>\nThe stash account of the nominator in question.\nRemove any unlocked chunks from the <code>unlocking</code> queue from …\nRemove any unlocked chunks from the <code>unlocking</code> queue from …\nGrab an account, seeded by a name and index.\nConstruct pallet benchmarks for weighing dispatchables.\nThis creates a test suite which runs the module’s …\nThis caller account is automatically whitelisted for DB …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTake the origin account as a stash and lock up <code>value</code> of …\nAdd some extra amount that have appeared in the stash …\nCancel enactment of a deferred slash.\nDeclare no desire to either validate or nominate.\nDeclare a <code>controller</code> to stop participating as either a …\nUpdates a batch of controller accounts to their …\nForce a validator to have at least the minimum commission. …\nForce there to be a new era at the end of the next …\nForce there to be a new era at the end of sessions …\nForce there to be no new eras indefinitely.\nForce a current staker to become completely unstaked, …\nIncrements the ideal number of validators up to maximum of …\nRemove the given nominations from the calling validator.\nDeclare the desire to nominate <code>targets</code> for the origin …\nPay out next page of the stakers behind a validator for …\nPay out a page of the stakers behind a validator for the …\nRemove all data structures concerning a staker/stash once …\nRebond a portion of the stash scheduled to be unlocked.\nRestores the state of a ledger which is in an inconsistent …\nScale up the ideal number of validators by a factor up to …\n(Re-)sets the controller of a stash to the stash itself. …\nSet the validators who cannot be slashed (if any).\nSets the minimum amount of commission that each validators …\n(Re-)set the payment target for a controller.\nUpdate the various staking configurations .\nSets the ideal number of validators.\nSchedule a portion of the stash to be unlocked ready for …\nMigrates an account’s <code>RewardDestination::Controller</code> to …\nDeclare the desire to validate for the origin controller.\nRemove any unlocked chunks from the <code>unlocking</code> queue from …\nKeeps track of the SCALE encoded byte length of the …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nTries to register a new target.\nTries to register a new voter.\nThe total payout to all validators (and their nominators) …\nMigration of era exposure storage items to paged exposures.\nMigrating <code>OffendingValidators</code> from <code>Vec&lt;(u32, bool)&gt;</code> to …\nApply any pending slashes that where queued.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nMigrate the entire storage of this pallet to a new prefix.\nClean up <code>T::HistoryDepth</code> from storage.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nMigrate storage to v6.\ncheck to execute prior to migration.\nMigration to sorted <code>VoterList</code>.\nMigration implementation that injects all validators into …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAn encoding of all of a nominator’s slashing spans.\nThe index of a slashing span - unique to each stash.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nYields the era index where the most recent non-zero slash …\nThe active era information, it holds index and start.\nMap from all locked “stash” accounts to the controller …\nA mapping from still-bonded eras to the first session …\nThe amount of currency given to reporters of a slash event …\nThe threshold for when users can start calling <code>chill_other</code> …\nHistory of claimed paged rewards by era and validator.\nThe current era index.\nThe last planned session scheduled by the session pallet.\nIndices of validators that have offended in the active …\nRewards for the last <code>Config::HistoryDepth</code> eras. If reward …\nExposure of validator at era.\nClipped Exposure of validator at era.\nSummary of validator exposure at a given era.\nPaginated exposure of a validator at given era.\nThe session index at which the era start for the last …\nThe total amount staked for the last <code>Config::HistoryDepth</code> …\nSimilar to <code>ErasStakers</code>, this holds the preferences of …\nThe total validator era payout for the last …\nMode of era forcing.\nAny validators that may never be slashed or forcibly …\nMap from all (unlocked) “controller” accounts to the …\nThe maximum nominator count before we stop allowing new …\nMaximum staked rewards, i.e. the percentage of the era …\nThe maximum validator count before we stop allowing new …\nThe minimum amount of commission that validators can set.\nThe minimum active bond to become and maintain the role of …\nThe minimum active bond to become and maintain the role of …\nThe minimum active nominator stake of the last successful …\nMinimum number of staking participants before emergency …\nAll slashing events on nominators, mapped by era to the …\nThe map from nominator stash key to their nomination …\nWhere the reward payment should be made. Keyed by stash.\nThe percentage of the slash that is distributed to …\nSlashing spans for stash accounts.\nRecords information about the maximum slash of a stash …\nAll unapplied slashes that are queued for later.\nThe ideal number of active validators.\nAll slashing events on validators, mapped by era to the …\nThe map from (wannabe) validator stash key to the …\nStakers whose funds are managed by other pallets.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis function removes all validators and nominators from …\nGrab a funded user.\nGrab a funded user with max Balance.\nCreate a stash and controller pair, where payouts go to a …\nCreate a stash and controller pair.\nCreate a stash and controller pair with fixed balance.\nCreate a unique stash and controller pair.\ncreate <code>max</code> validators.\nThis function generates validators and nominators who are …\ncreate <code>max</code> validators, with a seed to help unintentional …\nget the current era.\nWeights for <code>pallet_staking</code> using the Substrate node and …\nWeight functions needed for <code>pallet_staking</code>.\nStorage: <code>Staking::Bonded</code> (r:1 w:1) Proof: <code>Staking::Bonded</code> (…\nStorage: <code>Staking::Bonded</code> (r:1 w:0) Proof: <code>Staking::Bonded</code> (…\nStorage: <code>Staking::UnappliedSlashes</code> (r:1 w:1) Proof: …\nStorage: <code>Staking::Ledger</code> (r:1 w:0) Proof: <code>Staking::Ledger</code> (…\nStorage: <code>Staking::Bonded</code> (r:1 w:0) Proof: <code>Staking::Bonded</code> (…\nStorage: <code>Staking::Ledger</code> (r:11800 w:11800) Proof: …\nStorage: <code>Staking::MinCommission</code> (r:1 w:0) Proof: …\nStorage: <code>Staking::ForceEra</code> (r:0 w:1) Proof: …\nStorage: <code>Staking::ForceEra</code> (r:0 w:1) Proof: …\nStorage: <code>Staking::ForceEra</code> (r:0 w:1) Proof: …\nStorage: <code>Staking::SlashingSpans</code> (r:1 w:1) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nStorage: <code>Staking::CounterForValidators</code> (r:1 w:0) Proof: …\nStorage: <code>VoterList::CounterForListNodes</code> (r:1 w:0) Proof: …\nCalls <code>U::from(self)</code>.\nStorage: <code>Staking::Ledger</code> (r:1 w:0) Proof: <code>Staking::Ledger</code> (…\nStorage: <code>VoterList::CounterForListNodes</code> (r:1 w:0) Proof: …\nStorage: <code>Staking::Ledger</code> (r:1 w:0) Proof: <code>Staking::Ledger</code> (…\nStorage: <code>Staking::Bonded</code> (r:257 w:0) Proof: <code>Staking::Bonded</code>…\nStorage: <code>Staking::Bonded</code> (r:1 w:1) Proof: <code>Staking::Bonded</code> (…\nStorage: <code>Staking::Ledger</code> (r:1 w:1) Proof: <code>Staking::Ledger</code> (…\nStorage: <code>Balances::Locks</code> (r:1 w:1) Proof: <code>Balances::Locks</code> (…\nStorage: <code>Staking::Bonded</code> (r:1 w:1) Proof: <code>Staking::Bonded</code> (…\nStorage: <code>Staking::Invulnerables</code> (r:0 w:1) Proof: …\nStorage: <code>Staking::MinCommission</code> (r:0 w:1) Proof: …\nStorage: <code>Staking::Ledger</code> (r:1 w:0) Proof: <code>Staking::Ledger</code> (…\nStorage: <code>Staking::MinCommission</code> (r:0 w:1) Proof: …\nStorage: <code>Staking::MinCommission</code> (r:0 w:1) Proof: …\nStorage: <code>Staking::ValidatorCount</code> (r:0 w:1) Proof: …\nStorage: <code>Staking::Ledger</code> (r:1 w:1) Proof: <code>Staking::Ledger</code> (…\nStorage: <code>Staking::Ledger</code> (r:1 w:0) Proof: <code>Staking::Ledger</code> (…\nStorage: <code>Staking::Ledger</code> (r:1 w:0) Proof: <code>Staking::Ledger</code> (…\nStorage: <code>Staking::Ledger</code> (r:1 w:1) Proof: <code>Staking::Ledger</code> (…\nStorage: <code>Staking::Ledger</code> (r:1 w:1) Proof: <code>Staking::Ledger</code> (…")