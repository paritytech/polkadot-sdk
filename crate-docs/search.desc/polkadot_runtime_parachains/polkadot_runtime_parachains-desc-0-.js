searchState.loadedDescShard("polkadot_runtime_parachains", 0, "Runtime modules for parachains code.\nTrait for tracking message delivery fees on a transport …\nType used for assigning different fee factors to different …\nThe parachain coretime assignment module.\nThe bulk (parachain slot auction) blockspace assignment …\nConfiguration manager for the Polkadot runtime parachains …\nExtrinsics implementing the relay chain side of the …\nDecreases the delivery fee factor by a constant factor and …\nRuntime component for handling disputes of parachain …\nTo prevent Out of Memory errors on the <code>DownwardMessageQueue</code>…\nReturns the evolving exponential fee factor which will be …\nThe inclusion pallet is responsible for inclusion and …\nIncreases the delivery fee factor by a factor based on …\nThis module is responsible for maintaining a consistent …\nRuntime declaration of the parachain metrics.\nThe parachain on demand assignment module.\nDeclaration of the parachain specific origin and a pallet …\nThe paras pallet acts as the main registry of paras.\nProvides glue code over the scheduler and inclusion …\nAn implementation of the <code>RewardValidators</code> trait used by …\nRuntime API implementations for Parachains.\nSchedules a validation code upgrade to a parachain with …\nSchedule a para to be cleaned up at the start of the next …\nSchedule a para to be initialized at the start of the next …\nSchedule a lease holding parachain to be downgraded to an …\nSchedule a parathread (on-demand parachain) to be upgraded …\nThe scheduler module for parachains and parathreads.\nThe session info pallet provides information about …\nSets the current parachain head with the given id.\nA pallet for any shared state that other pallets may want …\nFraction expressed as a nominator with an assumed …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nTried to add an unsorted set of assignments\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nassign_core is only allowed to append new assignments at …\nTried to insert a schedule for the same core and block …\nThe <code>Error</code> enum of this pallet.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nAssignments together exceeded 57600.\nThe <code>Pallet</code> struct, the main type that implements traits …\nAssignments together less than 57600\nAppend another assignment for a core.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPush an assignment back to the front of the queue.\nAuto-generated docs-only module listing all (public and …\nAssignments which are currently active.\nScheduled assignment sets.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBulk assignment has no need to push the assignment back on …\nAuto-generated docs-only module listing all (public and …\nThe implementation of <code>Get&lt;(u32, u32)&gt;</code> which reads …\nAll configuration of the runtime with respect to paras.\nEnumerates the possible inconsistencies of …\n<code>executor_params</code> are inconsistent.\nTTL should be bigger than lookahead\nLookahead is zero, while it must be at least 1 for …\n<code>max_code_size</code> exceeds the hard limit of <code>MAX_CODE_SIZE</code>.\n<code>max_head_data_size</code> exceeds the hard limit of …\nMaximum HRMP message num (<code>MAX_HORIZONTAL_MESSAGE_NUM</code>) …\nMaximum number of HRMP inbound channels exceeded.\nMaximum number of HRMP outbound channels exceeded.\n<code>max_pov_size</code> exceeds the hard limit of <code>MAX_POV_SIZE</code>.\nMaximum UMP message num (<code>MAX_UPWARD_MESSAGE_NUM</code>) exceeded.\nMaximum UMP message size (<code>MAX_UPWARD_MESSAGE_SIZE_BOUND</code>) …\n<code>minimum_validation_upgrade_delay</code> is less than …\nPassed in queue size for on-demand was too large.\nA struct that holds the configuration that was active …\n<code>validation_upgrade_delay</code> is less than or equal 1.\nNumber of delay tranches cannot be 0.\n<code>group_rotation_frequency</code> is set to zero.\n<code>minimum_backing_votes</code> is set to zero.\n<code>no_show_slots</code> is set to zero.\n<code>paras_availability_period</code> is set to zero.\nParams used by approval-voting\nAsynchronous backing parameters.\nChecks that this instance is consistent with the …\nParameters that will unlikely be needed by parachains. How …\nThe amount of sessions to keep for disputes.\nHow long after dispute conclusion to accept statements.\nThe executor environment parameters\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe maximum number of messages allowed in an HRMP channel …\nThe maximum size of a message that could ever be put into …\nThe maximum total size of messages in bytes allowed in an …\nThe maximum number of outbound HRMP messages can be sent …\nThe maximum number of inbound HRMP channels a parachain is …\nThe maximum number of outbound HRMP channels a parachain …\nThe deposit that the recipient should provide for …\nThe deposit that the sender should provide for opening an …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe parameters that are required for the parachains. The …\nThe maximum size of a message that can be put in a …\nThe maximum head-data size, in bytes.\nThe parameters that are not essential, but still may be of …\nThe maximum number of messages that a candidate can …\nThe maximum size of an upward message that can be sent by …\nTotal number of individual messages allowed in the …\nTotal size of messages allowed in the parachain -&gt; …\nThe maximum number of validators to use for parachain …\nA module that is responsible for migration of storage.\nThe minimum number of valid backing statements required to …\nThe lower bound number of blocks an upgrade can be …\nThe number of delay tranches in total. Must be at least 1.\nThe number of validators needed to approve a block.\nIf new configuration was applied during the session …\nThe amount of consensus slots that must pass between …\nNode features enablement.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nChecks that this instance is consistent with the …\nPreviously active configuration.\nIf an active PVF pre-checking vote observes this many …\nThe number of samples to do of the <code>RelayVRFModulo</code> approval …\nScheduler parameters\nThe minimum period, in blocks, between which parachains …\nThe delay, in blocks, after which an upgrade of the …\nThe width of the zeroth delay tranche for approval …\nA module that is responsible for migration of storage.\nA module that is responsible for migration of storage.\nA module that is responsible for migration of storage.\nContains the V6 storage definition of the host …\nA module that is responsible for migration of storage.\nA module that is responsible for migration of storage.\nA module that is responsible for migration of storage.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAll configuration of the runtime with respect to paras.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAll configuration of the runtime with respect to paras.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe active configuration for the current session.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nCan be used to configure the genesis state of this pallet.\nThe new value for a configuration parameter is invalid.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nPending configuration changes.\nWeight information for extrinsics in this pallet.\nAuto-generated docs-only module listing all defined …\nForcibly set the active config. This should be used with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>set_approval_voting_params</code>.\nCreate a call with the variant <code>set_async_backing_params</code>.\nCreate a call with the variant <code>set_bypass_consistency_check</code>…\nCreate a call with the variant <code>set_code_retention_period</code>.\nCreate a call with the variant <code>set_coretime_cores</code>.\nCreate a call with the variant <code>set_dispute_period</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>set_executor_params</code>.\nCreate a call with the variant <code>set_group_rotation_frequency</code>…\nCreate a call with the variant …\nCreate a call with the variant …\nCreate a call with the variant …\nCreate a call with the variant …\nCreate a call with the variant …\nCreate a call with the variant …\nCreate a call with the variant <code>set_hrmp_open_request_ttl</code>.\nCreate a call with the variant <code>set_hrmp_recipient_deposit</code>.\nCreate a call with the variant <code>set_hrmp_sender_deposit</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>set_max_code_size</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>set_max_head_data_size</code>.\nCreate a call with the variant <code>set_max_pov_size</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>set_max_upward_message_size</code>.\nCreate a call with the variant <code>set_max_upward_queue_count</code>.\nCreate a call with the variant <code>set_max_upward_queue_size</code>.\nCreate a call with the variant <code>set_max_validators</code>.\nCreate a call with the variant <code>set_max_validators_per_core</code>.\nCreate a call with the variant <code>set_minimum_backing_votes</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>set_n_delay_tranches</code>.\nCreate a call with the variant <code>set_needed_approvals</code>.\nCreate a call with the variant <code>set_no_show_slots</code>.\nCreate a call with the variant <code>set_node_feature</code>.\nCreate a call with the variant <code>set_on_demand_base_fee</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>set_on_demand_queue_max_size</code>…\nCreate a call with the variant …\nCreate a call with the variant <code>set_on_demand_ttl</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>set_pvf_voting_ttl</code>.\nCreate a call with the variant <code>set_relay_vrf_modulo_samples</code>…\nCreate a call with the variant <code>set_scheduler_params</code>.\nCreate a call with the variant <code>set_scheduling_lookahead</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>set_validation_upgrade_delay</code>…\nCreate a call with the variant …\nSet approval-voting-params.\nSet approval-voting-params.\nSet the asynchronous backing parameters.\nSet the asynchronous backing parameters.\nSetting this to true will disable consistency checks for …\nSetting this to true will disable consistency checks for …\nSet the acceptance period for an included candidate.\nSet the acceptance period for an included candidate.\nSet the number of coretime execution cores.\nSet the number of coretime execution cores.\nSet coretime cores.\nSet the dispute period, in number of sessions to keep for …\nSet the dispute period, in number of sessions to keep for …\nSet the dispute post conclusion acceptance period.\nSet the dispute post conclusion acceptance period.\nSet PVF executor parameters.\nSet PVF executor parameters.\nSet the parachain validator-group rotation frequency\nSet the parachain validator-group rotation frequency\nSets the maximum number of messages allowed in an HRMP …\nSets the maximum number of messages allowed in an HRMP …\nSets the maximum size of a message that could ever be put …\nSets the maximum size of a message that could ever be put …\nSets the maximum total size of messages in bytes allowed …\nSets the maximum total size of messages in bytes allowed …\nSets the maximum number of outbound HRMP messages can be …\nSets the maximum number of outbound HRMP messages can be …\nSets the maximum number of inbound HRMP channels a …\nSets the maximum number of inbound HRMP channels a …\nSets the maximum number of outbound HRMP channels a …\nSets the maximum number of outbound HRMP channels a …\nSets the number of sessions after which an HRMP open …\nSets the number of sessions after which an HRMP open …\nSets the amount of funds that the recipient should provide …\nSets the amount of funds that the recipient should provide …\nSets the amount of funds that the sender should provide …\nSets the amount of funds that the sender should provide …\nSet the max number of times a claim may timeout on a core …\nSet the max number of times a claim may timeout on a core …\nSet the max validation code size for incoming upgrades.\nSet the max validation code size for incoming upgrades.\nSet the critical downward message size.\nSet the critical downward message size.\nSet the max head data size for paras.\nSet the max head data size for paras.\nSet the max POV block size for incoming upgrades.\nSet the max POV block size for incoming upgrades.\nSets the maximum number of messages that a candidate can …\nSets the maximum number of messages that a candidate can …\nSets the maximum size of an upward message that can be …\nSets the maximum size of an upward message that can be …\nSets the maximum items that can present in a upward …\nSets the maximum items that can present in a upward …\nSets the maximum total size of items that can present in a …\nSets the maximum total size of items that can present in a …\nSet the maximum number of validators to use in parachain …\nSet the maximum number of validators to use in parachain …\nSet the maximum number of validators to assign to any core.\nSet the maximum number of validators to assign to any core.\nSet the minimum backing votes threshold.\nSet the minimum backing votes threshold.\nSets the minimum delay between announcing the upgrade …\nSets the minimum delay between announcing the upgrade …\nSet the total number of delay tranches.\nSet the total number of delay tranches.\nSet the number of validators needed to approve a block.\nSet the number of validators needed to approve a block.\nSet the no show slots, in number of number of consensus …\nSet the no show slots, in number of number of consensus …\nSet/Unset a node feature.\nSet/Unset a node feature.\nSet the on demand (parathreads) base fee.\nSet the on demand (parathreads) base fee.\nSet the on demand (parathreads) fee variability.\nSet the on demand (parathreads) fee variability.\nSet the on demand (parathreads) queue max size.\nSet the on demand (parathreads) queue max size.\nSet the on demand (parathreads) fee variability.\nSet the on demand (parathreads) fee variability.\nSet the on demand (parathreads) ttl in the claimqueue.\nSet the on demand (parathreads) ttl in the claimqueue.\nSet the availability period for paras.\nSet the availability period for paras.\nSet the number of session changes after which a PVF …\nSet the number of session changes after which a PVF …\nSet the number of samples to do of the <code>RelayVRFModulo</code> …\nSet the number of samples to do of the <code>RelayVRFModulo</code> …\nSet scheduler-params.\nSet scheduler-params.\nSet the scheduling lookahead, in expected number of blocks …\nSet the scheduling lookahead, in expected number of blocks …\nSet the validation upgrade cooldown.\nSet the validation upgrade cooldown.\nSet the validation upgrade delay.\nSet the validation upgrade delay.\nSet the zeroth delay tranche width.\nSet the zeroth delay tranche width.\nAuto-generated docs-only module listing all (public and …\nSet approval-voting-params.\nSet the asynchronous backing parameters.\nSetting this to true will disable consistency checks for …\nSet the acceptance period for an included candidate.\nSet the number of coretime execution cores.\nSet the dispute period, in number of sessions to keep for …\nSet the dispute post conclusion acceptance period.\nSet PVF executor parameters.\nSet the parachain validator-group rotation frequency\nSets the maximum number of messages allowed in an HRMP …\nSets the maximum size of a message that could ever be put …\nSets the maximum total size of messages in bytes allowed …\nSets the maximum number of outbound HRMP messages can be …\nSets the maximum number of inbound HRMP channels a …\nSets the maximum number of outbound HRMP channels a …\nSets the number of sessions after which an HRMP open …\nSets the amount of funds that the recipient should provide …\nSets the amount of funds that the sender should provide …\nSet the max number of times a claim may timeout on a core …\nSet the max validation code size for incoming upgrades.\nSet the critical downward message size.\nSet the max head data size for paras.\nSet the max POV block size for incoming upgrades.\nSets the maximum number of messages that a candidate can …\nSets the maximum size of an upward message that can be …\nSets the maximum items that can present in a upward …\nSets the maximum total size of items that can present in a …\nSet the maximum number of validators to use in parachain …\nSet the maximum number of validators to assign to any core.\nSet the minimum backing votes threshold.\nSets the minimum delay between announcing the upgrade …\nSet the total number of delay tranches.\nSet the number of validators needed to approve a block.\nSet the no show slots, in number of number of consensus …\nSet/Unset a node feature.\nSet the on demand (parathreads) base fee.\nSet the on demand (parathreads) fee variability.\nSet the on demand (parathreads) queue max size.\nSet the on demand (parathreads) fee variability.\nSet the on demand (parathreads) ttl in the claimqueue.\nSet the availability period for paras.\nSet the number of session changes after which a PVF …\nSet the number of samples to do of the <code>RelayVRFModulo</code> …\nSet scheduler-params.\nSet the scheduling lookahead, in expected number of blocks …\nSet the validation upgrade cooldown.\nSet the validation upgrade delay.\nSet the zeroth delay tranche width.\nThe active configuration for the current session.\nIf this is set, then the configuration setters will bypass …\nPending configuration changes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nShorthand for the Balance type the runtime is using.\nA weight info that is only suitable for testing.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nMigrations for the Coretime pallet.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nReturn information about a legacy lease of a parachain.\nMigrate a chain to use coretime.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nIf parachain is a lease holding parachain, return the …\nCalls <code>U::from(self)</code>.\nAccountId to Location converter\nThe asset transactor.\nFailed to transfer assets to the coretime chain\nThe ParaId of the coretime chain.\nThe coretime chain pot location.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nA core has received a new assignment from the broker chain.\nThe runtime’s definition of a Currency.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nMaximum weight for any XCM transact call that should be …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe paraid making the call is not the coretime brokerage …\nThe <code>Pallet</code> struct, the main type that implements traits …\nRequested revenue information <code>when</code> parameter was in the …\nThe broker chain has asked for revenue information for a …\nThe XCM sender.\nSomething that provides the weight of this pallet.\nReceive instructions from the <code>ExternalBrokerOrigin</code>, …\nReceive instructions from the <code>ExternalBrokerOrigin</code>, …\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>assign_core</code>.\nCreate a call with the variant <code>request_core_count</code>.\nCreate a call with the variant <code>request_revenue_at</code>.\nProvide the amount of revenue accumulated from …\nRequest the configuration to be updated with the specified …\nRequest the configuration to be updated with the specified …\nRequest to claim the instantaneous coretime sales revenue …\nRequest to claim the instantaneous coretime sales revenue …\nAuto-generated docs-only module listing all (public and …\nReceive instructions from the <code>ExternalBrokerOrigin</code>, …\nRequest the configuration to be updated with the specified …\nRequest to claim the instantaneous coretime sales revenue …\nWhether the dispute is local or remote.\nThe result of a dispute, whether the candidate is deemed …\nHook into disputes handling.\nReward hooks for disputes.\nPunishment hooks for disputes.\nWhether the given candidate concluded invalid in a dispute …\nRemove dispute statement duplicates and sort the …\nFilter a single dispute statement set.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRetrieve the included state of a given candidate in a …\nCalled by the initializer to finalize the slashing pallet.\nCalled by the initializer to finalize the disputes pallet.\nCalled by the initializer to initialize the slashing …\nCalled by the initializer to initialize the disputes …\nCalled by the initializer to note that a new session has …\nCalled by the initializer to note that a new session has …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the chain is frozen, if the chain is frozen it …\nStorage migration(s) related to disputes pallet\nNote that the given candidate has been included.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nHandle sets of dispute statements corresponding to 0 or …\nPunish a series of validators who were against a valid …\nPunish a series of validators who were for an invalid …\nDispute slashing pallet.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nMigrates the pallet storage to the most recent version, …\nAncient dispute statement provided.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nA dispute has concluded for or against a candidate. …\nA dispute has been initiated. [candidate hash, dispute …\nDuplicate dispute statement sets provided.\nValidator vote submitted more than once to dispute.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nWhether the chain is frozen. Starts as <code>None</code>. When this is …\nInvalid signature on statement.\nA dispute vote from a malicious backer.\nNo backing votes were provides along dispute statements.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nA dispute has concluded with supermajority against a …\nA dispute where there are only votes on one side.\nUnconfirmed dispute statement sets provided.\nValidator index on statement is out of bounds for session.\nWeight information for extrinsics in this pallet.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>force_unfreeze</code>.\nAuto-generated docs-only module listing all (public and …\nWarning: Doc-Only\nBacking votes stored for each dispute. This storage is …\nAll ongoing or concluded disputes for the last several …\nWhether the chain is frozen. Starts as <code>None</code>. When this is …\nAll included blocks on the chain, as well as the block …\nThe last pruned session, if any. All data stored by this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe benchmarking configuration.\nA trait that defines methods to report an offence (after …\nThe longevity, in blocks, that the offence report is valid …\nThis type implements <code>SlashingHandler</code>.\nAn offence that is filed when a series of validators lost …\nActual <code>HandleReports</code> implementation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the offenders at the given time slot has …\nWhether the candidate was valid or invalid.\nStaking information about the validators that lost the …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nReport an offence.\nWhat fraction of the total exposure that should be slashed …\nCreate and dispatch a slashing report extrinsic. This …\nShould be unique per dispute.\nThe size of the validator set in that session.\nBenchmarking configuration.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe given slashing report is valid but already previously …\nThe <code>Error</code> enum of this pallet.\nThe slashing report handling subsystem, defines methods to …\nThe candidate hash is invalid.\nThe key ownership proof is invalid.\nThe session index is too old or invalid.\nThere is no pending slash for the given validator index …\nThe identification of a key owner, used when reporting …\nThe proof of key ownership, used for validating slashing …\nA system for proving ownership of keys, i.e. that a given …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe validator index does not match the validator id.\nWeight information for extrinsics in this pallet.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>report_dispute_lost_unsigned</code>…\nAuto-generated docs-only module listing all (public and …\nWarning: Doc-Only\nValidators pending dispute slashes.\n<code>ValidatorSetCount</code> per session.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe message being sent exceeds the configured max message …\nAn error sending a downward message.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe downward messages addressed for a certain para.\nInitialization value for the DeliveryFee factor.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nInitialization value for the DeliveryFee factor.\nDetermine whether enqueuing a downward message to a …\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEnqueue a downward message to a specific recipient para.\nAuto-generated docs-only module listing all (public and …\nThe factor to multiply the base delivery fee by.\nA mapping that stores the downward message queue MQC head …\nThe downward messages addressed for a certain para.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum bound that can be set for inbound channels.\nSame as <code>HRMP_MAX_INBOUND_CHANNELS_BOUND</code>, but for outbound …\nA metadata of an HRMP channel.\nA description of a request to open an HRMP channel.\nA weight info that is only suitable for testing.\nNOTE: this field is deprecated. Channel open requests …\nIndicates if this request was confirmed by the recipient.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum number of messages that can be pending in the …\nThe maximum number of messages that can be pending in the …\nThe maximum message size that could be put into the …\nThe maximum message size that could be put into the …\nThe maximum total size of the messages that can be pending …\nThe maximum total size of the messages that can be pending …\nA head of the Message Queue Chain for this channel. Each …\nThe current number of messages pending in the channel. …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe amount that the recipient supplied as a deposit when …\nThe amount that the sender supplied at the time of …\nThe amount that the sender supplied as a deposit when …\nThe total size in bytes of all message payloads in the …\nThe channel is already confirmed.\nThe channel from the sender to the origin doesn’t exist.\nThe recipient already has the maximum number of allowed …\nContains a variant per dispatchable extrinsic that this …\nCanceling is requested by neither the sender nor recipient …\nHRMP channel closed.\nThe channel between these two chains cannot be authorized.\nThe origin that can perform “force” actions on …\nThe channel close request is already requested.\nThe channel to be closed doesn’t exist.\nThe origin tries to close a channel where it is neither …\nConfiguration trait of this pallet.\nAn interface for reserving deposits for opening channels.\nThe default channel size and capacity to use when opening …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nPreopen the given HRMP channels.\nThis mapping tracks how many open channel requests were …\nStorage for the messages for each channel. Invariant: …\nMaintains a mapping that can be used to answer the …\nAn HRMP channel was opened via Root origin.\nHRMP channel data associated with each para. Invariant:\nA set of pending HRMP close channel requests that are …\nStorage type is <code>StorageValue</code> with value type …\nStorage type is <code>StorageMap</code> with key type <code>ParaId</code> and value …\nIngress/egress indexes allow to find all the senders and …\nThis mapping tracks how many open channel requests are …\nThe set of pending HRMP open channel requests.\nStorage type is <code>StorageValue</code> with value type …\nAn HRMP channel was opened with a system chain.\nThe HRMP watermark associated with each para. Invariant:\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nOpen HRMP channel accepted.\nAn HRMP channel request sent by the receiver was canceled …\nAn HRMP channel’s deposits were updated.\nOpen HRMP channel requested.\nCannot cancel an HRMP open channel request because it is …\nThe channel already exists\nThere is already a request to open the same channel.\nThe requested capacity exceeds the global limit.\nThe open request doesn’t exist.\nThe recipient is not a valid para.\nThe sender already has the maximum number of allowed …\nThe open request requested the message size that exceeds …\nThe sender tried to open a channel to themselves.\nThe requested capacity is zero.\nThe requested maximum message size is 0.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe outer event type.\nMeans of converting an <code>Xcm</code> into a <code>VersionedXcm</code>. This …\nSomething that provides the weight of this pallet.\nThe provided witness data is wrong.\nAccept a pending open channel request from the given …\nAuto-generated docs-only module listing all defined …\nEstablish a bidirectional HRMP channel between a parachain …\nEstablish a bidirectional HRMP channel between a parachain …\nEstablish an HRMP channel between two system chains. If …\nEstablish an HRMP channel between two system chains. If …\nThis extrinsic triggers the cleanup of all the HRMP …\nThis extrinsic triggers the cleanup of all the HRMP …\nOpen a channel from a <code>sender</code> to a <code>recipient</code> <code>ParaId</code>. …\nOpen a channel from a <code>sender</code> to a <code>recipient</code> <code>ParaId</code>. …\nForce process HRMP close channel requests.\nForce process HRMP close channel requests.\nForce process HRMP open channel requests.\nForce process HRMP open channel requests.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAccept a pending open channel request from the given …\nAccept a pending open channel request from the given …\nThis cancels a pending open channel request. It can be …\nThis cancels a pending open channel request. It can be …\nInitiate unilateral closing of a channel. The origin must …\nInitiate unilateral closing of a channel. The origin must …\nInitiate opening a channel from a parachain to a given …\nInitiate opening a channel from a parachain to a given …\nInitiate opening a channel from a parachain to a given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>establish_system_channel</code>.\nCreate a call with the variant <code>force_clean_hrmp</code>.\nCreate a call with the variant <code>force_open_hrmp_channel</code>.\nCreate a call with the variant <code>force_process_hrmp_close</code>.\nCreate a call with the variant <code>force_process_hrmp_open</code>.\nCreate a call with the variant <code>hrmp_accept_open_channel</code>.\nCreate a call with the variant <code>hrmp_cancel_open_request</code>.\nCreate a call with the variant <code>hrmp_close_channel</code>.\nCreate a call with the variant <code>hrmp_init_open_channel</code>.\nCreate a call with the variant <code>poke_channel_deposits</code>.\nUpdate the deposits held for an HRMP channel to the latest …\nUpdate the deposits held for an HRMP channel to the latest …\nAuto-generated docs-only module listing all (public and …\nEstablish a bidirectional HRMP channel between a parachain …\nEstablish an HRMP channel between two system chains. If …\nThis extrinsic triggers the cleanup of all the HRMP …\nOpen a channel from a <code>sender</code> to a <code>recipient</code> <code>ParaId</code>. …\nForce process HRMP close channel requests.\nForce process HRMP open channel requests.\nAccept a pending open channel request from the given …\nThis cancels a pending open channel request. It can be …\nInitiate unilateral closing of a channel. The origin must …\nInitiate opening a channel from a parachain to a given …\nUpdate the deposits held for an HRMP channel to the latest …\nThis mapping tracks how many open channel requests were …\nStorage for the messages for each channel. Invariant: …\nMaintains a mapping that can be used to answer the …\nHRMP channel data associated with each para. Invariant:\nA set of pending HRMP close channel requests that are …\nWarning: Doc-Only\nWarning: Doc-Only\nIngress/egress indexes allow to find all the senders and …\nThis mapping tracks how many open channel requests are …\nThe set of pending HRMP open channel requests.\nWarning: Doc-Only\nThe HRMP watermark associated with each para. Invariant:\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAggregate message origin for the <code>MessageQueue</code> pallet.\nA backed candidate pending availability.\nMaximum value that <code>config.max_upward_message_size</code> can be …\nThe maximal length of a UMP message.\nThe message originated from this parachain.\nReads the footprint of queues for a specific origin type.\nA hook for applying validator rewards\nInbound upward message.\nIdentifies a UMP queue inside the <code>MessageQueue</code> pallet.\nWeight for <code>enact_candidate</code> extrinsic given the number of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nMigrate to v1 inclusion module storage.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nA candidate was backed. <code>[candidate, head_data]</code>\nA candidate was included. <code>[candidate, head_data]</code>\nA candidate timed out. <code>[candidate, head_data]</code>\nConfiguration trait of this pallet.\nThe candidate’s relay-parent was not allowed. Either it …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nHead data exceeds the configured maximum.\nThe candidate didn’t follow the rules of HRMP watermark …\nThe downward message queue is not processed correctly.\nInsufficient (non-majority) backing.\nFailed to compute group index for the core: either it’s …\nInvalid (bad signature, unknown validator, etc.) backing.\nInvalid group index in core assignment.\nThe HRMP messages sent by the candidate is not valid.\nAt least one upward message sent does not pass the …\nThe validation code hash of the candidate is not valid.\nThe system message queue.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nOutput code is too large\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe <code>para_head</code> hash in the candidate descriptor doesn’t …\nCode upgrade prematurely.\nCandidate submitted but para not scheduled.\nSome upward messages have been received and will be …\nThe validation data hash does not match expected.\nValidator index out of bounds.\nWeight info for the calls of this pallet.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAuto-generated docs-only module listing all (public and …\nCandidates pending availability by <code>ParaId</code>. They form a …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nInform something about a new session.\nInformation about a session change that has just occurred.\nNumber of validators (not only parachain) in a session.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe configuration after handling the session change.\nA new session was started.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe configuration before handling the session change\nThe queued validators for the following session.\nA secure random seed for the session, gathered from BABE.\nNew session index.\nThe new validators in the session.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nTemporary hack to call <code>Coretime::on_new_session</code> on chains …\nAn origin which is allowed to force updates to parachains.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nA randomness beacon.\nWeight information for extrinsics in this pallet.\nAuto-generated docs-only module listing all defined …\nIssue a signal to the consensus engine to forcibly act as …\nIssue a signal to the consensus engine to forcibly act as …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>force_approve</code>.\nAuto-generated docs-only module listing all (public and …\nIssue a signal to the consensus engine to forcibly act as …\nBuffered session changes along with the block number at …\nWhether the parachains modules have been initialized …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSample the inherent data weight metric after filtering.\nSample the inherent data weight metric before filtering.\nIncrement the number of bitfields processed.\nIncrement the number of parachain candidates included.\nIncrement the total number of parachain candidates …\nIncrement the number of parachain candidates sanitized.\nIncrement the number of disputes that have concluded as …\nIncrement the number of disputes imported.\nSample the relay chain freeze events causing runtime to …\nA weight info that is only suitable for testing.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA module that is responsible for migration of storage.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nMigrate <code>V0</code> to <code>V1</code> of the storage format.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe runtime’s definition of a Currency.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe maximum number of blocks some historical revenue …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nAn order was placed at some spot price amount by orderer …\nThe <code>Pallet</code> struct, the main type that implements traits …\nIdentifier for the internal revenue balance.\nThe order queue is full, <code>place_order</code> will not continue.\nKeeps track of accumulated revenue from on demand order …\nThe runtime’s definition of an event.\nThe current spot price is higher than the max amount …\nThe value of the spot price has likely changed\nThe default value for the spot traffic multiplier.\nSomething that provides the weight of this pallet.\nAccount of the pallet pot, where the funds from …\nCollect the revenue from the <code>when</code> blockheight\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>place_order_allow_death</code>.\nCreate a call with the variant <code>place_order_keep_alive</code>.\nCreate a single on demand core order. Will use the spot …\nCreate a single on demand core order. Will use the spot …\nSame as the <code>place_order_allow_death</code> call , but with a …\nSame as the <code>place_order_allow_death</code> call , but with a …\nTake the next queued entry that is available for a given …\nPush an assignment back to the front of the queue.\nReport that the <code>para_id</code> &amp; <code>core_index</code> combination was …\nAuto-generated docs-only module listing all (public and …\nCreate a single on demand core order. Will use the spot …\nSame as the <code>place_order_allow_death</code> call , but with a …\nQueue entries that are currently bound to a particular …\nPriority queue for all orders which don’t yet (or not …\nMaps a <code>ParaId</code> to <code>CoreIndex</code> and keeps track of how many …\nOverall status of queue (both free + affinity entries)\nKeeps track of accumulated revenue from on demand order …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEnsure that the origin <code>o</code> represents a parachain. Returns <code>Ok</code>…\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nOrigin for the parachains.\nThe <code>Pallet</code> struct, the main type that implements traits …\nIt comes from a parachain.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAuto-generated docs-only module listing all (public and …\nApply the upgrade directly at the expected relay chain …\nAssign coretime to some parachain.\nPara is a lease holding Parachain which is downgrading to …\nThis is intermediate “fix” for this issue: …\nParachain is queued to be offboarded.\nParathread (on-demand parachain) is queued to be …\nRuntime hook for when a parachain head is updated.\nPara is new and is onboarding as an on-demand or lease …\nArguments for initializing a para.\nDistinguishes between lease holding Parachain and …\nThe possible states of a para, to take into account …\nMetadata used to track previous parachain validation code …\nPara is a lease holding Parachain.\nPara is a Parathread (on-demand parachain).\nSet the <code>GoAhead</code> signal to inform the parachain that it is …\nThe strategy on how to handle a validation code upgrade.\nPara is a Parathread (on-demand parachain) which is …\nONLY USE FOR TESTING OR GENESIS.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe initial head data to use.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if para is currently offboarding.\nReturns true if parachain is currently onboarding. To …\nReturns true if para is currently treated as a parachain. …\nReturns true if para is currently treated as a parathread …\nReturns true if para is in a stable state, i.e. it is …\nReturns true if para is in any transitionary state.\nCalled when a parachain head is updated. Returns the …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nLease holding or on-demand parachain.\nThe initial validation code to use.\nImplements benchmarking setup for the <code>merkle-mountain-range</code>…\nStruct to setup benchmarks for the <code>merkle-mountain-range</code> …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA para has been queued to execute pending actions. <code>para_id</code>\nThe actions to perform during the start of a specific …\nRuntime hook for assigning coretime for a given parachain.\nContains a variant per dispatchable extrinsic that this …\nPara cannot be downgraded to an on-demand parachain.\nPara cannot be offboarded at this time.\nPara cannot be onboarded because it is already tracked by …\nPara cannot be upgraded to a lease holding parachain.\nParachain cannot currently schedule a code upgrade.\nValidation code stored by its hash.\nA code upgrade has been scheduled for a Para. <code>para_id</code>\nConfiguration trait of this pallet.\nThe validation code hash of every live para.\nCurrent code has been updated for a Para. <code>para_id</code>\nCurrent head has been updated for a Para. <code>para_id</code>\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe actual future code hash of a para.\nThe block number at which the planned code change is …\nCan be used to configure the genesis state of this pallet.\nThe head-data of every registered para.\nInvalid validation code size.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe context (relay-chain block number) of the most recent …\nA new head has been noted for a Para. <code>para_id</code>\nPara is not registered in our system.\nRuntime hook for when a parachain head is updated.\nThe <code>Pallet</code> struct, the main type that implements traits …\nAll lease holding parachains. Ordered ascending by <code>ParaId</code>. …\nPast code of parachains. The parachains themselves may not …\nThe given validation code was accepted by the PVF …\nThe given validator already has cast a vote.\nThe signature for the PVF pre-checking is invalid.\nThe given validation code was rejected by the PVF …\nThe given para either initiated or subscribed to a PVF …\nThe statement for PVF pre-checking is for a future session.\nThe statement for PVF pre-checking is stale.\nThe given PVF does not exist at the moment of process a …\nClaimed validator index is out of bounds.\nRetrieve how many UMP messages are enqueued for this …\nThis is used by the relay-chain to communicate that there …\nWeight information for extrinsics in this pallet.\nAdds the validation code to the storage.\nAdds the validation code to the storage.\nVerify that <code>schedule_para_initialize</code> can be called …\nAuto-generated docs-only module listing all defined …\nNote a new block head for para within the context of the …\nNote a new block head for para within the context of the …\nPut a parachain directly into the next session’s action …\nPut a parachain directly into the next session’s action …\nSchedule an upgrade as if it was scheduled in the given …\nSchedule an upgrade as if it was scheduled in the given …\nSet the storage for the parachain validation code …\nSet the storage for the parachain validation code …\nSet the storage for the current parachain head data …\nSet the storage for the current parachain head data …\nSet the storage for the current parachain head data …\nSet the storage for the current parachain head data …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nIncludes a statement for a PVF pre-checking vote. …\nIncludes a statement for a PVF pre-checking vote. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the given ID refers to a para that is …\nWhether a para ID corresponds to any live lease holding …\nWhether a para ID corresponds to any live parathread …\nReturns whether the given ID refers to a valid para.\nReturns the current lifecycle state of the para.\nCreate a call with the variant <code>add_trusted_validation_code</code>.\nCreate a call with the variant <code>force_note_new_head</code>.\nCreate a call with the variant <code>force_queue_action</code>.\nCreate a call with the variant <code>force_schedule_code_upgrade</code>.\nCreate a call with the variant <code>force_set_current_code</code>.\nCreate a call with the variant <code>force_set_current_head</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>include_pvf_check_statement</code>.\nCreate a call with the variant <code>poke_unused_validation_code</code>.\nRemove the validation code from the storage iff the …\nRemove the validation code from the storage iff the …\nGet a list of the first <code>MAX_PARA_HEADS</code> para heads sorted …\nAuto-generated docs-only module listing all (public and …\nTest function for triggering a new session in this pallet.\nAdds the validation code to the storage.\nNote a new block head for para within the context of the …\nPut a parachain directly into the next session’s action …\nSchedule an upgrade as if it was scheduled in the given …\nSet the storage for the parachain validation code …\nSet the storage for the current parachain head data …\nSet the storage for the current parachain head data …\nIncludes a statement for a PVF pre-checking vote. …\nRemove the validation code from the storage iff the …\nThe actions to perform during the start of a specific …\nValidation code stored by its hash.\nThe number of reference on the validation code in …\nThe validation code hash of every live para.\nThe actual future code hash of a para.\nThe block number at which the planned code change is …\nThe list of upcoming future code upgrades.\nThe head-data of every registered para.\nThe context (relay-chain block number) of the most recent …\nThe current lifecycle of a all known Para IDs.\nAll lease holding parachains. Ordered ascending by <code>ParaId</code>. …\nActual past code hash, indicated by the para id as well as …\nPast code of parachains. The parachains themselves may not …\nWhich paras have past code that needs pruning and the …\nThe list of all currently active PVF votes. Auxiliary to …\nAll currently active PVF pre-checking votes.\nUpcoming paras instantiation arguments.\nThe list of upcoming code upgrades.\nThe list of parachains that are awaiting for their upgrade …\nThis is used by the relay-chain to communicate to a …\nThis is used by the relay-chain to communicate that there …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks the InherentWeight invariant.\nA helper trait to allow calling retain while getting access\nHelper trait until <code>is_sorted_by</code> is stabilized. TODO: …\nThe context in which the inherent data is checked or …\nEnables filtering/limits weight of inherent up to maximum …\nGet time weights from benchmarks and set proof size to tx …\nThe weight of a single backed candidate with a code …\nVariant over <code>v</code>, the count of validity votes for a backed …\nThe weight of one bitfield.\nThe weight of processing an empty parachain inherent.\nVariant over <code>v</code>, the count of dispute statements in a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRetains only the elements specified by the predicate.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nContains a variant per dispatchable extrinsic that this …\nA candidate was filtered during inherent execution. This …\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe data given to the inherent will result in an …\nThe hash of the submitted parent header doesn’t …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nScraped on chain data for extracting resolved disputes as …\nThe <code>Pallet</code> struct, the main type that implements traits …\nInclusion inherent called more than once per block.\nToo many candidates supplied.\nWeight information for extrinsics in this pallet.\nAuto-generated docs-only module listing all defined …\nEnter the paras inherent. This will process bitfields and …\nEnter the paras inherent. This will process bitfields and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>enter</code>.\nAuto-generated docs-only module listing all (public and …\nEnter the paras inherent. This will process bitfields and …\nWhether the paras inherent was included within this block.\nScraped on chain data for extracting resolved disputes as …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe amount of era points given by backing a candidate that …\nThe amount of era points given by dispute voting on a …\nRewards validators for participating in parachains with …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA module exporting runtime API implementation functions …\nPut implementations of functions from staging APIs here.\nApproval voting subsystem configuration parameters\nImplementation for the <code>assumed_validation_data</code> function of …\nImplementation for <code>AsyncBackingParams</code> function from the …\nImplementation for the <code>availability_cores</code> function of the …\nImplementation for <code>ParaBackingState</code> function from the …\nImplementation for the <code>candidate_events</code> function of the …\nImplementation for the <code>candidate_pending_availability</code> …\nReturns all the candidates that are pending availability …\nImplementation for the <code>check_validation_outputs</code> function …\nReturns the claimqueue from the scheduler\nImplementation for <code>DisabledValidators</code>\nImplementation for the <code>dmq_contents</code> function of the …\nImplementation for <code>get_session_disputes</code> function from the …\nImplementation for the <code>inbound_hrmp_channels_contents</code> …\nReturn the min backing votes threshold from the …\nReturns the current state of the node features.\nDisputes imported via means of on-chain imports.\nImplementation for the <code>persisted_validation_data</code> function …\nReturns the list of all PVF code hashes that require …\nImplementation for the <code>AuthorityDiscoveryApi::authorities()</code>…\nGet session executor parameter set\nImplementation for the <code>session_index_for_child</code> function of …\nGet the session info for the given session, if stored.\nSubmits an PVF pre-checking vote.\nImplementation of <code>submit_report_dispute_lost</code> runtime API\nImplementation of <code>unapplied_slashes</code> runtime API\nImplementation for the <code>validation_code</code> function of the …\nImplementation for the <code>validation_code_by_hash</code> function of …\nReturns the validation code hash for the given parachain …\nImplementation for the <code>validator_groups</code> function of the …\nImplementation for the <code>validators</code> function of the runtime …\nThe block number type used by Polkadot. 32-bits will allow …\nCommon traits and types used by the scheduler and …\nA module that is responsible for migration of storage.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAssignment (ParaId -&gt; CoreIndex).\nA bulk assignment.\nA pool assignment.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nPush some assignment for mocking/benchmarks purposes.\nCalls <code>U::from(self)</code>.\nReturns the <code>ParaId</code> this assignment is associated to.\nPops an <code>Assignment</code> from the provider for a specified …\nPush back a previously popped assignment.\nA previously popped <code>Assignment</code> has been fully processed.\nHow many cores are allocated to this provider.\nThe core index the para got assigned to.\nThe assigned para id.\nMigrate <code>V0</code> to <code>V1</code> of the storage format.\nMigrate <code>V1</code> to <code>V2</code> of the storage format.\nOne entry for each availability core. The i’th parachain …\nContains a variant per dispatchable extrinsic that this …\nOne entry for each availability core. The <code>VecDeque</code> …\nThe core’s work concluded and the parablock assigned to …\nConfiguration trait of this pallet.\nRepresentation of a core in <code>AvailabilityCores</code>.\nConvenience type alias for <code>CoreOccupied</code>.\nNo candidate is waiting availability on this core right …\nNo candidate is waiting availability on this core right …\nReasons a core might be freed.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nA para is currently waiting for availability/inclusion on …\nA para is currently waiting for availability/inclusion on …\nAssignments as tracked in the claim queue.\nConvenience type declaration for <code>ParasEntry</code>.\nThe block number where the session start occurred. Used to …\nThe core’s work timed out.\nAll the validator groups. One for each core. Indices are …\nThe underlying <code>Assignment</code>.\nThe underlying <code>Assignment</code>.\nThe number of times the entry has timed out in …\nThe number of times the entry has timed out in …\nAuto-generated docs-only module listing all defined …\nFrees cores and fills the free claim queue spots by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs core free?\nCreate a new <code>ParasEntry</code>.\nReturn <code>Id</code> from the underlying <code>Assignment</code>.\nAuto-generated docs-only module listing all (public and …\nThe block height until this entry needs to be backed.\nThe block height until this entry needs to be backed.\nOne entry for each availability core. The i’th parachain …\nOne entry for each availability core. The <code>VecDeque</code> …\nThe block number where the session start occurred. Used to …\nAll the validator groups. One for each core. Indices are …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA type for representing the validator account id in a …\nAn abstraction for the authority discovery pallet to help …\nA tuple of <code>(AccountId, Identification)</code> where <code>Identification</code>\nRetrieve authority identifiers of the current authority …\nA module that is responsible for migration of storage.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe in-code storage version.\nThe validator account keys of the validators actively …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe earliest session for which previous session info is …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nExecutor parameter set for a given session index\nSession information in a rolling window. Should have an …\nA type for retrieving <code>AccountId</code>s of the validators in the …\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAuto-generated docs-only module listing all (public and …\nThe validator account keys of the validators actively …\nAssignment keys for the current session. Note that this …\nThe earliest session for which previous session info is …\nExecutor parameter set for a given session index\nSession information in a rolling window. Should have an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInformation about past relay-parents.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAll the validators actively participating in parachain …\nThe parachain attestation keys of the validators actively …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe current session index.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nFetches disabled validators list from session pallet. …\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the session index that should be used for any …\nTest function for setting the current session index.\nAuto-generated docs-only module listing all (public and …\nAll the validators actively participating in parachain …\nThe parachain attestation keys of the validators actively …\nAll allowed relay-parents.\nThe current session index.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")