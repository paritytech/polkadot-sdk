searchState.loadedDescShard("pallet_democracy", 0, "Democracy Pallet\nA vote for a referendum of a particular account.\nPermitted to do everything.\nA value denoting the strength of conviction of a vote.\nThe account is delegating <code>balance</code> of its balance to a …\nAmount of votes and capital placed in delegation for an …\nThe account is voting directly. <code>delegations</code> is the total …\nExternal proposal.\nReferendum finished at <code>end</code>, and has been <code>approved</code> or …\nA an bounded <code>Call</code>. Its encoding must be at most 128 bytes.\nA hash with no preimage length. We do not support creation …\n1x votes, locked for an enactment period following a …\n2x votes, locked for 2x enactment periods following a …\n3x votes, locked for 4x…\n4x votes, locked for 8x…\n5x votes, locked for 16x…\n6x votes, locked for 32x…\nA hash of the call together with an upper limit for its …\nIdentifies an owner of a metadata.\n0.1x votes, unlocked.\nReferendum is happening, the arg is the block number at …\nPermitted to do only the changes that do not need the owner…\nA proposal index.\nPublic proposal of the index.\nReferendum of the index.\nA referendum index.\nInfo regarding a referendum, present or past.\nInfo regarding an ongoing referendum.\nA simple majority of approvals is needed to pass this vote.\nA split vote with balances given for both ways, and with …\nA standard vote, one-way (approve or reject) with a given …\nA supermajority of rejects is needed to fail this vote.\nA supermajority of approvals is needed to pass this vote.\nInfo regarding an ongoing referendum.\nWhether an <code>unvote</code> operation is able to make actions that …\nA number of lock periods, plus a vote, one way or the …\nA means of determining if a vote is past pass threshold.\nAn indicator for what an account is doing; it can either …\nAdd an account’s vote into the tally.\nGiven a <code>tally</code> of votes and a total size of <code>electorate</code>, …\nReturns <code>Some</code> with whether the vote is an aye vote if it is …\nThe number of aye votes, expressed in terms of …\nThe total balance involved in this vote.\nDemocracy pallet benchmarking.\nThe amount of raw capital, used for the turnout.\nThe delay (in blocks) to wait after a successful …\nWhen voting on this referendum will end.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nIncrement some amount of votes.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe amount of time (in number of periods) that our …\nThe amount of this account’s balance that must currently …\nReturns <code>Some</code> of the lock periods that the account is …\nAll migrations of this pallet.\nThe number of nay votes, expressed in terms of …\nCreate a new tally.\nCreate a new instance.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe proposal being voted on.\nDecrement some amount of votes.\nRemove an account’s vote from the tally.\nThe current tally of votes in this referendum.\nThe thresholding mechanism to determine whether it passed.\nThe amount of funds currently expressing its opinion. …\nThe votes of a voter of the given <code>balance</code> with our …\nThe number of votes (this is post-conviction).\nAutogenerated weights for <code>pallet_democracy</code>\nThe total amount of delegations that this account has …\nThe total amount of delegations that this account has …\nAny pre-existing locks from past voting/delegating …\nAny pre-existing locks from past voting/delegating …\nThe current votes of the account.\nMigration to unlock and unreserve all pallet funds. A …\nV1 storage migrations for the preimage pallet. Storage …\nThe account ID used in the runtime.\nThe block number as configured in the runtime.\nThe currency type used in the runtime.\nThe DB weight as configured in the runtime to calculate …\nThe maximum deposit as configured previously in the …\nThe maximum number of votes as configured previously in …\nThe name of the pallet as previously configured in …\nA migration that unreserves all deposit and unlocks all …\nThe configuration for <code>UnlockAndUnreserveAllFunds</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nExecutes the migration.\nPerforms post-upgrade sanity checks:\nCollects pre-migration data useful for validating the …\nMigration for translating bare <code>Hash</code>es into <code>Bounded&lt;Call&gt;</code>s.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCannot cancel the same proposal twice\nThe account is already delegating.\nIdentity may not veto a proposal twice\nA record of who vetoed what. Maps proposal hash to a …\nOrigin from which proposals may be blacklisted.\nA proposal_hash has been blacklisted permanently.\nContains a variant per dispatchable extrinsic that this …\nOrigin from which a proposal may be cancelled and its …\nOrigin from which any referendum may be cancelled in an …\nRecord of all proposals that have been subject to …\nA referendum has been cancelled.\nConfiguration trait of this pallet.\nPeriod in blocks where an external proposal may not be …\nCurrency type for this pallet.\nAn account has delegated their vote to another account.\nThose who have locked a deposit.\nProposal already made\nThe period between a proposal being approved and enacted.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nOrigin from which the next tabled referendum may be …\nOrigin from which the next tabled referendum may be …\nOrigin from which the next tabled referendum may be …\nAn external proposal has been tabled.\nOrigin from which the next majority-carries (or more …\nMinimum voting period allowed for a fast-track referendum.\nCan be used to configure the genesis state of this pallet.\nIndicator for whether an emergency origin is even allowed …\nThe instant referendum origin is currently disallowed.\nOrigin from which the next majority-carries (or more …\nToo high a balance was provided that the account cannot …\nInvalid hash\nTrue if the last referendum tabled was submitted …\nHow often (in blocks) new public referenda are launched.\nThe lowest referendum index representing an unbaked …\nThe maximum number of items which can be blacklisted.\nThe maximum number of deposits a public proposal may have …\nThe maximum number of public proposals that can exist at …\nThe maximum number of votes for an account.\nMaximum number of votes reached.\nMetadata for a proposal or a referendum has been cleared.\nGeneral information concerning any proposal or referendum. …\nMetadata for a proposal or a referendum has been set.\nMetadata has been transferred to new owner.\nThe minimum amount to be used as a deposit for a public …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe referendum to be tabled whenever it would be valid to …\nThe actor has no permission to conduct the action.\nNo external proposal\nNo proposals waiting\nDelegation to oneself makes no sense.\nThe account is not currently delegating.\nA proposal has been rejected by referendum.\nNext external proposal not simple majority\nThe given account did not vote on the referendum.\nThe <code>Pallet</code> struct, the main type that implements traits …\nOverarching type of all pallets origins.\nA proposal has been approved by referendum.\nThe preimage does not exist.\nThe Preimage provider.\nProposal still blacklisted\nA proposal got canceled.\nProposal does not exist\nA motion has been proposed by a public account.\nThe number of (public) proposals that have been made so …\nThe public proposals. Unsorted. The second item is the …\nThe next free referendum index, aka the number of …\nInformation concerning any given referendum.\nVote given for invalid referendum\nThe Scheduler.\nAn account has seconded a proposal\nHandler for the unbalanced reduction when slashing a …\nA referendum has begun.\nOrigin from which the new proposal can be made.\nA public proposal has been tabled for referendum vote.\nMaximum number of items reached.\nAn account has cancelled a previous delegation operation.\nValue too low\nOrigin for anyone able to veto proposals.\nAn external proposal has been vetoed.\nThe minimum period of vote locking.\nAn account has voted in a referendum\nThe account currently has votes attached to it and the …\nAll votes for a particular voter. We store the balance for …\nHow often (in blocks) to check for new votes.\nVoting period too low\nInvalid upper bound.\nGet the amount locked in support of <code>proposal</code>; <code>None</code> if …\nPermanently place a proposal into the blacklist. This …\nPermanently place a proposal into the blacklist. This …\nRemove a proposal.\nRemove a proposal.\nRemove a referendum.\nRemove a referendum.\nClears all public proposals.\nClears all public proposals.\nDelegate the voting power (with some given conviction) of …\nDelegate the voting power (with some given conviction) of …\nAuto-generated docs-only module listing all defined …\nSchedule an emergency cancellation of a referendum. Cannot …\nSchedule an emergency cancellation of a referendum. Cannot …\nSchedule a referendum to be tabled once it is legal to …\nSchedule a referendum to be tabled once it is legal to …\nSchedule a negative-turnout-bias referendum to be tabled …\nSchedule a negative-turnout-bias referendum to be tabled …\nSchedule a majority-carries referendum to be tabled next …\nSchedule a majority-carries referendum to be tabled next …\nSchedule the currently externally-proposed …\nSchedule the currently externally-proposed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRemove a referendum.\nStart a referendum.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet all referenda ready for tally at block <code>n</code>.\nCreate a call with the variant <code>blacklist</code>.\nCreate a call with the variant <code>cancel_proposal</code>.\nCreate a call with the variant <code>cancel_referendum</code>.\nCreate a call with the variant <code>clear_public_proposals</code>.\nCreate a call with the variant <code>delegate</code>.\nCreate a call with the variant <code>emergency_cancel</code>.\nCreate a call with the variant <code>external_propose</code>.\nCreate a call with the variant <code>external_propose_default</code>.\nCreate a call with the variant <code>external_propose_majority</code>.\nCreate a call with the variant <code>fast_track</code>.\nCreate a call with the variant <code>propose</code>.\nCreate a call with the variant <code>remove_other_vote</code>.\nCreate a call with the variant <code>remove_vote</code>.\nCreate a call with the variant <code>second</code>.\nCreate a call with the variant <code>set_metadata</code>.\nCreate a call with the variant <code>undelegate</code>.\nCreate a call with the variant <code>unlock</code>.\nCreate a call with the variant <code>veto_external</code>.\nCreate a call with the variant <code>vote</code>.\nWeight: see <code>begin_block</code>\nPropose a sensitive action to be taken.\nPropose a sensitive action to be taken.\nRemove a vote for a referendum.\nRemove a vote for a referendum.\nRemove a vote for a referendum.\nRemove a vote for a referendum.\nSignals agreement with a particular proposal.\nSignals agreement with a particular proposal.\nSet or clear a metadata of a proposal or a referendum.\nSet or clear a metadata of a proposal or a referendum.\nAuto-generated docs-only module listing all (public and …\nUndelegate the voting power of the sending account.\nUndelegate the voting power of the sending account.\nUnlock tokens that have an expired lock.\nUnlock tokens that have an expired lock.\nVeto and blacklist the external proposal hash.\nVeto and blacklist the external proposal hash.\nVote in a referendum. If <code>vote.is_aye()</code>, the vote is to …\nVote in a referendum. If <code>vote.is_aye()</code>, the vote is to …\nPreimage hash.\nPreimage hash.\nPreimage hash.\nMetadata owner.\nMetadata owner.\nNew metadata owner.\nPrevious metadata owner.\nPermanently place a proposal into the blacklist. This …\nRemove a proposal.\nRemove a referendum.\nClears all public proposals.\nDelegate the voting power (with some given conviction) of …\nSchedule an emergency cancellation of a referendum. Cannot …\nSchedule a referendum to be tabled once it is legal to …\nSchedule a negative-turnout-bias referendum to be tabled …\nSchedule a majority-carries referendum to be tabled next …\nSchedule the currently externally-proposed …\nPropose a sensitive action to be taken.\nRemove a vote for a referendum.\nRemove a vote for a referendum.\nSignals agreement with a particular proposal.\nSet or clear a metadata of a proposal or a referendum.\nUndelegate the voting power of the sending account.\nUnlock tokens that have an expired lock.\nVeto and blacklist the external proposal hash.\nVote in a referendum. If <code>vote.is_aye()</code>, the vote is to …\nA record of who vetoed what. Maps proposal hash to a …\nRecord of all proposals that have been subject to …\nThose who have locked a deposit.\nTrue if the last referendum tabled was submitted …\nThe lowest referendum index representing an unbaked …\nGeneral information concerning any proposal or referendum. …\nThe referendum to be tabled whenever it would be valid to …\nThe number of (public) proposals that have been made so …\nThe public proposals. Unsorted. The second item is the …\nThe next free referendum index, aka the number of …\nInformation concerning any given referendum.\nAll votes for a particular voter. We store the balance for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_democracy</code> using the Substrate node and …\nWeight functions needed for <code>pallet_democracy</code>.\nStorage: <code>Democracy::PublicProps</code> (r:1 w:1) Proof: …\nStorage: <code>Democracy::PublicProps</code> (r:1 w:1) Proof: …\nStorage: <code>Democracy::MetadataOf</code> (r:1 w:1) Proof: …\nStorage: <code>Democracy::NextExternal</code> (r:1 w:0) Proof: …\nStorage: <code>Democracy::PublicProps</code> (r:1 w:0) Proof: …\nStorage: <code>Democracy::PublicProps</code> (r:0 w:1) Proof: …\nStorage: <code>Democracy::ReferendumInfoOf</code> (r:1 w:0) Proof: …\nStorage: <code>Democracy::VotingOf</code> (r:3 w:3) Proof: …\nStorage: <code>Democracy::ReferendumInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Democracy::NextExternal</code> (r:1 w:1) Proof: …\nStorage: <code>Democracy::NextExternal</code> (r:0 w:1) Proof: …\nStorage: <code>Democracy::NextExternal</code> (r:0 w:1) Proof: …\nStorage: <code>Democracy::NextExternal</code> (r:1 w:1) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Democracy::LowestUnbaked</code> (r:1 w:1) Proof: …\nStorage: <code>Democracy::LowestUnbaked</code> (r:1 w:1) Proof: …\nStorage: <code>Democracy::PublicPropCount</code> (r:1 w:1) Proof: …\nStorage: <code>Democracy::ReferendumInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Democracy::ReferendumInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Democracy::DepositOf</code> (r:1 w:1) Proof: …\nStorage: <code>Democracy::NextExternal</code> (r:1 w:0) Proof: …\nStorage: <code>Democracy::PublicProps</code> (r:1 w:0) Proof: …\nStorage: <code>Preimage::StatusFor</code> (r:1 w:0) Proof: …\nStorage: <code>Democracy::VotingOf</code> (r:2 w:2) Proof: …\nStorage: <code>Democracy::VotingOf</code> (r:1 w:1) Proof: …\nStorage: <code>Democracy::VotingOf</code> (r:1 w:1) Proof: …\nStorage: <code>Democracy::NextExternal</code> (r:1 w:1) Proof: …\nStorage: <code>Democracy::ReferendumInfoOf</code> (r:1 w:1) Proof: …\nStorage: <code>Democracy::ReferendumInfoOf</code> (r:1 w:1) Proof: …")