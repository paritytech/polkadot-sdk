searchState.loadedDescShard("messages_relay", 0, "Relaying <code>pallet-bridge-messages</code> application specific data. …\nProvides a label for metrics.\nReturns a label.\nOne-way message lane types. Within single one-way lane we …\nMessage delivery loop. Designed to work with messages …\nRelay messages delivery confirmation.\nRelay range of messages.\nLane identifier type.\nOne-way message lane.\nMessages proof.\nMessages receiving proof.\nName of the messages source.\nThe type of the source chain token balance, that is used …\nHash of the source header.\nSource header id within given one-way message lane.\nNumber of the source header.\nName of the messages target.\nHash of the target header.\nTarget header id within given one-way message lane.\nNumber of the target header.\nBatch transaction that already submit some headers and …\nType of batch transaction that submits finality and …\nType of batch transaction that submits finality and …\nState of the client.\nBoth clients state.\nMessage delivery race parameters.\nMessage details.\nMessages details map.\nMessage delivery race proof parameters.\nArtifacts of submitting nonces proof.\nMessage lane loop configuration params.\nSource client trait.\nState of source client in one-way message lane.\nTarget client trait.\nState of target client in one-way message lane.\nTransaction tracker to track submitted transactions.\nTransaction tracker to track submitted transactions.\nHeader id of the peer chain with the number, matching the …\nHeader id of the peer chain with the number, matching the …\nHeader id of the peer chain with the number, matching the …\nBest finalized header id of the peer chain read at the …\nBest finalized header id of the peer chain read at the …\nBest finalized header id of the peer chain read at the …\nBest finalized header id of this chain.\nBest finalized header id of this chain.\nBest finalized header id of this chain.\nThe best header id of this chain.\nThe best header id of this chain.\nThe best header id of this chain.\nMessage delivery race parameters.\nMessage dispatch weight.\nCumulative dispatch weight of messages that we’re …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns mapping of message nonces, generated on this …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nId of lane this loop is servicing.\nGet nonce of the latest message, which receiving has been …\nGet nonce of the latest confirmed message.\nGet nonce of instance of latest generated message.\nGet nonce of latest received message.\nMaximal number of relayed messages in single delivery …\nMaximal cumulative size of relayed messages in single …\nMaximal cumulative dispatch weight of relayed messages in …\nMessage delivery race will stop delivering messages if …\nMaximal number of unconfirmed relayer entries at the …\nReturn prefix that will be used by default to expose …\nSubmitted nonces range.\nInclude outbound lane state proof?\nProve messages in inclusive range [begin; end].\nProve messages receiving at given block.\nDelay between moments when connection error happens and …\nWe need given finalized source header on target to …\nWe need given finalized target header on source to …\nHeader that was required in the original call and which is …\nThe relayer reward paid in the source chain tokens.\nRun message lane service loop.\nMessage size (number of bytes in encoded payload).\nSource client state.\nInterval at which we ask target node about its updates.\nReturns state of the client.\nReturns state of the client.\nSubmit messages proof.\nSubmit messages receiving proof.\nTarget client state.\nInterval at which we ask target node about its updates.\nSubmitted transaction tracker.\nGet state of unrewarded relayers set at the inbound lane.")