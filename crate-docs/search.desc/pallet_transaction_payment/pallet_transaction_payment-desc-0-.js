searchState.loadedDescShard("pallet_transaction_payment", 0, "Transaction Payment Pallet\nThe underlying integer type in which fees are calculated.\nRequire the transactor pay for themselves and maybe …\nA struct to make the fee multiplier a constant\nImplements the transaction payment for a pallet …\nThe <code>FeeDetails</code> is composed of:\nImplements transaction payment for a pallet implementing …\nThe base fee and adjusted weight and length fees …\nFee multiplier.\nSomething that can convert the current multiplier to the …\nHandle withdrawing, refunding and depositing of …\nStorage releases of the pallet.\nInformation related to a dispatchable’s class, weight, …\nA struct to update the weight multiplier per block. It …\nOriginal version of the pallet.\nOne that bumps the usage to FixedU128 from FixedI128.\n<code>targeted_fee_adjustment</code>: This is a multiplier that can …\nThis is the minimum amount a user pays for a transaction. …\nClass of this dispatch.\nAfter the transaction was executed the actual fee can be …\nHand the fee and the tip over to the <code>[OnUnbalanced]</code> …\nReturns the final fee.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nutility constructor. Used only in client/factory code.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet an appropriate priority for a transaction with the …\nReturns the total of inclusion fee.\nThe minimum fee for a transaction to be included in a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe length fee, the amount paid for the encoded length (in …\nMaximum multiplier. Any outcome of the <code>convert</code> function …\nMinimum multiplier. Any outcome of the <code>convert</code> function …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe inclusion fee of this dispatch.\nTarget block saturation level\nReturns the tip as being chosen by the transaction sender.\nVariability factor\nWeight of this dispatch.\nBefore the transaction is executed the payment of the …\nWithdraw the predicted fee from the transaction origin.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nBased on <code>Config</code>. Auto-generated by …\nThe <code>Event</code> enum of this pallet\nUpdate the multiplier of the next block, based on the …\nUpdate the multiplier of the next block, based on the …\nCan be used to configure the genesis state of this pallet.\nConvert a length value into a deductible fee based on the …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nStorage type is <code>StorageValue</code> with value type <code>Multiplier</code>.\nHandler for withdrawing, refunding and depositing the …\nA fee multiplier for <code>Operational</code> extrinsics to compute “…\nA fee multiplier for <code>Operational</code> extrinsics to compute “…\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe overarching event type.\nThe overarching event type.\nStorage type is <code>StorageValue</code> with value type <code>Releases</code>.\nA transaction fee <code>actual_fee</code>, of which <code>tip</code> was added to …\nConvert a weight value into a deductible fee based on the …\nCompute the actual post dispatch fee for a particular …\nCompute the actual post dispatch fee details for a …\nCompute the final fee value for a particular transaction.\nCompute the fee details for a particular transaction.\nCompute the fee for the specified weight.\nDeposit the <code>Event::TransactionFeePaid</code> event.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompute the length portion of a fee by invoking the …\nPublic function to access the next fee multiplier.\nQuery fee details of a given encoded <code>Call</code>.\nQuery information of a dispatch class, weight, and fee of …\nQuery the detailed fee of a given <code>call</code>.\nQuery the data that we know about the fee of a given <code>call</code>.\nAuto-generated docs-only module listing all (public and …\nCompute the unadjusted portion of the weight fee by …\nDefault prelude sensible to be used in a testing …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nWarning: Doc-Only\nWarning: Doc-Only\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")