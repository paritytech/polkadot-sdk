searchState.loadedDescShard("pallet_proxy", 0, "Proxy Pallet\nDetails surrounding a specific instance of an announcement …\nThe parameters under which a particular account has a …\nThe number of blocks that an announcement must be in place …\nThe account which may act on behalf of another.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nA value defining the subset of calls that it is allowed to …\nAutogenerated weights for <code>pallet_proxy</code>\nAn announcement was placed to make a call in the future.\nThe base amount of currency needed to reserve for creating …\nThe amount of currency needed per announcement made.\nThe announcements made by the proxy (key).\nContains a variant per dispatchable extrinsic that this …\nThe type of hash used for hashing the call.\nConfiguration trait of this pallet.\nThe currency mechanism.\nAccount is already a proxy.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe maximum amount of time-delayed announcements that are …\nThe maximum amount of proxies allowed for a single account.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nCall may not be made by proxy because it may escalate its …\nCannot add self as proxy.\nProxy registration not found.\nSender is not a proxy of the account to be proxied.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe set of account proxies. Maps the account which has …\nA proxy was added.\nThe base amount of currency needed to reserve for creating …\nThe amount of currency needed per proxy added.\nA proxy was executed correctly, with the given.\nA proxy was removed.\nA kind of proxy; specified with the proxy and passed in to …\nA pure account has been created by new proxy with given …\nThe overarching call type.\nThe overarching event type.\nThere are too many proxies registered or too many …\nAnnouncement, if made at all, was made too recently.\nA call which is incompatible with the proxy type’s …\nWeight information for extrinsics in this pallet.\nRegister a proxy account for the sender that is able to …\nRegister a proxy account for the sender that is able to …\nRegister a proxy account for the delegator that is able to …\nPublish the hash of a proxy-call that will be made in the …\nPublish the hash of a proxy-call that will be made in the …\nPublic function to announcements storage.\nSpawn a fresh new account that is guaranteed to be …\nSpawn a fresh new account that is guaranteed to be …\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemoves a previously spawned pure proxy.\nRemoves a previously spawned pure proxy.\nCreate a call with the variant <code>add_proxy</code>.\nCreate a call with the variant <code>announce</code>.\nCreate a call with the variant <code>create_pure</code>.\nCreate a call with the variant <code>kill_pure</code>.\nCreate a call with the variant <code>proxy</code>.\nCreate a call with the variant <code>proxy_announced</code>.\nCreate a call with the variant <code>reject_announcement</code>.\nCreate a call with the variant <code>remove_announcement</code>.\nCreate a call with the variant <code>remove_proxies</code>.\nCreate a call with the variant <code>remove_proxy</code>.\nPublic function to proxies storage.\nDispatch the given <code>call</code> from an account that the sender is …\nDispatch the given <code>call</code> from an account that the sender is …\nDispatch the given <code>call</code> from an account that the sender is …\nDispatch the given <code>call</code> from an account that the sender is …\nCalculate the address of an pure account.\nRemove the given announcement of a delegate.\nRemove the given announcement of a delegate.\nRemoves all proxy delegates for a given delegator.\nRemove a given announcement.\nRemove a given announcement.\nUnregister all proxy accounts for the sender.\nUnregister all proxy accounts for the sender.\nUnregister a proxy account for the sender.\nUnregister a proxy account for the sender.\nUnregister a proxy account for the delegator.\nAuto-generated docs-only module listing all (public and …\nRegister a proxy account for the sender that is able to …\nPublish the hash of a proxy-call that will be made in the …\nSpawn a fresh new account that is guaranteed to be …\nRemoves a previously spawned pure proxy.\nDispatch the given <code>call</code> from an account that the sender is …\nDispatch the given <code>call</code> from an account that the sender is …\nRemove the given announcement of a delegate.\nRemove a given announcement.\nUnregister all proxy accounts for the sender.\nUnregister a proxy account for the sender.\nThe announcements made by the proxy (key).\nThe set of account proxies. Maps the account which has …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_proxy</code> using the Substrate node and …\nWeight functions needed for <code>pallet_proxy</code>.\nStorage: <code>Proxy::Proxies</code> (r:1 w:1) Proof: <code>Proxy::Proxies</code> (…\nStorage: <code>Proxy::Proxies</code> (r:1 w:0) Proof: <code>Proxy::Proxies</code> (…\nStorage: <code>Proxy::Proxies</code> (r:1 w:1) Proof: <code>Proxy::Proxies</code> (…\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Proxy::Proxies</code> (r:1 w:1) Proof: <code>Proxy::Proxies</code> (…\nStorage: <code>Proxy::Proxies</code> (r:1 w:0) Proof: <code>Proxy::Proxies</code> (…\nStorage: <code>Proxy::Proxies</code> (r:1 w:0) Proof: <code>Proxy::Proxies</code> (…\nStorage: <code>Proxy::Announcements</code> (r:1 w:1) Proof: …\nStorage: <code>Proxy::Announcements</code> (r:1 w:1) Proof: …\nStorage: <code>Proxy::Proxies</code> (r:1 w:1) Proof: <code>Proxy::Proxies</code> (…\nStorage: <code>Proxy::Proxies</code> (r:1 w:1) Proof: <code>Proxy::Proxies</code> (…")