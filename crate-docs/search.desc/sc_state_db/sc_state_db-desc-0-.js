searchState.loadedDescShard("sc_state_db", 0, "State database maintenance. Handles canonicalization and …\nNo pruning. Canonicalization is a no-op.\nCanonicalization discards non-canonical nodes. All the …\nThe given block number is the last canonicalized block.\nTrying to insert existing block.\nBlock record is missing from the pruning window\nTrying to get a block record from db while it is not …\nA set of state node changes.\nA set of changes to the backing database.\nMaintain a pruning window.\nPruning constraints. If none are specified pruning is\nDatabase value type.\nDatabase backend error.\n<code>Codec</code> decoding error.\nError type.\nBasic set of requirements for the Block hash and node key …\nInvalid pruning mode specified. Contains expected mode.\nTrying to canonicalize invalid block.\nTrying to pin invalid block.\nTrying to insert block with invalid number.\nTrying to insert block with unknown parent.\nThe result return by <code>StateDb::is_pruned</code>\nStatus information about the last canonicalized block.\nMay or may not pruned, need further checking\nBackend database trait. Read-only.\nInvalid metadata\nBackend database trait. Read-only.\nNot yet have canonicalized any block.\nNo canonicalization is happening (pruning mode is archive …\nDefinitely not pruned\nPinning error type.\nDefinitely pruned\nPruning mode.\nState DB maintenance. See module description. Can be …\nToo many unfinalized sibling blocks inserted.\nCreate a mode that keeps given number of blocks.\nFinalize a previously inserted block.\nState node changes.\nDeleted nodes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet state trie node.\nGet a value from non-canonical/pruning overlay or the …\nGet meta value, such as the journal.\nReturns the pruning mode\nAdd a new non-canonical block.\nInserted nodes.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this an archive (either ArchiveAll or ArchiveCanonical) …\nCheck if block is pruned away.\nReturns last canonicalized block.\nMaximum blocks. Defaults to 0 when unspecified, …\nMetadata changes.\nCreate an instance of <code>StateDb</code>.\nPrevents pruning of specified block and its descendants. …\nRemove specified non-canonical block. Returns a database …\nReset in-memory changes to the last disk-backed state.\nRevert all non-canonical blocks with the best block number.\nConfirm that all changes made to commit sets are on disk. …\nAllows pruning of specified block.")