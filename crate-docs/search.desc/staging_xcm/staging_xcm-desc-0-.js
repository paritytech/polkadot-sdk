searchState.loadedDescShard("staging_xcm", 0, "Cross-Consensus Message format data structures.\n<code>WrapVersion</code> implementation which attempts to always …\n<code>WrapVersion</code> implementation which attempts to always …\n<code>WrapVersion</code> implementation which attempts to always …\n<code>WrapVersion</code> implementation which attempts to always …\n<code>WrapVersion</code> implementation which attempts to always …\nWrapper around the encoded and decoded versions of a value.\nCheck and return the <code>Version</code> that should be used for the …\nUsed to get the version out of a versioned type.\nAttempt to convert <code>self</code> into a particular version of …\nMaximum nesting level for XCM decoding.\nA version of XCM.\nA single <code>Asset</code> value, together with its version code.\nA single version’s <code>AssetId</code> value, together with its …\nA single <code>MultiAssets</code> value, together with its version code.\nA single <code>InteriorLocation</code> value, together with its version …\nA single <code>Junction</code> value, together with its version code.\nA single <code>Location</code> value, together with its version code.\nA single <code>NetworkId</code> value, together with its version code.\nA single version’s <code>Response</code> value, together with its …\nA single XCM message, together with its version code.\nConvert an <code>Xcm</code> datum into a <code>VersionedXcm</code>, based on a …\nProvides an API similar to <code>AsRef</code> that provides access to …\nDecode the inner encoded value and store it. Returns a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAccess the encoded data.\nConsume <code>self</code> and return same value expressed the latest …\nConsume <code>self</code> and return same value expressed in some …\nMove the decoded value out or (if not present) decode …\nProvides an API similar to <code>TryInto</code> that allows fallible …\nXCM Version 2\nVersion 3 of the Cross-Consensus Message format data …\nVersion 4 of the Cross-Consensus Message format data …\nChecks that the XCM is decodable with <code>MAX_XCM_DECODE_DEPTH</code>…\nThe basic <code>VersionedXcm</code> type which just uses the <code>Vec&lt;u8&gt;</code> as …\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nThe unambiguous administration body (for Polkadot, an …\nAll assets in the holding register, up to <code>usize</code> individual …\nAll assets in the holding register of a given fungibility …\nA unit struct which can be converted into a <code>MultiLocation</code> …\nA unit struct which can be converted into a <code>MultiLocation</code> …\nUnidentified/any.\nA 16-byte fixed-length datum.\nA 32-byte fixed-length datum.\nA 4-byte fixed-length datum.\nAn 8-byte fixed-length datum.\nClassification of an asset being concrete or abstract.\nA general identifier for an instance of a non-fungible …\nThe given asset is not handled.\nSome assets.\nNo less than the given proportion of members of the body.\nThe Origin Register does not contain a valid value for …\nThe XCM did not pass the barrier condition for execution.\nAn arbitrary piece of data. Use only when necessary.\nAn identifier of a pluralistic body.\nA part of a pluralistic body.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nExecution completed successfully; given weight was used.\nThe unambiguous defense body (for Polkadot, an opinion on …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe given message cannot be translated into a format …\nThe given message cannot be translated into a format that …\nContains the error value\nContains the error value\nExecution did not start due to the given error.\nAttempt to send a message greater than the maximum …\nMessage could not be sent due to its size exceeding the …\nRemove the asset(s) (<code>give</code>) from the Holding Register and …\nType of XCM message executor.\nThe outcome of an XCM instruction.\nThe unambiguous executive body (for Polkadot, this would …\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nA given number of members of the body, out of some larger …\nClassification of whether an asset is fungible or not, …\nA non-descript index within the context location.\nA nondescript datum acting as a key within the context …\nThe interpreting consensus system.\nThe interpreting consensus system.\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nExecution started, but did not complete successfully due …\nA compact index. Technically this could be greater than …\nAn indexed body.\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nCross-Consensus Message: A message from one consensus …\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nThe unambiguous judicial body (this doesn’t exist on …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nKusama.\nThe unambiguous legislative body (for Polkadot, this could …\nWeight limit imposed of the inner value.\nAn asset cannot be deposited under the ownership of a …\nThe maximal number of instructions in an XCM before …\nUsed by <code>Transact</code> to indicate that the given weight limit …\nA given number of members of the body.\nMore than the given proportion of members of the body.\n<code>MultiAsset</code> collection, either <code>MultiAssets</code> or a single …\nA <code>Vec</code> of <code>MultiAsset</code>s. There may be no duplicate fungible …\nA relative path between state-bearing consensus systems.\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nSome named network.\nA named body.\nOrigin should just be the native dispatch origin …\nA global identifier of an account-bearing consensus system.\nThe message and destination combination was not recognized …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nNo response. Serves as a neutral default.\nContains the success value\nContains the success value\nThe unambiguous child.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nAn indexed parachain belonging to and operated by the …\nA unit struct which can be converted into a <code>MultiLocation</code> …\nA tuple struct which can be converted into a <code>MultiLocation</code> …\nA pluralistic body existing within consensus.\nThe Polkadot Relay chain\nSend a <code>Balances</code> XCM message with the <code>assets</code> value equal to …\nAn identifier for a query.\nRespond with information that the local system is …\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nResponse data to a query.\nError result value when attempting to send an XCM message.\nResult value when attempting to send an XCM message.\nUtility for sending an XCM message.\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nOrigin should just be the standard account-based origin …\nAsk the destination system to respond with the most recent …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nThe unambiguous technical body (for Polkadot, this would …\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nDestination is routable, but there is some issue with the …\nDestination is routable, but there is some issue with the …\nUsed by the <code>Trap</code> instruction to force an error …\nAlways throws an error of type <code>Trap</code>.\nThe unambiguous treasury body (for Polkadot, an opinion on …\nUndefined - used if the non-fungible asset class has only …\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nThe only body in its context.\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nNo weight limit imposed.\nDestination is known to be unroutable.\nDestination is known to be unroutable. This is considered …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nThis module’s XCM version.\nAn XCM version.\nThe body’s declaration, under whatever means it decides.\nLocal weight type; execution time in picoseconds.\nAn optional weight limit.\nExecution of the XCM would potentially result in a greater …\nThe weight of an XCM message is not computable ahead of …\nClassification of whether an asset is fungible or not.\nA wildcard representing a set of assets.\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nDEPRECATED. Please use XCMv3 or XCMv4 instead.\nOrigin should be interpreted as an XCM native origin and …\nCreates a new <code>MultiLocation</code> with <code>parents</code> and an empty (<code>Here</code>…\nMutate <code>self</code> so that it is suffixed with <code>suffix</code>.\nReturns the junction at index <code>i</code>, or <code>None</code> if the location …\nReturns the junction at index <code>i</code>, or <code>None</code> if the location …\nReturns a mutable reference to the junction at index <code>i</code>, or …\nReturns a mutable reference to the junction at index <code>i</code>, or …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code>.\nReturns true if <code>self</code> is a super-set of the given <code>inner</code>.\nReturns true if <code>self</code> is a super-set of the given <code>inner</code>.\nReturns true if <code>self</code> is a super-set of the given <code>inner</code>.\nReturns boolean indicating whether <code>self</code> contains only the …\nDecrements the parent count by 1.\nConsume <code>self</code> and return the inner vec.\nExecute some XCM <code>message</code> from <code>origin</code> using no more than …\nExecute some XCM <code>message</code> from <code>origin</code> using no more than …\nExecute some XCM <code>message</code> from <code>origin</code> using no more than …\nReturns first junction, or <code>None</code> if the location is empty.\nReturn the first instruction, if any.\nReturns the first interior junction, or <code>None</code> if the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new instance of <code>MultiAssets</code> from a <code>Vec&lt;MultiAsset&gt;</code>…\nCreate a new instance of <code>MultiAssets</code> from a <code>Vec&lt;MultiAsset&gt;</code>…\nReturn a reference to an item at a specific index or <code>None</code> …\nCreates a new <code>MultiLocation</code> which evaluates to the grand …\nCreates a new <code>MultiLocation</code> with 0 parents and a <code>Here</code> …\nReturn a reference to the inner vec.\nReturn a reference to the interior field.\nThe interior (i.e. non-parent) junctions that this …\nReturn a mutable reference to the interior field.\nCalls <code>U::from(self)</code>.\nConvert <code>self</code> into a <code>MultiLocation</code> containing 0 parents.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert <code>self</code> into a <code>MultiLocation</code> containing 0 parents.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert <code>self</code> into a <code>MultiLocation</code> containing <code>n</code> parents.\nConvert <code>self</code> into a <code>MultiLocation</code> containing <code>n</code> parents.\nConsumes <code>self</code> and returns an iterator over the junctions …\nUse the value of <code>self</code> along with a <code>fun</code> fungibility …\nReturn the only instruction, contained in <code>Self</code>, iff only …\nUse the value of <code>self</code> along with a <code>fun</code> fungibility …\nTreating <code>self</code> as a context, determine how it would be …\nReturn <code>true</code> if no instructions are held in <code>self</code>.\nWhether the <code>MultiLocation</code> has no parents and has a <code>Here</code> …\nReturns <code>true</code> if the part represents a strict majority (&gt; …\nReturns <code>true</code> if this definitely represents no asset.\nReturns a reference iterator over the junctions.\nReturns a reference iterator over the junctions in reverse.\nReturns last junction, or <code>None</code> if the location is empty or …\nReturns last junction, or <code>None</code> if the location is empty.\nReturn the last instruction, if any.\nReturn the number of distinct asset instances contained.\nReturns the number of parents and junctions in <code>self</code>.\nReturns the number of junctions in <code>self</code>.\nReturn the number of instructions held in <code>self</code>.\nEnsures that <code>self</code> has the same number of parents as <code>prefix</code>…\nEnsures that self begins with <code>prefix</code> and that it has a …\nA new (empty) value.\nCreates a new <code>MultiLocation</code> with the given number of …\nCreate an empty instance.\nReturn the only instruction, contained in <code>Self</code>, iff only …\nConsume and either return <code>self</code> if it contains some …\nCreates a new <code>MultiLocation</code> which evaluates to the parent …\nReturns the number of <code>Parent</code> junctions at the beginning of …\nThe number of parent junctions at the beginning of this …\nA prelude for importing all types typically used when …\nPrepend a <code>MultiLocation</code> to a concrete asset, giving it a …\nPrepend a <code>MultiLocation</code> to a concrete asset, giving it a …\nPrepend a <code>MultiLocation</code> to any concrete asset items, …\nMutate <code>self</code> so that it is prefixed with <code>prefix</code>.\nAdd some asset onto the list, saturating. This is quite a …\nMutates <code>self</code> to be appended with <code>new</code> or returns an <code>Err</code> …\nMutates <code>self</code> to be prepended with <code>new</code> or returns an <code>Err</code> …\nMutates <code>self</code>, prefixing its interior junctions with <code>new</code>. …\nMutates <code>self</code>, suffixing its interior junctions with <code>new</code>. …\nConsumes <code>self</code> and returns a <code>Junctions</code> prefixed with <code>new</code>, …\nConsumes <code>self</code> and returns a <code>MultiLocation</code> prefixed with <code>new</code>…\nConsumes <code>self</code> and returns a <code>Junctions</code> suffixed with <code>new</code>, …\nConsumes <code>self</code> and returns a <code>MultiLocation</code> suffixed with <code>new</code>…\nMutate the asset to represent the same value from the …\nMutate the location of the asset identifier if concrete, …\nMutate the location of the asset identifier if concrete, …\nMutate the location of the asset identifier if concrete, …\nMutate the location of the asset identifier if concrete, …\nMutate <code>self</code> so that it represents the same location from …\nMutate the location of the asset identifier if concrete, …\nConsume <code>self</code> and return the value representing the same …\nSend an XCM <code>message</code> to a given <code>destination</code>.\nRemove any unneeded parents/junctions in <code>self</code> based on the …\nSplits off the first junction, returning the remaining …\nSplits off the first interior junction, returning the …\nSplits off the last junction, returning the remaining …\nSplits off the last interior junction, returning the …\nReturns whether <code>self</code> has the same number of parents as …\nReturns whether <code>self</code> begins with or is equal to <code>prefix</code>.\nRemoves the first element from <code>self</code>, returning it (or <code>None</code> …\nRemoves the first interior junction from <code>self</code>, returning it\nRemoves the last element from <code>interior</code>, returning it (or …\nRemoves the last element from <code>self</code>, returning it (or <code>None</code> …\nConsume <code>self</code> and return the equivalent <code>VersionedLocation</code> …\nHow much weight was used by the XCM execution attempt.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nRemove the asset(s) (<code>give</code>) from the Holding Register and …\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nThe basic concrete type of <code>Instruction</code>, which doesn’t …\nSend a <code>Balances</code> XCM message with the <code>assets</code> value equal to …\nRespond with information that the local system is …\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nAsk the destination system to respond with the most recent …\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nAlways throws an error of type <code>Trap</code>.\nCancel the effect of a previous <code>SubscribeVersion</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe basic concrete type of <code>Xcm</code>, which doesn’t make any …\nAn abstract location; this is a name which may mean …\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nThe unambiguous administration body (for Polkadot, an …\nAlter the current Origin to another given origin.\nAll assets in Holding.\nAll assets in Holding, up to <code>u32</code> individual assets …\nAll assets in Holding of a given fungibility and ID.\nAll assets in Holding of a given fungibility and ID up to …\nA unit struct which can be converted into a <code>MultiLocation</code> …\nA unit struct which can be converted into a <code>MultiLocation</code> …\nAccess to all the instructions\nA 16-byte fixed-length datum.\nA 32-byte fixed-length datum.\nA 4-byte fixed-length datum.\nAn 8-byte fixed-length datum.\nClassification of an asset being concrete or abstract.\nA general identifier for an instance of a non-fungible …\nThe given asset is not handled.\nSome assets.\nNo less than the given proportion of members of the body.\nThe Origin Register does not contain a valid value for …\nThe XCM did not pass the barrier condition for execution.\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\nAn identifier of a pluralistic body.\nA part of a pluralistic body.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nExecution completed successfully; given weight was used.\nA specific location identifying an asset.\nThe unambiguous defense body (for Polkadot, an opinion on …\nSpecify the filter as being everything contained by the …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe given message cannot be translated into a format …\nThe given message cannot be translated into a format that …\nThe status of a dispatch attempt using <code>Transact</code>.\nContains the error value\nContains the error value\nError codes used in XCM. The first errors codes have …\nExecution did not start due to the given error.\nAn Ethereum network specified by its chain ID.\nAttempt to send a message greater than the maximum …\nMessage could not be sent due to its size exceeding the …\nRecursion stack limit reached\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nType of XCM message executor.\nThe outcome of an XCM instruction.\nThe unambiguous executive body (for Polkadot, this would …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nNeed to explicitly state it won’t pay for fees\nThe message was unable to be exported.\nSend a message on to Non-Local Consensus system.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees needed to be paid in order to send the message and …\nFees were required which the origin could not pay.\nA given number of members of the body, out of some larger …\nClassification of whether an asset is fungible or not, …\nA fungible asset; we record a number of units, as a <code>u128</code> …\nThe asset is fungible.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA global network capable of externalizing its own …\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nExecution started, but did not complete successfully due …\nAn indexed body.\nA compact index. Technically this could be greater than …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nCross-Consensus Message: A message from one consensus …\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nThe unambiguous judicial body (this doesn’t exist on …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nThe unambiguous legislative body (for Polkadot, this could …\nWeight limit imposed of the inner value.\nThe holding register was loaded, now to buy execution\nType alias for a better transition to V4.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nLock the locally held asset and prevent further transfer …\nSome other error with locking.\nThe maximal number of instructions in an XCM before …\nMaximum number of items in a single <code>MultiAssets</code> value that …\nMaximum size of the encoded error code coming from a …\nUsed by <code>Transact</code> to indicate that the given weight limit …\nA given number of members of the body.\nA needed argument is <code>None</code> when it should be <code>Some</code>.\nA named body.\nMore than the given proportion of members of the body.\nEither an amount of a single fungible asset, or a single …\n<code>MultiAsset</code> collection, defined either by a number of …\nA <code>Vec</code> of <code>MultiAsset</code>s.\nA relative path between state-bearing consensus systems.\nThe given pallet’s name is different to that expected.\nOrigin should just be the native dispatch origin …\nA global identifier of a data structure existing within …\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nA non-fungible asset. We record the instance identifier in …\nThe asset is not fungible.\nThe message and destination combination was not recognized …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nNo response. Serves as a neutral default.\nContains the success value\nContains the success value\nThe unambiguous child.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nThe provided pallet index was not found.\nThe index, instance name, pallet name and version of some …\nAn indexed parachain belonging to and operated by the …\nA unit struct which can be converted into a <code>MultiLocation</code> …\nA tuple struct which can be converted into a <code>MultiLocation</code> …\nYou need to pay for execution\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nThe Polkadot Bulletin chain.\nAn identifier for a query.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nInformation regarding the composition of a query response.\n<code>MultiLocation</code> value failed to be reanchored.\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nResponse data to a query.\nThe Rococo testnet Relay-chain.\nError result value when attempting to send an XCM message.\nResult value when attempting to send an XCM message.\nUtility for sending an XCM message to a given location.\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nOrigin should just be the standard account-based origin …\nAsk the destination system to respond with the most recent …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nThe unambiguous technical body (for Polkadot, this would …\nIntermediate value which connects the two phases of the …\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nDestination is routable, but there is some issue with the …\nDestination is routable, but there is some issue with the …\nUsed by the <code>Trap</code> instruction to force an error …\nAlways throws an error of type <code>Trap</code>.\nThe unambiguous treasury body (for Polkadot, an opinion on …\nThe universal location of the local consensus is improper.\nUndefined - used if the non-fungible asset class has only …\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nThe only body in its context.\nSet the Origin Register to be some child of the Universal …\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nNo weight limit imposed.\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nDestination is known to be unroutable.\nDestination is known to be unroutable. This is considered …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nThis module’s XCM version.\nAn XCM version.\nThe given pallet’s version has an incompatible version …\nThe body’s declaration, under whatever means it decides.\nAn optional weight limit.\nExecution of the XCM would potentially result in a greater …\nThe weight of an XCM message is not computable ahead of …\nThe Westend testnet Relay-chain.\nSpecify the filter as the given <code>WildMultiAsset</code> wildcard.\nClassification of whether an asset is fungible or not.\nA wildcard representing a set of assets.\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe Wococo testnet Relay-chain.\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nOrigin should be interpreted as an XCM native origin and …\nType used to build XCM programs\nA trait for types that track state inside the XcmBuilder\nContextual data pertaining to a specific list of XCM …\nA hash type for identifying messages.\nAlter the current Origin to another given origin.\nCreates a new <code>MultiLocation</code> with <code>parents</code> and an empty (<code>Here</code>…\nMutate <code>self</code> so that it is suffixed with <code>suffix</code>.\nMutate <code>self</code> so that it is suffixed with <code>suffix</code>.\nConsume <code>self</code> and return its value suffixed with <code>suffix</code>.\nReturns the junction at index <code>i</code>, or <code>None</code> if the location …\nReturns the junction at index <code>i</code>, or <code>None</code> if the location …\nReturns a mutable reference to the junction at index <code>i</code>, or …\nReturns a mutable reference to the junction at index <code>i</code>, or …\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nReturn the MultiLocation subsection identifying the chain …\nDeduct some <code>fees</code> to the sovereign account of the given …\nCreate some assets which are being held on behalf of the …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns boolean indicating whether <code>self</code> contains only the …\nMaximum count of assets allowed to match, if any.\nMaximum count of assets it is possible to match, if known.\nConsume self and return the equivalent version but counted …\nDecrements the parent count by 1.\nActually carry out the delivery operation for a previously …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe destination to which the query response message should …\nConsume <code>self</code> and return the inner vec.\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nExecute some XCM <code>message</code> with the message <code>hash</code> from <code>origin</code> …\nExecute some XCM <code>message</code> with the message <code>hash</code> from <code>origin</code> …\nExecute some XCM <code>message</code> with the message <code>hash</code> from <code>origin</code> …\nExecute some XCM <code>message</code> with the message <code>hash</code> from <code>origin</code> …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nSend a message on to Non-Local Consensus system.\nReturns first junction, or <code>None</code> if the location is empty.\nReturn the first instruction, if any.\nReturns the first interior junction, or <code>None</code> if the …\nExecute a function <code>f</code> on every junction. We use this since …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new instance of <code>MultiAssets</code> from a <code>Vec&lt;MultiAsset&gt;</code>…\nCreate a new instance of <code>MultiAssets</code> from a <code>Vec&lt;MultiAsset&gt;</code>…\nThe fungibility of the asset, which contains either the …\nReturn a reference to an item at a specific index or <code>None</code> …\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nExtract the network ID treating this value as a universal …\nCreates a new <code>MultiLocation</code> which evaluates to the grand …\nCreates a new <code>MultiLocation</code> with 0 parents and a <code>Here</code> …\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nThe overall asset identity (aka <em>class</em>, in the case of a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nReturn a reference to the inner vec.\nReturn a reference to the inner value.\nReturn a mutable reference to the inner value.\nReturn a reference to the interior field.\nThe interior (i.e. non-parent) junctions that this …\nThe interior (i.e. non-parent) junctions that this …\nReturn a mutable reference to the interior field.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert <code>self</code> into a <code>MultiLocation</code> containing <code>n</code> parents.\nConvert <code>self</code> into a <code>MultiLocation</code> containing <code>n</code> parents.\nConsume <code>self</code> and return the inner vec.\nConsume and return the inner value.\nConsume and return an iterator over the items.\nConvert <code>self</code> into a <code>MultiLocation</code> containing 0 parents.\nConvert <code>self</code> into a <code>MultiLocation</code> containing 0 parents.\nUse the value of <code>self</code> along with a <code>fun</code> fungibility …\nReturn the only instruction, contained in <code>Self</code>, iff only …\nConvert <code>self</code> into a <code>VersionedLocation</code> containing 0 parents.\nConsume <code>self</code> and return the equivalent <code>VersionedLocation</code> …\nUse the value of <code>self</code> along with a <code>fun</code> fungibility …\nTreating <code>self</code> as the universal context, return the …\nReturn <code>true</code> if no instructions are held in <code>self</code>.\nWhether the <code>MultiLocation</code> has no parents and has a <code>Here</code> …\nReturns <code>true</code> if the part represents a strict majority (&gt; …\nReturns <code>true</code> if this definitely represents no asset.\nReturns a reference iterator over the junctions.\nReturn an iterator over references to the items.\nReturn an iterator over mutable references to the items.\nReturns last junction, or <code>None</code> if the location is empty.\nReturns last junction, or <code>None</code> if the location is empty or …\nReturn the last instruction, if any.\nReturns the number of junctions in <code>self</code>.\nReturn the number of distinct asset instances contained.\nReturns the number of parents and junctions in <code>self</code>.\nReturn the number of instructions held in <code>self</code>.\nExplicit limit on number of assets allowed to match, if …\nExplicit limit placed on the number of items, if any.\nLock the locally held asset and prevent further transfer …\nEnsures that self begins with <code>prefix</code> and that it has a …\nEnsures that <code>self</code> has the same number of parents as <code>prefix</code>…\nReturns true if the wild element of <code>self</code> matches <code>inner</code>.\nReturns true if <code>inner</code> would be matched by <code>self</code>.\nThe <code>max_weight</code> field of the <code>QueryResponse</code> message.\nThe identity of the XCM; this may be a hash of its …\nA new (empty) value.\nCreates a new <code>MultiLocation</code> with the given number of …\nCreate an empty instance.\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nReturn the only instruction, contained in <code>Self</code>, iff only …\nConsume and either return <code>self</code> if it contains some …\nThe current value of the Origin register of the <code>XCVM</code>.\nCreates a new <code>MultiLocation</code> which evaluates to the parent …\nReturns the number of <code>Parent</code> junctions at the beginning of …\nThe number of parent junctions at the beginning of this …\nThe number of parent junctions at the beginning of this …\nA prelude for importing all types typically used when …\nPrepend a <code>MultiLocation</code> to a concrete asset, giving it a …\nPrepend a <code>MultiLocation</code> to a concrete asset, giving it a …\nPrepend a <code>MultiLocation</code> to any concrete asset items, …\nMutate <code>self</code> so that it is prefixed with <code>prefix</code>.\nConsume <code>self</code> and return its value prefixed with <code>prefix</code>.\nMutates <code>self</code> to be appended with <code>new</code> or returns an <code>Err</code> …\nAdd some asset onto the list, saturating. This is quite a …\nMutates <code>self</code> to be prepended with <code>new</code> or returns an <code>Err</code> …\nMutates <code>self</code>, prefixing its interior junctions with <code>new</code>. …\nMutates <code>self</code>, suffixing its interior junctions with <code>new</code>. …\nConsumes <code>self</code> and returns a <code>Junctions</code> prefixed with <code>new</code>, …\nConsumes <code>self</code> and returns a <code>MultiLocation</code> prefixed with <code>new</code>…\nConsumes <code>self</code> and returns a <code>Junctions</code> suffixed with <code>new</code>, …\nConsumes <code>self</code> and returns a <code>MultiLocation</code> suffixed with <code>new</code>…\nThe <code>query_id</code> field of the <code>QueryResponse</code> message.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nMutate the asset to represent the same value from the …\nMutate the location of the asset identifier if concrete, …\nMutate the location of the asset identifier if concrete, …\nMutate the asset to represent the same value from the …\nMutate the location of the asset identifier if concrete, …\nMutate <code>self</code> so that it represents the same location from …\nMutate the location of the asset identifier if concrete, …\nConsume <code>self</code> and return a new value representing the same …\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nConsumes <code>self</code> and returns how <code>viewer</code> would address it …\nRemove the <code>NetworkId</code> value.\nRemove the <code>NetworkId</code> value in any <code>Junction</code>s.\nRemove the <code>NetworkId</code> value in any interior <code>Junction</code>s.\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nConvenience function for using a <code>SendXcm</code> implementation. …\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nRemove any unneeded parents/junctions in <code>self</code> based on the …\nSplits off the first junction, returning the remaining …\nSplits off the first interior junction, returning the …\nExtract the network ID and the interior consensus …\nSplits off the last junction, returning the remaining …\nSplits off the last interior junction, returning the …\nAsk the destination system to respond with the most recent …\nRemoves the first element from <code>self</code>, returning it (or <code>None</code> …\nRemoves the first interior junction from <code>self</code>, returning it\nRemoves the last element from <code>self</code>, returning it (or <code>None</code> …\nRemoves the last element from <code>interior</code>, returning it (or …\nThe current value of the Topic register of the <code>XCVM</code>.\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nAlways throws an error of type <code>Trap</code>.\nSet the Origin Register to be some child of the Universal …\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nA directive to indicate that the origin expects free …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nCheck whether the given <code>message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nHow much weight was used by the XCM execution attempt.\nConstructor which sets the message ID to the supplied …\nConstructor which sets the message ID to the supplied …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nTreat <code>self</code> as a universal location and the context of …\nThe EIP-155 chain ID.\nAlter the current Origin to another given origin.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nSend a message on to Non-Local Consensus system.\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nThe basic concrete type of <code>Instruction</code>, which doesn’t …\nLock the locally held asset and prevent further transfer …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nAsk the destination system to respond with the most recent …\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nAlways throws an error of type <code>Trap</code>.\nSet the Origin Register to be some child of the Universal …\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe basic concrete type of <code>Xcm</code>, which doesn’t make any …\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nThe unambiguous administration body (for Polkadot, an …\nAlter the current Origin to another given origin.\nAll assets in Holding.\nAll assets in Holding, up to <code>u32</code> individual assets …\nAll assets in Holding of a given fungibility and ID.\nAll assets in Holding of a given fungibility and ID up to …\nA unit struct which can be converted into a <code>Location</code> of …\nA unit struct which can be converted into a <code>Location</code> of …\nAccess to all the instructions\nA 16-byte fixed-length datum.\nA 32-byte fixed-length datum.\nA 4-byte fixed-length datum.\nAn 8-byte fixed-length datum.\nEither an amount of a single fungible asset, or a single …\n<code>Asset</code> collection, defined either by a number of <code>Assets</code> or …\nLocation to identify an asset.\nA general identifier for an instance of a non-fungible …\nThe given asset is not handled.\nA <code>Vec</code> of <code>Asset</code>s.\nSome assets.\nNo less than the given proportion of members of the body.\nThe Origin Register does not contain a valid value for …\nThe XCM did not pass the barrier condition for execution.\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\nAn identifier of a pluralistic body.\nA part of a pluralistic body.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nExecution completed successfully; given weight was used.\nThe unambiguous defense body (for Polkadot, an opinion on …\nSpecify the filter as being everything contained by the …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe given message cannot be translated into a format …\nThe given message cannot be translated into a format that …\nThe status of a dispatch attempt using <code>Transact</code>.\nContains the error value\nContains the error value\nError codes used in XCM. The first errors codes have …\nExecution did not start due to the given error.\nType to return in case of an error.\nAn Ethereum network specified by its chain ID.\nAttempt to send a message greater than the maximum …\nMessage could not be sent due to its size exceeding the …\nRecursion stack limit reached\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nType of XCM message executor.\nThe outcome of an XCM instruction.\nThe unambiguous executive body (for Polkadot, this would …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nNeed to explicitly state it won’t pay for fees\nThe message was unable to be exported.\nSend a message on to Non-Local Consensus system.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees needed to be paid in order to send the message and …\nFees were required which the origin could not pay.\nA given number of members of the body, out of some larger …\nClassification of whether an asset is fungible or not, …\nA fungible asset; we record a number of units, as a <code>u128</code> …\nThe asset is fungible.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA global network capable of externalizing its own …\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nExecution started, but did not complete successfully due …\nAn indexed body.\nA compact index. Technically this could be greater than …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nCross-Consensus Message: A message from one consensus …\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nThe unambiguous judicial body (this doesn’t exist on …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nThe unambiguous legislative body (for Polkadot, this could …\nThe holding register was loaded, now to buy execution\nA relative path between state-bearing consensus systems.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nLock the locally held asset and prevent further transfer …\nSome other error with locking.\nThe maximal weight in all dimensions.\nMaximum number of items we expect in a single <code>Assets</code> …\nMaximum size of the encoded error code coming from a …\nUsed by <code>Transact</code> to indicate that the given weight limit …\nA given number of members of the body.\nA needed argument is <code>None</code> when it should be <code>Some</code>.\nA named body.\nMore than the given proportion of members of the body.\nThe given pallet’s name is different to that expected.\nA global identifier of a data structure existing within …\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nA non-fungible asset. We record the instance identifier in …\nThe asset is not fungible.\nThe message and destination combination was not recognized …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nNo response. Serves as a neutral default.\nContains the success value\nContains the success value\nThe unambiguous child.\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nThe provided pallet index was not found.\nThe index, instance name, pallet name and version of some …\nAn indexed parachain belonging to and operated by the …\nA unit struct which can be converted into a <code>Location</code> of …\nA tuple struct which can be converted into a <code>Location</code> of …\nYou need to pay for execution\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nThe Polkadot Bulletin chain.\nAn identifier for a query.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nInformation regarding the composition of a query response.\n<code>MultiLocation</code> value failed to be reanchored.\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nResponse data to a query.\nThe Rococo testnet Relay-chain.\nError result value when attempting to send an XCM message.\nResult value when attempting to send an XCM message.\nUtility for sending an XCM message to a given location.\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nAsk the destination system to respond with the most recent …\nThe unambiguous technical body (for Polkadot, this would …\nIntermediate value which connects the two phases of the …\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nDestination is routable, but there is some issue with the …\nDestination is routable, but there is some issue with the …\nUsed by the <code>Trap</code> instruction to force an error …\nAlways throws an error of type <code>Trap</code>.\nThe unambiguous treasury body (for Polkadot, an opinion on …\nThe universal location of the local consensus is improper.\nUndefined - used if the non-fungible asset class has only …\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nThe only body in its context.\nSet the Origin Register to be some child of the Universal …\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nDestination is known to be unroutable.\nDestination is known to be unroutable. This is considered …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nThis module’s XCM version.\nAn XCM version.\nThe given pallet’s version has an incompatible version …\nThe body’s declaration, under whatever means it decides.\nExecution of the XCM would potentially result in a greater …\nThe weight of an XCM message is not computable ahead of …\nThe Westend testnet Relay-chain.\nSpecify the filter as the given <code>WildAsset</code> wildcard.\nA wildcard representing a set of assets.\nClassification of whether an asset is fungible or not.\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe Wococo testnet Relay-chain.\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nType used to build XCM programs\nA trait for types that track state inside the XcmBuilder\nContextual data pertaining to a specific list of XCM …\nA hash type for identifying messages.\nConstant version of Add for <code>proof_size</code> component with u64.\nConstant version of Add for <code>ref_time</code> component with u64.\nAlter the current Origin to another given origin.\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nCreates a new <code>Location</code> with <code>parents</code> and an empty (<code>Here</code>) …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nMutate <code>self</code> so that it is suffixed with <code>suffix</code>.\nMutate <code>self</code> so that it is suffixed with <code>suffix</code>.\nConsume <code>self</code> and return its value suffixed with <code>suffix</code>.\nCasts <code>self</code> into a slice containing <code>Junction</code>s.\nCasts <code>self</code> into a mutable slice containing <code>Junction</code>s.\nReturns the junction at index <code>i</code>, or <code>None</code> if the location …\nReturns the junction at index <code>i</code>, or <code>None</code> if the location …\nReturns a mutable reference to the junction at index <code>i</code>, or …\nReturns a mutable reference to the junction at index <code>i</code>, or …\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nReturn the Location subsection identifying the chain that …\nDeduct some <code>fees</code> to the sovereign account of the given …\nTry to increase <code>self</code> by <code>amount</code> via checked addition.\nChecked <code>Weight</code> addition. Computes <code>self + rhs</code>, returning …\nChecked <code>Weight</code> scalar division. Computes …\nCalculates how many <code>other</code> fit into <code>self</code>.\nChecked <code>Weight</code> scalar multiplication. Computes …\nTry to reduce <code>self</code> by <code>amount</code> via checked subtraction.\nChecked <code>Weight</code> subtraction. Computes <code>self - rhs</code>, returning …\nCreate some assets which are being held on behalf of the …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns boolean indicating whether <code>self</code> contains only the …\nMaximum count of assets allowed to match, if any.\nMaximum count of assets it is possible to match, if known.\nConsume self and return the equivalent version but counted …\nDecrements the parent count by 1.\nActually carry out the delivery operation for a previously …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe destination to which the query response message should …\nConstant version of Div with u64.\nConsume <code>self</code> and return the inner vec.\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nSend a message on to Non-Local Consensus system.\nReturns first junction, or <code>None</code> if the location is empty.\nReturn the first instruction, if any.\nReturns the first interior junction, or <code>None</code> if the …\nExecute a function <code>f</code> on every junction. We use this since …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct <code>Weight</code> from the same weight for all parts.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nConstruct <code>Weight</code> from weight parts, namely reference time …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new instance of <code>Assets</code> from a <code>Vec&lt;Asset&gt;</code> whose …\nCreate a new instance of <code>Assets</code> from a <code>Vec&lt;Asset&gt;</code> whose …\nThe fungibility of the asset, which contains either the …\nReturn a reference to an item at a specific index or <code>None</code> …\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nExtract the network ID treating this value as a universal …\nCreates a new <code>Location</code> with 0 parents and a <code>Here</code> interior.\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nThe overall asset identity (aka <em>class</em>, in the case of a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nReturn a reference to the inner vec.\nReturn a reference to the inner value.\nReturn a mutable reference to the inner value.\nReturn a reference to the interior field.\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nReturn a mutable reference to the interior field.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUse the value of <code>self</code> along with a <code>fun</code> fungibility …\nConvert <code>self</code> into a <code>Location</code> containing <code>n</code> parents.\nConvert <code>self</code> into a <code>Location</code> containing <code>n</code> parents.\nConsume <code>self</code> and return the inner vec.\nConsume and return the inner value.\nConsume and return an iterator over the items.\nConvert <code>self</code> into a <code>Location</code> containing 0 parents.\nConvert <code>self</code> into a <code>Location</code> containing 0 parents.\nReturn the only instruction, contained in <code>Self</code>, iff only …\nConvert <code>self</code> into a <code>VersionedLocation</code> containing 0 parents.\nConsume <code>self</code> and return the equivalent <code>VersionedLocation</code> …\nUse the value of <code>self</code> along with a <code>fun</code> fungibility …\nTreating <code>self</code> as the universal context, return the …\nReturn <code>true</code> if no instructions are held in <code>self</code>.\nWhether the <code>Location</code> has no parents and has a <code>Here</code> …\nReturns <code>true</code> if this definitely represents no asset.\nReturns a reference iterator over the junctions.\nReturn an iterator over references to the items.\nReturn an iterator over mutable references to the items.\nReturns last junction, or <code>None</code> if the location is empty.\nReturns last junction, or <code>None</code> if the location is empty or …\nReturn the last instruction, if any.\nReturn the number of distinct asset instances contained.\nReturns the number of junctions in <code>self</code>.\nReturns the number of parents and junctions in <code>self</code>.\nReturn the number of instructions held in <code>self</code>.\nExplicit limit on number of assets allowed to match, if …\nExplicit limit placed on the number of items, if any.\nLock the locally held asset and prevent further transfer …\nEnsures that self begins with <code>prefix</code> and that it has a …\nEnsures that <code>self</code> has the same number of parents as <code>prefix</code>…\nReturns true if the wild element of <code>self</code> matches <code>inner</code>.\nReturns true if <code>inner</code> would be matched by <code>self</code>.\nGet the aggressive max of <code>self</code> and <code>other</code> weight.\nThe <code>max_weight</code> field of the <code>QueryResponse</code> message.\nThe identity of the XCM; this may be a hash of its …\nGet the conservative min of <code>self</code> and <code>other</code> weight.\nConstant version of Mul with u64.\nA new (empty) value.\nCreates a new <code>Location</code> with the given number of parents …\nCreate an empty instance.\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nReturn the only instruction, contained in <code>Self</code>, iff only …\nConsume and either return <code>self</code> if it contains some …\nThe current value of the Origin register of the <code>XCVM</code>.\nCreates a new <code>Location</code> which evaluates to the parent …\nReturns the number of <code>Parent</code> junctions at the beginning of …\nThe number of parent junctions at the beginning of this …\nA prelude for importing all types typically used when …\nPrepend a <code>Location</code> to an asset id, giving it a new root …\nPrepend a <code>Location</code> to a concrete asset, giving it a new …\nPrepend a <code>Location</code> to any concrete asset items, giving it …\nMutate <code>self</code> so that it is prefixed with <code>prefix</code>.\nConsume <code>self</code> and return its value prefixed with <code>prefix</code>.\nReturn the storage size part of the weight.\nReturn a mutable reference to the storage size part of the …\nAdd some asset onto the list, saturating. This is quite a …\nMutates <code>self</code> to be appended with <code>new</code> or returns an <code>Err</code> …\nMutates <code>self</code> to be prepended with <code>new</code> or returns an <code>Err</code> …\nMutates <code>self</code>, prefixing its interior junctions with <code>new</code>. …\nMutates <code>self</code>, suffixing its interior junctions with <code>new</code>. …\nConsumes <code>self</code> and returns a <code>Junctions</code> prefixed with <code>new</code>, …\nConsumes <code>self</code> and returns a <code>Location</code> prefixed with <code>new</code>, or …\nConsumes <code>self</code> and returns a <code>Junctions</code> suffixed with <code>new</code>, …\nConsumes <code>self</code> and returns a <code>Location</code> suffixed with <code>new</code>, or …\nThe <code>query_id</code> field of the <code>QueryResponse</code> message.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nMutate <code>self</code> so that it represents the same location from …\nMutate the asset to represent the same value from the …\nMutate the location of the asset identifier if concrete, …\nMutate the asset to represent the same value from the …\nMutate the location of the asset identifier if concrete, …\nMutate <code>self</code> so that it represents the same location from …\nConsume <code>self</code> and return a new value representing the same …\nMutate the location of the asset identifier if concrete, …\nConsume <code>self</code> and return a new value representing the same …\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nReturn the reference time part of the weight.\nReturn a mutable reference to the reference time part of …\nRefund any surplus weight previously bought with …\nConsumes <code>self</code> and returns how <code>viewer</code> would address it …\nRemove the <code>NetworkId</code> value.\nRemove the <code>NetworkId</code> value in any <code>Junction</code>s.\nRemove the <code>NetworkId</code> value in any interior <code>Junction</code>s.\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nIncrement <code>Weight</code> by <code>amount</code> via saturating addition.\nSaturating <code>Weight</code> addition. Computes <code>self + rhs</code>, …\nSaturating <code>Weight</code> scalar division. Computes …\nSaturating <code>Weight</code> scalar multiplication. Computes …\nSaturating <code>Weight</code> scalar exponentiation. Computes …\nReduce <code>Weight</code> by <code>amount</code> via saturating subtraction.\nSaturating <code>Weight</code> subtraction. Computes <code>self - rhs</code>, …\nConvenience function for using a <code>SendXcm</code> implementation. …\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the storage size part of the weight.\nSet the reference time part of the weight.\nSet the Topic Register.\nRemove any unneeded parents/junctions in <code>self</code> based on the …\nSplits off the first junction, returning the remaining …\nSplits off the first interior junction, returning the …\nExtract the network ID and the interior consensus …\nSplits off the last junction, returning the remaining …\nSplits off the last interior junction, returning the …\nConstant version of Sub for <code>proof_size</code> component with u64.\nConstant version of Sub for <code>ref_time</code> component with u64.\nAsk the destination system to respond with the most recent …\nRemoves the first element from <code>self</code>, returning it (or <code>None</code> …\nRemoves the first interior junction from <code>self</code>, returning it\nRemoves the last element from <code>self</code>, returning it (or <code>None</code> …\nRemoves the last element from <code>interior</code>, returning it (or …\nThe current value of the Topic register of the <code>XCVM</code>.\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nAlways throws an error of type <code>Trap</code>.\nTry to add some <code>other</code> weight while upholding the <code>limit</code>.\nSet the Origin Register to be some child of the Universal …\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nReturns the parent count and the interior <code>Junctions</code> as a …\nA directive to indicate that the origin expects free …\nA directive to indicate that the origin expects free …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nCheck whether the given <code>_message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nHow much weight was used by the XCM execution attempt.\nConstructor which sets the message ID to the supplied …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nTreat <code>self</code> as a universal location and the context of …\nReturn a <code>Weight</code> where all fields are zero.\nThe EIP-155 chain ID.\nAlter the current Origin to another given origin.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nSend a message on to Non-Local Consensus system.\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nThe basic concrete type of <code>Instruction</code>, which doesn’t …\nLock the locally held asset and prevent further transfer …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nAsk the destination system to respond with the most recent …\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nAlways throws an error of type <code>Trap</code>.\nSet the Origin Register to be some child of the Universal …\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe basic concrete type of <code>Xcm</code>, which doesn’t make any …")