searchState.loadedDescShard("bridge_hub_rococo_emulated_chain", 0, "The runtime origin type representing the origin of a call.\nAsserts a XCM from Relay Chain is completely executed\nAsserts a XCM from Relay Chain is executed with error\nAsserts a XCM from Relay Chain is incompletely executed\nAsserts a XCM message is sent to Relay Chain\nAsserts a dispatchable is completely executed and XCM sent\nAsserts a dispatchable throws and error when trying to be …\nAsserts a dispatchable is incompletely executed and XCM …\nAsserts a XCM message is sent\nAsserts a XCM from another Parachain is completely executed\nSet default/safe XCM version for runtime.\nSet XCM version for destination.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert to runtime origin using […\nConvert to runtime origin using […\nReturns the argument unchanged.\nConvert to runtime origin with caller being system signed …\nConvert to runtime origin, using as filter: …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nFund a set of accounts with a balance\nFund a sovereign account of sibling para.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate with system none origin and …\nCreate with system root origin and …\nCreate with system signed origin and …\nReturn local sovereign account of <code>para_id</code> on other …")