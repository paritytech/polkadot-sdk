searchState.loadedDescShard("pallet_scheduler", 0, "Made with <em>Substrate</em>, for <em>Polkadot</em>.\nThe hash of the encoded value which this value represents.\nA an bounded <code>Call</code>. Its encoding must be at most 128 bytes.\nA hash with no preimage length. We do not support creation …\nA hash of the call together with an upper limit for its …\nJust a simple index for naming period tasks.\nThe configuration of the retry mechanism for a given task …\nInformation regarding an item to be executed in the future.\nThe location of a scheduled task that can be used to …\nThe value itself.\nCreate a new task to be used for retry attempts of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMigrations for the scheduler pallet.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for <code>pallet_scheduler</code>\nMigrate the scheduler pallet from V3 to V4.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThis migration cleans up empty agendas of the V4 scheduler.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nItems to be executed, indexed by the block number that …\nContains a variant per dispatchable extrinsic that this …\nThe call for the provided hash was not found so the task …\nCanceled some task.\nConfiguration trait of this pallet.\nDispatched some task.\nThe <code>Error</code> enum of this pallet.\nEvents type.\nFailed to schedule a call\nStorage type is <code>StorageValue</code> with value type …\nThe maximum number of scheduled calls in the queue for a …\nThe maximum weight that may be scheduled per block for any …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nAttempt to use a non-named function on a named task.\nCannot find the scheduled call.\nCompare the privileges of origins.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe caller origin, overarching type of all pallets origins.\nThe given task was unable to be renewed since the agenda …\nThe given task can never be executed since it is …\nThe preimage provider with which we look up call hashes to …\nReschedule failed because it does not change scheduled …\nRetry configurations for items to be executed, indexed by …\nCancel a retry configuration for some task.\nThe given task was unable to be retried since the agenda …\nSet a retry configuration for some task.\nThe aggregated call type.\nThe overarching event type.\nThe aggregated origin which the dispatch will take.\nRequired origin to schedule or cancel calls.\nScheduled some task.\nGiven target block number is in the past.\nWeight information for extrinsics in this pallet.\nCancel an anonymously scheduled task.\nCancel an anonymously scheduled task.\nCancel a named scheduled task.\nCancel a named scheduled task.\nRemoves the retry configuration of a task.\nRemoves the retry configuration of a task.\nCancel the retry configuration of a named task.\nCancel the retry configuration of a named task.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHelper to migrate scheduler when the pallet origin type …\nMigrate storage format from V1 to V4.\nMigrate storage format from V2 to V4.\nMigrate storage format from V3 to V4.\nCreate a call with the variant <code>cancel</code>.\nCreate a call with the variant <code>cancel_named</code>.\nCreate a call with the variant <code>cancel_retry</code>.\nCreate a call with the variant <code>cancel_retry_named</code>.\nCreate a call with the variant <code>schedule</code>.\nCreate a call with the variant <code>schedule_after</code>.\nCreate a call with the variant <code>schedule_named</code>.\nCreate a call with the variant <code>schedule_named_after</code>.\nCreate a call with the variant <code>set_retry</code>.\nCreate a call with the variant <code>set_retry_named</code>.\nExecute the scheduled calls\nAnonymously schedule a task.\nAnonymously schedule a task.\nAnonymously schedule a task after a delay.\nAnonymously schedule a task after a delay.\nSchedule a named task.\nSchedule a named task.\nSchedule a named task after a delay.\nSchedule a named task after a delay.\nSet a retry configuration for a task so that, in case its …\nSet a retry configuration for a task so that, in case its …\nSet a retry configuration for a named task so that, in …\nSet a retry configuration for a named task so that, in …\nAuto-generated docs-only module listing all (public and …\nCancel an anonymously scheduled task.\nCancel a named scheduled task.\nRemoves the retry configuration of a task.\nCancel the retry configuration of a named task.\nAnonymously schedule a task.\nAnonymously schedule a task after a delay.\nSchedule a named task.\nSchedule a named task after a delay.\nSet a retry configuration for a task so that, in case its …\nSet a retry configuration for a named task so that, in …\nItems to be executed, indexed by the block number that …\nWarning: Doc-Only\nLookup from a name to the block number and index of the …\nRetry configurations for items to be executed, indexed by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_scheduler</code> using the Substrate node and …\nWeight functions needed for <code>pallet_scheduler</code>.\nStorage: <code>Scheduler::Agenda</code> (r:1 w:1) Proof: …\nStorage: <code>Scheduler::Lookup</code> (r:1 w:1) Proof: …\nStorage: <code>Scheduler::Agenda</code> (r:1 w:0) Proof: …\nStorage: <code>Scheduler::Lookup</code> (r:1 w:0) Proof: …\nStorage: <code>SafeMode::EnteredUntil</code> (r:1 w:0) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Scheduler::Agenda</code> (r:1 w:1) Proof: …\nStorage: <code>Scheduler::Lookup</code> (r:1 w:1) Proof: …\nStorage: <code>Scheduler::Agenda</code> (r:1 w:1) Proof: …\nStorage: <code>Scheduler::Agenda</code> (r:1 w:1) Proof: …\nStorage: <code>Scheduler::IncompleteSince</code> (r:1 w:1) Proof: …\nStorage: <code>Preimage::PreimageFor</code> (r:1 w:1) Proof: …\nStorage: <code>Scheduler::Lookup</code> (r:0 w:1) Proof: …\nStorage: <code>Scheduler::Agenda</code> (r:1 w:0) Proof: …\nStorage: <code>Scheduler::Lookup</code> (r:1 w:0) Proof: …")