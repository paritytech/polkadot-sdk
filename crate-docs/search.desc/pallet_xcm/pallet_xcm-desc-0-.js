searchState.loadedDescShard("pallet_xcm", 0, "Pallet to handle XCM messages.\n<code>EnsureOrigin</code> implementation succeeding with a <code>Location</code> …\n<code>EnsureOrigin</code> implementation succeeding with a <code>Location</code> …\nFilter for <code>Location</code> to find those which represent a strict …\nFilter for <code>Location</code> to find those which represent a voice …\nfallback implementation\nA simple passthrough where we reuse the <code>Location</code>-typed XCM …\nEnsure that the origin <code>o</code> represents an XCM response origin.\nEnsure that the origin <code>o</code> represents an XCM (<code>Transact</code>) …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nTrait that must be implemented by runtime to be able to …\nHelper that ensures successful delivery for …\nPallet we’re benchmarking here.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGets an asset that can be handled by the AssetTransactor.\nCalls <code>U::from(self)</code>.\nA <code>Location</code> that can be reached via <code>XcmRouter</code>. Used only in …\nA <code>(Asset, Location)</code> pair representing asset and the …\nSets up a complex transfer (usually consisting of a …\nA <code>(Asset, Location)</code> pair representing asset and the …\nWhen adding a new XCM version, we need to run this …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nVersion checked migration to v1.\nNamed with the ‘VersionUnchecked’-prefix because …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe given account is not an identifiable sovereign account …\nThe origin that is allowed to call privileged operations …\nThe latest supported version that we advertise. Generally …\nThe location is invalid since it already has a …\nSome assets have been claimed from an asset trap\nSome assets have been placed in an asset trap.\nExecution of an XCM message was attempted.\nThe given location could not be used (e.g. because it …\nThe version of the <code>Versioned</code> value used is not able to be …\nContains a variant per dispatchable extrinsic that this …\nCould not check-out the assets for teleportation to the …\nCould not re-anchor the assets to declare the fees for the …\nConfiguration trait of this pallet.\nA lockable currency.\nThe <code>Asset</code> matcher for <code>Currency</code>.\nAn implementation of <code>Get&lt;u32&gt;</code> which just returns the …\nThe destination <code>Location</code> provided cannot be inverted.\nThe assets to be sent are empty.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nRequired origin for executing XCM messages, including the …\nThe operation required fees to be paid which the initiator …\nFees were paid from a location for an operation (often for …\nThe message execution fails the filter.\nCan be used to configure the genesis state of this pallet.\nThe unlock operation cannot succeed because there are …\nInvalid asset, reserve chain could not be determined for …\nInvalid asset, do not support remote asset reserves with …\nOrigin is invalid for sending.\nExpected query response has been received but the querier …\nExpected query response has been received but the expected …\nExpected query response has been received but the origin …\nExpected query response has been received but the expected …\nLocal XCM execution incomplete.\nA remote lock with the corresponding data could not be …\nThe owner does not own (all) of the asset that they wish …\nThe maximum number of local XCM locks that a single …\nThe maximum number of consumers a single remote lock may …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe referenced subscription could not be found.\nQuery response has been received and query is removed. The …\nQuery response has been received and query is removed. The …\nQuery response has been received and query is removed. …\nQuery response has been received and query is removed. The …\nA given location which had a version change subscription …\nA given location which had a version change subscription …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe query was sent but no response has yet been received.\nThe status of a query.\nA response has been received.\nThe ID type for local consumers of remote locks.\nIt comes as an expected response from an XCM location.\nQuery response has been received and is ready for taking …\nReceived query response has been read and removed.\nThe runtime <code>Call</code> type.\nThe overarching event type.\nThe runtime <code>Origin</code> type.\nThere was some other issue (i.e. not to do with routing) …\nRequired origin for sending XCM messages. If successful, …\nA XCM message was sent.\nHow to get an <code>AccountId</code> value from a <code>Location</code>, useful for …\nThe supported version of a location has been changed. This …\nToo many assets have been attempted for transfer.\nThe asset owner has too many locks on the asset.\nToo many assets with different reserve locations have been …\nThe assets which we consider a given origin is trusted if …\nQuery response received which does not match a registered …\nThis chain’s Universal Location.\nThe desired destination was unreachable, generally because …\nThe message’s weight could not be determined.\nAn XCM version change notification message has been …\nA XCM version migration finished.\nThe query is for an ongoing version notification …\nWe have requested that a remote chain send us XCM version …\nA remote has requested XCM version change notification …\nWe have requested that a remote chain stops sending us XCM …\nMeans of measuring the weight consumed by an XCM message …\nWeight information for extrinsics in this pallet.\nIt comes from somewhere in the XCM space wanting to …\nOur XCM filter which messages to be executed using …\nSomething to execute an XCM message.\nOur XCM filter which messages to be reserve-transferred …\nThe type used to actually dispatch an XCM to its …\nOur XCM filter which messages to be teleported using the …\nTotal amount of the asset held by the remote lock.\nAmount of the remote lock in use by consumers. Returns <code>None</code>…\nAn auto-generated getter for <code>AssetTraps</code>.\nClaims assets trapped on this pallet because of leftover …\nClaims assets trapped on this pallet because of leftover …\nLocal consumers of the remote lock with a consumer …\nAuto-generated docs-only module listing all defined …\nEnsure the correctness of the state of this pallet.\nDry-runs <code>call</code> with the given <code>origin</code>.\nDry-runs <code>xcm</code> with the given <code>origin_location</code>.\nExecute an XCM message from a local, signed, origin.\nExecute an XCM message from a local, signed, origin.\nSet a safe XCM version (the version that XCM should be …\nSet a safe XCM version (the version that XCM should be …\nAsk a location to notify us regarding their XCM version …\nAsk a location to notify us regarding their XCM version …\nSet or unset the global suspension state of the XCM …\nSet or unset the global suspension state of the XCM …\nRequire that a particular destination should no longer …\nRequire that a particular destination should no longer …\nExtoll that a particular destination can be communicated …\nExtoll that a particular destination can be communicated …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn true if a location is subscribed to XCM version …\nTransfer some assets from the local chain to the …\nTransfer some assets from the local chain to the …\nTeleport some assets from the local chain to some …\nTeleport some assets from the local chain to some …\nThe location which holds the original lock.\nCreate a call with the variant <code>claim_assets</code>.\nCreate a call with the variant <code>execute</code>.\nCreate a call with the variant <code>force_default_xcm_version</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>force_suspension</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>force_xcm_version</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>limited_teleport_assets</code>.\nCreate a call with the variant <code>reserve_transfer_assets</code>.\nCreate a call with the variant <code>send</code>.\nCreate a call with the variant <code>teleport_assets</code>.\nCreate a call with the variant <code>transfer_assets</code>.\nCreate a call with the variant …\nAttempt to create a new query ID and register it as a …\nAttempt to create a new query ID and register it as a …\nThe owner of the locked asset.\nAn auto-generated getter for <code>Queries</code>.\nGiven a list of asset ids, returns the correct API …\nTo check the status of the query, use <code>fn query()</code> passing …\nConsume <code>message</code> and return another which is equivalent to …\nRequest that <code>dest</code> informs us of its version.\nTransfer some assets from the local chain to the …\nTransfer some assets from the local chain to the …\nThe default version to encode outgoing XCM messages with.\nRelay an XCM <code>message</code> from a given <code>interior</code> location in …\nStart notifying <code>location</code> should the XCM version of this …\nStop notifying <code>location</code> should the XCM change. This is a …\nAuto-generated docs-only module listing all (public and …\nRemoves response when ready and emits Event::ResponseTaken …\nTeleport some assets from the local chain to some …\nTeleport some assets from the local chain to some …\nTransfer some assets from the local chain to the …\nTransfer some assets from the local chain to the …\nTransfer assets from the local chain to the destination …\nTransfer assets from the local chain to the destination …\nRequest that <code>dest</code> ceases informing us of its version.\nThe <code>QueryResponse</code> XCM must have this value as the <code>querier</code> …\nThe <code>QueryResponse</code> XCM must have this origin to be …\nClaims assets trapped on this pallet because of leftover …\nExecute an XCM message from a local, signed, origin.\nSet a safe XCM version (the version that XCM should be …\nAsk a location to notify us regarding their XCM version …\nSet or unset the global suspension state of the XCM …\nRequire that a particular destination should no longer …\nExtoll that a particular destination can be communicated …\nTransfer some assets from the local chain to the …\nTeleport some assets from the local chain to some …\nTransfer some assets from the local chain to the …\nWarning: Doc-Only\nTeleport some assets from the local chain to some …\nTransfer some assets from the local chain to the …\nTransfer assets from the local chain to the destination …\nThe existing asset traps.\nThe current migration’s stage, if any.\nFungible assets which we know are locked on this chain.\nThe ongoing queries.\nThe latest available query index.\nIf <code>ShouldRecordXcm</code> is set to true, then the last XCM …\nFungible assets which we know are locked on a remote chain.\nDefault version to encode XCM when latest version of …\nWhether or not incoming XCMs (both executed locally and …\nThe Latest versions that we know various locations support.\nDestinations whose latest XCM version we would like to …\nAll locations that we have requested version notifications …\nThe target locations that are subscribed to our version …\nGlobal suspension state of the XCM executor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")