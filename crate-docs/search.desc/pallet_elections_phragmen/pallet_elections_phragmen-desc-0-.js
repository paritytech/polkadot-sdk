searchState.loadedDescShard("pallet_elections_phragmen", 0, "Phragmén Election Module.\nA candidate is renouncing, while the given total number of …\nA member is renouncing.\nAn indication that the renouncing account currently has …\nA runner-up is renouncing.\nA holder of a seat as either a member or a runner-up.\nAn active voter.\nThe amount of deposit reserved for this vote.\nThe amount of deposit held on-chain.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAll migrations. All migrations of this pallet.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nThe amount of stake placed on this vote.\nThe total backing stake.\nThe members being backed.\nAutogenerated weights for <code>pallet_elections_phragmen</code>\nThe holder.\nMigration to unreserve all pallet funds. A migration that …\nVersion 3. Migrations to version [<code>3.0.0</code>], as denoted by …\nVersion 4. Migrations to version [<code>4.0.0</code>], as denoted by …\nVersion 5.\nThe account ID used in the runtime.\nThe currency type used in the runtime.\nThe DB weight as configured in the runtime to calculate …\nThe maximum number of votes per voter as configured …\nIdentifier for the elections-phragmen pallet’s lock, as …\nThe name of the pallet as previously configured in …\nA migration that unreserves all deposit and unlocks all …\nThe configuration for <code>UnlockAndUnreserveAllFunds</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nExecutes the migration.\nPerforms post-upgrade sanity checks:\nCollects pre-migration data useful for validating the …\nSystem config account id\nElections-phragmen currency balance.\nTrait to implement to give information about types used …\nApply all of the migrations from 2 to 3.\nMigrate all candidates to recorded deposit.\nMigrate all members to recorded deposit.\nMigrate all runners-up to recorded deposit.\nMigrate from the old legacy voting bond (fixed) to the new …\nThe old prefix.\nMigrate the entire storage of this pallet to a new prefix.\nSome checks for after migration. This can be linked to …\nSome checks prior to migration. This can be linked to …\nMigrate the locks and vote stake on accounts (as specified …\nSome checks for after migration. This can be linked to …\nGiven the list of voters to migrate return a function that …\nContains a variant per dispatchable extrinsic that this …\nHow much should be locked up in order to submit one’s …\nA candidate was slashed by amount due to failing to obtain …\nThe present candidate list. A current member or runner-up …\nWhat to do when the members change.\nConfiguration trait of this pallet.\nThe currency that people are electing with.\nConvert a balance into a number used for election …\nNumber of members to elect.\nNumber of runners_up to keep.\nDuplicated candidate submission.\nInternal error happened while trying to perform election.\nThe total number of vote rounds that have happened, …\nNo (or not enough) candidates existed for this round. This …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCan be used to configure the genesis state of this pallet.\nWhat to do with genesis members\nCandidate does not have enough funds.\nThe renouncing origin presented a wrong <code>Renouncing</code> …\nPrediction regarding replacement after member removal is …\nThe provided count of number of votes is incorrect.\nThe provided count of number of candidates is incorrect.\nHandler for the unbalanced reduction when a member has …\nHandler for the unbalanced reduction when a candidate has …\nCannot vote with stake less than minimum balance.\nThe maximum number of candidates in a phragmen election.\nThe maximum number of voters to allow in a phragmen …\nMaximum numbers of votes per voter.\nCannot vote more than maximum allowed.\nA member has been removed. This should always be followed …\nMember cannot re-submit candidacy.\nThe current elected members.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nMust be a voter.\nA new term with new_members. This indicates that enough …\nMust vote for at least one candidate.\nNot a member.\nThe <code>Pallet</code> struct, the main type that implements traits …\nIdentifier for the elections-phragmen pallet’s lock\nSomeone has renounced their candidacy.\nRunner cannot re-submit candidacy.\nThe current reserved runners-up.\nA seat holder was slashed by amount by being forcefully …\nHow long each seat is kept. This defines the next block …\nToo many candidates have been created.\nCannot vote more than candidates.\nVoter can not pay voting bond.\nCannot vote when no candidates or members exist.\nVotes and locked stake of a particular voter.\nBase deposit associated with voting.\nThe amount of bond that need to be locked for each vote …\nWeight information for extrinsics in this pallet.\nClean all voters who are defunct (i.e. they do not serve …\nClean all voters who are defunct (i.e. they do not serve …\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nImplementation uses a parameter type so calling is …\nCreate a call with the variant <code>clean_defunct_voters</code>.\nCreate a call with the variant <code>remove_member</code>.\nCreate a call with the variant <code>remove_voter</code>.\nCreate a call with the variant <code>renounce_candidacy</code>.\nCreate a call with the variant <code>submit_candidacy</code>.\nCreate a call with the variant <code>vote</code>.\nWhat to do at the end of each block.\nRemove a particular member from the set. This is effective …\nRemove a particular member from the set. This is effective …\nRemove <code>origin</code> as a voter.\nRemove <code>origin</code> as a voter.\nRenounce one’s intention to be a candidate for the next …\nRenounce one’s intention to be a candidate for the next …\nAuto-generated docs-only module listing all (public and …\nSubmit oneself for candidacy. A fixed amount of deposit is …\nSubmit oneself for candidacy. A fixed amount of deposit is …\nVote for a set of candidates for the upcoming round of …\nVote for a set of candidates for the upcoming round of …\nClean all voters who are defunct (i.e. they do not serve …\nRemove a particular member from the set. This is effective …\nRemove <code>origin</code> as a voter.\nRenounce one’s intention to be a candidate for the next …\nSubmit oneself for candidacy. A fixed amount of deposit is …\nVote for a set of candidates for the upcoming round of …\nThe present candidate list. A current member or runner-up …\nThe total number of vote rounds that have happened, …\nThe current elected members.\nThe current reserved runners-up.\nVotes and locked stake of a particular voter.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_elections_phragmen</code> using the Substrate …\nWeight functions needed for <code>pallet_elections_phragmen</code>.\nStorage: <code>Elections::Voting</code> (r:257 w:256) Proof: …\nStorage: <code>Elections::Candidates</code> (r:1 w:1) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Elections::Members</code> (r:1 w:1) Proof: …\nStorage: <code>Benchmark::Override</code> (r:0 w:0) Proof: …\nStorage: <code>Elections::Voting</code> (r:1 w:1) Proof: …\nStorage: <code>Elections::Candidates</code> (r:1 w:1) Proof: …\nStorage: <code>Elections::Members</code> (r:1 w:1) Proof: …\nStorage: <code>Elections::RunnersUp</code> (r:1 w:1) Proof: …\nStorage: <code>Elections::Candidates</code> (r:1 w:1) Proof: …\nStorage: <code>Elections::Candidates</code> (r:1 w:0) Proof: …\nStorage: <code>Elections::Candidates</code> (r:1 w:0) Proof: …\nStorage: <code>Elections::Candidates</code> (r:1 w:0) Proof: …")