searchState.loadedDescShard("frame_system", 0, "System Pallet\nInformation of an account.\nApplying an extrinsic.\nCheck for transaction mortality.\nGenesis hash check to provide replay protection between …\nCheck for transaction mortality.\nCheck to ensure that the sender is not the zero address.\nNonce check and increment to give replay protection for …\nEnsure the runtime version registered in the transaction …\nEnsure the transaction version registered in the …\nBlock resource (weight) limit check.\nInformation needed when a new runtime binary is submitted …\nAn object to track the currently used extrinsic weight in …\nEvent handler which registers a consumer when created.\nNumeric limits over the ability to add a consumer ref …\nAccount was created.\nSome resultant status relevant to decrementing a …\nAlways fail.\nEnsure the origin is <code>None</code>. i.e. unsigned transaction.\nEnsure the origin is Root.\nEnsure the origin is Root and return the provided <code>Success</code> …\nEnsure the origin is any <code>Signed</code> origin.\nEnsure the origin is <code>Signed</code> origin from the given <code>AccountId</code>…\nEnsure the origin is provided <code>Ensure</code> origin and return the …\nRecord of an event happening.\nAccount already existed.\nAccount still exists.\nFinalizing the block.\nSome resultant status relevant to incrementing a …\nInitializing the block.\nStores the <code>spec_version</code> and <code>spec_name</code> of when the last …\nIt is signed by nobody, can be either:\nA phase of a block’s execution.\nEvent handler which registers a provider when created.\nOrigin for the System pallet.\nAccount was destroyed.\nType used to encode the number of references an account …\nReference status; can be either referenced or unreferenced.\nThe system itself ordained this dispatch to happen: this …\nEvent handler which registers a self-sufficient when …\nDo something when we should be setting the code.\nIt is signed by some public key and we provide the …\nReturns <code>Some</code> with a reference to the <code>AccountId</code> if <code>self</code> is …\nThe number of other modules that currently depend on this …\nThe additional data that belongs to this account. Used to …\nDo the pre-dispatch checks. This can be applied to both …\nDo the validate checks. This can be applied to both signed …\nEnsure that the origin <code>o</code> represents an unsigned extrinsic. …\nEnsure that the origin <code>o</code> represents the root. Returns <code>Ok</code> …\nEnsure that the origin <code>o</code> represents a signed extrinsic …\nEnsure that the origin <code>o</code> represents either a signed …\nThe event itself.\nCompute the trie root of a list of extrinsics.\nCompute the trie root of a list of extrinsics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nutility constructor. Used only in client/factory code.\nReturns the argument unchanged.\nReturns the argument unchanged.\nutility constructor. Used only in client/factory code.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>self</code> is <code>None</code>, <code>None</code> otherwise.\nReturns <code>true</code> if <code>self</code> is <code>Root</code>, <code>None</code> otherwise.\nBlock resource limits configuration structures.\nThe number of consumers over which <code>inc_consumers</code> will …\nThe maximum number of additional consumers expected to be …\nMigrate the reference counting state.\nProvide types to help defining a mock environment when …\nCreates new <code>SignedExtension</code> to check genesis hash.\nCreate new <code>SignedExtension</code> to check runtime version.\nCreate new <code>SignedExtension</code> to check runtime version.\nCreate new <code>SignedExtension</code> to check transaction version.\nCreates new <code>SignedExtension</code> to check weight of the …\nThe number of transactions this account has sent.\nModule helpers for off-chain calls.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nPrelude to be used alongside pallet macro, for ease of use.\nThe phase of the block it happened in.\nThe number of other modules that allow this account to …\nSet the code to the given blob.\nSplit an <code>option</code> into two constituent options, as defined …\nThe number of modules that allow this account to exist for …\nThe list of the topics this event has.\nReturns a 32 byte datum which is guaranteed to be …\nReturns if the runtime was upgraded in comparison of <code>self</code> …\nAutogenerated weights for <code>frame_system</code>\nBlock length limit configuration.\nBlock weight limits &amp; base values configuration.\nAn opinionated builder for <code>Weights</code> object.\nContains the error value\nContains the success value\nA result of validating <code>BlockWeights</code> correctness.\n<code>DispatchClass</code>-specific weight configuration.\nAverage block initialization weight cost.\nSet base block weight.\nBase weight of block execution.\nBase weight of single extrinsic of given class.\nConstruct the <code>BlockWeights</code> object.\nConstruct the <code>BlockWeights</code> object or panic if it’s …\nStart constructing new <code>BlockWeights</code> object.\nSet parameters for particular class.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet per-class weight settings.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate new <code>BlockLength</code> with <code>max</code> for every class.\nMaximal total length in bytes for each extrinsic class.\nMaximal total weight consumed by all kinds of extrinsics …\nMaximal weight of single extrinsic. Should NOT include …\nBlock maximal total weight for all extrinsics of given …\nCreate new <code>BlockLength</code> with <code>max</code> for <code>Operational</code> &amp; <code>Mandatory</code>\nWeight limits for extrinsics of given dispatch class.\nBlock reserved allowance for all extrinsics of a …\nCreate new weights definition, with both <code>Normal</code> and …\nVerifies correctness of this <code>BlockWeights</code> object.\nCreate a sensible default weights system given only …\nSystem config account data\nSystem config account id\nSystem config nonce\nThe system pallet.\nTrait to implement to give information about types used …\nMigrate from dual <code>u32</code> reference counting to triple <code>u32</code> …\nMigrate from unique <code>u32</code> reference counting to triple <code>u32</code> …\nMigrate from unique <code>u8</code> reference counting to triple <code>u32</code> …\nAn implementation of <code>sp_runtime::traits::Block</code> to be used …\nAn implementation of <code>sp_runtime::traits::Block</code> to be used …\nAn implementation of <code>sp_runtime::traits::Block</code> to be used …\nAn unchecked extrinsic type to be used in tests.\nThe accompanying extrinsics.\nThe accompanying extrinsics.\nThe accompanying extrinsics.\nThe function that should be called.\nThe block header.\nThe block header.\nThe block header.\nThe signature, address, number of extrinsics have come …\nDetails of an account for which a private key is contained …\nA type binding runtime-level <code>Public/Signature</code> pair with …\nCreate signed transaction.\nThe extrinsic type expected by the runtime.\nMarker struct used to flag using all supported keys to …\nMarker struct used to flag using any of the supported keys …\nA raw crypto public key wrapped by <code>RuntimeAppPublic</code>.\nA matching raw crypto <code>Signature</code> type.\nThe runtime’s call type.\nA public key that is capable of identifying <code>AccountId</code>s.\nA submission result.\nA submission result.\nA application-specific crypto.\nSubmit a signed transaction to the transaction pool.\nA definition of types required to submit transactions from …\nSubmit an unsigned transaction onchain with a signed …\nA message signer.\nA matching <code>Signature</code> type.\nA signature data.\nUtility trait to be implemented on payloads that can be …\nProvides an implementation for signing transaction …\nA wrapper around the types which are used for signing.\nProvides the ability to directly submit signed and unsigned\nReturn a vector of the intersection between all available …\nUse all available keys for signing.\nUse any of the available keys for signing.\nCheck if there are any keys that could be used for signing.\nAttempt to create signed extrinsic data that encodes call …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRuntime-specific <code>AccountId</code>.\nIndex on the provided list of accounts or list of all …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn all available accounts in keystore.\nCreate a new Account instance\nReturn a public key that is expected to have a matching …\nA runtime-specific <code>Public</code> key for that key pair.\nSubmit a signed transaction to the local pool.\nWraps the call into transaction, signs using given account …\nSend an unsigned transaction with a signed payload.\nConstruct and sign given payload.\nSign payload with the private key to maps to the provided …\nSign the payload using the implementor’s provided public …\nSign a message.\nSubmit transaction onchain by providing the call and an …\nA convenience method to submit an unsigned transaction …\nSubmits an unsigned call to the transaction pool.\nVerify signature against the provided public key.\nVerify signature against payload.\nUse provided <code>accounts</code> for signing.\nThe full account information for a particular account ID.\nData to be associated with an account (other than …\nData to be associated with an account (other than …\nThe user account identifier type for the runtime.\nThe user account identifier type for the runtime.\nTotal length (in bytes) for all extrinsics put together, …\nThe basic call filter to use in Origin. All origins are …\nThe basic call filter to use in Origin. All origins are …\nThe Block type used by the runtime. This is used by …\nMap of block numbers to block hashes.\nMaximum number of block number to block hash mappings to …\nMaximum number of block number to block hash mappings to …\nThe maximum length of a block (in bytes).\nThe maximum length of a block (in bytes).\nThe current weight for the block.\nBlock &amp; extrinsics weights: base values and limits.\nBlock &amp; extrinsics weights: base values and limits.\nContains a variant per dispatchable extrinsic that this …\nThe origin filter prevent the call to be dispatched.\n<code>:code</code> was updated.\nConfiguration trait of this pallet.\nThe weight of runtime database operations the runtime can …\nThe weight of runtime database operations the runtime can …\nBased on <code>Config</code>. Auto-generated by …\nError for the System pallet\nEvent for the System pallet.\nAn extrinsic failed.\nAn extrinsic completed successfully.\nThe specified <code>Task</code> failed during execution.\nFailed to extract the runtime version from the new runtime.\nCan be used to configure the genesis state of this pallet.\nThe output of the <code>Hashing</code> function.\nThe output of the <code>Hashing</code> function.\nThe hashing system (algorithm) being used in the runtime …\nThe hashing system (algorithm) being used in the runtime …\nWhether all inherents have been applied.\nThe name of specification does not match between the …\nThe specified <code>Task</code> is not valid.\nAn account was reaped.\nStores the <code>spec_version</code> and <code>spec_name</code> of when the last …\nConverting trait to take a source type and convert to …\nConverting trait to take a source type and convert to …\nThe maximum number of consumers allowed on a single …\nThe maximum number of consumers allowed on a single …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nA multi-block migration is ongoing and prevents the …\nThe migrator that is used to run Multi-Block-Migrations.\nThe migrator that is used to run Multi-Block-Migrations.\nA new account was created.\nSuicide called when the account has non-default composite …\nThere is a non-zero reference count preventing the account …\nThis stores the number of previous transactions associated …\nThis stores the number of previous transactions associated …\nIt is signed by nobody, can be either:\nNo upgrade authorized.\nA function that is invoked when an account has been …\nA function that is invoked when an account has been …\nHandler for when a new account has just been created.\nHandler for when a new account has just been created.\nWhat to do if the runtime wants to change the code to …\nWhat to do if the runtime wants to change the code to …\nExposed trait-generic origin type.\nThe <code>Pallet</code> struct, the main type that implements traits …\nProvides information about the pallet setup in the runtime.\nProvides information about the pallet setup in the runtime.\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly before …\nA callback that executes in <em>every block</em> directly before …\nOn on-chain remark happened.\nThe system itself ordained this dispatch to happen: this …\nThe aggregated <code>RuntimeCall</code> type.\nThe aggregated <code>RuntimeCall</code> type.\nThe aggregated event type of the runtime.\nThe aggregated event type of the runtime.\nThe <code>RuntimeOrigin</code> type used by dispatchable calls.\nThe <code>RuntimeOrigin</code> type used by dispatchable calls.\nThe aggregated <code>RuntimeTask</code> type.\nThe aggregated <code>RuntimeTask</code> type.\nThe designated SS58 prefix of this chain.\nThe designated SS58 prefix of this chain.\nIt is signed by some public key and we provide the …\nAll migrations that should run in the next runtime upgrade.\nAll migrations that should run in the next runtime upgrade.\nThe specification version is not allowed to decrease …\nA <code>Task</code> has finished executing.\nA <code>Task</code> failed during execution.\nA <code>Task</code> has started executing\nThe submitted code is not authorized.\nAn upgrade was authorized.\nGet the chain’s in-code version.\nGet the chain’s in-code version.\nAn auto-generated getter for <code>Account</code>.\nReturns true if the given account exists.\nRetrieve the account transaction counter from storage.\nTrue if the account has no outstanding references.\nProvide the preimage (runtime binary) <code>code</code> for an upgrade …\nProvide the preimage (runtime binary) <code>code</code> for an upgrade …\nAssert the given <code>event</code> exists.\nAssert the last event equal to the given <code>event</code>.\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nAn auto-generated getter for <code>AuthorizedUpgrade</code>.\nAn auto-generated getter for <code>BlockHash</code>.\nAn auto-generated getter for <code>Number</code>.\nAn auto-generated getter for <code>BlockWeight</code>.\nTrue if the account has at least one provider reference …\nTrue if the account has no outstanding consumer references …\nTrue if the account has at least one provider reference …\nDetermine whether or not it is possible to update the code.\nDefault implementations of <code>DefaultConfig</code>, which can be …\nThe number of outstanding references for the account <code>who</code>.\nDecrement the reference counter on an account. This <em>MUST</em> …\nDecrement the provider reference counter on an account.\nDecrement the reference counter on an account. This <em>MUST</em> …\nDecrement the sufficients reference counter on an account.\nDeposits an event into this block’s event record.\nDeposits an event into this block’s event record adding …\nDeposits a log and ensures it matches the block’s log …\nAn auto-generated getter for <code>Digest</code>.\nAuto-generated docs-only module listing all defined …\nApply an authorized upgrade, performing any validation …\nTo be called after any origin/privilege checks. Put the …\nAn auto-generated getter for <code>EventCount</code>.\nGet a single event at specified index.\nAn auto-generated getter for <code>EventTopics</code>.\nGet the current events deposited by the runtime.\nGet the basic externalities for this pallet, useful for …\nGets extrinsics count.\nAn auto-generated getter for <code>ExtrinsicData</code>.\nGets the index of extrinsic that is currently executing.\nRemove temporary “environment” entries in storage, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nIncrement a particular account’s nonce by 1.\nIncrement the reference counter on an account.\nIncrement the reference counter on an account, ignoring …\nIncrement the provider reference counter on an account.\nIncrement the reference counter on an account.\nIncrement the self-sufficient reference counter on an …\nWhether all inherents have been applied.\nStart the execution of a particular block.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if the account has some outstanding consumer …\nKill all storage items with a key that starts with the …\nKill all storage items with a key that starts with the …\nKill some items from storage.\nKill some items from storage.\nReturns the <code>spec_version</code> of the last runtime upgrade.\nCreate a call with the variant <code>apply_authorized_upgrade</code>.\nCreate a call with the variant <code>authorize_upgrade</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>do_task</code>.\nCreate a call with the variant <code>kill_prefix</code>.\nCreate a call with the variant <code>kill_storage</code>.\nCreate a call with the variant <code>remark</code>.\nCreate a call with the variant <code>remark_with_event</code>.\nCreate a call with the variant <code>set_code</code>.\nCreate a call with the variant <code>set_code_without_checks</code>.\nCreate a call with the variant <code>set_heap_pages</code>.\nCreate a call with the variant <code>set_storage</code>.\nTo be called immediately after an extrinsic has been …\nNote what the extrinsic data of the current extrinsic …\nTo be called immediately after <code>note_applied_extrinsic</code> of …\nTo be called immediately after finishing the …\nNote that all inherents have been applied.\nAn account is being created.\nAn auto-generated getter for <code>ParentHash</code>.\nThe number of outstanding provider references for the …\nRead and return the events of a specific pallet, as …\nGet the current events deposited by the runtime.\nThe number of outstanding provider and sufficient …\nThe number of outstanding references for the account <code>who</code>.\nInform the system pallet of some additional weight that …\nMake some on-chain remark.\nMake some on-chain remark.\nMake some on-chain remark and emit event.\nMake some on-chain remark and emit event.\nReset events.\nReturn the chain’s current runtime version.\nSet the current block weight. This should only be used in …\nSet the block number to something in particular. Can be …\nSet the new runtime code.\nSet the new runtime code.\nSet the new runtime code without doing any checks of the …\nSet the new runtime code without doing any checks of the …\nSets the index of extrinsic that is currently executing.\nSet the number of pages in the WebAssembly environment’s …\nSet the number of pages in the WebAssembly environment’s …\nSet the parent hash number to something in particular. Can …\nSet some items of storage.\nSet some items of storage.\nAuto-generated docs-only module listing all (public and …\nThe number of outstanding sufficient references for the …\nWrite code to the storage and emit related events and …\nCheck that provided <code>code</code> can be upgraded to. Namely, check …\nDefault configurations of this pallet in a parachain …\nDefault configurations of this pallet in a relay-chain …\nDefault configurations of this pallet in a solochain …\nA predefined adapter that covers <code>BlockNumberFor&lt;T&gt;</code> for …\nProvides a viable default config that can be used with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProvide the preimage (runtime binary) <code>code</code> for an upgrade …\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nWarning: Doc-Only\nKill all storage items with a key that starts with the …\nKill some items from storage.\nMake some on-chain remark.\nMake some on-chain remark and emit event.\nSet the new runtime code.\nSet the new runtime code without doing any checks of the …\nSet the number of pages in the WebAssembly environment’s …\nSet some items of storage.\nThe full account information for a particular account ID.\nTotal length (in bytes) for all extrinsics put together, …\n<code>Some</code> if a code upgrade has been authorized.\nMap of block numbers to block hashes.\nThe current weight for the block.\nDigest of the current block, also part of the block header.\nThe number of events in the <code>Events&lt;T&gt;</code> list.\nMapping between a topic (represented by T::Hash) and a …\nEvents deposited for the current block.\nThe execution phase of the block.\nTotal extrinsics count for the current block.\nExtrinsics data for the current block (maps an extrinsic’…\nWhether all inherents have been applied.\nStores the <code>spec_version</code> and <code>spec_name</code> of when the last …\nThe current block number being processed. Set by …\nHash of the previous block.\nTrue if we have upgraded so that AccountInfo contains …\nTrue if we have upgraded so that <code>type RefCount</code> is <code>u32</code>. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nType alias for the <code>BlockNumber</code> associated type of system …\nType alias for the <code>Extrinsic</code> associated type of system …\nType alias for the <code>Header</code>.\nType alias for the <code>Origin</code> associated type of system config.\nType alias for the <code>RuntimeCall</code> associated type of system …\nWeights for <code>frame_system</code> using the Substrate node and …\nWeight functions needed for <code>frame_system</code>.\nStorage: <code>System::AuthorizedUpgrade</code> (r:1 w:1) Proof: …\nStorage: <code>System::AuthorizedUpgrade</code> (r:0 w:1) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …\nThe range of component <code>b</code> is <code>[0, 3932160]</code>.\nThe range of component <code>b</code> is <code>[0, 3932160]</code>.\nStorage: <code>MultiBlockMigrations::Cursor</code> (r:1 w:0) Proof: …\nStorage: <code>System::Digest</code> (r:1 w:1) Proof: <code>System::Digest</code> (…\nStorage: <code>Skipped::Metadata</code> (r:0 w:0) Proof: …")