searchState.loadedDescShard("substrate_test_runtime", 0, "The Substrate runtime. This can be compiled with <code>#[no_std]</code>…\nAn identifier for an account on this system.\nThe address format for describing accounts.\nAll pallets included in the runtime as a nested tuple of …\nAll pallets included in the runtime as a nested tuple of …\nTypes of allowed slots.\nConfiguration data used by the BABE consensus engine that …\nBalance of an account.\nContains a variant per dispatchable extrinsic that this …\nA test block.\nThe block number type used in this runtime.\nA message from the runtime to the consensus engine. This …\nThe digest of a block.\nThe item of a block digest.\nUnchecked extrinsic type as expected by this runtime.\nFixed-size uninterpreted hash type with 32 bytes (256 …\nA simple hash type for all our hashing.\nThe hashing algorithm used.\nA test block’s header.\nIndex of a transaction.\nSome other thing. Unsupported and experimental.\nProvides an implementation of <code>PalletInfo</code> to provide …\nA pre-runtime digest.\nAllow primary and secondary plain slots.\nAllow primary and secondary VRF slots.\nOnly allow primary slots.\nImplements all runtime apis for the client side.\nThe aggregated runtime call type.\nAn indication for the light clients that the runtime …\nA reason for placing a freeze on funds.\nA reason for placing a hold on funds.\nAn identifier for each lock placed on funds.\nThe runtime origin type representing the origin of a call.\nA reason for slashing funds.\nAn aggregation of all <code>Task</code> enums across all pallets …\nPut a Seal on it. This is only used by native code, and is …\nThe SignedExtension to the basic transaction logic.\nThe payload being signed in transactions.\nUnit type wrapper that represents a slot.\nTransfer data extracted from Extrinsic containing …\nTest runtime version.\nWhether this chain should run with secondary slots, which …\nExtracts a byte slice containing the entire fixed hash.\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nReturns a mutable raw pointer to the value.\nReturns a constant raw pointer to the value.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nReturn the balance of the given account id.\nA benchmark function that adds one to the given value and …\nCalls function in the loop\nCalls function in the loop using never-inlined function …\nA benchmark function that adds one to each value in the …\nBurn the specified liquid free balance from the origin …\nA constant value that is used in the threshold calculation …\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nDecode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …\nA chain-specific digest of data useful for light clients …\nTraces log “Hey I’m runtime.”\nProvides utils for building the <code>Extrinsic</code> instances used …\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nAdjust the total issuance in a saturating way.\nSet the regular balance of a given account.\nExactly as <code>transfer_allow_death</code>, except the origin must be …\nUnreserve some balance from a user by force.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert to runtime origin with caller being system signed …\nConvert to runtime origin, using as filter: …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given bytes array of fixed …\nConstructs a hash type from the given reference to the …\nOptionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreates a hash type instance from the given string.\nCreate a new slot by calculating it from the given …\nThe function that should be called.\nThe new signature.\nA function for that the signature changed in version <code>2</code>.\nGenerate a set of keys with optionally using the given …\nTool for creating the genesis block.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the initialized block number.\nThe block header.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.\nWhether plain secondary slots are allowed.\nWhether VRF secondary slots are allowed.\nReturns <code>true</code> if no bits are set.\nReturns the size of this hash in bytes.\nA list of logs in the digest.\nNative version.\nCreate a call with the variant <code>burn</code>.\nCreate a call with the variant <code>force_adjust_total_issuance</code>.\nCreate a call with the variant <code>force_set_balance</code>.\nCreate a call with the variant <code>force_transfer</code>.\nCreate a call with the variant <code>force_unreserve</code>.\nCreate a call with the variant <code>transfer_all</code>.\nCreate a call with the variant <code>transfer_allow_death</code>.\nCreate a call with the variant <code>transfer_keep_alive</code>.\nCreate a call with the variant <code>upgrade_accounts</code>.\nCreate with system none origin and …\nThe block number.\nThe parent hash.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content …\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value using the …\nReturns a new fixed hash where all bits are set to the …\nCreate with system root origin and …\nSaturating addition.\nSaturating subtraction.\nThe signature, address, number of extrinsics have come …\nCreate with system signed origin and …\nThe state trie merkle root\nSome tests require the hashed keys of the storage. As the …\nsubstrate-test pallet\nTest that <code>ecdsa</code> crypto works in the runtime.\nTest that <code>ed25519</code> crypto works in the runtime.\nTest that ensures that we can call a function that takes …\nTest that <code>sr25519</code> crypto works in the runtime.\nRun various tests against storage.\nCheck a witness.\nTimestamp of the start of the slot.\nReturns the inner bytes array.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nTransfer the entire transferable balance from the caller …\nTransfer some liquid free balance to another account.\nSame as the <code>transfer_allow_death</code> call, but with a check …\nUpgrade a specified account.\ntrie no_std testing\nAllocates vector with given capacity.\nVerify the given signature, public &amp; message bundle.\nWasm binary unwrapped. If built with <code>SKIP_WASM_BUILD</code>, the …\nWasm binary unwrapped. If built with <code>SKIP_WASM_BUILD</code>, the …\nWrite the given <code>value</code> under the given <code>key</code> into the storage …\nReturns a new zero-initialized fixed hash.\nGenerates <code>Extrinsic</code>\nTransfer used in test substrate pallet. Extrinsic is …\nAmount of transfer\nBuild <code>Extrinsic</code> using embedded parameters\nReturns the argument unchanged.\nReturns the argument unchanged.\nTransfer sender and signer of created extrinsic\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into a signed unchecked extrinsic.\nMetadata hash to put into the signed data of the extrinsic.\nCreate builder for given <code>RuntimeCall</code>. By default <code>Extrinsic</code> …\nCreate builder for <code>pallet_call::bench_transfer</code> from given …\nCreate builder for <code>PalletCall::call_do_not_propagate</code> call …\nCreate builder for <code>PalletCall::call_with_priority</code> call …\nCreate builder for <code>PalletCall::new_deposit_log_digest_item</code> …\nCreate builder for …\nCreate builder for <code>PalletCall::include_data</code> call using …\nCreate builder for <code>PalletCall::indexed_call</code> call using …\nCreate builder for <code>PalletCall::offchain_index_clear</code> call …\nCreate builder for <code>PalletCall::offchain_index_set</code> call …\nCreate builder for <code>PalletCall::read</code> call using given …\nCreate builder for <code>PalletCall::read</code> call using given …\nCreate builder for <code>PalletCall::storage_change</code> call using …\nCreate builder for given <code>Transfer</code>. Transfer <code>nonce</code> will be …\nCreate builder for given <code>RuntimeCall</code>. <code>Extrinsic</code> will be …\nGiven <code>nonce</code> will be set in <code>Extrinsic</code>\nSender’s account nonce at which transfer is valid\nExtrinsic will be signed by <code>signer</code>\nThe recipient of the transfer\nUnsigned <code>Extrinsic</code> will be created\nBuilder for generating storage from substrate-test-runtime …\nBuilds the <code>RuntimeGenesisConfig</code> and returns its storage.\nCreates a builder with default settings for …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nA <code>RuntimeGenesisConfig</code> from internal configuration\nCalls <code>U::from(self)</code>.\nCreates a storage builder for genesis config. …\nOverride default wasm code to be placed into …\nGenerate the hashed storage keys from the raw literals. …\nProvides the commented list of hashed keys. This contains …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nStorage type is <code>StorageValue</code> with value type <code>Vec &lt; Public &gt;</code>…\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nCan be used to configure the genesis state of this pallet.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nAn auto-generated getter for <code>Authorities</code>.\nLegacy call used in transaction pool benchmarks.\nLegacy call used in transaction pool benchmarks.\nThis call is validated as non-propagable <code>ValidTransaction</code>.\nThis call is validated as non-propagable <code>ValidTransaction</code>.\nThis call is validated as <code>ValidTransaction</code> with given …\nThis call is validated as <code>ValidTransaction</code> with given …\nDeposit given digest items into the system storage. They …\nDeposit given digest items into the system storage. They …\nAuto-generated docs-only module listing all defined …\nFill the block weight up to the given ratio.\nFill the block weight up to the given ratio.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nImplicitly fill a block body with some data.\nImplicitly fill a block body with some data.\nCreate an index for this call.\nCreate an index for this call.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>bench_call</code>.\nCreate a call with the variant <code>call_do_not_propagate</code>.\nCreate a call with the variant <code>call_with_priority</code>.\nCreate a call with the variant <code>deposit_log_digest_item</code>.\nCreate a call with the variant <code>fill_block</code>.\nCreate a call with the variant <code>include_data</code>.\nCreate a call with the variant <code>indexed_call</code>.\nCreate a call with the variant <code>offchain_index_clear</code>.\nCreate a call with the variant <code>offchain_index_set</code>.\nCreate a call with the variant <code>read</code>.\nCreate a call with the variant <code>read_and_panic</code>.\nCreate a call with the variant <code>storage_change</code>.\nRemove a key and an associated value from the offchain …\nRemove a key and an associated value from the offchain …\nWrite a key value pair to the offchain database.\nWrite a key value pair to the offchain database.\nRead X times from the state some data.\nRead X times from the state some data.\nRead X times from the state some data and then panic!\nRead X times from the state some data and then panic!\nPut/delete some data from storage. Intended to use as an …\nPut/delete some data from storage. Intended to use as an …\nAuto-generated docs-only module listing all (public and …\nLegacy call used in transaction pool benchmarks.\nThis call is validated as non-propagable <code>ValidTransaction</code>.\nThis call is validated as <code>ValidTransaction</code> with given …\nDeposit given digest items into the system storage. They …\nFill the block weight up to the given ratio.\nImplicitly fill a block body with some data.\nCreate an index for this call.\nRemove a key and an associated value from the offchain …\nWrite a key value pair to the offchain database.\nRead X times from the state some data.\nRead X times from the state some data and then panic!\nPut/delete some data from storage. Intended to use as an …\nWarning: Doc-Only\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.")