searchState.loadedDescShard("staging_xcm_builder", 0, "XCM-Builder\nExtracts the <code>AccountId32</code> from the passed <code>location</code> if the …\nAlias a Foreign <code>AccountId32</code> with a local <code>AccountId32</code> if …\nConversion implementation which converts from a <code>[u8; 32]</code>…\nImplementation of <code>Get&lt;Vec&lt;AssetFilter&gt;&gt;</code> which accepts …\nAllows execution from any origin that is contained in <code>T</code> …\nAllows execution for the Relay Chain origin (represented …\nAllows only messages if the generic <code>ResponseHandler</code> …\nAllows execution from <code>origin</code> if it is just a straight …\nAllows execution from <code>origin</code> if it is contained in <code>T</code> (i.e. …\nAllows execution from any origin that is contained in <code>T</code> …\nConverter struct implementing <code>AssetIdConversion</code> converting …\nSimple trait to indicate whether an asset is subject to …\n<code>Convert</code> implementation to convert from some an origin …\nAccepts an asset if it is contained in the given <code>T</code>’s <code>Get</code> …\nUmbrella trait for all Controller traits.\nCreates an instruction matcher from an XCM. Since XCM …\nSimple adapter to use a currency as asset transactor. This …\nDeny executing the XCM if it matches any of the Deny …\nMeans of converting a location into a stable and unique …\nCreate a description of the remote treasury <code>location</code> if …\nImplementation of <code>AssetChecking</code> which subjects a given set …\nA wrapper router that attempts to <em>encode</em> and <em>decode</em> passed …\nTrait for a type which ensures all requirements for …\n<code>EnsureOrigin</code> barrier to convert from dispatch origin to …\nThe error type to throw when errors happen during matching.\nExecute an XCM locally, for a given origin.\nWeight functions needed for <code>ExecuteController</code>.\nAdapter <code>struct</code> which implements a conversion from any …\nSimple fee calculator that requires payment in a single …\nThis is deprecated in favor of the more modular …\nTransactional processor implementation using frame …\n<code>TransactAsset</code> implementation that allows the use of a …\n<code>TransactAsset</code> implementation that allows the use of a …\n<code>TransactAsset</code> implementation that allows the use of a …\n<code>TransactAsset</code> implementation to convert a <code>fungibles</code> …\nConverts a location which is a top-level relay chain …\nConverts a location which is a top-level parachain (i.e. a …\nHandles the fees that are taken by certain XCM …\nInspects messages in queues. Meant to be used in runtime …\nThe concrete instruction type. Necessary to specify as it …\nAllows a message only if it is from a system-level child …\nConverts a <code>Asset</code> into balance <code>B</code> if its id is equal to that …\nMatches if the given location contains only the specified …\nMatches if the given location is a system-level sibling …\nThe <code>Location</code> type. Necessary to specify as it changes …\nThis chain is allowed to mint the asset. When we track …\nImplementation of <code>AssetChecking</code> which subjects a given set …\nReturns specified <code>TreasuryAccount</code> as <code>AccountId32</code> if passed …\nSimple struct which contains both an XCM <code>location</code> and …\nAccepts a tuple <code>(location, assets)</code> if the <code>location</code> is …\nAPI that allows to pattern-match against anything that is …\nStruct created from calling <code>fn matcher()</code> on a mutable …\nThe concrete matcher type.\nThe location which is allowed to mint a particular asset.\nAccepts an asset iff it is a native asset.\nAn adapter for the implementation of <code>ExporterFor</code>, which …\nConfiguration item representing a single exporter in the …\nImplementation of <code>AssetChecking</code> which subjects no assets …\n<code>TransactAsset</code> implementation that allows the use of a …\n<code>TransactAsset</code> implementation that allows the use of a …\n<code>TransactAsset</code> implementation that allows the use of a …\n<code>TransactAsset</code> implementation that allows the use of a …\n<code>TransactAsset</code> implementation that allows the use of a …\n<code>TransactAsset</code> implementation that allows the use of a …\nThis chain is not allowed to mint the asset. When we track …\nImplementation of <code>AssetChecking</code> which subjects a given set …\n<code>Convert</code> implementation to convert from an origin which …\nA <code>Location</code> consisting of a single <code>Parent</code> <code>Junction</code> will be …\nSpecialization of the <code>PayOverXcm</code> trait to allow <code>[u8; 32]</code>…\nImplementation of the <code>frame_support::traits::tokens::Pay</code> …\nA message processor that delegates execution to an …\nQuery a remote location, from a given origin.\nWeight functions needed for <code>QueryController</code>.\nProvides methods to expect responses from XCMs and query …\nBarrier condition that allows for a <code>SuspensionChecker</code> that …\nSend an XCM from a given origin.\nWeight functions needed for <code>SendController</code>.\nA <code>HandleFee</code> implementation that simply deposits the fees …\n<code>Convert</code> implementation to convert from some a <code>Signed</code> …\nAn adapter from <code>pallet_asset_conversion::SwapCredit</code> and …\nImplementation of <code>SendXcm</code> which wraps the message inside …\nSovereign accounts use the system’s <code>Signed</code> origin with …\nAn implementation of <code>Contains</code> that checks for <code>Location</code> or …\nAn implementation of <code>Contains</code> that checks for <code>Location</code> or …\nFunction trait for handling some revenue. Similar to a …\nExecution barrier that just takes <code>max_weight</code> from …\nSets the message ID to <code>t</code> using a <code>SetTopic(t)</code> in the last …\nRepresents point-to-point link failure with a …\nImplementation of <code>SendXcm</code> which uses the given <code>ExportXcm</code> …\nImplementation of <code>SendXcm</code> which wraps the message inside …\nWeight trader which uses the configured <code>WeightToFee</code> to set …\nWeight information for ExecuteController functions.\nWeight information for SendController functions.\nWeight information for QueryController functions.\nA derivative barrier, which scans the first <code>MaxPrefixes</code> …\nAn adapter implementation of <code>MaybeEquivalence</code> which can …\nWrapper router which, if the message does not already end …\nWrapper router which, if the message does not already end …\nA <code>FeeManager</code> implementation that permits the specified …\nReturns success if the number of instructions that still …\nReturn the teleportation asset-checking policy for the …\nThe asset’s ID.\nLocally-routable bridge with bridging capabilities to the …\nClear the queues at the beginning of Runtime API call, so …\nTry to deposit the given fee in the specified account. …\nCreate a description of the given <code>location</code> if possible. No …\nTakes an incoming blob from over some point-to-point link …\nReturns the network ID and consensus location within that …\nPrepare all requirements for successful <code>XcmSender: SendXcm</code> …\nWeight for <code>ExecuteController::execute</code>\nAttempt to execute an XCM locally, returns Ok with the …\nMakes sure to expect a response with the given id.\nReturn the locally-routable bridge (if any) capable of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet queued messages and their destinations.\nDo something with the fee which has been paid. Doing …\nSends a blob over some point-to-point link. This will …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe (relative) location in which the asset ID is …\nAccepts a closure <code>f</code> that contains an argument signifying …\nAttempts to continuously iterate through the instructions …\nMethod that creates and returns the matcher type from <code>Self</code>.\nAttempt to create a new query ID and register it as a …\nThe local payment. See <code>ExporterFor</code> for more details.\nProcess the given message, using no more than the …\nWeight for <code>QueryController::query</code>\nQuery a remote location.\nRemote location filter. If <code>Some</code>, the requested remote …\nSupported remote network.\nConsume <code>message</code> and return another which is equivalent to …\nWeight for <code>SendController::send</code>\nSend an XCM to be executed by a remote location.\nIterate instructions forward until <code>cond</code> returns false. …\nIterate instructions forward until <code>cond</code> returns false. …\nAttempt to remove and return the response of query with ID …\nWeight for <code>QueryHandler::take_response</code>\nDo something with the given <code>revenue</code>, which is a single …\nThe message destination as a <em>Universal Location</em>. This …\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nThe unambiguous administration body (for Polkadot, an …\nAlter the current Origin to another given origin.\nA list of (Origin, Target) pairs allowing a given Origin …\nAll assets in Holding.\nAll assets in Holding, up to <code>u32</code> individual assets …\nAll assets in Holding of a given fungibility and ID.\nAll assets in Holding of a given fungibility and ID up to …\nA unit struct which can be converted into a <code>Location</code> of …\nA unit struct which can be converted into a <code>Location</code> of …\nA 16-byte fixed-length datum.\nA 32-byte fixed-length datum.\nA 4-byte fixed-length datum.\nAn 8-byte fixed-length datum.\nEither an amount of a single fungible asset, or a single …\nThe handler for when there is an instruction to claim …\nA service for exchanging assets.\nHandler for exchanging assets.\n<code>Asset</code> collection, defined either by a number of <code>Assets</code> or …\nLocation to identify an asset.\nA general identifier for an instance of a non-fungible …\nDefine a handler for notification of an asset being locked …\nHandler for asset locking.\nThe given asset is not handled.\nHow to withdraw and deposit an asset.\nThe general asset trap - handler for when assets are left …\nA <code>Vec</code> of <code>Asset</code>s.\nSome assets.\nMap of non-wildcard fungible and non-fungible assets held …\nNo less than the given proportion of members of the body.\nThe Origin Register does not contain a valid value for …\nThe XCM did not pass the barrier condition for execution.\nWhether we should execute the given XCM at all.\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\nAn identifier of a pluralistic body.\nA part of a pluralistic body.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nThe call dispatcher used by XCM.\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nExecution completed successfully; given weight was used.\nThe trait to parameterize the <code>XcmExecutor</code>.\nA converter <code>trait</code> for origin types.\nThe unambiguous defense body (for Polkadot, an opinion on …\nSpecify the filter as being everything contained by the …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe given message cannot be translated into a format …\nThe given message cannot be translated into a format that …\nThe status of a dispatch attempt using <code>Transact</code>.\nContains the error value\nContains the error value\nExecution did not start due to the given error.\nType to return in case of an error.\nAn Ethereum network specified by its chain ID.\nAttempt to send a message greater than the maximum …\nMessage could not be sent due to its size exceeding the …\nRecursion stack limit reached\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nType of XCM message executor.\nThe outcome of an XCM instruction.\nThe unambiguous executive body (for Polkadot, this would …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nThe message was unable to be exported.\nSend a message on to Non-Local Consensus system.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nConfigure the fees.\nFees needed to be paid in order to send the message and …\nFees were required which the origin could not pay.\nA given number of members of the body, out of some larger …\nClassification of whether an asset is fungible or not, …\nA fungible asset; we record a number of units, as a <code>u128</code> …\nThe asset is fungible.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA global network capable of externalizing its own …\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nA message to notify about that a previously sent open …\nAllows optional logic execution for the <code>HrmpChannelAccepted</code>…\nA message to notify that the other party in an open …\nAllows optional logic execution for the <code>HrmpChannelClosing</code> …\nA message to notify about a new incoming HRMP channel. …\nAllows optional logic execution for the …\nExecution started, but did not complete successfully due …\nAn indexed body.\nA compact index. Technically this could be greater than …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nCross-Consensus Message: A message from one consensus …\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nCombinations of (Asset, Location) pairs which we trust as …\nCombinations of (Asset, Location) pairs which we trust as …\nThe unambiguous judicial body (this doesn’t exist on …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nThe unambiguous legislative body (for Polkadot, this could …\nWeight limit imposed of the inner value.\nA relative path between state-bearing consensus systems.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nLock the locally held asset and prevent further transfer …\nSome other error with locking.\n<code>Enact</code> implementer for <code>prepare_lock</code>. This type may be …\nThe maximal weight in all dimensions.\nThe maximum number of assets we target to have in the …\nUsed by <code>Transact</code> to indicate that the given weight limit …\nA given number of members of the body.\nThe method of exporting a message.\nA needed argument is <code>None</code> when it should be <code>Some</code>.\nA named body.\nMore than the given proportion of members of the body.\nThe given pallet’s name is different to that expected.\nOrigin should just be the native dispatch origin …\nA global identifier of a data structure existing within …\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nA non-fungible asset. We record the instance identifier in …\nThe asset is not fungible.\nThe message and destination combination was not recognized …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nNo response. Serves as a neutral default.\nContains the success value\nContains the success value\nDefine what needs to be done upon receiving a query …\nThe unambiguous child.\nHow to get a call origin from a <code>OriginKind</code> value.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nInformation on all pallets.\nThe provided pallet index was not found.\nThe index, instance name, pallet name and version of some …\nAn indexed parachain belonging to and operated by the …\nA unit struct which can be converted into a <code>Location</code> of …\nA tuple struct which can be converted into a <code>Location</code> of …\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nThe Polkadot Bulletin chain.\nAn identifier for a query.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nInformation regarding the composition of a query response.\n<code>MultiLocation</code> value failed to be reanchored.\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\n<code>Enact</code> implementer for <code>prepare_reduce_unlockable</code>. This type …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nResponse data to a query.\nWhat to do when a response of a query is found.\nThe Rococo testnet Relay-chain.\nThe outer call dispatch type.\nThe safe call filter for <code>Transact</code>.\nError result value when attempting to send an XCM message.\nResult value when attempting to send an XCM message.\nUtility for sending an XCM message to a given location.\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nOrigin should just be the standard account-based origin …\nAsk the destination system to respond with the most recent …\nHow we handle version subscription requests.\nOrigin should be the super-user. For Cumulus/Frame chains, …\nThe unambiguous technical body (for Polkadot, this would …\nIntermediate value which connects the two phases of the …\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nThe means of purchasing weight credit for XCM execution.\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nFacility for asset transacting.\nTransactional processor for XCM instructions.\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nDestination is routable, but there is some issue with the …\nDestination is routable, but there is some issue with the …\nUsed by the <code>Trap</code> instruction to force an error …\nAlways throws an error of type <code>Trap</code>.\nThe unambiguous treasury body (for Polkadot, an opinion on …\nThe universal location of the local consensus is improper.\nUndefined - used if the non-fungible asset class has only …\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nThe only body in its context.\nThe origin locations and specific universal junctions to …\nThis chain’s Universal Location.\nSet the Origin Register to be some child of the Universal …\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nNo weight limit imposed.\nRemove the lock over <code>asset</code> on this chain and (if nothing …\n<code>Enact</code> implementer for <code>prepare_unlock</code>. This type may be …\nA directive to indicate that the origin expects free …\nDestination is known to be unroutable.\nDestination is known to be unroutable. This is considered …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nAn XCM version.\nThe given pallet’s version has an incompatible version …\nThe body’s declaration, under whatever means it decides.\nThe means of determining an XCM message’s weight.\nAn optional weight limit.\nExecution of the XCM would potentially result in a greater …\nThe weight of an XCM message is not computable ahead of …\nThe Westend testnet Relay-chain.\nSpecify the filter as the given <code>WildAsset</code> wildcard.\nA wildcard representing a set of assets.\nClassification of whether an asset is fungible or not.\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe Wococo testnet Relay-chain.\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nThis module’s XCM version.\nOrigin should be interpreted as an XCM native origin and …\nContextual data pertaining to a specific list of XCM …\nError codes used in XCM. The first errors codes have …\nA hash type for identifying messages.\nAllows recording the last executed XCM (used by dry-run …\nHow to send an onward XCM message.\nConstant version of Add for <code>proof_size</code> component with u64.\nConstant version of Add for <code>ref_time</code> component with u64.\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nCreates a new <code>Location</code> with <code>parents</code> and an empty (<code>Here</code>) …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nMutate <code>self</code> so that it is suffixed with <code>suffix</code>.\nMutate <code>self</code> so that it is suffixed with <code>suffix</code>.\nConsume <code>self</code> and return its value suffixed with <code>suffix</code>.\nCasts <code>self</code> into a slice containing <code>Junction</code>s.\nCasts <code>self</code> into a mutable slice containing <code>Junction</code>s.\nA borrowing iterator over all assets.\nReturns the junction at index <code>i</code>, or <code>None</code> if the location …\nReturns the junction at index <code>i</code>, or <code>None</code> if the location …\nReturns a mutable reference to the junction at index <code>i</code>, or …\nReturns a mutable reference to the junction at index <code>i</code>, or …\nEnsure that <code>check_in</code> will do as expected.\nEnsure that <code>check_out</code> will do as expected.\nReturn the Location subsection identifying the chain that …\nDeduct some <code>fees</code> to the sovereign account of the given …\nAn asset has been teleported in from the given origin. …\nAn asset has been teleported out to the given destination. …\nTry to increase <code>self</code> by <code>amount</code> via checked addition.\nChecked <code>Weight</code> addition. Computes <code>self + rhs</code>, returning …\nChecked <code>Weight</code> scalar division. Computes …\nCalculates how many <code>other</code> fit into <code>self</code>.\nChecked <code>Weight</code> scalar multiplication. Computes …\nTry to reduce <code>self</code> by <code>amount</code> via checked subtraction.\nChecked <code>Weight</code> subtraction. Computes <code>self - rhs</code>, returning …\nConsumes <code>self</code> and returns its original value excluding …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns <code>true</code> if all <code>assets</code> are contained within <code>self</code>.\nReturns <code>true</code> if <code>asset</code> is contained within <code>self</code>.\nReturns <code>true</code> if all <code>assets</code> are contained within <code>self</code>.\nReturns boolean indicating whether <code>self</code> contains only the …\nAttempt to convert <code>origin</code> to the generic <code>Origin</code> whilst …\nMaximum count of assets allowed to match, if any.\nMaximum count of assets it is possible to match, if known.\nConsume self and return the equivalent version but counted …\nDecrements the parent count by 1.\nActually carry out the delivery operation for a previously …\nDeposit the <code>what</code> asset into the account of <code>who</code>.\nThe destination to which the query response message should …\nConstant version of Div with u64.\nConsume <code>self</code> and return the inner vec.\nEnact a lock. This should generally be infallible if …\nReturns an error unless all <code>assets</code> are contained in <code>self</code>. …\nHandler for exchanging an asset.\nReturns <code>true</code> if we are expecting a response from <code>origin</code> …\nReturns first junction, or <code>None</code> if the location is empty.\nReturn the first instruction, if any.\nReturns the first interior junction, or <code>None</code> if the …\nExecute a function <code>f</code> on every junction. We use this since …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct <code>Weight</code> from the same weight for all parts.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nConstruct <code>Weight</code> from weight parts, namely reference time …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new instance of <code>Assets</code> from a <code>Vec&lt;Asset&gt;</code> whose …\nCreate a new instance of <code>Assets</code> from a <code>Vec&lt;Asset&gt;</code> whose …\nThe fungibility of the asset, which contains either the …\nThe fungible assets.\nA borrowing iterator over the fungible assets.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturn a reference to an item at a specific index or <code>None</code> …\nExtract the network ID treating this value as a universal …\nCreates a new <code>Location</code> with 0 parents and a <code>Here</code> interior.\nThe overall asset identity (aka <em>class</em>, in the case of a …\nReturn a reference to the inner vec.\nReturn a reference to the inner value.\nReturn a mutable reference to the inner value.\nReturn a reference to the interior field.\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nReturn a mutable reference to the interior field.\nMove an <code>asset</code> <code>from</code> one location in <code>to</code> another location.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUse the value of <code>self</code> along with a <code>fun</code> fungibility …\nA consuming iterator over all assets.\nConvert <code>self</code> into a <code>Location</code> containing <code>n</code> parents.\nConvert <code>self</code> into a <code>Location</code> containing <code>n</code> parents.\nConsume <code>self</code> and return the inner vec.\nConsume and return the inner value.\nConsume and return an iterator over the items.\nConvert <code>self</code> into a <code>Location</code> containing 0 parents.\nConvert <code>self</code> into a <code>Location</code> containing 0 parents.\nReturn the only instruction, contained in <code>Self</code>, iff only …\nConvert <code>self</code> into a <code>VersionedLocation</code> containing 0 parents.\nConsume <code>self</code> and return the equivalent <code>VersionedLocation</code> …\nUse the value of <code>self</code> along with a <code>fun</code> fungibility …\nTreating <code>self</code> as the universal context, return the …\nReturn <code>true</code> if no instructions are held in <code>self</code>.\nReturns <code>true</code> if <code>self</code> contains no assets.\nWhether the <code>Location</code> has no parents and has a <code>Here</code> …\nReturns <code>true</code> if the part represents a strict majority (&gt; …\nReturns <code>true</code> if this definitely represents no asset.\nReturns a reference iterator over the junctions.\nReturn an iterator over references to the items.\nReturn an iterator over mutable references to the items.\nReturns last junction, or <code>None</code> if the location is empty.\nReturns last junction, or <code>None</code> if the location is empty or …\nReturn the last instruction, if any.\nReturn the number of distinct asset instances contained.\nReturns the number of junctions in <code>self</code>.\nReturns the number of parents and junctions in <code>self</code>.\nReturn the number of instructions held in <code>self</code>.\nTotal number of distinct assets.\nExplicit limit on number of assets allowed to match, if …\nExplicit limit placed on the number of items, if any.\nEnsures that self begins with <code>prefix</code> and that it has a …\nEnsures that <code>self</code> has the same number of parents as <code>prefix</code>…\nReturns true if the wild element of <code>self</code> matches <code>inner</code>.\nReturns true if <code>inner</code> would be matched by <code>self</code>.\nGet the aggressive max of <code>self</code> and <code>other</code> weight.\nThe <code>max_weight</code> field of the <code>QueryResponse</code> message.\nThe identity of the XCM; this may be a hash of its …\nGet the conservative min of <code>self</code> and <code>other</code> weight.\nReturn the assets in <code>self</code>, but (asset-wise) of no greater …\nConstant version of Mul with u64.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nMutate the internal value in place.\nA new (empty) value.\nCreates a new <code>Location</code> with the given number of parents …\nCreate an empty instance.\nNew value, containing no assets.\nThe non-fungible assets.\nA borrowing iterator over the non-fungible assets.\nHandler for when a location reports to us that an asset …\nHandler for receiving a <code>response</code> from <code>origin</code> relating to …\nReturn the only instruction, contained in <code>Self</code>, iff only …\nConsume and either return <code>self</code> if it contains some …\nThe current value of the Origin register of the <code>XCVM</code>.\nCreates a new <code>Location</code> which evaluates to the parent …\nReturns the number of <code>Parent</code> junctions at the beginning of …\nThe number of parent junctions at the beginning of this …\nPrepare to lock an asset. On success, a <code>Self::LockTicket</code> …\nHandler for when an owner wishes to unlock an asset on a …\nPrepare to unlock an asset. On success, a …\nAlter any concretely identified assets by prepending the …\nPrepend a <code>Location</code> to an asset id, giving it a new root …\nPrepend a <code>Location</code> to a concrete asset, giving it a new …\nPrepend a <code>Location</code> to any concrete asset items, giving it …\nMutate <code>self</code> so that it is prefixed with <code>prefix</code>.\nConsume <code>self</code> and return its value prefixed with <code>prefix</code>.\nReturn the storage size part of the weight.\nReturn a mutable reference to the storage size part of the …\nAdd some asset onto the list, saturating. This is quite a …\nMutates <code>self</code> to be appended with <code>new</code> or returns an <code>Err</code> …\nMutates <code>self</code> to be prepended with <code>new</code> or returns an <code>Err</code> …\nMutates <code>self</code>, prefixing its interior junctions with <code>new</code>. …\nMutates <code>self</code>, suffixing its interior junctions with <code>new</code>. …\nConsumes <code>self</code> and returns a <code>Junctions</code> prefixed with <code>new</code>, …\nConsumes <code>self</code> and returns a <code>Location</code> prefixed with <code>new</code>, or …\nConsumes <code>self</code> and returns a <code>Junctions</code> suffixed with <code>new</code>, …\nConsumes <code>self</code> and returns a <code>Location</code> suffixed with <code>new</code>, or …\nThe <code>query_id</code> field of the <code>QueryResponse</code> message.\nHandler for quoting the exchange price of two asset …\nMutate <code>self</code> so that it represents the same location from …\nMutate the asset to represent the same value from the …\nMutate the location of the asset identifier if concrete, …\nMutate the asset to represent the same value from the …\nMutate the location of the asset identifier if concrete, …\nMutate <code>self</code> so that it represents the same location from …\nMutate the assets to be interpreted as the same assets …\nConsume <code>self</code> and return a new value representing the same …\nMutate the location of the asset identifier if concrete, …\nConsume <code>self</code> and return a new value representing the same …\nReturn the reference time part of the weight.\nReturn a mutable reference to the reference time part of …\nConsumes <code>self</code> and returns how <code>viewer</code> would address it …\nRemove the <code>NetworkId</code> value.\nRemove the <code>NetworkId</code> value in any <code>Junction</code>s.\nRemove the <code>NetworkId</code> value in any interior <code>Junction</code>s.\nIncrement <code>Weight</code> by <code>amount</code> via saturating addition.\nSaturating <code>Weight</code> addition. Computes <code>self + rhs</code>, …\nSaturating <code>Weight</code> scalar division. Computes …\nSaturating <code>Weight</code> scalar multiplication. Computes …\nSaturating <code>Weight</code> scalar exponentiation. Computes …\nReduce <code>Weight</code> by <code>amount</code> via saturating subtraction.\nSaturating <code>Weight</code> subtraction. Computes <code>self - rhs</code>, …\nMutates <code>self</code> to its original value less <code>mask</code> and returns …\nConvenience function for using a <code>SendXcm</code> implementation. …\nSet the internal value.\nSet the internal value.\nSet the internal value.\nSet the internal value.\nSet the storage size part of the weight.\nSet the reference time part of the weight.\nRemove any unneeded parents/junctions in <code>self</code> based on the …\nSplits off the first junction, returning the remaining …\nSplits off the first interior junction, returning the …\nExtract the network ID and the interior consensus …\nSplits off the last junction, returning the remaining …\nSplits off the last interior junction, returning the …\nConstant version of Sub for <code>proof_size</code> component with u64.\nConstant version of Sub for <code>ref_time</code> component with u64.\nMutate <code>self</code> to contain the given <code>asset</code>, saturating if …\nMutate <code>self</code> to contain all given <code>assets</code>, saturating if …\nSwaps two mutable AssetsInHolding, without deinitializing …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nGet current value and replace with initial value of the …\nRemoves the first element from <code>self</code>, returning it (or <code>None</code> …\nRemoves the first interior junction from <code>self</code>, returning it\nRemoves the last element from <code>self</code>, returning it (or <code>None</code> …\nRemoves the last element from <code>interior</code>, returning it (or …\nThe current value of the Topic register of the <code>XCVM</code>.\nMove an <code>asset</code> <code>from</code> one location in <code>to</code> another location.\nTry to add some <code>other</code> weight while upholding the <code>limit</code>.\nMutates <code>self</code> to its original value less <code>mask</code> and returns …\nReturns the parent count and the interior <code>Junctions</code> as a …\nCheck whether the given <code>_message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nHow much weight was used by the XCM execution attempt.\nConstructor which sets the message ID to the supplied …\nWithdraw the given asset from the consensus system. Return …\nTreat <code>self</code> as a universal location and the context of …\nReturn a <code>Weight</code> where all fields are zero.\nThe EIP-155 chain ID.\nA 32-byte identifier for an account of a specific network …\nAn 8-byte index for an account of a specific network that …\nA 20-byte identifier for an account of a specific network …\nThe unambiguous administration body (for Polkadot, an …\nAlter the current Origin to another given origin.\nAll assets in Holding.\nAll assets in Holding, up to <code>u32</code> individual assets …\nAll assets in Holding of a given fungibility and ID.\nAll assets in Holding of a given fungibility and ID up to …\nA unit struct which can be converted into a <code>Location</code> of …\nA unit struct which can be converted into a <code>Location</code> of …\nA 16-byte fixed-length datum.\nA 32-byte fixed-length datum.\nA 4-byte fixed-length datum.\nAn 8-byte fixed-length datum.\nEither an amount of a single fungible asset, or a single …\n<code>Asset</code> collection, defined either by a number of <code>Assets</code> or …\nLocation to identify an asset.\nA general identifier for an instance of a non-fungible …\nThe given asset is not handled.\nA <code>Vec</code> of <code>Asset</code>s.\nSome assets.\nNo less than the given proportion of members of the body.\nThe Origin Register does not contain a valid value for …\nThe XCM did not pass the barrier condition for execution.\nThe Bitcoin network, including hard-forks supported by …\nThe Bitcoin network, including hard-forks supported by …\nAn identifier of a pluralistic body.\nA part of a pluralistic body.\nReduce Holding by up to the given assets.\nPay for the execution of some XCM <code>xcm</code> and <code>orders</code> with up …\nNetwork defined by the first 32-bytes of the hash and …\nNetwork specified by the first 32 bytes of its genesis …\nCreate some assets which are being held on behalf of the …\nClear the Error Register.\nClear the origin.\nClear the Topic Register.\nSet the Transact Status Register to its default, cleared, …\nExecution completed successfully; given weight was used.\nThe unambiguous defense body (for Polkadot, an opinion on …\nSpecify the filter as being everything contained by the …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nRemove the asset(s) (<code>assets</code>) from the Holding Register and …\nMutate the origin to some interior location.\nThe given message cannot be translated into a format …\nThe given message cannot be translated into a format that …\nThe status of a dispatch attempt using <code>Transact</code>.\nContains the error value\nContains the error value\nExecution did not start due to the given error.\nType to return in case of an error.\nAn Ethereum network specified by its chain ID.\nAttempt to send a message greater than the maximum …\nMessage could not be sent due to its size exceeding the …\nRecursion stack limit reached\nRemove the asset(s) (<code>want</code>) from the Holding Register and …\nType of XCM message executor.\nThe outcome of an XCM instruction.\nThe unambiguous executive body (for Polkadot, this would …\nThrow an error if Holding does not contain at least the …\nEnsure that the Error Register equals some given value and …\nEnsure that the Origin Register equals some given value …\nEnsure that a particular pallet with a particular version …\nEnsure that the Transact Status Register equals some given …\nUsed by <code>ExpectAsset</code>, <code>ExpectError</code> and <code>ExpectOrigin</code> when the …\nThe message was unable to be exported.\nSend a message on to Non-Local Consensus system.\nUsed by <code>Transact</code> when the functor cannot be decoded.\nAn asset transaction (like withdraw or deposit) failed …\nFees needed to be paid in order to send the message and …\nFees were required which the origin could not pay.\nA given number of members of the body, out of some larger …\nClassification of whether an asset is fungible or not, …\nA fungible asset; we record a number of units, as a <code>u128</code> …\nThe asset is fungible.\nA non-descript index within the context location.\nA nondescript array datum, 32 bytes, acting as a key …\nA global network capable of externalizing its own …\nThe interpreting consensus system.\nThe interpreting consensus system.\nThe given operation would lead to an overflow of the …\nA message to notify about that a previously sent open …\nA message to notify that the other party in an open …\nA message to notify about a new incoming HRMP channel. …\nExecution started, but did not complete successfully due …\nAn indexed body.\nA compact index. Technically this could be greater than …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nRemove the asset(s) (<code>assets</code>) from holding and send a …\nThe basic concrete type of <code>Instruction</code>, which doesn’t …\nA relative location which is constrained to be an interior …\nThe location parameter is not a valid value for the …\nThe unambiguous judicial body (this doesn’t exist on …\nA single item in a path to describe the relative location …\nNon-parent junctions that can be constructed, up to the …\nThe Kusama canary-net Relay-chain.\nThe unambiguous legislative body (for Polkadot, this could …\nWeight limit imposed of the inner value.\nA relative path between state-bearing consensus systems.\nAn asset cannot be deposited under the ownership of a …\n<code>MultiLocation</code> value too large to descend further.\n<code>MultiLocation</code> value ascend more parents than known …\nLock the locally held asset and prevent further transfer …\nSome other error with locking.\nUsed by <code>Transact</code> to indicate that the given weight limit …\nA given number of members of the body.\nA needed argument is <code>None</code> when it should be <code>Some</code>.\nA named body.\nMore than the given proportion of members of the body.\nThe given pallet’s name is different to that expected.\nOrigin should just be the native dispatch origin …\nA global identifier of a data structure existing within …\nNo deal is possible under the given constraints.\nThe state was not in a condition where the operation was …\nA non-fungible asset. We record the instance identifier in …\nThe asset is not fungible.\nThe message and destination combination was not recognized …\nAn asset cannot be deposited, probably because (too much …\nUsed by <code>BuyExecution</code> when the Holding Register does not …\nAn asset cannot be withdrawn, potentially due to lack of …\nAsset (<code>asset</code>) has been locked on the <code>origin</code> system and may …\nNo response. Serves as a neutral default.\nContains the success value\nContains the success value\nThe unambiguous child.\nBasically just the XCM (more general) version of …\nOutcome of an XCM execution.\nAn arithmetic overflow happened.\nAn instanced, indexed pallet that forms a constituent part …\nThe provided pallet index was not found.\nThe index, instance name, pallet name and version of some …\nAn indexed parachain belonging to and operated by the …\nA unit struct which can be converted into a <code>Location</code> of …\nA tuple struct which can be converted into a <code>Location</code> of …\nA pluralistic body existing within consensus.\nThe Polkadot mainnet Relay-chain.\nThe Polkadot Bulletin chain.\nAn identifier for a query.\nQuery the existence of a particular pallet type.\nRespond with information that the local system is …\nInformation regarding the composition of a query response.\n<code>MultiLocation</code> value failed to be reanchored.\nAsset(s) (<code>assets</code>) have been destroyed on the <code>origin</code> system …\nRefund any surplus weight previously bought with …\nImmediately report the contents of the Error Register to …\nReport to a given destination the contents of the Holding …\nSend a <code>QueryResponse</code> message containing the value of the …\nSend an <code>UnlockAsset</code> instruction to the <code>locker</code> for the …\nAsset(s) (<code>assets</code>) have been received into the ownership of …\nResponse data to a query.\nThe Rococo testnet Relay-chain.\nError result value when attempting to send an XCM message.\nResult value when attempting to send an XCM message.\nUtility for sending an XCM message to a given location.\nSet the Appendix Register. This is code that should be …\nSet the Error Handler Register. This is code that should …\nSets the Fees Mode Register.\nSet the Topic Register.\nOrigin should just be the standard account-based origin …\nAsk the destination system to respond with the most recent …\nOrigin should be the super-user. For Cumulus/Frame chains, …\nThe unambiguous technical body (for Polkadot, this would …\nIntermediate value which connects the two phases of the …\nUsed by <code>BuyExecution</code> when the fees declared to purchase …\nApply the encoded transaction <code>call</code>, whose dispatch-origin …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nDestination is routable, but there is some issue with the …\nDestination is routable, but there is some issue with the …\nAlways throws an error of type <code>Trap</code>.\nUsed by the <code>Trap</code> instruction to force an error …\nThe unambiguous treasury body (for Polkadot, an opinion on …\nThe universal location of the local consensus is improper.\nUndefined - used if the non-fungible asset class has only …\nXCM version not able to be handled.\nThe instruction is intentionally unsupported.\nThe only body in its context.\nSet the Origin Register to be some child of the Universal …\nUsed by <code>ClaimAsset</code> when the given claim could not be …\nNo weight limit imposed.\nRemove the lock over <code>asset</code> on this chain and (if nothing …\nA directive to indicate that the origin expects free …\nDestination is known to be unroutable.\nDestination is known to be unroutable. This is considered …\nCancel the effect of a previous <code>SubscribeVersion</code> …\nOrigin Register does not contain a value value for a …\nOrigin Register does not contain a value value for a …\nAn XCM version.\nThe given pallet’s version has an incompatible version …\nThe body’s declaration, under whatever means it decides.\nAn optional weight limit.\nExecution of the XCM would potentially result in a greater …\nThe weight of an XCM message is not computable ahead of …\nThe Westend testnet Relay-chain.\nSpecify the filter as the given <code>WildAsset</code> wildcard.\nA wildcard representing a set of assets.\nClassification of whether an asset is fungible or not.\nWithdraw asset(s) (<code>assets</code>) from the ownership of <code>origin</code> …\nThe Wococo testnet Relay-chain.\nA relative path comprising 1 junction.\nA relative path comprising 1 junction.\nA relative path comprising 2 junctions.\nA relative path comprising 2 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 3 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 4 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 5 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 6 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 7 junctions.\nA relative path comprising 8 junctions.\nA relative path comprising 8 junctions.\nThis module’s XCM version.\nThe basic concrete type of <code>Xcm</code>, which doesn’t make any …\nOrigin should be interpreted as an XCM native origin and …\nContextual data pertaining to a specific list of XCM …\nError codes used in XCM. The first errors codes have …\nA hash type for identifying messages.\nDeduct some <code>fees</code> to the sovereign account of the given …\nActually carry out the delivery operation for a previously …\nThe destination to which the query response message should …\nThe fungibility of the asset, which contains either the …\nThe overall asset identity (aka <em>class</em>, in the case of a …\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nThe <code>max_weight</code> field of the <code>QueryResponse</code> message.\nThe identity of the XCM; this may be a hash of its …\nThe current value of the Origin register of the <code>XCVM</code>.\nThe number of parent junctions at the beginning of this …\nThe <code>query_id</code> field of the <code>QueryResponse</code> message.\nMutate <code>self</code> so that it represents the same location from …\nConsume <code>self</code> and return a new value representing the same …\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe current value of the Topic register of the <code>XCVM</code>.\nCheck whether the given <code>_message</code> is deliverable to the …\nConvenience function for using a <code>SendXcm</code> implementation. …\nThe EIP-155 chain ID.")