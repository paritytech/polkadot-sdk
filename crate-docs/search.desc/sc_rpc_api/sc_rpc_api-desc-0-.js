searchState.loadedDescShard("sc_rpc_api", 0, "Substrate RPC interfaces.\nSignifies whether a potentially unsafe RPC should be …\nAllows calling every RPCs.\nSignifies whether an RPC considered unsafe is denied to be …\nDenies only potentially unsafe RPCs.\nSubstrate block-author/full-node API.\nSubstrate blockchain API.\nChecks if the RPC call is safe to be called externally.\nReturns <code>Ok(())</code> if the RPCs considered unsafe are safe to …\nSubstrate child state API\nSubstrate dev API containing RPCs that are mainly meant …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSubstrate mixnet API.\nSubstrate offchain API.\nSubstrate state API.\nSubstrate Statement Store RPC API.\nSubstrate system API.\nClient implementation for the <code>AuthorApi</code> RPC API.\nServer trait implementation for the <code>AuthorApi</code> RPC API.\nAuthoring RPC module errors.\nChecks if the keystore has private keys for the given …\nChecks if the keystore has private keys for the given …\nChecks if the keystore has private keys for the given …\nChecks if the keystore has private keys for the given …\nExtrinsic helpers for author RPC module.\nInsert a key into the keystore.\nInsert a key into the keystore.\nCollects all the methods and subscriptions defined in the …\nReturns all pending extrinsics, potentially grouped by …\nReturns all pending extrinsics, potentially grouped by …\nRemove given extrinsic from the pool and temporarily ban …\nRemove given extrinsic from the pool and temporarily ban …\nGenerate new session keys and returns the corresponding …\nGenerate new session keys and returns the corresponding …\nSubmit hex-encoded extrinsic for inclusion in block.\nSubmit hex-encoded extrinsic for inclusion in block.\nSubmit an extrinsic to watch.\nSubmit an extrinsic to watch.\nIncorrect extrinsic format.\nKey type ID has an unknown format.\nClient error.\nContains the error value\nAuthor RPC errors.\nInvalid session keys encoding.\nSome random issue with the key store. Shouldn’t happen.\nContains the success value\nTransaction pool error,\nAuthor RPC Result type.\nCall to an unsafe RPC was denied.\nVerification error\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nRaw extrinsic bytes.\nRPC Extrinsic or hash\nThe hash of the extrinsic.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nClient implementation for the <code>ChainApi</code> RPC API.\nServer trait implementation for the <code>ChainApi</code> RPC API.\nGet header and body of a block.\nGet header and body of a block.\nGet hash of the n-th block in the canon chain.\nGet hash of the n-th block in the canon chain.\nError helpers for Chain RPC module.\nGet hash of the last finalized block in the canon chain.\nGet hash of the last finalized block in the canon chain.\nGet header.\nGet header.\nCollects all the methods and subscriptions defined in the …\nAll head subscription.\nAll head subscription.\nFinalized head subscription.\nFinalized head subscription.\nNew head subscription.\nNew head subscription.\nClient error.\nContains the error value\nChain RPC errors.\nContains the success value\nOther error type.\nChain RPC Result type.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nClient implementation for the <code>ChildStateApi</code> RPC API.\nServer trait implementation for the <code>ChildStateApi</code> RPC API.\nCollects all the methods and subscriptions defined in the …\nReturns proof of storage for child key entries at a …\nReturns proof of storage for child key entries at a …\nReturns a child storage entry at a specific block’s …\nReturns a child storage entry at a specific block’s …\nReturns child storage entries for multiple keys at a …\nReturns child storage entries for multiple keys at a …\nReturns the hash of a child storage entry at a block’s …\nReturns the hash of a child storage entry at a block’s …\nReturns the keys with prefix from a child storage, leave …\nReturns the keys with prefix from a child storage, leave …\nReturns the keys with prefix from a child storage with …\nReturns the keys with prefix from a child storage with …\nReturns the size of a child storage entry at a block’s …\nReturns the size of a child storage entry at a block’s …\nStatistics of a block returned by the <code>dev_getBlockStats</code> …\nClient implementation for the <code>DevApi</code> RPC API.\nServer trait implementation for the <code>DevApi</code> RPC API.\nLength of the block in bytes.\nReexecute the specified <code>block_hash</code> and gather statistics …\nReexecute the specified <code>block_hash</code> and gather statistics …\nError helpers for Dev RPC module.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCollects all the methods and subscriptions defined in the …\nNumber of extrinsics in the block.\nThe length in bytes of the storage proof after compaction.\nThe length in bytes of the storage proof produced by …\nThe re-execution of the specified block failed.\nFailed to query specified block or its parent: Probably an …\nContains the error value\nDev RPC errors.\nContains the success value\nFailed to extract the proof.\nDev RPC Result type.\nThe method is marked as unsafe but unsafe flag wasn’t …\nThe witness compaction failed.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nClient implementation for the <code>MixnetApi</code> RPC API.\nServer trait implementation for the <code>MixnetApi</code> RPC API.\nMixnet RPC module errors.\nCollects all the methods and subscriptions defined in the …\nSubmit encoded extrinsic over the mixnet for inclusion in …\nSubmit encoded extrinsic over the mixnet for inclusion in …\nMixnet RPC error type.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nClient implementation for the <code>OffchainApi</code> RPC API.\nServer trait implementation for the <code>OffchainApi</code> RPC API.\nOffchain RPC errors.\nGet offchain local storage under given key and prefix.\nGet offchain local storage under given key and prefix.\nCollects all the methods and subscriptions defined in the …\nSet offchain local storage under given key and prefix.\nSet offchain local storage under given key and prefix.\nContains the error value\nOffchain RPC errors.\nContains the success value\nOffchain RPC Result type.\nUnavailable storage kind error.\nCall to an unsafe RPC was denied.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nClient implementation for the <code>StateApi</code> RPC API.\nServer trait implementation for the <code>StateApi</code> RPC API.\nCall a method from the runtime API at a block’s state.\nCall a method from the runtime API at a block’s state.\nState RPC errors.\nSubstrate state API helpers.\nCollects all the methods and subscriptions defined in the …\nReturns the runtime metadata as an opaque blob.\nReturns the runtime metadata as an opaque blob.\nQuery historical storage entries (by key) starting from a …\nQuery historical storage entries (by key) starting from a …\nQuery storage entries (by key) at a block hash given as …\nQuery storage entries (by key) at a block hash given as …\nReturns proof of storage entries at a specific block’s …\nReturns proof of storage entries at a specific block’s …\nGet the runtime version.\nGet the runtime version.\nReturns a storage entry at a specific block’s state.\nReturns a storage entry at a specific block’s state.\nReturns the hash of a storage entry at a block’s state.\nReturns the hash of a storage entry at a block’s state.\nReturns the keys with prefix, leave empty to get all the …\nReturns the keys with prefix, leave empty to get all the …\nReturns the keys with prefix with pagination support. Up …\nReturns the keys with prefix with pagination support. Up …\nReturns the keys with prefix, leave empty to get all the …\nReturns the keys with prefix, leave empty to get all the …\nReturns the size of a storage entry at a block’s state.\nReturns the size of a storage entry at a block’s state.\nNew runtime version subscription\nNew runtime version subscription\nNew storage subscription\nNew storage subscription\nThe <code>traceBlock</code> RPC provides a way to trace the …\nThe <code>traceBlock</code> RPC provides a way to trace the …\nClient error.\nContains the error value\nState RPC errors.\nProvided block range couldn’t be resolved to a list of …\nProvided count exceeds maximum value.\nContains the success value\nState RPC Result type.\nCall to an unsafe RPC was denied.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nDetails of the error message.\nBeginning of the block range.\nMaximum allowed value\nEnd of the block range.\nProvided value\nReadProof struct returned by the RPC\nBlock hash used to generate the proof\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA proof used to prove that storage entries are included in …\nClient implementation for the <code>StatementApi</code> RPC API.\nServer trait implementation for the <code>StatementApi</code> RPC API.\nReturn the data of all known statements which include all …\nReturn the data of all known statements which include all …\nReturn all statements, SCALE-encoded.\nReturn all statements, SCALE-encoded.\nStatement RPC errors.\nCollects all the methods and subscriptions defined in the …\nReturn the data of all known statements whose decryption …\nReturn the data of all known statements whose decryption …\nReturn the decrypted data of all known statements whose …\nReturn the decrypted data of all known statements whose …\nRemove a statement from the store.\nRemove a statement from the store.\nSubmit a pre-encoded statement.\nSubmit a pre-encoded statement.\nContains the error value\nStatement RPC errors.\nContains the success value\nStatement RPC Result type.\nStatement store internal error.\nCall to an unsafe RPC was denied.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nClient implementation for the <code>SystemApi</code> RPC API.\nServer trait implementation for the <code>SystemApi</code> RPC API.\nSystem RPC module errors.\nSubstrate system API helpers.\nCollects all the methods and subscriptions defined in the …\nAdds the supplied directives to the current log filter\nAdds the supplied directives to the current log filter\nAdds a reserved peer. Returns the empty string or an …\nAdds a reserved peer. Returns the empty string or an …\nGet the chain’s name. Given as a string identifier.\nGet the chain’s name. Given as a string identifier.\nReturn health status of the node.\nReturn health status of the node.\nReturns the multi-addresses that the local node is …\nReturns the multi-addresses that the local node is …\nReturns the base58-encoded PeerId of the node.\nReturns the base58-encoded PeerId of the node.\nGet the node’s implementation name. Plain old string.\nGet the node’s implementation name. Plain old string.\nReturns current state of the network.\nReturns current state of the network.\nReturns the roles the node is running as.\nReturns the roles the node is running as.\nReturns currently connected peers\nReturns currently connected peers\nGet a custom set of properties as a JSON object, defined …\nGet a custom set of properties as a JSON object, defined …\nRemove a reserved peer. Returns the empty string or an …\nRemove a reserved peer. Returns the empty string or an …\nReturns the list of reserved peers\nReturns the list of reserved peers\nResets the log filter to Substrate defaults\nResets the log filter to Substrate defaults\nReturns the state of the syncing of the node: starting …\nReturns the state of the syncing of the node: starting …\nGet the chain’s type.\nGet the chain’s type.\nGet the node implementation’s version. Should be a …\nGet the node implementation’s version. Should be a …\nContains the error value\nSystem RPC errors.\nInternal error.\nPeer argument is malformatted.\nProvided block range couldn’t be resolved to a list of …\nContains the success value\nSystem RPC Result type.\nCall to an unsafe RPC was denied.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe node is an authority\nThe node is a full node\nHealth struct returned by the RPC\nThe role the node is running as\nNetwork Peer information\nThe state of the syncing of the node.\nRunning node’s static details.\nPeer best block hash\nPeer best block number\nChain name.\nThe type of this chain.\nHeight of the current best block of the node.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nHeight of the highest block in the network.\nImplementation name.\nImplementation version.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs the node syncing\nPeer ID\nNumber of connected peers\nA custom set of properties defined in the chain spec.\nRoles\nShould this node have any peers\nHeight of the block at which syncing started.")