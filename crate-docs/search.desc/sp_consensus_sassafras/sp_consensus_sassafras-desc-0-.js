searchState.loadedDescShard("sp_consensus_sassafras", 0, "Primitives for Sassafras consensus.\nSassafras authority identifier. Necessarily equivalent to …\nIndex of an authority.\nSassafras authority keypair. Necessarily equivalent to the …\nSassafras authority signature.\nA public key.\nA signature.\nSassafras epoch information\nProtocol configuration that can be modified on epoch …\nAn equivocation proof for multiple block authorships on …\nKey type identifier.\nAn opaque type used to represent the key ownership proof …\nVRF output length for per-slot randomness.\nRandomness required by some protocol’s operations.\nConsensus engine identifier.\nAPI necessary for block authorship with Sassafras.\nWeight of a Sassafras block. Primary blocks have a weight …\nUnit type wrapper that represents a slot.\nA slot duration defined in milliseconds.\nReturns <code>self</code> as <code>core::time::Duration</code>.\nReturns <code>self</code> as a <code>u64</code> representing the duration in …\nTickets max attempts for each validator.\nAuthorities list.\nEpoch configuration.\nCurrent epoch information.\nSassafras digests structures and helpers.\nThe first header involved in the equivocation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitialize from the given milliseconds.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new slot by calculating it from the given …\nGenerates a proof of key ownership for the given authority …\nEpoch index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNumber of slots in the epoch.\nNext epoch information.\nReturns the authority id of the equivocator.\nRandomness value.\nTickets redundancy factor.\nGet ring context to be used for ticket construction and …\nSaturating addition.\nSaturating subtraction.\nThe second header involved in the equivocation.\nThe slot at which the equivocation happened.\nGet ticket id and data associated to the given slot.\nGet ticket id associated to the given slot.\nStarting slot of the epoch.\nSubmits an unsigned extrinsic to report an equivocation.\nSubmit next epoch validator tickets via an unsigned …\nPrimitives related to tickets.\nTimestamp of the start of the slot.\nUtilities related to VRF input, pre-output and signatures.\nRuntime digest entries.\nProvides information about the next epoch parameters.\nInformation about the next epoch.\nDisable the authority with given index.\nEpoch slot claim digest entry.\nAuthorities list.\nAuthority index that claimed the slot.\nEpoch configuration.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRandomness value.\nCorresponding slot number.\nTicket auxiliary information for claim check.\nSlot claim VRF signature.\nA public key.\nA signature.\nTicket data persisted on-chain.\nTicket claim information filled by the block author.\nTicket envelope used on during submission.\nTicket identifier.\nTicket ring vrf signature.\nAttempt index.\nTicket body.\nEphemeral public key which gets erased when the ticket is …\nSignature verified via <code>TicketBody::erased_public</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nVRF pre-outputs.\nEphemeral public key which gets exposed when the ticket is …\nRing signature.\nRing signature.\nComputes a boundary for <code>TicketId</code> maximum allowed value for …\nRing VRF domain size for Sassafras consensus.\nBandersnatch VRF <code>RingContext</code> specialization for Sassafras …\nremove as soon as soon as serialization is implemented by …\nRing VRF signature.\nVRF input to construct a <code>VrfPreOutput</code> instance and …\nVRF pre-output derived from <code>VrfInput</code> using a <code>VrfSecret</code>.\nData to be signed via one of the two provided vrf flavors.\nVRF signature.\nGet the challenge associated to the <code>transcript</code> contained …\nDomain size.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nVRF inputs to be signed.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGenerate an arbitrary number of bytes from the given …\nMake revealed key seed from a given VRF input and …\nMake ticket-id from the given VRF input and pre-output.\nConstruct a new VRF input.\nConstruct a new data to be signed.\nConstruct a new data to be signed.\nVRF pre-outputs.\nVRF pre-outputs.\nAppend a message to the transcript.\nTries to append a <code>VrfInput</code> to the vrf inputs list.\nVRF input to generate the revealed key.\nVerify a ring-vrf signature.\nTranscript signature.\nRing signature.\nVRF input to claim slot ownership during block production.\nSigning-data to claim slot ownership during block …\nData to be signed via ring-vrf.\nVRF input to generate the ticket id.\nAssociated protocol transcript.\nVerifier key.")