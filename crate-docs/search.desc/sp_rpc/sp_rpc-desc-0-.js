searchState.loadedDescShard("sp_rpc", 0, "Substrate RPC primitives and utilities.\nRPC a lenient list or value type.\nA number type that can be serialized both as a number or a …\nTypes for working with tracing data\nA list of values of given type.\nRPC list or value wrapper.\nA single value of given type.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nMap every contained value using function <code>F</code>.\nHex representation of the number.\nThe number represented directly.\nA number type that can be serialized both as a number or a …\nAn error type that signals an out-of-range conversion …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this number into an U256.\nContainer for all related spans and events for the block …\nSuccessful block tracing response\nHolds associated values for a tracing span.\nRepresents a tracing event, complete with recorded data.\nRepresents a single instance of a tracing span.\nResponse for the <code>state_traceBlock</code> RPC.\nError response for the <code>state_traceBlock</code> RPC.\nError block tracing response\nHash of the block being traced\nAssociated data\nError message\nVec of tracing events\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nid for this span\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMethod targets used to filter out events that do not have …\nName of this span\nParent hash\nParent id, if it exists\nid of the parent span, if any\nVec of tracing spans\nStorage key targets used to filter out events that do not …\nHashMap of <code>String</code> values recorded while tracing\nEvent target\nTarget, typically module\nModule targets that were recorded by the tracing …\nIndicates if the span is from wasm")