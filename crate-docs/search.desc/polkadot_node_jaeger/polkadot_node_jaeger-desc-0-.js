searchState.loadedDescShard("polkadot_node_jaeger", 0, "Polkadot Jaeger related primitives\nRunning with jaeger disabled.\nRunning with jaeger being enabled.\nStateful convenience wrapper around <code>mick_jaeger</code>.\nConfiguration for the jaeger tracing.\nJaeger configuration builder.\nA description of an error during jaeger initialization.\nLaunched and operational state.\nUninitialized, suggests wrong API usage if encountered.\nA special “per leaf span”.\nPreparation state with the necessary config to launch the …\nA wrapper type for a span.\nA helper to annotate the stage with a numerical value to …\nAdds the <code>FollowsFrom</code> relationship to this span with …\nAdd a PoV hash meta tag with lazy hash evaluation, without …\nAdd a string tag, without consuming the span.\nAdd a string tag, without consuming the span.\nSet the agent address to send the collected spans to.\nConstruct the configuration.\nUse the builder pattern to construct a configuration.\nDerive a child span from <code>self</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new span builder based on an encodable type. The …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nA helper to convert the hash to the fixed size …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck whether jaeger is enabled in order to avoid …\nSpawn the background task in order to send the tracing …\nReturns the leaf span.\nSet the name for this node.\nCreates a new span builder based on anything that can be …\nSpawn the jaeger instance.\nCreates a new instance.\nObtain the trace identifier for this set of spans.\nAttach a candidate hash to the span.\nAdd an additional int tag to the span without consuming.\nAttach a <code>peer-id</code> tag to the span when peer is present.\nAttach a para-id to the span.\nAttach a peer-id tag to the span.\nAttach a candidate stage. Should always come with a …\nAttach a ‘traceID’ tag set to the decimal …\n<code>mick_jaeger</code> provided API to record spans to.")