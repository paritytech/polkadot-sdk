searchState.loadedDescShard("xcm_emulator", 0, "Abridged version of <code>HrmpChannel</code> (from the <code>Hrmp</code> parachains …\nAll balance information for an account.\nData to be associated with an account (other than …\nSome way of identifying an account on the chain. We …\nThe user account identifier type for the runtime.\nThe AccountId used across the system.\nAggregate message origin for the <code>MessageQueue</code> pallet.\nThe message was already processed.\nA unit struct which can be converted into a <code>Location</code> of …\nA <code>Vec</code> of <code>Asset</code>s.\nBridged messages, each message is: <code>BridgeMessage</code>\nThe message data format is unknown (e.g. unrecognised …\nBalance of an account.\nThe basic call filter to use in Origin. All origins are …\nThe Block type used by the runtime. This is used by …\nMaximum number of block number to block hash mappings to …\nThe maximum length of a block (in bytes).\nType alias for the <code>BlockNumber</code> associated type of system …\nBlock &amp; extrinsics weights: base values and limits.\nNumbers which have upper and lower bounds\nA bounded slice.\nRuntime call type, as in <code>frame_system::Config::Call</code>\nMeans of converting a location into an account identifier.\nThe message data is bad (e.g. decoding returns an error).\nThe origin of an inbound message.\nDownward messages that already processed by parachains, …\nDownward messages, each message is: …\nThe weight of runtime database operations the runtime can …\n<code>?</code> formatting.\nDerive macro generating an impl of the trait <code>Debug</code>.\nTrait that allows zero-copy read of value-references from …\nDerive <code>parity_scale_codec::Decode</code> and for struct and enum.\nUsed for immutable dereferencing operations, like <code>*v</code>.\nThis is the legacy return type of <code>Dispatchable</code>. It is …\nSomething that should be called when a downward message is …\nTrait that allows zero-copy write of value-references to …\nDerive <code>parity_scale_codec::Encode</code> and …\nA marker trait that tells the compiler that a type encode …\nCan enqueue messages for multiple origins.\nContains the error value\n<code>Error</code> is a trait representing the basic expectations for …\nErrors that can happen when attempting to execute an …\nA trait for querying a single value from a type.\nHorizontal messages, each message is: …\nHeader hash type\nThe output of the <code>Hashing</code> function.\nA hash map implemented with quadratic probing and SIMD …\nHashing algorithm\nThe hashing system (algorithm) being used in the runtime …\nParachain head data included in the chain.\nSomething which fulfills the abstract idea of a Substrate …\nThe size of the page; this implies the maximum message …\nThe message came from the para-chain itself.\nThe pallet hooks trait. This is merely an umbrella trait …\nA type that uniquely identifies an HRMP channel. An HRMP …\nFlag indicating if global variables have been initialized …\nThe maximum amount of weight (if any) to be used from …\nThe available weight was insufficient to execute the …\nMost recent <code>HeadData</code> of each parachain, encoded.\nWeight limit imposed of the inner value.\nA relative path between state-bearing consensus systems.\nConverting trait to take a source type and convert to …\nThe maximal weight in all dimensions.\nThe maximum number of consumers allowed on a single …\nItems implementing <code>MaxEncodedLen</code> have a statically known …\nDerive <code>parity_scale_codec::MaxEncodedLen</code> for struct and …\nThe maximal length any enqueued message may have.\nThe maximum number of stale pages (i.e. of overweight …\nProcessor for a message.\nConfiguration trait of this pallet.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe migrator that is used to run Multi-Block-Migrations.\nA mutual exclusion primitive useful for protecting shared …\nThis stores the number of previous transactions associated …\nThe referenced message was not found.\nHeader number.\nContains the success value\nSee <code>Hooks::on_initialize</code>.\nA function that is invoked when an account has been …\nHandler for when a new account has just been created.\nWhat to do if the runtime wants to change the code to …\nThe transport from where a message originates.\nMethods available on <code>frame_system::Config::RuntimeOrigin</code>.\nAn unspecified error.\nMessage processing was not attempted because it was not …\nAddresses a specific overweight message.\nParachains Ids a the Network\nTrait suitable for typical cryptographic PKI key pair type.\nProvides information about the pallet setup in the runtime.\nThe caller origin, overarching type of all pallets origins.\nThe message originated from this parachain.\nUnique identifier of a parachain.\nThe inherent data that is passed by the collator to the …\nThe <code>Pallet</code> struct, the main type that implements traits …\nA unit struct which can be converted into a <code>Location</code> of …\nThe message came from the relay-chain.\nThe validation data provides information about how to …\nZero-sized type used to mark things that “act like” …\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly after all …\nA callback that executes in <em>every block</em> directly before …\nCan process messages from a specific origin.\nErrors that can happen when attempting to process a …\nThe type which is used to encode a public key.\nCode to be called when a message queue changes - either …\nThe queue is paused and no message can be executed from it.\nQueried by the pallet to check whether a queue can be …\nAnother call is currently ongoing and prevents this call …\nA mutable memory location with dynamically checked borrow …\nThe block number type used by Polkadot. 32-bits will allow …\nThe block number type used by Polkadot. 32-bits will allow …\nBuilds a sproof (portmanteau of ‘spoof’ and ‘proof’…\nThe aggregated <code>RuntimeCall</code> type.\nThe overarching event type.\nThe aggregated event type of the runtime.\nThe <code>RuntimeOrigin</code> type used by dispatchable calls.\nThe aggregated <code>RuntimeTask</code> type.\nThe designated SS58 prefix of this chain.\nThe type used to (minimally) encode the data required to …\nCan service queues and execute overweight messages.\nThe amount of weight (if any) which should be provided to …\nThe message came from a sibling para-chain.\nThe type used to represent a signature. Can be created …\nAll migrations that should run in the next runtime upgrade.\nPage/heap size type.\nThe message could not be processed for reaching the stack …\nStruct containing data needed for a storage.\nConfiguration trait of this pallet.\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe resulting type after dereferencing.\nStruct that helps with tests where either dispatchables or …\nStruct that keeps account’s id and balance\nDefault <code>Args</code> provided by xcm-emulator to be stored in a …\nAuxiliar struct to help creating a new <code>Test</code> instance\nType alias for Externalities implementation used in tests.\nUpward messages, each message is: <code>(from_para_id, msg)</code>\nInbound upward message.\nIdentifies a UMP queue inside the <code>MessageQueue</code> pallet.\nNo weight limit imposed.\nThe message format is unsupported (e.g. old XCM version).\nA double-ended queue implemented with a growable ring …\nGet the chain’s in-code version.\nWeight information for extrinsics in this pallet.\nAn optional weight limit.\nMeters consumed weight and a hard limit for the maximal …\nA hash type for identifying messages.\nSomething that should be called for each batch of messages …\nThe queue wants to give up its current processing slot.\nAn auto-generated getter for <code>Account</code>.\nReturns true if the given account exists.\nRetrieve the account transaction counter from storage.\nAdd a filter to the origin.\nConstant version of Add for <code>proof_size</code> component with u64.\nConstant version of Add for <code>ref_time</code> component with u64.\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns a reference to the underlying allocator.\nTrue if the account has no outstanding references.\nCreates a new <code>Location</code> with <code>parents</code> and an empty (<code>Here</code>) …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …\nMutate <code>self</code> so that it is suffixed with <code>suffix</code>.\nConsume <code>self</code> and return its value suffixed with <code>suffix</code>.\nProvide the preimage (runtime binary) <code>code</code> for an upgrade …\nReturns a pair of slices which contain, in order, the …\nReturns a raw pointer to the underlying data in this cell.\nExtract the signer from the message if it is a <code>Signed</code> …\nReturns a pair of slices which contain, in order, the …\nExtract a reference to the system origin, if that’s what …\nExecutes all dispatchables and assertions in order from …\nAssert the given <code>event</code> exists.\nAssert the last event equal to the given <code>event</code>.\nPanic if an expression doesn’t evaluate to <code>Ok</code>.\nReturns the junction at index <code>i</code>, or <code>None</code> if the location …\nReturns a mutable reference to the junction at index <code>i</code>, or …\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nAn auto-generated getter for <code>AuthorizedUpgrade</code>.\nProvides a reference to the back element, or <code>None</code> if the …\nProvides a mutable reference to the back element, or <code>None</code> …\nStorage backend.\nBinary searches this <code>VecDeque</code> for a given element. If the …\nBinary searches this <code>VecDeque</code> with a comparator function.\nBinary searches this <code>VecDeque</code> with a key extraction …\nDo a Blake2 256-bit hash and return result.\nAn auto-generated getter for <code>BlockHash</code>.\nAn auto-generated getter for <code>Number</code>.\nAn auto-generated getter for <code>BlockWeight</code>.\nImmutably borrows the wrapped value.\nMutably borrows the wrapped value.\nGet a reference to the caller (<code>CallerTrait</code> impl).\nTrue if the account has at least one provider reference …\nCheck if the given weight can be consumed.\nTrue if the account has no outstanding consumer references …\nTrue if the account has at least one provider reference …\nDetermine whether or not it is possible to update the code.\nReturns the number of elements the map can hold without …\nReturns the number of elements the deque can hold without …\nReturn the Location subsection identifying the chain that …\nTry to increase <code>self</code> by <code>amount</code> via checked addition.\nChecked <code>Weight</code> addition. Computes <code>self + rhs</code>, returning …\nChecked <code>Weight</code> scalar division. Computes …\nCalculates how many <code>other</code> fit into <code>self</code>.\nChecked <code>Weight</code> scalar multiplication. Computes …\nTry to reduce <code>self</code> by <code>amount</code> via checked subtraction.\nChecked <code>Weight</code> subtraction. Computes <code>self - rhs</code>, returning …\nChildren trie storage data. Key does not include prefix, …\nClears the map, removing all key-value pairs. Keeps the …\nClears the deque, removing all values.\nClear the poisoned state from a mutex.\nPanics\nOverwrites the contents of <code>self</code> with a clone of the …\nPanics\nPanics\nReturns the <code>CollationInfo</code> of the current active block.\nConsume some weight and defensively fail if it is over the …\nThe already consumed weight.\nThe ratio of consumed weight to the limit.\nThe number of outstanding references for the account <code>who</code>.\nReturns <code>true</code> if the deque contains an element equal to the …\nReturns true if <code>self</code> is a super-set of the given <code>inner</code> …\nReturns <code>true</code> if the map contains a value for the specified …\nReturns boolean indicating whether <code>self</code> contains only the …\nConvert the <code>location</code> into <code>Some</code> account ID, or <code>None</code> if not …\nReturns the core selector.\nPrint the pages in each queue and the messages in each …\nDecrement the reference counter on an account. This <em>MUST</em> …\nDecrements the parent count by 1.\nDecrement the provider reference counter on an account.\nDecrement the reference counter on an account. This <em>MUST</em> …\nDecrement the sufficients reference counter on an account.\nAttempt to deserialise the value from input.\nAttempt to deserialize the value from input into a …\nCreates an empty <code>HashMap&lt;K, V, S&gt;</code>, with the <code>Default</code> value …\nCreates an empty deque.\nCreates a <code>RefCell&lt;T&gt;</code>, with the <code>Default</code> value for T.\nCreates a <code>Mutex&lt;T&gt;</code>, with the <code>Default</code> value for T.\nConsume some weight and defensively fail if it is over the …\nDeposits an event into this block’s event record.\nDeposits an event into this block’s event record adding …\nDeposits a log and ensures it matches the block’s log …\nDereferences the value.\nDerive a child key from a series of given junctions.\nReturns a reference to the digest.\nAn auto-generated getter for <code>Digest</code>.\nGet a mutable reference to the digest.\nConstant version of Div with u64.\nApply an authorized upgrade, performing any validation …\nTo be called after any origin/privilege checks. Put the …\nTry to execute a single message that was marked as …\nEnsure the correctness of state of this pallet.\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nReturns some mutable reference to the inner value if it is …\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns some reference to the inner value if it is of type …\nDownward messages in the order they were sent.\nClears the map, returning all key-value pairs as an …\nRemoves the specified range from the deque in bulk, …\nConsume <code>self</code> and return the inner vec.\nConvert self to an owned vector.\nConvert self to a slice and append it to the destination.\nReturns the fixed encoded size of the type.\nCalculates the encoded size.\nEnqueue a single <code>message</code> from a specific <code>origin</code>.\nEnqueue multiple <code>messages</code> from a specific <code>origin</code>.\nGets the given key’s corresponding entry in the map for …\nPanics\nAn auto-generated getter for <code>EventCount</code>.\nGet a single event at specified index.\nAn auto-generated getter for <code>EventTopics</code>.\nGet the current events deposited by the runtime.\nExecute an overweight message.\nExecute a single overweight message.\nExecutes a message that could not be executed by …\nExtensions.\nGet the basic externalities for this pallet, useful for …\nCreates an iterator which uses a closure to determine if …\nGets extrinsics count.\nAn auto-generated getter for <code>ExtrinsicData</code>.\nGets the index of extrinsic that is currently executing.\nReturns a reference to the extrinsics root.\nReturns the contents of the “front” slice as returned …\nFilter the call if caller is not root, if false is …\nRemove temporary “environment” entries in storage, …\nReturns the first interior junction, or <code>None</code> if the …\nExtra information about this account. The MSB is a flag …\nUtilities for formatting and printing <code>String</code>s.\nFormats the value using the given formatter.\nReturn the state footprint of the given queue.\nNon-reserved part of the balance which the account holder …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nExamples\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>[T; N]</code> into a <code>VecDeque&lt;T&gt;</code>.\nReturns the argument unchanged.\nTurn a <code>Vec&lt;T&gt;</code> into a <code>VecDeque&lt;T&gt;</code>.\nCreates a new <code>RefCell&lt;T&gt;</code> containing the given value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new mutex in an unlocked state ready for use. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct <code>Weight</code> from the same weight for all parts.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nConstruct <code>Weight</code> from weight parts, namely reference time …\nReturns the KeyPair from the English BIP39 seed <code>phrase</code>, or …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate new key pair from the provided <code>seed</code>.\nMake a new key pair from secret seed material. The slice …\nCreate a new instance of <code>Assets</code> from a <code>Vec&lt;Asset&gt;</code> whose …\nCreate a new instance of <code>Assets</code> from a <code>Vec&lt;Asset&gt;</code> whose …\nInterprets the string <code>s</code> in order to generate a key pair.\nInterprets the string <code>s</code> in order to generate a key Pair. …\nProvides a reference to the front element, or <code>None</code> if the …\nProvides a mutable reference to the front element, or <code>None</code> …\nThe amount that <code>free + reserved</code> may not drop below when …\nPanics\nGenerate new secure (random) key pair.\nGenerate new secure (random) key pair and provide the …\nReturn the current value.\nReturns a reference to the value corresponding to the key.\nProvides a reference to the element at the given index.\nReturn a reference to an item at a specific index or <code>None</code> …\nReturns the key-value pair corresponding to the supplied …\nAttempts to get mutable references to <code>N</code> values in the map …\nAttempts to get mutable references to <code>N</code> values in the map …\nReturns a mutable reference to the value corresponding to …\nProvides a mutable reference to the element at the given …\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the underlying data.\nPanics\nHandle some incoming DMP messages (note these are …\nHandle some incoming XCMP messages (note these are the big …\nReturns the hash of this head data.\nReturns the hash of the header.\nCompute the blake2-256 hash of the persisted validation …\nReturns a reference to the map’s <code>BuildHasher</code>.\nCreates a new <code>Location</code> with 0 parents and a <code>Here</code> interior.\nHRMP messages grouped by channels. The messages in the …\nIncrement a particular account’s nonce by 1.\nIncrement the reference counter on an account.\nIncrement the reference counter on an account, ignoring …\nIncrement the provider reference counter on an account.\nIncrement the reference counter on an account.\nIncrement the self-sufficient reference counter on an …\nReturns a reference to the value corresponding to the …\nWhether all inherents have been applied.\nStart the execution of a particular block.\nPrepare/insert relevant data for <code>schedule_code_upgrade</code> for …\nReturn a reference to the inner vec.\nInserts a key-value pair into the map.\nInserts an element at <code>index</code> within the deque, shifting all …\nCheck the integrity of this pallet’s configuration.\nReturn a reference to the interior field.\nThe interior (i.e. non-parent) junctions that this <code>Location</code>…\nReturn a mutable reference to the interior field.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume <code>self</code> and return the caller.\nConsumes the <code>RefCell</code>, returning the wrapped value.\nConsumes this mutex, returning the underlying data.\nConsume <code>self</code> and return the inner vec.\nCreates a consuming iterator, that is, one that moves each …\nConsumes the deque into a front-to-back iterator yielding …\nCreates a consuming iterator visiting all the keys in …\nExtract the signer from the message if it is a <code>Signed</code> …\nCreates a consuming iterator visiting all the values in …\nConsume <code>self</code> and return the equivalent <code>VersionedLocation</code> …\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns <code>true</code> if the inner type is the same as <code>T</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns <code>true</code> if the map contains no elements.\nReturns <code>true</code> if the deque is empty.\nWhether the <code>Location</code> has no parents and has a <code>Here</code> …\nReturns <code>true</code> if this definitely represents no asset.\nReturns true if the given id corresponds to either the …\nDetermines whether the mutex is poisoned.\nTrue if the account has some outstanding consumer …\nAn iterator visiting all key-value pairs in arbitrary …\nReturns a front-to-back iterator.\nAn iterator visiting all key-value pairs in arbitrary …\nReturns a front-to-back iterator that returns mutable …\nAn iterator visiting all keys in arbitrary order. The …\nKill all storage items with a key that starts with the …\nKill some items from storage.\nReturns last junction, or <code>None</code> if the location is empty or …\nGet the relay chain block number which was used as an …\nReturns the <code>spec_version</code> of the last runtime upgrade.\nPanics\nReturns the number of elements in the map.\nReturns the number of elements in the deque.\nReturn the number of distinct asset instances contained.\nReturns the number of parents and junctions in <code>self</code>.\nThe limit can ever be accrued.\nAcquires a mutex, blocking the current thread until it is …\nPanics\nRearranges the internal storage of this deque so it is one …\nEnsures that <code>self</code> has the same number of parents as <code>prefix</code>…\nGet the aggressive max of <code>self</code> and <code>other</code> weight.\nThe maximum number of messages that can be pending in the …\nThe maximum code size permitted, in bytes.\nUpper bound, in bytes, of the maximum encoded size of this …\nThe maximum message size that could be put into the …\nThe maximum legal size of a POV block, in bytes.\nThe maximum total size of the messages that can be pending …\nReturns the largest finite number this type can represent\nGet the conservative min of <code>self</code> and <code>other</code> weight.\nReturns the smallest finite number this type can represent\nA head of the Message Queue Chain for this channel. Each …\nThe current number of messages pending in the channel. …\nConstant version of Mul with u64.\nCreates new header.\nCreates <code>Self</code> with the maximal possible limit for the …\nCreates a new <code>Test</code> instance\nCreate an <code>Id</code>.\nCreates an empty <code>HashMap</code>.\nCreates an empty deque.\nCreates a new <code>RefCell</code> containing <code>value</code>.\nCreates a new mutex in an unlocked state ready for use.\nA new (empty) value.\nCreates a new <code>Location</code> with the given number of parents …\nCreates an empty deque.\nReturns a <code>TestArgs</code> instance to be used for parachains …\nReturns a <code>TestArgs</code> instance to be used for the Relay Chain …\nCreate with system none origin and …\nTo be called immediately after an extrinsic has been …\nNote what the extrinsic data of the current extrinsic …\nTo be called immediately after <code>note_applied_extrinsic</code> of …\nTo be called immediately after finishing the …\nNote that all inherents have been applied.\nReturns a reference to the header number.\nImplementing this function on a pallet allows you to …\nAn account is being created.\nHandles actually sending upward messages by moving them …\nBlock finalization hook. This is called at the very end of …\nHook to consume a block’s idle time. This will run when …\nSee <code>Hooks::on_initialize</code>.\nBlock initialization hook. This is called at the very …\nA hook to run logic after inherent application.\nHook executed when a code change (aka. a “runtime upgrade…\nOpen HRMP channel for using it in benchmarks or tests.\nOpen HRMP channel for using it in benchmarks or tests.\nThe para id of the current parachain.\nCreate new implementations of the <code>Get</code> trait.\nCreates a new <code>Location</code> which evaluates to the parent …\nReturns the number of <code>Parent</code> junctions at the beginning of …\nReturns a reference to the parent hash.\nAn auto-generated getter for <code>ParentHash</code>.\nThe parent head-data.\nThe number of parent junctions at the beginning of this …\nPanics\nReturns the index of the partition point according to the …\nRemoves the last element from the deque and returns it, or …\nRemoves the first element and returns it, or <code>None</code> if the …\nExecute some post-checks after a runtime upgrade.\nExecute some pre-checks prior to a runtime upgrade.\nPrepend a <code>Location</code> to any concrete asset items, giving it …\nMutate <code>self</code> so that it is prefixed with <code>prefix</code>.\nConsume <code>self</code> and return its value prefixed with <code>prefix</code>.\nProcess the given message, using no more than the …\nReturn the storage size part of the weight.\nReturn a mutable reference to the storage size part of the …\nProvides type based access to context intended for error …\nThe number of outstanding provider references for the …\nGet the public key.\nAdd some asset onto the list, saturating. This is quite a …\nAppends an element to the back of the deque.\nPrepends an element to the deque.\nMutates <code>self</code>, prefixing its interior junctions with <code>new</code>. …\nMutates <code>self</code>, suffixing its interior junctions with <code>new</code>. …\nConsumes <code>self</code> and returns a <code>Location</code> prefixed with <code>new</code>, or …\nConsumes <code>self</code> and returns a <code>Location</code> suffixed with <code>new</code>, or …\nCreates an iterator that covers the specified range in the …\nCreates an iterator that covers the specified mutable …\nCreates a raw immutable entry builder for the HashMap.\nCreates a raw entry builder for the HashMap.\nFill <code>buf</code> with the contents of the “front” slice as …\nRead and return the events of a specific pallet, as …\nGet the current events deposited by the runtime.\nMutate <code>self</code> so that it represents the same location from …\nConsume <code>self</code> and return a new value representing the same …\nRemove a page which has no more messages remaining to be …\nThe para that acts as the recipient in this channel.\nReclaim the given weight.\nReturn the reference time part of the weight.\nReturn a mutable reference to the reference time part of …\nThe number of outstanding provider and sufficient …\nThe number of outstanding references for the account <code>who</code>.\nInform the system pallet of some additional weight that …\nA storage proof of a predefined set of keys from the …\nThe relay-chain block number this is in the context of.\nThe relay-chain block storage root this is in the context …\nThe remaining weight that can still be consumed.\nMake some on-chain remark.\nMake some on-chain remark and emit event.\nRemoves a key from the map, returning the value at the key …\nRemoves and returns the element at <code>index</code> from the deque. …\nRemoves a key from the map, returning the stored key and …\nRemove the <code>NetworkId</code> value in any interior <code>Junction</code>s.\nReplaces the wrapped value with a new one, returning the …\nReplaces the wrapped value with a new one computed from <code>f</code>, …\nReserves capacity for at least <code>additional</code> more elements to …\nReserves capacity for at least <code>additional</code> more elements to …\nReserves the minimum capacity for at least <code>additional</code> more …\nBalance which is has active holds on it and may not be …\nReset events.\nReset origin filters to default one, i.e …\nModifies the deque in-place so that <code>len()</code> is equal to …\nModifies the deque in-place so that <code>len()</code> is equal to …\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nCreate with system root origin and …\nRotates the double-ended queue <code>n</code> places to the left.\nRotates the double-ended queue <code>n</code> places to the right.\nReturn the chain’s current runtime version.\nIncrement <code>Weight</code> by <code>amount</code> via saturating addition.\nSaturating <code>Weight</code> addition. Computes <code>self + rhs</code>, …\nSaturating <code>Weight</code> scalar division. Computes …\nSaturating <code>Weight</code> scalar multiplication. Computes …\nSaturating <code>Weight</code> scalar exponentiation. Computes …\nReduce <code>Weight</code> by <code>amount</code> via saturating subtraction.\nSaturating <code>Weight</code> subtraction. Computes <code>self - rhs</code>, …\nThe implementation of the runtime upgrade functionality …\nPuts a message in the <code>PendingUpwardMessages</code> storage item. …\nThe para that acts as the sender in this channel.\nService all message queues in some fair manner.\nStores an assertion in a particular Chain\nSet the current block weight. This should only be used in …\nSet the block number to something in particular. Can be …\nReplace the caller with caller from the other origin\nSet the new runtime code.\nSet the new runtime code without doing any checks of the …\nSet a custom head data that should be returned as result …\nStores a dispatchable in a particular Chain\nSets the index of extrinsic that is currently executing.\nSets the extrinsic root.\nSet the number of pages in the WebAssembly environment’s …\nSets the header number.\nSets the parent hash.\nSet the parent hash number to something in particular. Can …\nSet the storage size part of the weight.\nSet the reference time part of the weight.\nSets the state root.\nSet some items of storage.\nSet the current validation data.\nShrinks the capacity of the map with a lower limit. It …\nShrinks the capacity of the deque with a lower bound.\nShrinks the capacity of the map as much as possible. It …\nShrinks the capacity of the deque as much as possible.\nSign a message.\nCreate with system signed origin and …\nRemove any unneeded parents/junctions in <code>self</code> based on the …\nIf possible give a hint of expected size of the encoding.\nAttempt to skip the encoded value from input.\nThe lower-level source of this error, if any.\nReturns an iterator starting with the current error and …\nSplits off the first interior junction, returning the …\nSplits off the last interior junction, returning the …\nSplits the deque into two at the given index.\nSimple sr25519 (Schnorr-Ristretto) API.\nReturns a reference to the state root.\nState version to use during tests.\nConstant version of Sub for <code>proof_size</code> component with u64.\nConstant version of Sub for <code>ref_time</code> component with u64.\nThe number of outstanding sufficient references for the …\nSwaps elements at indices <code>i</code> and <code>j</code>.\nSwaps the wrapped value of <code>self</code> with the wrapped value of …\nRemoves an element from anywhere in the deque and returns …\nRemoves an element from anywhere in the deque and returns …\nAny remaining unprocessed messages should happen only …\nTakes the wrapped value, leaving <code>Default::default()</code> in its …\nRemoves the first interior junction from <code>self</code>, returning it\nRemoves the last element from <code>interior</code>, returning it (or …\nReturn a vec filled with raw data.\nTop trie storage data.\nThe total balance in this account including any that is …\nThe total size in bytes of all message payloads in the …\nShortens the deque, keeping the first <code>len</code> elements and …\nCreate an instance from the first elements of the given …\nTry to add some <code>other</code> weight while upholding the <code>limit</code>.\nImmutably borrows the wrapped value, returning an error if …\nMutably borrows the wrapped value, returning an error if …\nImmutably borrows the wrapped value, returning an error if …\nConsume the given weight after checking that it can be …\nTries to insert a key-value pair into the map, and returns …\nAttempts to acquire this lock.\nTries to reserve capacity for at least <code>additional</code> more …\nTries to reserve capacity for at least <code>additional</code> more …\nTries to reserve the minimum capacity for at least …\nExecute the sanity checks of this pallet, per block.\nDo something with the caller, consuming self but returning …\nCreates an empty deque with space for at least <code>capacity</code> …\nReturns the name of a type as a string slice.\nUndo the effect of leaked guards on the borrow state of …\nGet the unincluded segment size after the given hash.\nReturns the parent count and the interior <code>Junctions</code> as a …\nWrite code to the storage and emit related events and …\nReturns a mutable reference to HRMP channel metadata for a …\nReturns a mutable reference to HRMP channel metadata for a …\nConvert self to a slice and then invoke the given closure …\nCheck that provided <code>code</code> can be upgraded to. Namely, check …\nAn iterator visiting all values in arbitrary order. The …\nAn iterator visiting all values mutably in arbitrary order.\nVerify a signature on a message. Returns true if the …\nCreates an empty <code>HashMap</code> with at least the specified …\nCreates an empty deque with space for at least <code>capacity</code> …\nCreates an empty <code>HashMap</code> with at least the specified …\nCreates an empty deque with space for at least <code>capacity</code> …\nCreates an empty <code>HashMap</code> which will use the given hash …\nCreates <code>Self</code> from a limit for the maximal consumable …\nReturn a <code>Weight</code> where all fields are zero.\nPossible alignments returned by <code>Formatter::align</code>\nThis structure represents a safely precompiled version of …\n<code>b</code> formatting.\nIndication that contents should be center-aligned.\n<code>?</code> formatting.\nDerive macro generating an impl of the trait <code>Debug</code>.\nA struct to help with <code>fmt::Debug</code> implementations.\nA struct to help with <code>fmt::Debug</code> implementations.\nA struct to help with <code>fmt::Debug</code> implementations.\nA struct to help with <code>fmt::Debug</code> implementations.\nA struct to help with <code>fmt::Debug</code> implementations.\nFormat trait for an empty format, <code>{}</code>.\nContains the error value\nThe error type which is returned from formatting a message …\nConfiguration for formatting.\nImplements <code>fmt::Debug</code> and <code>fmt::Display</code> using a function.\nIndication that contents should be left-aligned.\n<code>e</code> formatting.\n<code>x</code> formatting.\n<code>o</code> formatting.\nContains the success value\n<code>p</code> formatting.\nThe type returned by formatter methods.\nIndication that contents should be right-aligned.\n<code>E</code> formatting.\n<code>X</code> formatting.\nA trait for writing or formatting into Unicode-accepting …\nFlag indicating what form of alignment was requested.\nDetermines if the <code>#</code> flag was specified.\nGet the formatted string, if it has no arguments to be …\nCreates a <code>DebugList</code> builder designed to assist with …\nCreates a <code>DebugMap</code> builder designed to assist with …\nCreates a <code>DebugSet</code> builder designed to assist with …\nCreates a <code>DebugStruct</code> builder designed to assist with …\nCreates a <code>DebugTuple</code> builder designed to assist with …\nAdds the contents of an iterator of entries to the set …\nAdds the contents of an iterator of entries to the list …\nAdds the contents of an iterator of entries to the map …\nAdds a new entry to the set output.\nAdds a new entry to the list output.\nAdds a new entry to the map output.\nAdds a new entry to the set output.\nAdds a new entry to the list output.\nAdds a new field to the generated struct output.\nAdds a new field to the generated tuple struct output.\nAdds a new field to the generated struct output.\nAdds a new field to the generated tuple struct output.\nCharacter used as ‘fill’ whenever there is alignment.\nFinishes output and returns any error encountered.\nFinishes output and returns any error encountered.\nFinishes output and returns any error encountered.\nFinishes output and returns any error encountered.\nFinishes output and returns any error encountered.\nMarks the struct as non-exhaustive, indicating to the …\nFlags for formatting\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nThe <code>format</code> function takes an <code>Arguments</code> struct and returns …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdds the key part of a new entry to the map output.\nAdds the key part of a new entry to the map output.\nThis function takes a string slice and emits it to the …\nPerforms the correct padding for an integer which has …\nOptionally specified precision for numeric types. …\nDetermines if the <code>0</code> flag was specified.\nDetermines if the <code>-</code> flag was specified.\nDetermines if the <code>+</code> flag was specified.\nAdds the value part of a new entry to the map output.\nAdds the value part of a new entry to the map output.\nOptionally specified integer width that the output should …\nThe <code>write</code> function takes an output stream, and an <code>Arguments</code>…\nWrites a <code>char</code> into this writer, returning whether the …\nGlue for usage of the <code>write!</code> macro with implementors of …\nWrites some formatted information into this instance.\nWrites a string slice into this writer, returning whether …\nWrites some data to the underlying buffer contained within …\nHelper function to generate an account ID from seed.\nAn identifier used to match public keys against sr25519 …\nThe byte length of public key\nAn Schnorrkel/Ristretto x25519 (“sr25519”) key pair.\nAn Schnorrkel/Ristretto x25519 (“sr25519”) public key.\nThe byte length of signature\nAn Schnorrkel/Ristretto x25519 (“sr25519”) signature.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nMake a new key pair from raw secret seed material.\nCalls <code>U::from(self)</code>.\nGenerate output bytes from the given VRF configuration.\nGet the public key.\nVerify a signature on a message. Returns <code>true</code> if the …\nSchnorrkel VRF related types and operations.\nVRF input.\nVRF pre-output type suitable for schnorrkel operations.\nVRF proof type suitable for schnorrkel operations.\nVRF input ready to be used for VRF sign and verify …\nVRF signature data\nTranscript ready to be used for VRF related operations.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMap transcript to <code>VrfSignData</code>.\nGenerate output bytes from the given VRF configuration.\nBuild a new transcript instance.\nBuild a new instance ready to be used for VRF signer and …\nVRF pre-output.\nVRF proof.\nAdd some extra data to be signed.")