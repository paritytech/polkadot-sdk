searchState.loadedDescShard("pallet_bridge_beefy", 0, "BEEFY bridge pallet.\nBEEFY validator id, used by configured bridged chain.\nBEEFY validator set, used by configured bridged chain.\nBEEFY authority set, used by configured bridged chain.\nBEEFY commitment hasher, used by configured bridged chain.\nMMR leaf type, used by configured bridged chain.\nThe type of the MMR leaf extra data used by the configured …\nBEEFY signed commitment, used by configured bridged chain.\nBlock hash, used by configured bridged chain.\nBlock number, used by configured bridged chain.\nConfigured bridged chain.\nMMR hashing output type of <code>BridgedMmrHashing&lt;T, I&gt;</code>.\nMMR hashing algorithm, used by configured bridged chain.\nBEEFY MMR proof type used by the pallet\nImported commitment data, stored by the pallet.\nSome high level info about the imported commitments.\nPallet initialization data.\nThe target that will be used when publishing logs related …\nBEEFY authority set that will be finalizing descendants of …\nA merkle root of the next BEEFY authority set.\nNumber of the best block, finalized by BEEFY.\nThe commitment signatures are collected for.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nId of the set.\nCalls <code>U::from(self)</code>.\nProof elements (hashes of siblings of inner nodes on the …\nCommitment(s) to BEEFY AuthorityIds.\nNumber of leaves in MMR, when the proof was generated.\nArbitrary extra leaf data to be used by downstream pallets …\nThe indices of the leaves the proof is for.\nNumber of validators in the set.\nMMR root at the imported block.\nPallet operating mode.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nCurrent block parent number and hash.\nBlock number and hash of the finalized block parent.\nGRANDPA validators’ signatures for the commitment.\nVersion of the leaf format.\nThe pallet has already been initialized.\nError generated by the <code>OwnedBridgeModule</code> trait.\nThe chain we are bridging to here.\nContains a variant per dispatchable extrinsic that this …\nMaximal number of imported commitments to keep in the …\nConfiguration trait of this pallet.\nThe current BEEFY authority set at the bridged chain.\nThe <code>Error</code> enum of this pallet.\nCan be used to configure the genesis state of this pallet.\nAll the commitments that we have imported and haven’t …\nHigh level info about the imported commitments.\n<code>Instance1</code> to be used for instantiable pallets defined with …\nThe number of signatures in the commitment is invalid.\nThe commitment is signed by unknown validator set.\nInvalid initial authority set.\nThe id of the provided validator set is invalid.\nThe number of validator ids provided is invalid.\nThe validators are not matching the merkle tree root of …\nThe upper bound on the number of requests allowed by the …\nMMR proof verification has failed.\nMMR root is missing from the commitment.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThere aren’t enough correct signatures in the commitment …\nThe pallet has not been initialized yet.\nThe imported commitment is older than the best commitment …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe current operating mode of the pallet.\nOptional pallet owner.\nThe current number of requests which have written to …\nThere are too many requests for the current window to …\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nOptional module initialization data.\nInitialize pallet with BEEFY authority set and best known …\nInitialize pallet with BEEFY authority set and best known …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>initialize</code>.\nCreate a call with the variant <code>set_operating_mode</code>.\nCreate a call with the variant <code>set_owner</code>.\nCreate a call with the variant <code>submit_commitment</code>.\nOptional module owner account.\nAn auto-generated getter for <code>RequestCount</code>.\nHalt or resume all pallet operations.\nHalt or resume all pallet operations.\nChange <code>PalletOwner</code>.\nChange <code>PalletOwner</code>.\nAuto-generated docs-only module listing all (public and …\nSubmit a commitment generated by BEEFY authority set.\nSubmit a commitment generated by BEEFY authority set.\nInitialize pallet with BEEFY authority set and best known …\nHalt or resume all pallet operations.\nChange <code>PalletOwner</code>.\nSubmit a commitment generated by BEEFY authority set.\nThe current BEEFY authority set at the bridged chain.\nA ring buffer containing the block numbers of the …\nAll the commitments that we have imported and haven’t …\nHigh level info about the imported commitments.\nThe current operating mode of the pallet.\nOptional pallet owner.\nThe current number of requests which have written to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")