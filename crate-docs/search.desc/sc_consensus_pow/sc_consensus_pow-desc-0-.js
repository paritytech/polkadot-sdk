searchState.loadedDescShard("sc_consensus_pow", 0, "Proof of work consensus for Substrate.\nDifficulty for the algorithm.\nIntermediate key for PoW engine.\nA build of mining, containing the metadata and the block …\nMining worker that exposes structs to query the current …\nMining metadata. This is the information needed to start …\nAuxiliary storage prefix for PoW engine.\nAlgorithm used for proof of work.\nAuxiliary storage data for PoW.\nA block importer for PoW.\nThe PoW import queue type.\nIntermediate value passed to block importer.\nA verifier for PoW blocks.\nGet the current best hash. <code>None</code> if the worker has just …\nCurrently known best hash which the pre-hash is built on.\nBreak a fork choice tie.\nGet the next block’s difficulty.\nMining target difficulty.\nDifficulty of the block, if known.\nDifficulty of the current block.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nImport queue for PoW engine.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet a copy of the current mining metadata, if available.\nMining metadata.\nCreate a new block import suitable to be used in PoW\nMining pre-hash.\nPre-runtime digest item.\nVerify that the seal is valid against given pre hash when …\nMining proposal.\nRead the auxiliary from client.\nStart the mining worker for PoW. This function provides …\nSubmit a mined seal. The seal will be validated again. …\nTotal difficulty up to current block.\nVerify that the difficulty is valid against given seal.\nGet the version of the mining worker.")