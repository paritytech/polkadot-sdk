searchState.loadedDescShard("pallet_xcm_bridge_hub", 0, "Module that adds XCM support to bridge pallets. The pallet …\nBridge metadata.\nBridge identifier - used <strong>only</strong> for communicating with …\nBridge state.\nBridge is closed. Associated lanes are also closed. After …\nMessage has been dispatched.\nWe’ve been unable to decode message payload.\nThe target that will be used when publishing logs related …\nMessage has <strong>NOT</strong> been dispatched because of given error.\nBridge is opened. Associated lanes are also opened.\nAn easy way to access <code>HaulBlobExporter</code>.\nBridge is suspended. Associated lanes are opened.\nEncoded XCM blob. We expect the bridge messages pallet to …\nMessage dispatch result type for single message.\nSee <code>BridgeLocations::bridge_destination_universal_location</code>.\nRelative location of the bridge origin chain. This is …\nSee <code>BridgeLocations::bridge_origin_universal_location</code>. …\nAccount with the reserved funds. Derived from …\nReserved amount on the sovereign account of the sibling …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMapping to the unique <code>LaneId</code>.\nA module that is responsible for migration of storage.\nCreate bridge identifier from two universal locations.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nCurrent bridge state.\nThis migration does not modify storage but can be used to …\nThe in-code storage version.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nDo not hold <code>Self::BridgeDeposit</code> for the location of …\nXCM-level dispatcher for inbound bridge messages.\nTrying to close already closed bridge.\nThe bridge is already registered in this pallet.\nThe funds are held as a deposit for opened bridge.\nAmount of this chain native tokens that is reserved on the …\nBridge locations error.\nAssociated messages pallet instance that bridges us with …\nAn alias for the bridge metadata.\nThe bridge between two locations has been opened.\nA converter between a location and a sovereign account.\nBridge has been closed and pruned from the runtime …\nBridged network as relative location of bridged …\nAll registered bridges.\nContains a variant per dispatchable extrinsic that this …\nBridge is going to be closed, but not yet fully pruned …\nConfiguration trait of this pallet.\nCurrency used to pay for bridge registration.\nChecks the XCM version for the destination.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe bridge origin can’t pay the required amount for …\nThe origin that is allowed to call privileged operations …\nCan be used to configure the genesis state of this pallet.\nThe reason for this pallet placing a hold on funds.\n<code>Instance1</code> to be used for instantiable pallets defined with …\nInvalid local bridge origin account.\nAn alias for lane identifier type.\nAll registered <code>lane_id</code> and <code>bridge_id</code> mappings.\nLanes manager error.\nAn alias for the associated lanes manager.\nLocal XCM channel manager.\nPrice of single message export to the bridged consensus (…\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nA set of XCM locations within local consensus system that …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe overarching event type.\nThe overarching runtime hold reason.\nAn alias for this chain.\nThe local origin already owns a maximal number of bridges.\nRuntime’s universal location.\nTrying to access unknown bridge.\nThe version of XCM location argument is unsupported.\nDummy marker.\nReturn bridge metadata by bridge_id\nReturn bridge metadata by lane_id\nSee <code>BridgeLocations::bridge_destination_universal_location</code>.\nReturn bridge endpoint locations and dedicated <strong>bridge</strong> …\nReturn bridge endpoint locations and dedicated lane …\nRelative location of the bridge origin chain. This is …\nSee <code>BridgeLocations::bridge_origin_universal_location</code>. …\nAccount with the reserved funds. Derived from …\nTry to close the bridge.\nTry to close the bridge.\nReserved amount on the sovereign account of the sibling …\nAuto-generated docs-only module listing all defined …\nOpen bridge for lane.\nEnsure the correctness of the state of this pallet.\nEnsure the correctness of the state of the bridge.\nEnsure the correctness of the state of the connected …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMapping to the unique <code>LaneId</code>.\nCreate a call with the variant <code>close_bridge</code>.\nCreate a call with the variant <code>open_bridge</code>.\nOpen a bridge between two locations.\nOpen a bridge between two locations.\nOpened bridges.\nCurrent bridge state.\nAuto-generated docs-only module listing all (public and …\nAmount of deposit held.\nAmount of deposit released.\nBridge identifier.\nBridge identifier.\nBridge identifier.\nNumber of enqueued messages that need to be pruned in …\nLane identifier.\nLane identifier.\nLane identifier.\nUniversal location of local bridge endpoint.\nNumber of pruned messages during the close call.\nNumber of pruned messages during the close call.\nUniversal location of remote bridge endpoint.\nTry to close the bridge.\nOpen a bridge between two locations.\nAll registered bridges.\nAll registered <code>lane_id</code> and <code>bridge_id</code> mappings.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")