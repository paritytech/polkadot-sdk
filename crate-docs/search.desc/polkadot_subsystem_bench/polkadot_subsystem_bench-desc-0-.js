searchState.loadedDescShard("polkadot_subsystem_bench", 0, "Test configuration definition and helpers.\nTest usage implementation\nTest utils\nApproval test state used by all mock subsystems to be able …\nParameters specific to the approvals benchmark\nEnable approval voting parallel.\nRuns the approval benchmark.\nMin candidates to be signed in a single approval.\nMax candidate to be signed in a single approval.\nThe maximum tranche diff between approvals coalesced …\nEnable assignments v2.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe last considered tranche for which we send the message.\nThe number of no shows per candidate\nTakes a test configuration and uses it to creates the …\nSends messages only till block is approved.\nWork directory.\nRegular random chunk recovery. This is also the fallback …\nFetch the full availability datafrom backers first. Saves …\nRecovery from systematic chunks. Much faster than regular …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPeer networking latency configuration.\nHelper struct for authority related state.\nThe test input parameters\nAsync Backing allowed_ancestry_len\nThe amount of bandwidth our node has.\nReturn the number of peers connected to our node.\nConnectivity ratio, the percentage of peers we are …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerates the authority keys we need for the network …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOptional peer emulation latency (round trip time) wrt node …\nAsync Backing max_candidate_depth\nThe max PoV size,\nMaximum backing group size\nThe mean latency(milliseconds) of the peers.\nThe min PoV size\nNumber of minimum backing votes\nNumber of cores\nNumber of validators\nThe number of needed votes to approve a candidate.\nNumber of blocks to run the test for\nThe amount of bandwidth remote validators have.\nRandomly sampled pov_sizes\nSample latency (in milliseconds) from a normal …\nThe standard deviation\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerates a topology to be used for this benchmark.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")