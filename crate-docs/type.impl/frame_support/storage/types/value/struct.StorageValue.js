(function() {var type_impls = {
"cumulus_pallet_dmp_queue":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"cumulus_pallet_dmp_queue::pallet::MigrationStatus"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","cumulus_pallet_dmp_queue::pallet::MigrationStatus"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","cumulus_pallet_dmp_queue::pallet::MigrationStatus"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","cumulus_pallet_dmp_queue::pallet::MigrationStatus"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","cumulus_pallet_dmp_queue::pallet::MigrationStatus"]],
"cumulus_pallet_xcmp_queue":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"cumulus_pallet_xcmp_queue::pallet::InboundXcmpSuspended"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","cumulus_pallet_xcmp_queue::pallet::InboundXcmpSuspended"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","cumulus_pallet_xcmp_queue::pallet::InboundXcmpSuspended"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","cumulus_pallet_xcmp_queue::pallet::InboundXcmpSuspended"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","cumulus_pallet_xcmp_queue::pallet::InboundXcmpSuspended"]],
"emulated_integration_tests_common":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#95-100\">source</a><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#103\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.hashed_key\" class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#108\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.exists\" class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#113\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.get\" class=\"fn\">get</a>() -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a></h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#119\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_get\" class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#144-146\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.translate\" class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: <a class=\"trait\" href=\"emulated_integration_tests_common/impls/trait.Decode.html\" title=\"trait emulated_integration_tests_common::impls::Decode\">Decode</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.put\" class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#158\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.set\" class=\"fn\">set</a>(val: &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#163\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate\" class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#168\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate_extant\" class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#173-175\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_mutate\" class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#180\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate_exists\" class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#185-187\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_mutate_exists\" class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#192\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.kill\" class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#197\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.take\" class=\"fn\">take</a>() -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a></h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#210-214\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.append\" class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: <a class=\"trait\" href=\"emulated_integration_tests_common/impls/trait.Encode.html\" title=\"trait emulated_integration_tests_common::impls::Encode\">Encode</a>,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageAppend.html\" title=\"trait frame_support::storage::StorageAppend\">StorageAppend</a>&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageAppend.html\" title=\"trait frame_support::storage::StorageAppend\"><code>StorageAppend</code></a>.</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#230-232\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.decode_len\" class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\">StorageDecodeLength</a>,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\"><code>StorageDecodeLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#251-253\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.decode_non_dedup_len\" class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\">StorageDecodeNonDedupLength</a>,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\"><code>StorageDecodeNonDedupLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#261-265\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_append\" class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: <a class=\"trait\" href=\"emulated_integration_tests_common/impls/trait.Encode.html\" title=\"trait emulated_integration_tests_common::impls::Encode\">Encode</a>,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\">StorageTryAppend</a>&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements <a href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\"><code>StorageTryAppend</code></a>.</p>\n</div></details></div></details>",0,"emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestsList","emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequestsList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#271-277\">source</a><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html\" title=\"trait frame_support::storage::types::StorageEntryMetadataBuilder\">StorageEntryMetadataBuilder</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#279\">source</a><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html#tymethod.build_metadata\" class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestsList","emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequestsList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#294-300\">source</a><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInfoTrait.html\" title=\"trait frame_support::traits::storage::StorageInfoTrait\">StorageInfoTrait</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#302\">source</a><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/storage/trait.StorageInfoTrait.html#tymethod.storage_info\" class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/storage/struct.StorageInfo.html\" title=\"struct frame_support::traits::storage::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","StorageInfoTrait","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestsList","emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequestsList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#314-320\">source</a><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/storage/trait.PartialStorageInfoTrait.html\" title=\"trait frame_support::traits::storage::PartialStorageInfoTrait\">PartialStorageInfoTrait</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#322\">source</a><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/storage/trait.PartialStorageInfoTrait.html#tymethod.partial_storage_info\" class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/storage/struct.StorageInfo.html\" title=\"struct frame_support::traits::storage::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","PartialStorageInfoTrait","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestsList","emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequestsList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#154-160\">source</a><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/try_runtime/decode_entire_state/trait.TryDecodeEntireStorage.html\" title=\"trait frame_support::traits::try_runtime::decode_entire_state::TryDecodeEntireStorage\">TryDecodeEntireStorage</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#162\">source</a><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/try_runtime/decode_entire_state/trait.TryDecodeEntireStorage.html#tymethod.try_decode_entire_state\" class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/try_runtime/decode_entire_state/struct.TryDecodeEntireStorageError.html\" title=\"struct frame_support::traits::try_runtime::decode_entire_state::TryDecodeEntireStorageError\">TryDecodeEntireStorageError</a>&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestsList","emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequestsList"]],
"frame":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame/traits/trait.StorageInstance.html\" title=\"trait frame::traits::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"frame/traits/trait.Get.html\" title=\"trait frame::traits::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: <a class=\"trait\" href=\"frame/derive/trait.Decode.html\" title=\"trait frame::derive::Decode\">Decode</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: <a class=\"trait\" href=\"frame/derive/trait.Encode.html\" title=\"trait frame::derive::Encode\">Encode</a>,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: <a class=\"trait\" href=\"frame/derive/trait.Encode.html\" title=\"trait frame::derive::Encode\">Encode</a>,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"frame::prelude::frame_system::LastRuntimeUpgrade"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame/traits/trait.StorageInstance.html\" title=\"trait frame::traits::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"frame/traits/trait.Get.html\" title=\"trait frame::traits::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","frame::prelude::frame_system::LastRuntimeUpgrade"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame/traits/trait.StorageInfoTrait.html\" title=\"trait frame::traits::StorageInfoTrait\">StorageInfoTrait</a> for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame/traits/trait.StorageInstance.html\" title=\"trait frame::traits::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"frame/traits/trait.Get.html\" title=\"trait frame::traits::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame/traits/trait.StorageInfoTrait.html#tymethod.storage_info\" class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame/traits/struct.StorageInfo.html\" title=\"struct frame::traits::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","StorageInfoTrait","frame::prelude::frame_system::LastRuntimeUpgrade"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame/traits/trait.PartialStorageInfoTrait.html\" title=\"trait frame::traits::PartialStorageInfoTrait\">PartialStorageInfoTrait</a> for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame/traits/trait.StorageInstance.html\" title=\"trait frame::traits::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"frame/traits/trait.Get.html\" title=\"trait frame::traits::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame/traits/trait.PartialStorageInfoTrait.html#tymethod.partial_storage_info\" class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame/traits/struct.StorageInfo.html\" title=\"struct frame::traits::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","PartialStorageInfoTrait","frame::prelude::frame_system::LastRuntimeUpgrade"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame/traits/trait.TryDecodeEntireStorage.html\" title=\"trait frame::traits::TryDecodeEntireStorage\">TryDecodeEntireStorage</a> for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame/traits/trait.StorageInstance.html\" title=\"trait frame::traits::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"frame/traits/trait.Get.html\" title=\"trait frame::traits::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame/traits/trait.TryDecodeEntireStorage.html#tymethod.try_decode_entire_state\" class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame/traits/struct.TryDecodeEntireStorageError.html\" title=\"struct frame::traits::TryDecodeEntireStorageError\">TryDecodeEntireStorageError</a>&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","frame::prelude::frame_system::LastRuntimeUpgrade"]],
"frame_support_test_pallet":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"frame_support_test_pallet::pallet::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","frame_support_test_pallet::pallet::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","frame_support_test_pallet::pallet::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","frame_support_test_pallet::pallet::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","frame_support_test_pallet::pallet::Value"]],
"frame_system":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"frame_system::pallet::LastRuntimeUpgrade"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","frame_system::pallet::LastRuntimeUpgrade"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","frame_system::pallet::LastRuntimeUpgrade"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","frame_system::pallet::LastRuntimeUpgrade"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","frame_system::pallet::LastRuntimeUpgrade"]],
"pallet_alliance":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_alliance::pallet::Rule","pallet_alliance::pallet::Announcements","pallet_alliance::pallet::UnscrupulousAccounts","pallet_alliance::pallet::UnscrupulousWebsites"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_alliance::pallet::Rule","pallet_alliance::pallet::Announcements","pallet_alliance::pallet::UnscrupulousAccounts","pallet_alliance::pallet::UnscrupulousWebsites"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_alliance::pallet::Rule","pallet_alliance::pallet::Announcements","pallet_alliance::pallet::UnscrupulousAccounts","pallet_alliance::pallet::UnscrupulousWebsites"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_alliance::pallet::Rule","pallet_alliance::pallet::Announcements","pallet_alliance::pallet::UnscrupulousAccounts","pallet_alliance::pallet::UnscrupulousWebsites"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_alliance::pallet::Rule","pallet_alliance::pallet::Announcements","pallet_alliance::pallet::UnscrupulousAccounts","pallet_alliance::pallet::UnscrupulousWebsites"]],
"pallet_asset_conversion":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_asset_conversion::pallet::NextPoolAssetId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_asset_conversion::pallet::NextPoolAssetId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_asset_conversion::pallet::NextPoolAssetId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_asset_conversion::pallet::NextPoolAssetId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_asset_conversion::pallet::NextPoolAssetId"]],
"pallet_babe":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_babe::pallet::EpochIndex","pallet_babe::pallet::Authorities","pallet_babe::pallet::GenesisSlot","pallet_babe::pallet::CurrentSlot","pallet_babe::pallet::Randomness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_babe::pallet::EpochIndex","pallet_babe::pallet::Authorities","pallet_babe::pallet::GenesisSlot","pallet_babe::pallet::CurrentSlot","pallet_babe::pallet::Randomness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_babe::pallet::EpochIndex","pallet_babe::pallet::Authorities","pallet_babe::pallet::GenesisSlot","pallet_babe::pallet::CurrentSlot","pallet_babe::pallet::Randomness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_babe::pallet::EpochIndex","pallet_babe::pallet::Authorities","pallet_babe::pallet::GenesisSlot","pallet_babe::pallet::CurrentSlot","pallet_babe::pallet::Randomness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_babe::pallet::EpochIndex","pallet_babe::pallet::Authorities","pallet_babe::pallet::GenesisSlot","pallet_babe::pallet::CurrentSlot","pallet_babe::pallet::Randomness"]],
"pallet_balances":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_balances::pallet::TotalIssuance","pallet_balances::pallet::InactiveIssuance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_balances::pallet::TotalIssuance","pallet_balances::pallet::InactiveIssuance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_balances::pallet::TotalIssuance","pallet_balances::pallet::InactiveIssuance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_balances::pallet::TotalIssuance","pallet_balances::pallet::InactiveIssuance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_balances::pallet::TotalIssuance","pallet_balances::pallet::InactiveIssuance"]],
"pallet_beefy_mmr":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_beefy_mmr::pallet::BeefyAuthorities","pallet_beefy_mmr::pallet::BeefyNextAuthorities"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_beefy_mmr::pallet::BeefyAuthorities","pallet_beefy_mmr::pallet::BeefyNextAuthorities"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_beefy_mmr::pallet::BeefyAuthorities","pallet_beefy_mmr::pallet::BeefyNextAuthorities"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_beefy_mmr::pallet::BeefyAuthorities","pallet_beefy_mmr::pallet::BeefyNextAuthorities"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_beefy_mmr::pallet::BeefyAuthorities","pallet_beefy_mmr::pallet::BeefyNextAuthorities"]],
"pallet_bounties":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_bounties::pallet::BountyCount","pallet_bounties::pallet::BountyApprovals"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_bounties::pallet::BountyCount","pallet_bounties::pallet::BountyApprovals"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_bounties::pallet::BountyCount","pallet_bounties::pallet::BountyApprovals"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_bounties::pallet::BountyCount","pallet_bounties::pallet::BountyApprovals"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_bounties::pallet::BountyCount","pallet_bounties::pallet::BountyApprovals"]],
"pallet_bridge_grandpa":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_bridge_grandpa::pallet::BestFinalized","pallet_bridge_grandpa::pallet::CurrentAuthoritySet","pallet_bridge_grandpa::pallet::PalletOwner","pallet_bridge_grandpa::pallet::PalletOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_bridge_grandpa::pallet::BestFinalized","pallet_bridge_grandpa::pallet::CurrentAuthoritySet","pallet_bridge_grandpa::pallet::PalletOwner","pallet_bridge_grandpa::pallet::PalletOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_bridge_grandpa::pallet::BestFinalized","pallet_bridge_grandpa::pallet::CurrentAuthoritySet","pallet_bridge_grandpa::pallet::PalletOwner","pallet_bridge_grandpa::pallet::PalletOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_bridge_grandpa::pallet::BestFinalized","pallet_bridge_grandpa::pallet::CurrentAuthoritySet","pallet_bridge_grandpa::pallet::PalletOwner","pallet_bridge_grandpa::pallet::PalletOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_bridge_grandpa::pallet::BestFinalized","pallet_bridge_grandpa::pallet::CurrentAuthoritySet","pallet_bridge_grandpa::pallet::PalletOwner","pallet_bridge_grandpa::pallet::PalletOperatingMode"]],
"pallet_bridge_messages":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_bridge_messages::pallet::PalletOwner","pallet_bridge_messages::pallet::PalletOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_bridge_messages::pallet::PalletOwner","pallet_bridge_messages::pallet::PalletOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_bridge_messages::pallet::PalletOwner","pallet_bridge_messages::pallet::PalletOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_bridge_messages::pallet::PalletOwner","pallet_bridge_messages::pallet::PalletOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_bridge_messages::pallet::PalletOwner","pallet_bridge_messages::pallet::PalletOperatingMode"]],
"pallet_bridge_parachains":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_bridge_parachains::pallet::PalletOwner","pallet_bridge_parachains::pallet::PalletOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_bridge_parachains::pallet::PalletOwner","pallet_bridge_parachains::pallet::PalletOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_bridge_parachains::pallet::PalletOwner","pallet_bridge_parachains::pallet::PalletOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_bridge_parachains::pallet::PalletOwner","pallet_bridge_parachains::pallet::PalletOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_bridge_parachains::pallet::PalletOwner","pallet_bridge_parachains::pallet::PalletOperatingMode"]],
"pallet_broker":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_broker::pallet::Configuration","pallet_broker::pallet::Reservations","pallet_broker::pallet::Leases","pallet_broker::pallet::Status","pallet_broker::pallet::SaleInfo","pallet_broker::pallet::CoreCountInbox"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_broker::pallet::Configuration","pallet_broker::pallet::Reservations","pallet_broker::pallet::Leases","pallet_broker::pallet::Status","pallet_broker::pallet::SaleInfo","pallet_broker::pallet::CoreCountInbox"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_broker::pallet::Configuration","pallet_broker::pallet::Reservations","pallet_broker::pallet::Leases","pallet_broker::pallet::Status","pallet_broker::pallet::SaleInfo","pallet_broker::pallet::CoreCountInbox"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_broker::pallet::Configuration","pallet_broker::pallet::Reservations","pallet_broker::pallet::Leases","pallet_broker::pallet::Status","pallet_broker::pallet::SaleInfo","pallet_broker::pallet::CoreCountInbox"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_broker::pallet::Configuration","pallet_broker::pallet::Reservations","pallet_broker::pallet::Leases","pallet_broker::pallet::Status","pallet_broker::pallet::SaleInfo","pallet_broker::pallet::CoreCountInbox"]],
"pallet_child_bounties":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_child_bounties::pallet::ChildBountyCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_child_bounties::pallet::ChildBountyCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_child_bounties::pallet::ChildBountyCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_child_bounties::pallet::ChildBountyCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_child_bounties::pallet::ChildBountyCount"]],
"pallet_collator_selection":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_collator_selection::pallet::Invulnerables","pallet_collator_selection::pallet::CandidateList","pallet_collator_selection::pallet::DesiredCandidates","pallet_collator_selection::pallet::CandidacyBond"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_collator_selection::pallet::Invulnerables","pallet_collator_selection::pallet::CandidateList","pallet_collator_selection::pallet::DesiredCandidates","pallet_collator_selection::pallet::CandidacyBond"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_collator_selection::pallet::Invulnerables","pallet_collator_selection::pallet::CandidateList","pallet_collator_selection::pallet::DesiredCandidates","pallet_collator_selection::pallet::CandidacyBond"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_collator_selection::pallet::Invulnerables","pallet_collator_selection::pallet::CandidateList","pallet_collator_selection::pallet::DesiredCandidates","pallet_collator_selection::pallet::CandidacyBond"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_collator_selection::pallet::Invulnerables","pallet_collator_selection::pallet::CandidateList","pallet_collator_selection::pallet::DesiredCandidates","pallet_collator_selection::pallet::CandidacyBond"]],
"pallet_collective":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_collective::pallet::Proposals","pallet_collective::pallet::ProposalCount","pallet_collective::pallet::Members","pallet_collective::pallet::Prime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_collective::pallet::Proposals","pallet_collective::pallet::ProposalCount","pallet_collective::pallet::Members","pallet_collective::pallet::Prime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_collective::pallet::Proposals","pallet_collective::pallet::ProposalCount","pallet_collective::pallet::Members","pallet_collective::pallet::Prime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_collective::pallet::Proposals","pallet_collective::pallet::ProposalCount","pallet_collective::pallet::Members","pallet_collective::pallet::Prime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_collective::pallet::Proposals","pallet_collective::pallet::ProposalCount","pallet_collective::pallet::Members","pallet_collective::pallet::Prime"]],
"pallet_collective_content":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_collective_content::pallet::Charter"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_collective_content::pallet::Charter"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_collective_content::pallet::Charter"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_collective_content::pallet::Charter"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_collective_content::pallet::Charter"]],
"pallet_democracy":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_democracy::pallet::PublicPropCount","pallet_democracy::pallet::PublicProps","pallet_democracy::pallet::ReferendumCount","pallet_democracy::pallet::LowestUnbaked","pallet_democracy::pallet::LastTabledWasExternal","pallet_democracy::pallet::NextExternal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_democracy::pallet::PublicPropCount","pallet_democracy::pallet::PublicProps","pallet_democracy::pallet::ReferendumCount","pallet_democracy::pallet::LowestUnbaked","pallet_democracy::pallet::LastTabledWasExternal","pallet_democracy::pallet::NextExternal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_democracy::pallet::PublicPropCount","pallet_democracy::pallet::PublicProps","pallet_democracy::pallet::ReferendumCount","pallet_democracy::pallet::LowestUnbaked","pallet_democracy::pallet::LastTabledWasExternal","pallet_democracy::pallet::NextExternal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_democracy::pallet::PublicPropCount","pallet_democracy::pallet::PublicProps","pallet_democracy::pallet::ReferendumCount","pallet_democracy::pallet::LowestUnbaked","pallet_democracy::pallet::LastTabledWasExternal","pallet_democracy::pallet::NextExternal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_democracy::pallet::PublicPropCount","pallet_democracy::pallet::PublicProps","pallet_democracy::pallet::ReferendumCount","pallet_democracy::pallet::LowestUnbaked","pallet_democracy::pallet::LastTabledWasExternal","pallet_democracy::pallet::NextExternal"]],
"pallet_dev_mode":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_dev_mode::pallet::Dummy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_dev_mode::pallet::Dummy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_dev_mode::pallet::Dummy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_dev_mode::pallet::Dummy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_dev_mode::pallet::Dummy"]],
"pallet_election_provider_multi_phase":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_election_provider_multi_phase::pallet::Round","pallet_election_provider_multi_phase::pallet::CurrentPhase","pallet_election_provider_multi_phase::pallet::QueuedSolution","pallet_election_provider_multi_phase::pallet::Snapshot","pallet_election_provider_multi_phase::pallet::DesiredTargets","pallet_election_provider_multi_phase::pallet::SnapshotMetadata","pallet_election_provider_multi_phase::pallet::SignedSubmissionNextIndex","pallet_election_provider_multi_phase::pallet::SignedSubmissionIndices","pallet_election_provider_multi_phase::pallet::MinimumUntrustedScore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_election_provider_multi_phase::pallet::Round","pallet_election_provider_multi_phase::pallet::CurrentPhase","pallet_election_provider_multi_phase::pallet::QueuedSolution","pallet_election_provider_multi_phase::pallet::Snapshot","pallet_election_provider_multi_phase::pallet::DesiredTargets","pallet_election_provider_multi_phase::pallet::SnapshotMetadata","pallet_election_provider_multi_phase::pallet::SignedSubmissionNextIndex","pallet_election_provider_multi_phase::pallet::SignedSubmissionIndices","pallet_election_provider_multi_phase::pallet::MinimumUntrustedScore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_election_provider_multi_phase::pallet::Round","pallet_election_provider_multi_phase::pallet::CurrentPhase","pallet_election_provider_multi_phase::pallet::QueuedSolution","pallet_election_provider_multi_phase::pallet::Snapshot","pallet_election_provider_multi_phase::pallet::DesiredTargets","pallet_election_provider_multi_phase::pallet::SnapshotMetadata","pallet_election_provider_multi_phase::pallet::SignedSubmissionNextIndex","pallet_election_provider_multi_phase::pallet::SignedSubmissionIndices","pallet_election_provider_multi_phase::pallet::MinimumUntrustedScore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_election_provider_multi_phase::pallet::Round","pallet_election_provider_multi_phase::pallet::CurrentPhase","pallet_election_provider_multi_phase::pallet::QueuedSolution","pallet_election_provider_multi_phase::pallet::Snapshot","pallet_election_provider_multi_phase::pallet::DesiredTargets","pallet_election_provider_multi_phase::pallet::SnapshotMetadata","pallet_election_provider_multi_phase::pallet::SignedSubmissionNextIndex","pallet_election_provider_multi_phase::pallet::SignedSubmissionIndices","pallet_election_provider_multi_phase::pallet::MinimumUntrustedScore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_election_provider_multi_phase::pallet::Round","pallet_election_provider_multi_phase::pallet::CurrentPhase","pallet_election_provider_multi_phase::pallet::QueuedSolution","pallet_election_provider_multi_phase::pallet::Snapshot","pallet_election_provider_multi_phase::pallet::DesiredTargets","pallet_election_provider_multi_phase::pallet::SnapshotMetadata","pallet_election_provider_multi_phase::pallet::SignedSubmissionNextIndex","pallet_election_provider_multi_phase::pallet::SignedSubmissionIndices","pallet_election_provider_multi_phase::pallet::MinimumUntrustedScore"]],
"pallet_elections_phragmen":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_elections_phragmen::pallet::Members","pallet_elections_phragmen::pallet::RunnersUp","pallet_elections_phragmen::pallet::Candidates","pallet_elections_phragmen::pallet::ElectionRounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_elections_phragmen::pallet::Members","pallet_elections_phragmen::pallet::RunnersUp","pallet_elections_phragmen::pallet::Candidates","pallet_elections_phragmen::pallet::ElectionRounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_elections_phragmen::pallet::Members","pallet_elections_phragmen::pallet::RunnersUp","pallet_elections_phragmen::pallet::Candidates","pallet_elections_phragmen::pallet::ElectionRounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_elections_phragmen::pallet::Members","pallet_elections_phragmen::pallet::RunnersUp","pallet_elections_phragmen::pallet::Candidates","pallet_elections_phragmen::pallet::ElectionRounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_elections_phragmen::pallet::Members","pallet_elections_phragmen::pallet::RunnersUp","pallet_elections_phragmen::pallet::Candidates","pallet_elections_phragmen::pallet::ElectionRounds"]],
"pallet_example_frame_crate":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_example_frame_crate::pallet::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_example_frame_crate::pallet::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_example_frame_crate::pallet::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_example_frame_crate::pallet::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_example_frame_crate::pallet::Value"]],
"pallet_example_kitchensink":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_example_kitchensink::pallet::Foo","pallet_example_kitchensink::pallet::FooWithDefault"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_example_kitchensink::pallet::Foo","pallet_example_kitchensink::pallet::FooWithDefault"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_example_kitchensink::pallet::Foo","pallet_example_kitchensink::pallet::FooWithDefault"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_example_kitchensink::pallet::Foo","pallet_example_kitchensink::pallet::FooWithDefault"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_example_kitchensink::pallet::Foo","pallet_example_kitchensink::pallet::FooWithDefault"]],
"pallet_example_split":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_example_split::pallet::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_example_split::pallet::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_example_split::pallet::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_example_split::pallet::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_example_split::pallet::Something"]],
"pallet_example_tasks":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_example_tasks::pallet::Total"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_example_tasks::pallet::Total"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_example_tasks::pallet::Total"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_example_tasks::pallet::Total"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_example_tasks::pallet::Total"]],
"pallet_fast_unstake":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_fast_unstake::pallet::Head","pallet_fast_unstake::pallet::ErasToCheckPerBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_fast_unstake::pallet::Head","pallet_fast_unstake::pallet::ErasToCheckPerBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_fast_unstake::pallet::Head","pallet_fast_unstake::pallet::ErasToCheckPerBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_fast_unstake::pallet::Head","pallet_fast_unstake::pallet::ErasToCheckPerBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_fast_unstake::pallet::Head","pallet_fast_unstake::pallet::ErasToCheckPerBlock"]],
"pallet_membership":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_membership::pallet::Members","pallet_membership::pallet::Prime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_membership::pallet::Members","pallet_membership::pallet::Prime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_membership::pallet::Members","pallet_membership::pallet::Prime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_membership::pallet::Members","pallet_membership::pallet::Prime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_membership::pallet::Members","pallet_membership::pallet::Prime"]],
"pallet_mmr":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_mmr::pallet::RootHash","pallet_mmr::pallet::NumberOfLeaves"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_mmr::pallet::RootHash","pallet_mmr::pallet::NumberOfLeaves"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_mmr::pallet::RootHash","pallet_mmr::pallet::NumberOfLeaves"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_mmr::pallet::RootHash","pallet_mmr::pallet::NumberOfLeaves"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_mmr::pallet::RootHash","pallet_mmr::pallet::NumberOfLeaves"]],
"pallet_nfts":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_nfts::pallet::NextCollectionId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_nfts::pallet::NextCollectionId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_nfts::pallet::NextCollectionId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_nfts::pallet::NextCollectionId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_nfts::pallet::NextCollectionId"]],
"pallet_nis":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_nis::pallet::QueueTotals","pallet_nis::pallet::Summary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_nis::pallet::QueueTotals","pallet_nis::pallet::Summary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_nis::pallet::QueueTotals","pallet_nis::pallet::Summary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_nis::pallet::QueueTotals","pallet_nis::pallet::Summary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_nis::pallet::QueueTotals","pallet_nis::pallet::Summary"]],
"pallet_node_authorization":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_node_authorization::pallet::WellKnownNodes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_node_authorization::pallet::WellKnownNodes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_node_authorization::pallet::WellKnownNodes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_node_authorization::pallet::WellKnownNodes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_node_authorization::pallet::WellKnownNodes"]],
"pallet_nomination_pools":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_nomination_pools::pallet::TotalValueLocked","pallet_nomination_pools::pallet::MinJoinBond","pallet_nomination_pools::pallet::MinCreateBond","pallet_nomination_pools::pallet::MaxPools","pallet_nomination_pools::pallet::MaxPoolMembers","pallet_nomination_pools::pallet::MaxPoolMembersPerPool","pallet_nomination_pools::pallet::GlobalMaxCommission","pallet_nomination_pools::pallet::LastPoolId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_nomination_pools::pallet::TotalValueLocked","pallet_nomination_pools::pallet::MinJoinBond","pallet_nomination_pools::pallet::MinCreateBond","pallet_nomination_pools::pallet::MaxPools","pallet_nomination_pools::pallet::MaxPoolMembers","pallet_nomination_pools::pallet::MaxPoolMembersPerPool","pallet_nomination_pools::pallet::GlobalMaxCommission","pallet_nomination_pools::pallet::LastPoolId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_nomination_pools::pallet::TotalValueLocked","pallet_nomination_pools::pallet::MinJoinBond","pallet_nomination_pools::pallet::MinCreateBond","pallet_nomination_pools::pallet::MaxPools","pallet_nomination_pools::pallet::MaxPoolMembers","pallet_nomination_pools::pallet::MaxPoolMembersPerPool","pallet_nomination_pools::pallet::GlobalMaxCommission","pallet_nomination_pools::pallet::LastPoolId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_nomination_pools::pallet::TotalValueLocked","pallet_nomination_pools::pallet::MinJoinBond","pallet_nomination_pools::pallet::MinCreateBond","pallet_nomination_pools::pallet::MaxPools","pallet_nomination_pools::pallet::MaxPoolMembers","pallet_nomination_pools::pallet::MaxPoolMembersPerPool","pallet_nomination_pools::pallet::GlobalMaxCommission","pallet_nomination_pools::pallet::LastPoolId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_nomination_pools::pallet::TotalValueLocked","pallet_nomination_pools::pallet::MinJoinBond","pallet_nomination_pools::pallet::MinCreateBond","pallet_nomination_pools::pallet::MaxPools","pallet_nomination_pools::pallet::MaxPoolMembers","pallet_nomination_pools::pallet::MaxPoolMembersPerPool","pallet_nomination_pools::pallet::GlobalMaxCommission","pallet_nomination_pools::pallet::LastPoolId"]],
"pallet_parachain_template":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_parachain_template::pallet::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_parachain_template::pallet::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_parachain_template::pallet::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_parachain_template::pallet::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_parachain_template::pallet::Something"]],
"pallet_referenda":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"pallet_referenda/trait.Get.html\" title=\"trait pallet_referenda::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_referenda::pallet::ReferendumCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"pallet_referenda/trait.Get.html\" title=\"trait pallet_referenda::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"pallet_referenda/struct.Vec.html\" title=\"struct pallet_referenda::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"pallet_referenda/struct.Vec.html\" title=\"struct pallet_referenda::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_referenda::pallet::ReferendumCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"pallet_referenda/trait.Get.html\" title=\"trait pallet_referenda::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"pallet_referenda/struct.Vec.html\" title=\"struct pallet_referenda::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_referenda::pallet::ReferendumCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"pallet_referenda/trait.Get.html\" title=\"trait pallet_referenda::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"pallet_referenda/struct.Vec.html\" title=\"struct pallet_referenda::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_referenda::pallet::ReferendumCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"pallet_referenda/trait.Get.html\" title=\"trait pallet_referenda::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"pallet_referenda/struct.Vec.html\" title=\"struct pallet_referenda::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_referenda::pallet::ReferendumCount"]],
"pallet_safe_mode":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_safe_mode::pallet::EnteredUntil"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_safe_mode::pallet::EnteredUntil"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_safe_mode::pallet::EnteredUntil"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_safe_mode::pallet::EnteredUntil"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_safe_mode::pallet::EnteredUntil"]],
"pallet_sassafras":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_sassafras::pallet::EpochIndex","pallet_sassafras::pallet::Authorities","pallet_sassafras::pallet::NextAuthorities","pallet_sassafras::pallet::GenesisSlot","pallet_sassafras::pallet::CurrentSlot","pallet_sassafras::pallet::CurrentRandomness","pallet_sassafras::pallet::NextRandomness","pallet_sassafras::pallet::EpochConfig","pallet_sassafras::pallet::NextEpochConfig","pallet_sassafras::pallet::PendingEpochConfigChange","pallet_sassafras::pallet::TicketsMeta","pallet_sassafras::pallet::SortedCandidates","pallet_sassafras::pallet::RingContext","pallet_sassafras::pallet::RingVerifierData"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_sassafras::pallet::EpochIndex","pallet_sassafras::pallet::Authorities","pallet_sassafras::pallet::NextAuthorities","pallet_sassafras::pallet::GenesisSlot","pallet_sassafras::pallet::CurrentSlot","pallet_sassafras::pallet::CurrentRandomness","pallet_sassafras::pallet::NextRandomness","pallet_sassafras::pallet::EpochConfig","pallet_sassafras::pallet::NextEpochConfig","pallet_sassafras::pallet::PendingEpochConfigChange","pallet_sassafras::pallet::TicketsMeta","pallet_sassafras::pallet::SortedCandidates","pallet_sassafras::pallet::RingContext","pallet_sassafras::pallet::RingVerifierData"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_sassafras::pallet::EpochIndex","pallet_sassafras::pallet::Authorities","pallet_sassafras::pallet::NextAuthorities","pallet_sassafras::pallet::GenesisSlot","pallet_sassafras::pallet::CurrentSlot","pallet_sassafras::pallet::CurrentRandomness","pallet_sassafras::pallet::NextRandomness","pallet_sassafras::pallet::EpochConfig","pallet_sassafras::pallet::NextEpochConfig","pallet_sassafras::pallet::PendingEpochConfigChange","pallet_sassafras::pallet::TicketsMeta","pallet_sassafras::pallet::SortedCandidates","pallet_sassafras::pallet::RingContext","pallet_sassafras::pallet::RingVerifierData"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_sassafras::pallet::EpochIndex","pallet_sassafras::pallet::Authorities","pallet_sassafras::pallet::NextAuthorities","pallet_sassafras::pallet::GenesisSlot","pallet_sassafras::pallet::CurrentSlot","pallet_sassafras::pallet::CurrentRandomness","pallet_sassafras::pallet::NextRandomness","pallet_sassafras::pallet::EpochConfig","pallet_sassafras::pallet::NextEpochConfig","pallet_sassafras::pallet::PendingEpochConfigChange","pallet_sassafras::pallet::TicketsMeta","pallet_sassafras::pallet::SortedCandidates","pallet_sassafras::pallet::RingContext","pallet_sassafras::pallet::RingVerifierData"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_sassafras::pallet::EpochIndex","pallet_sassafras::pallet::Authorities","pallet_sassafras::pallet::NextAuthorities","pallet_sassafras::pallet::GenesisSlot","pallet_sassafras::pallet::CurrentSlot","pallet_sassafras::pallet::CurrentRandomness","pallet_sassafras::pallet::NextRandomness","pallet_sassafras::pallet::EpochConfig","pallet_sassafras::pallet::NextEpochConfig","pallet_sassafras::pallet::PendingEpochConfigChange","pallet_sassafras::pallet::TicketsMeta","pallet_sassafras::pallet::SortedCandidates","pallet_sassafras::pallet::RingContext","pallet_sassafras::pallet::RingVerifierData"]],
"pallet_scheduler":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_scheduler::pallet::IncompleteSince"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_scheduler::pallet::IncompleteSince"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_scheduler::pallet::IncompleteSince"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_scheduler::pallet::IncompleteSince"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_scheduler::pallet::IncompleteSince"]],
"pallet_session":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_session::historical::pallet::StoredRange","pallet_session::pallet::Validators","pallet_session::pallet::CurrentIndex","pallet_session::pallet::QueuedChanged","pallet_session::pallet::QueuedKeys","pallet_session::pallet::DisabledValidators"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_session::historical::pallet::StoredRange","pallet_session::pallet::Validators","pallet_session::pallet::CurrentIndex","pallet_session::pallet::QueuedChanged","pallet_session::pallet::QueuedKeys","pallet_session::pallet::DisabledValidators"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_session::historical::pallet::StoredRange","pallet_session::pallet::Validators","pallet_session::pallet::CurrentIndex","pallet_session::pallet::QueuedChanged","pallet_session::pallet::QueuedKeys","pallet_session::pallet::DisabledValidators"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_session::historical::pallet::StoredRange","pallet_session::pallet::Validators","pallet_session::pallet::CurrentIndex","pallet_session::pallet::QueuedChanged","pallet_session::pallet::QueuedKeys","pallet_session::pallet::DisabledValidators"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_session::historical::pallet::StoredRange","pallet_session::pallet::Validators","pallet_session::pallet::CurrentIndex","pallet_session::pallet::QueuedChanged","pallet_session::pallet::QueuedKeys","pallet_session::pallet::DisabledValidators"]],
"pallet_society":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_society::pallet::Pot","pallet_society::pallet::Founder","pallet_society::pallet::Head","pallet_society::pallet::Rules","pallet_society::pallet::MemberCount","pallet_society::pallet::RoundCount","pallet_society::pallet::Skeptic","pallet_society::pallet::NextHead"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_society::pallet::Pot","pallet_society::pallet::Founder","pallet_society::pallet::Head","pallet_society::pallet::Rules","pallet_society::pallet::MemberCount","pallet_society::pallet::RoundCount","pallet_society::pallet::Skeptic","pallet_society::pallet::NextHead"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_society::pallet::Pot","pallet_society::pallet::Founder","pallet_society::pallet::Head","pallet_society::pallet::Rules","pallet_society::pallet::MemberCount","pallet_society::pallet::RoundCount","pallet_society::pallet::Skeptic","pallet_society::pallet::NextHead"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_society::pallet::Pot","pallet_society::pallet::Founder","pallet_society::pallet::Head","pallet_society::pallet::Rules","pallet_society::pallet::MemberCount","pallet_society::pallet::RoundCount","pallet_society::pallet::Skeptic","pallet_society::pallet::NextHead"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_society::pallet::Pot","pallet_society::pallet::Founder","pallet_society::pallet::Head","pallet_society::pallet::Rules","pallet_society::pallet::MemberCount","pallet_society::pallet::RoundCount","pallet_society::pallet::Skeptic","pallet_society::pallet::NextHead"]],
"pallet_staking":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_staking::pallet::pallet::ValidatorCount","pallet_staking::pallet::pallet::MinimumValidatorCount","pallet_staking::pallet::pallet::Invulnerables","pallet_staking::pallet::pallet::MinNominatorBond","pallet_staking::pallet::pallet::MinValidatorBond","pallet_staking::pallet::pallet::MinimumActiveStake","pallet_staking::pallet::pallet::MinCommission","pallet_staking::pallet::pallet::MaxValidatorsCount","pallet_staking::pallet::pallet::MaxNominatorsCount","pallet_staking::pallet::pallet::CurrentEra","pallet_staking::pallet::pallet::ActiveEra","pallet_staking::pallet::pallet::ForceEra","pallet_staking::pallet::pallet::SlashRewardFraction","pallet_staking::pallet::pallet::CanceledSlashPayout","pallet_staking::pallet::pallet::CurrentPlannedSession","pallet_staking::pallet::pallet::OffendingValidators"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_staking::pallet::pallet::ValidatorCount","pallet_staking::pallet::pallet::MinimumValidatorCount","pallet_staking::pallet::pallet::Invulnerables","pallet_staking::pallet::pallet::MinNominatorBond","pallet_staking::pallet::pallet::MinValidatorBond","pallet_staking::pallet::pallet::MinimumActiveStake","pallet_staking::pallet::pallet::MinCommission","pallet_staking::pallet::pallet::MaxValidatorsCount","pallet_staking::pallet::pallet::MaxNominatorsCount","pallet_staking::pallet::pallet::CurrentEra","pallet_staking::pallet::pallet::ActiveEra","pallet_staking::pallet::pallet::ForceEra","pallet_staking::pallet::pallet::SlashRewardFraction","pallet_staking::pallet::pallet::CanceledSlashPayout","pallet_staking::pallet::pallet::CurrentPlannedSession","pallet_staking::pallet::pallet::OffendingValidators"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_staking::pallet::pallet::ValidatorCount","pallet_staking::pallet::pallet::MinimumValidatorCount","pallet_staking::pallet::pallet::Invulnerables","pallet_staking::pallet::pallet::MinNominatorBond","pallet_staking::pallet::pallet::MinValidatorBond","pallet_staking::pallet::pallet::MinimumActiveStake","pallet_staking::pallet::pallet::MinCommission","pallet_staking::pallet::pallet::MaxValidatorsCount","pallet_staking::pallet::pallet::MaxNominatorsCount","pallet_staking::pallet::pallet::CurrentEra","pallet_staking::pallet::pallet::ActiveEra","pallet_staking::pallet::pallet::ForceEra","pallet_staking::pallet::pallet::SlashRewardFraction","pallet_staking::pallet::pallet::CanceledSlashPayout","pallet_staking::pallet::pallet::CurrentPlannedSession","pallet_staking::pallet::pallet::OffendingValidators"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_staking::pallet::pallet::ValidatorCount","pallet_staking::pallet::pallet::MinimumValidatorCount","pallet_staking::pallet::pallet::Invulnerables","pallet_staking::pallet::pallet::MinNominatorBond","pallet_staking::pallet::pallet::MinValidatorBond","pallet_staking::pallet::pallet::MinimumActiveStake","pallet_staking::pallet::pallet::MinCommission","pallet_staking::pallet::pallet::MaxValidatorsCount","pallet_staking::pallet::pallet::MaxNominatorsCount","pallet_staking::pallet::pallet::CurrentEra","pallet_staking::pallet::pallet::ActiveEra","pallet_staking::pallet::pallet::ForceEra","pallet_staking::pallet::pallet::SlashRewardFraction","pallet_staking::pallet::pallet::CanceledSlashPayout","pallet_staking::pallet::pallet::CurrentPlannedSession","pallet_staking::pallet::pallet::OffendingValidators"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_staking::pallet::pallet::ValidatorCount","pallet_staking::pallet::pallet::MinimumValidatorCount","pallet_staking::pallet::pallet::Invulnerables","pallet_staking::pallet::pallet::MinNominatorBond","pallet_staking::pallet::pallet::MinValidatorBond","pallet_staking::pallet::pallet::MinimumActiveStake","pallet_staking::pallet::pallet::MinCommission","pallet_staking::pallet::pallet::MaxValidatorsCount","pallet_staking::pallet::pallet::MaxNominatorsCount","pallet_staking::pallet::pallet::CurrentEra","pallet_staking::pallet::pallet::ActiveEra","pallet_staking::pallet::pallet::ForceEra","pallet_staking::pallet::pallet::SlashRewardFraction","pallet_staking::pallet::pallet::CanceledSlashPayout","pallet_staking::pallet::pallet::CurrentPlannedSession","pallet_staking::pallet::pallet::OffendingValidators"]],
"pallet_state_trie_migration":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_state_trie_migration::pallet::MigrationProcess","pallet_state_trie_migration::pallet::AutoLimits","pallet_state_trie_migration::pallet::SignedMigrationMaxLimits"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_state_trie_migration::pallet::MigrationProcess","pallet_state_trie_migration::pallet::AutoLimits","pallet_state_trie_migration::pallet::SignedMigrationMaxLimits"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_state_trie_migration::pallet::MigrationProcess","pallet_state_trie_migration::pallet::AutoLimits","pallet_state_trie_migration::pallet::SignedMigrationMaxLimits"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_state_trie_migration::pallet::MigrationProcess","pallet_state_trie_migration::pallet::AutoLimits","pallet_state_trie_migration::pallet::SignedMigrationMaxLimits"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_state_trie_migration::pallet::MigrationProcess","pallet_state_trie_migration::pallet::AutoLimits","pallet_state_trie_migration::pallet::SignedMigrationMaxLimits"]],
"pallet_template":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_template::pallet::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_template::pallet::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_template::pallet::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_template::pallet::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_template::pallet::Something"]],
"pallet_timestamp":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_timestamp::pallet::Now"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_timestamp::pallet::Now"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_timestamp::pallet::Now"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_timestamp::pallet::Now"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_timestamp::pallet::Now"]],
"pallet_transaction_payment":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_transaction_payment::pallet::NextFeeMultiplier"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_transaction_payment::pallet::NextFeeMultiplier"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_transaction_payment::pallet::NextFeeMultiplier"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_transaction_payment::pallet::NextFeeMultiplier"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_transaction_payment::pallet::NextFeeMultiplier"]],
"pallet_treasury":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_treasury::pallet::Deactivated","pallet_treasury::pallet::Approvals"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_treasury::pallet::Deactivated","pallet_treasury::pallet::Approvals"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_treasury::pallet::Deactivated","pallet_treasury::pallet::Approvals"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_treasury::pallet::Deactivated","pallet_treasury::pallet::Approvals"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_treasury::pallet::Deactivated","pallet_treasury::pallet::Approvals"]],
"pallet_xcm_bridge_hub_router":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"pallet_xcm_bridge_hub_router::pallet::Bridge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","pallet_xcm_bridge_hub_router::pallet::Bridge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_xcm_bridge_hub_router::pallet::Bridge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","pallet_xcm_bridge_hub_router::pallet::Bridge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","pallet_xcm_bridge_hub_router::pallet::Bridge"]],
"polkadot_runtime_common":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"polkadot_runtime_common::assigned_slots::pallet::PermanentSlotCount","polkadot_runtime_common::assigned_slots::pallet::TemporarySlotCount","polkadot_runtime_common::assigned_slots::pallet::ActiveTemporarySlotCount","polkadot_runtime_common::assigned_slots::pallet::MaxTemporarySlots","polkadot_runtime_common::assigned_slots::pallet::MaxPermanentSlots","polkadot_runtime_common::auctions::pallet::AuctionCounter","polkadot_runtime_common::auctions::pallet::AuctionInfo","polkadot_runtime_common::paras_registrar::pallet::NextFreeParaId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","polkadot_runtime_common::assigned_slots::pallet::PermanentSlotCount","polkadot_runtime_common::assigned_slots::pallet::TemporarySlotCount","polkadot_runtime_common::assigned_slots::pallet::ActiveTemporarySlotCount","polkadot_runtime_common::assigned_slots::pallet::MaxTemporarySlots","polkadot_runtime_common::assigned_slots::pallet::MaxPermanentSlots","polkadot_runtime_common::auctions::pallet::AuctionCounter","polkadot_runtime_common::auctions::pallet::AuctionInfo","polkadot_runtime_common::paras_registrar::pallet::NextFreeParaId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","polkadot_runtime_common::assigned_slots::pallet::PermanentSlotCount","polkadot_runtime_common::assigned_slots::pallet::TemporarySlotCount","polkadot_runtime_common::assigned_slots::pallet::ActiveTemporarySlotCount","polkadot_runtime_common::assigned_slots::pallet::MaxTemporarySlots","polkadot_runtime_common::assigned_slots::pallet::MaxPermanentSlots","polkadot_runtime_common::auctions::pallet::AuctionCounter","polkadot_runtime_common::auctions::pallet::AuctionInfo","polkadot_runtime_common::paras_registrar::pallet::NextFreeParaId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","polkadot_runtime_common::assigned_slots::pallet::PermanentSlotCount","polkadot_runtime_common::assigned_slots::pallet::TemporarySlotCount","polkadot_runtime_common::assigned_slots::pallet::ActiveTemporarySlotCount","polkadot_runtime_common::assigned_slots::pallet::MaxTemporarySlots","polkadot_runtime_common::assigned_slots::pallet::MaxPermanentSlots","polkadot_runtime_common::auctions::pallet::AuctionCounter","polkadot_runtime_common::auctions::pallet::AuctionInfo","polkadot_runtime_common::paras_registrar::pallet::NextFreeParaId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","polkadot_runtime_common::assigned_slots::pallet::PermanentSlotCount","polkadot_runtime_common::assigned_slots::pallet::TemporarySlotCount","polkadot_runtime_common::assigned_slots::pallet::ActiveTemporarySlotCount","polkadot_runtime_common::assigned_slots::pallet::MaxTemporarySlots","polkadot_runtime_common::assigned_slots::pallet::MaxPermanentSlots","polkadot_runtime_common::auctions::pallet::AuctionCounter","polkadot_runtime_common::auctions::pallet::AuctionInfo","polkadot_runtime_common::paras_registrar::pallet::NextFreeParaId"]],
"polkadot_runtime_parachains":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"polkadot_runtime_parachains::hrmp::pallet::HrmpOpenChannelRequestsList","polkadot_runtime_parachains::hrmp::pallet::HrmpCloseChannelRequestsList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","polkadot_runtime_parachains::hrmp::pallet::HrmpOpenChannelRequestsList","polkadot_runtime_parachains::hrmp::pallet::HrmpCloseChannelRequestsList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","polkadot_runtime_parachains::hrmp::pallet::HrmpOpenChannelRequestsList","polkadot_runtime_parachains::hrmp::pallet::HrmpCloseChannelRequestsList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","polkadot_runtime_parachains::hrmp::pallet::HrmpOpenChannelRequestsList","polkadot_runtime_parachains::hrmp::pallet::HrmpCloseChannelRequestsList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","polkadot_runtime_parachains::hrmp::pallet::HrmpOpenChannelRequestsList","polkadot_runtime_parachains::hrmp::pallet::HrmpCloseChannelRequestsList"]],
"polkadot_sdk_docs":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#95-100\">source</a><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#103\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.hashed_key\" class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#108\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.exists\" class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#113\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.get\" class=\"fn\">get</a>() -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a></h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#119\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_get\" class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#144-146\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.translate\" class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.put\" class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#158\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.set\" class=\"fn\">set</a>(val: &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#163\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate\" class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#168\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate_extant\" class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#173-175\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_mutate\" class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#180\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate_exists\" class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#185-187\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_mutate_exists\" class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#192\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.kill\" class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#197\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.take\" class=\"fn\">take</a>() -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a></h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#210-214\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.append\" class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageAppend.html\" title=\"trait frame_support::storage::StorageAppend\">StorageAppend</a>&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageAppend.html\" title=\"trait frame_support::storage::StorageAppend\"><code>StorageAppend</code></a>.</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#230-232\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.decode_len\" class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\">StorageDecodeLength</a>,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\"><code>StorageDecodeLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#251-253\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.decode_non_dedup_len\" class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\">StorageDecodeNonDedupLength</a>,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\"><code>StorageDecodeNonDedupLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#261-265\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_append\" class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\">StorageTryAppend</a>&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements <a href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\"><code>StorageTryAppend</code></a>.</p>\n</div></details></div></details>",0,"polkadot_sdk_docs::guides::your_first_pallet::pallet::TotalIssuance","polkadot_sdk_docs::guides::your_first_pallet::pallet_v2::TotalIssuance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#271-277\">source</a><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html\" title=\"trait frame_support::storage::types::StorageEntryMetadataBuilder\">StorageEntryMetadataBuilder</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#279\">source</a><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html#tymethod.build_metadata\" class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","polkadot_sdk_docs::guides::your_first_pallet::pallet::TotalIssuance","polkadot_sdk_docs::guides::your_first_pallet::pallet_v2::TotalIssuance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#294-300\">source</a><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInfoTrait.html\" title=\"trait frame_support::traits::storage::StorageInfoTrait\">StorageInfoTrait</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#302\">source</a><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/storage/trait.StorageInfoTrait.html#tymethod.storage_info\" class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/storage/struct.StorageInfo.html\" title=\"struct frame_support::traits::storage::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","StorageInfoTrait","polkadot_sdk_docs::guides::your_first_pallet::pallet::TotalIssuance","polkadot_sdk_docs::guides::your_first_pallet::pallet_v2::TotalIssuance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#314-320\">source</a><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/storage/trait.PartialStorageInfoTrait.html\" title=\"trait frame_support::traits::storage::PartialStorageInfoTrait\">PartialStorageInfoTrait</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#322\">source</a><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/storage/trait.PartialStorageInfoTrait.html#tymethod.partial_storage_info\" class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/storage/struct.StorageInfo.html\" title=\"struct frame_support::traits::storage::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","PartialStorageInfoTrait","polkadot_sdk_docs::guides::your_first_pallet::pallet::TotalIssuance","polkadot_sdk_docs::guides::your_first_pallet::pallet_v2::TotalIssuance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#154-160\">source</a><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/try_runtime/decode_entire_state/trait.TryDecodeEntireStorage.html\" title=\"trait frame_support::traits::try_runtime::decode_entire_state::TryDecodeEntireStorage\">TryDecodeEntireStorage</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#162\">source</a><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/try_runtime/decode_entire_state/trait.TryDecodeEntireStorage.html#tymethod.try_decode_entire_state\" class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/try_runtime/decode_entire_state/struct.TryDecodeEntireStorageError.html\" title=\"struct frame_support::traits::try_runtime::decode_entire_state::TryDecodeEntireStorageError\">TryDecodeEntireStorageError</a>&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","polkadot_sdk_docs::guides::your_first_pallet::pallet::TotalIssuance","polkadot_sdk_docs::guides::your_first_pallet::pallet_v2::TotalIssuance"]],
"snowbridge_pallet_ethereum_client":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"snowbridge_pallet_ethereum_client::pallet::ExecutionHeaderIndex","snowbridge_pallet_ethereum_client::pallet::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","snowbridge_pallet_ethereum_client::pallet::ExecutionHeaderIndex","snowbridge_pallet_ethereum_client::pallet::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","snowbridge_pallet_ethereum_client::pallet::ExecutionHeaderIndex","snowbridge_pallet_ethereum_client::pallet::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","snowbridge_pallet_ethereum_client::pallet::ExecutionHeaderIndex","snowbridge_pallet_ethereum_client::pallet::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","snowbridge_pallet_ethereum_client::pallet::ExecutionHeaderIndex","snowbridge_pallet_ethereum_client::pallet::OperatingMode"]],
"snowbridge_pallet_inbound_queue":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"snowbridge_pallet_inbound_queue::pallet::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","snowbridge_pallet_inbound_queue::pallet::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","snowbridge_pallet_inbound_queue::pallet::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","snowbridge_pallet_inbound_queue::pallet::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","snowbridge_pallet_inbound_queue::pallet::OperatingMode"]],
"snowbridge_pallet_outbound_queue":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"snowbridge_pallet_outbound_queue::pallet::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","snowbridge_pallet_outbound_queue::pallet::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","snowbridge_pallet_outbound_queue::pallet::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","snowbridge_pallet_outbound_queue::pallet::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","snowbridge_pallet_outbound_queue::pallet::OperatingMode"]],
"snowbridge_pallet_system":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"snowbridge_pallet_system::pallet::PricingParameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","snowbridge_pallet_system::pallet::PricingParameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","snowbridge_pallet_system::pallet::PricingParameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","snowbridge_pallet_system::pallet::PricingParameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","snowbridge_pallet_system::pallet::PricingParameters"]],
"substrate_test_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#95-100\">source</a><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#103\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.hashed_key\" class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#108\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.exists\" class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#113\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.get\" class=\"fn\">get</a>() -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a></h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#119\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_get\" class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#144-146\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.translate\" class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.put\" class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#158\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.set\" class=\"fn\">set</a>(val: &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#163\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate\" class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#168\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate_extant\" class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#173-175\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_mutate\" class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#180\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate_exists\" class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#185-187\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_mutate_exists\" class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#192\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.kill\" class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#197\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.take\" class=\"fn\">take</a>() -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a></h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#210-214\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.append\" class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageAppend.html\" title=\"trait frame_support::storage::StorageAppend\">StorageAppend</a>&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageAppend.html\" title=\"trait frame_support::storage::StorageAppend\"><code>StorageAppend</code></a>.</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#230-232\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.decode_len\" class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\">StorageDecodeLength</a>,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\"><code>StorageDecodeLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#251-253\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.decode_non_dedup_len\" class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\">StorageDecodeNonDedupLength</a>,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\"><code>StorageDecodeNonDedupLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#261-265\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_append\" class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\">StorageTryAppend</a>&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements <a href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\"><code>StorageTryAppend</code></a>.</p>\n</div></details></div></details>",0,"substrate_test_runtime::substrate_test_pallet::pallet::Authorities"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#271-277\">source</a><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html\" title=\"trait frame_support::storage::types::StorageEntryMetadataBuilder\">StorageEntryMetadataBuilder</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#279\">source</a><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html#tymethod.build_metadata\" class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","substrate_test_runtime::substrate_test_pallet::pallet::Authorities"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#294-300\">source</a><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInfoTrait.html\" title=\"trait frame_support::traits::storage::StorageInfoTrait\">StorageInfoTrait</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#302\">source</a><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/storage/trait.StorageInfoTrait.html#tymethod.storage_info\" class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/storage/struct.StorageInfo.html\" title=\"struct frame_support::traits::storage::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","StorageInfoTrait","substrate_test_runtime::substrate_test_pallet::pallet::Authorities"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#314-320\">source</a><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/storage/trait.PartialStorageInfoTrait.html\" title=\"trait frame_support::traits::storage::PartialStorageInfoTrait\">PartialStorageInfoTrait</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#322\">source</a><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/storage/trait.PartialStorageInfoTrait.html#tymethod.partial_storage_info\" class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/storage/struct.StorageInfo.html\" title=\"struct frame_support::traits::storage::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","PartialStorageInfoTrait","substrate_test_runtime::substrate_test_pallet::pallet::Authorities"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#154-160\">source</a><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/try_runtime/decode_entire_state/trait.TryDecodeEntireStorage.html\" title=\"trait frame_support::traits::try_runtime::decode_entire_state::TryDecodeEntireStorage\">TryDecodeEntireStorage</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#162\">source</a><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/try_runtime/decode_entire_state/trait.TryDecodeEntireStorage.html#tymethod.try_decode_entire_state\" class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/try_runtime/decode_entire_state/struct.TryDecodeEntireStorageError.html\" title=\"struct frame_support::traits::try_runtime::decode_entire_state::TryDecodeEntireStorageError\">TryDecodeEntireStorageError</a>&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","substrate_test_runtime::substrate_test_pallet::pallet::Authorities"]],
"xcm_fuzzer":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a href=\"#warning\">Warning</a></h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a href=\"#usage\">Usage</a></h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<span class=\"where fmt-newline\">where\n    Arg: EncodeLike&lt;Value&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a href=\"#warning-1\">Warning</a></h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a href=\"#warning-2\">Warning</a></h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;<span class=\"where fmt-newline\">where\n    Value: StorageDecodeNonDedupLength,</span></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a href=\"#warning-3\">Warning</a></h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completly\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"xcm_fuzzer::parachain::mock_msg_queue::ParachainId","xcm_fuzzer::parachain::mock_msg_queue::ReceivedDmp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","xcm_fuzzer::parachain::mock_msg_queue::ParachainId","xcm_fuzzer::parachain::mock_msg_queue::ReceivedDmp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","xcm_fuzzer::parachain::mock_msg_queue::ParachainId","xcm_fuzzer::parachain::mock_msg_queue::ReceivedDmp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","xcm_fuzzer::parachain::mock_msg_queue::ParachainId","xcm_fuzzer::parachain::mock_msg_queue::ReceivedDmp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<span class=\"where fmt-newline\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","xcm_fuzzer::parachain::mock_msg_queue::ParachainId","xcm_fuzzer::parachain::mock_msg_queue::ReceivedDmp"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()