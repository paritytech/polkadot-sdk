(function() {var type_impls = {
"pallet_democracy":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.transmute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transmute</a>&lt;S&gt;(self) -&gt; Bounded&lt;S, H&gt;<span class=\"where fmt-newline\">where\n    S: Encode,\n    T: Encode + EncodeLike&lt;S&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Casts the wrapped type into something that encodes alike.</p>\n<h5 id=\"examples\"><a href=\"#examples\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>frame_support::{traits::Bounded, sp_runtime::traits::BlakeTwo256};\n\n<span class=\"comment\">// Transmute from `String` to `&amp;str`.\n</span><span class=\"kw\">let </span>x: Bounded&lt;String, BlakeTwo256&gt; = Bounded::Inline(Default::default());\n<span class=\"kw\">let _</span>: Bounded&lt;<span class=\"kw-2\">&amp;</span>str, BlakeTwo256&gt; = x.transmute();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hash</a>(&amp;self) -&gt; &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a></h4></section></summary><div class=\"docblock\"><p>Returns the hash of the preimage.</p>\n<p>The hash is re-calculated every time if the preimage is inlined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lookup_hash</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the hash to lookup the preimage.</p>\n<p>If this is a <code>Bounded::Inline</code>, <code>None</code> is returned as no lookup is required.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the length of the preimage or <code>None</code> if the length is unknown.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_needed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lookup_needed</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns whether the image will require a lookup to be peeked.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lookup_len</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>The maximum length of the lookup that is needed to peek <code>Self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unrequested\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unrequested</a>(hash: &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; Bounded&lt;T, H&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a <code>Lookup</code> bounded item.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_legacy_hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_legacy_hash</a>(hash: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>&gt;) -&gt; Bounded&lt;T, H&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated: This API is only for transitioning to Scheduler v3 API</span></div></span></summary><div class=\"docblock\"><p>Constructs a <code>Legacy</code> bounded item.</p>\n</div></details></div></details>",0,"pallet_democracy::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Bounded&lt;T, H&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","pallet_democracy::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Decode-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; Decode for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: Decode,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: Decode,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;__CodecInputEdqy&gt;(\n    __codec_input_edqy: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut __CodecInputEdqy</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Bounded&lt;T, H&gt;, Error&gt;<span class=\"where fmt-newline\">where\n    __CodecInputEdqy: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","pallet_democracy::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; MaxEncodedLen for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","pallet_democracy::BoundedCallOf"],["<section id=\"impl-Eq-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</span></h3></section>","Eq","pallet_democracy::BoundedCallOf"],["<section id=\"impl-StructuralEq-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-StructuralEq-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,</span></h3></section>","StructuralEq","pallet_democracy::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Encode-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; Encode for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: Encode,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: Encode,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;__CodecOutputEdqy&gt;(\n    &amp;self,\n    __codec_dest_edqy: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut __CodecOutputEdqy</a>\n)<span class=\"where fmt-newline\">where\n    __CodecOutputEdqy: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">â“˜</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","pallet_democracy::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-TypeInfo-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; TypeInfo for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a> + TypeInfo + 'static,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: TypeInfo + 'static,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,\n    T: TypeInfo + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = Bounded&lt;T, H&gt;</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","pallet_democracy::BoundedCallOf"],["<section id=\"impl-EncodeLike-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-EncodeLike-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; EncodeLike for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: Encode,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: Encode,</span></h3></section>","EncodeLike","pallet_democracy::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Bounded&lt;T, H&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","pallet_democracy::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","pallet_democracy::BoundedCallOf"],["<section id=\"impl-StructuralPartialEq-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,</span></h3></section>","StructuralPartialEq","pallet_democracy::BoundedCallOf"]],
"pallet_referenda":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.transmute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transmute</a>&lt;S&gt;(self) -&gt; Bounded&lt;S, H&gt;<span class=\"where fmt-newline\">where\n    S: Encode,\n    T: Encode + EncodeLike&lt;S&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Casts the wrapped type into something that encodes alike.</p>\n<h5 id=\"examples\"><a href=\"#examples\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>frame_support::{traits::Bounded, sp_runtime::traits::BlakeTwo256};\n\n<span class=\"comment\">// Transmute from `String` to `&amp;str`.\n</span><span class=\"kw\">let </span>x: Bounded&lt;String, BlakeTwo256&gt; = Bounded::Inline(Default::default());\n<span class=\"kw\">let _</span>: Bounded&lt;<span class=\"kw-2\">&amp;</span>str, BlakeTwo256&gt; = x.transmute();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hash</a>(&amp;self) -&gt; &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a></h4></section></summary><div class=\"docblock\"><p>Returns the hash of the preimage.</p>\n<p>The hash is re-calculated every time if the preimage is inlined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lookup_hash</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the hash to lookup the preimage.</p>\n<p>If this is a <code>Bounded::Inline</code>, <code>None</code> is returned as no lookup is required.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the length of the preimage or <code>None</code> if the length is unknown.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_needed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lookup_needed</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns whether the image will require a lookup to be peeked.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lookup_len</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>The maximum length of the lookup that is needed to peek <code>Self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unrequested\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unrequested</a>(hash: &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; Bounded&lt;T, H&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a <code>Lookup</code> bounded item.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_legacy_hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_legacy_hash</a>(hash: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>&gt;) -&gt; Bounded&lt;T, H&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated: This API is only for transitioning to Scheduler v3 API</span></div></span></summary><div class=\"docblock\"><p>Constructs a <code>Legacy</code> bounded item.</p>\n</div></details></div></details>",0,"pallet_referenda::types::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Bounded&lt;T, H&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","pallet_referenda::types::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Decode-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; Decode for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: Decode,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: Decode,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;__CodecInputEdqy&gt;(\n    __codec_input_edqy: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut __CodecInputEdqy</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Bounded&lt;T, H&gt;, Error&gt;<span class=\"where fmt-newline\">where\n    __CodecInputEdqy: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","pallet_referenda::types::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; MaxEncodedLen for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","pallet_referenda::types::BoundedCallOf"],["<section id=\"impl-Eq-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</span></h3></section>","Eq","pallet_referenda::types::BoundedCallOf"],["<section id=\"impl-StructuralEq-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-StructuralEq-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,</span></h3></section>","StructuralEq","pallet_referenda::types::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Encode-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; Encode for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: Encode,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: Encode,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;__CodecOutputEdqy&gt;(\n    &amp;self,\n    __codec_dest_edqy: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut __CodecOutputEdqy</a>\n)<span class=\"where fmt-newline\">where\n    __CodecOutputEdqy: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"pallet_referenda/struct.Vec.html\" title=\"struct pallet_referenda::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">â“˜</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","pallet_referenda::types::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-TypeInfo-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; TypeInfo for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a> + TypeInfo + 'static,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: TypeInfo + 'static,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,\n    T: TypeInfo + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = Bounded&lt;T, H&gt;</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","pallet_referenda::types::BoundedCallOf"],["<section id=\"impl-EncodeLike-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-EncodeLike-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; EncodeLike for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: Encode,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: Encode,</span></h3></section>","EncodeLike","pallet_referenda::types::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Bounded&lt;T, H&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","pallet_referenda::types::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","pallet_referenda::types::BoundedCallOf"],["<section id=\"impl-StructuralPartialEq-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,</span></h3></section>","StructuralPartialEq","pallet_referenda::types::BoundedCallOf"]],
"pallet_scheduler":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.transmute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transmute</a>&lt;S&gt;(self) -&gt; Bounded&lt;S, H&gt;<span class=\"where fmt-newline\">where\n    S: Encode,\n    T: Encode + EncodeLike&lt;S&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Casts the wrapped type into something that encodes alike.</p>\n<h5 id=\"examples\"><a href=\"#examples\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>frame_support::{traits::Bounded, sp_runtime::traits::BlakeTwo256};\n\n<span class=\"comment\">// Transmute from `String` to `&amp;str`.\n</span><span class=\"kw\">let </span>x: Bounded&lt;String, BlakeTwo256&gt; = Bounded::Inline(Default::default());\n<span class=\"kw\">let _</span>: Bounded&lt;<span class=\"kw-2\">&amp;</span>str, BlakeTwo256&gt; = x.transmute();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hash</a>(&amp;self) -&gt; &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a></h4></section></summary><div class=\"docblock\"><p>Returns the hash of the preimage.</p>\n<p>The hash is re-calculated every time if the preimage is inlined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lookup_hash</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the hash to lookup the preimage.</p>\n<p>If this is a <code>Bounded::Inline</code>, <code>None</code> is returned as no lookup is required.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the length of the preimage or <code>None</code> if the length is unknown.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_needed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lookup_needed</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns whether the image will require a lookup to be peeked.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lookup_len</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>The maximum length of the lookup that is needed to peek <code>Self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unrequested\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unrequested</a>(hash: &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; Bounded&lt;T, H&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a <code>Lookup</code> bounded item.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_legacy_hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_legacy_hash</a>(hash: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>&gt;) -&gt; Bounded&lt;T, H&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated: This API is only for transitioning to Scheduler v3 API</span></div></span></summary><div class=\"docblock\"><p>Constructs a <code>Legacy</code> bounded item.</p>\n</div></details></div></details>",0,"pallet_scheduler::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Bounded&lt;T, H&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","pallet_scheduler::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Decode-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; Decode for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: Decode,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: Decode,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;__CodecInputEdqy&gt;(\n    __codec_input_edqy: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut __CodecInputEdqy</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Bounded&lt;T, H&gt;, Error&gt;<span class=\"where fmt-newline\">where\n    __CodecInputEdqy: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","pallet_scheduler::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; MaxEncodedLen for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","pallet_scheduler::BoundedCallOf"],["<section id=\"impl-Eq-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</span></h3></section>","Eq","pallet_scheduler::BoundedCallOf"],["<section id=\"impl-StructuralEq-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-StructuralEq-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,</span></h3></section>","StructuralEq","pallet_scheduler::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Encode-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; Encode for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: Encode,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: Encode,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;__CodecOutputEdqy&gt;(\n    &amp;self,\n    __codec_dest_edqy: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut __CodecOutputEdqy</a>\n)<span class=\"where fmt-newline\">where\n    __CodecOutputEdqy: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">â“˜</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","pallet_scheduler::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-TypeInfo-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; TypeInfo for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a> + TypeInfo + 'static,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: TypeInfo + 'static,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,\n    T: TypeInfo + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = Bounded&lt;T, H&gt;</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","pallet_scheduler::BoundedCallOf"],["<section id=\"impl-EncodeLike-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-EncodeLike-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; EncodeLike for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: Encode,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: Encode,</span></h3></section>","EncodeLike","pallet_scheduler::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,\n    &lt;H as <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Hash.html#associatedtype.Output\" title=\"type sp_runtime::traits::Hash::Output\">Output</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Bounded&lt;T, H&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","pallet_scheduler::BoundedCallOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","pallet_scheduler::BoundedCallOf"],["<section id=\"impl-StructuralPartialEq-for-Bounded%3CT,+H%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-Bounded%3CT,+H%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for Bounded&lt;T, H&gt;<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"sp_runtime/traits/trait.Hash.html\" title=\"trait sp_runtime::traits::Hash\">Hash</a>,</span></h3></section>","StructuralPartialEq","pallet_scheduler::BoundedCallOf"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()