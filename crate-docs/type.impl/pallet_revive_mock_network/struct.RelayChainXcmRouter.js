(function() {var type_impls = {
"pallet_revive_mock_network":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SendXcm-for-RelayChainXcmRouter\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_revive_mock_network/lib.rs.html#60-67\">source</a><a href=\"#impl-SendXcm-for-RelayChainXcmRouter\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl SendXcm for <a class=\"struct\" href=\"pallet_revive_mock_network/struct.RelayChainXcmRouter.html\" title=\"struct pallet_revive_mock_network::RelayChainXcmRouter\">RelayChainXcmRouter</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Ticket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Ticket\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Ticket</a> = (Location, Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;)</h4></section></summary><div class='docblock'>Intermediate value which connects the two phases of the send operation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_revive_mock_network/lib.rs.html#60-67\">source</a><a href=\"#method.validate\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">validate</a>(\n    destination: &amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Location&gt;,\n    message: &amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;&gt;\n) -&gt; SendResult&lt;(Location, Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;)&gt;</h4></section></summary><div class='docblock'>Check whether the given <code>_message</code> is deliverable to the given <code>_destination</code> and if so\ndetermine the cost which will be paid by this chain to do so, returning a <code>Validated</code> token\nwhich can be used to enact delivery. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deliver\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_revive_mock_network/lib.rs.html#60-67\">source</a><a href=\"#method.deliver\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">deliver</a>(pair: (Location, Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;XcmHash, SendError&gt;</h4></section></summary><div class='docblock'>Actually carry out the delivery operation for a previously validated message sending.</div></details></div></details>","SendXcm","pallet_revive_mock_network::relay_chain::XcmRouter"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()