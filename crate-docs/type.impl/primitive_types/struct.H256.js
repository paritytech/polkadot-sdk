(function() {var type_impls = {
"cumulus_primitives_core":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Public&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Public) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Public&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Public) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","cumulus_primitives_core::relay_chain::vstaging::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","cumulus_primitives_core::relay_chain::vstaging::Hash"]],
"cumulus_relay_chain_interface":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#144\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#145\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#137\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#138\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","cumulus_relay_chain_interface::PHash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cumulus_relay_chain_interface::PHash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","cumulus_relay_chain_interface::PHash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKeyring%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_keyring/ed25519.rs.html#182\">source</a><a href=\"#impl-From%3CKeyring%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"sp_keyring/ed25519/enum.Keyring.html\" title=\"enum sp_keyring::ed25519::Keyring\">Keyring</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_keyring/ed25519.rs.html#183\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(k: <a class=\"enum\" href=\"sp_keyring/ed25519/enum.Keyring.html\" title=\"enum sp_keyring::ed25519::Keyring\">Keyring</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Keyring>","cumulus_relay_chain_interface::PHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKeyring%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_keyring/sr25519.rs.html#220\">source</a><a href=\"#impl-From%3CKeyring%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"sp_keyring/sr25519/enum.Keyring.html\" title=\"enum sp_keyring::sr25519::Keyring\">Keyring</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_keyring/sr25519.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(k: <a class=\"enum\" href=\"sp_keyring/sr25519/enum.Keyring.html\" title=\"enum sp_keyring::sr25519::Keyring\">Keyring</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Keyring>","cumulus_relay_chain_interface::PHash"]],
"cumulus_test_client":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#144\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#145\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#137\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#138\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","cumulus_test_client::sc_client_db::DbHash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cumulus_test_client::sc_client_db::DbHash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","cumulus_test_client::sc_client_db::DbHash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEd25519Keyring%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_keyring/ed25519.rs.html#182\">source</a><a href=\"#impl-From%3CEd25519Keyring%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"cumulus_test_client/enum.Ed25519Keyring.html\" title=\"enum cumulus_test_client::Ed25519Keyring\">Keyring</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_keyring/ed25519.rs.html#183\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(k: <a class=\"enum\" href=\"cumulus_test_client/enum.Ed25519Keyring.html\" title=\"enum cumulus_test_client::Ed25519Keyring\">Keyring</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Keyring>","cumulus_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSr25519Keyring%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_keyring/sr25519.rs.html#220\">source</a><a href=\"#impl-From%3CSr25519Keyring%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"cumulus_test_client/enum.AccountKeyring.html\" title=\"enum cumulus_test_client::AccountKeyring\">Keyring</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_keyring/sr25519.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(k: <a class=\"enum\" href=\"cumulus_test_client/enum.AccountKeyring.html\" title=\"enum cumulus_test_client::AccountKeyring\">Keyring</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Keyring>","cumulus_test_client::sc_client_db::DbHash"]],
"cumulus_test_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#144\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#145\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#137\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#138\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","cumulus_test_runtime::Hash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cumulus_test_runtime::Hash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","cumulus_test_runtime::Hash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","cumulus_test_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","cumulus_test_runtime::Hash"]],
"glutton_westend_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#144\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#145\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#137\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#138\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","glutton_westend_runtime::Hash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","glutton_westend_runtime::Hash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","glutton_westend_runtime::Hash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","glutton_westend_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","glutton_westend_runtime::Hash"]],
"node_primitives":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Public&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Public) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Public&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Public) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","node_primitives::Hash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","node_primitives::Hash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","node_primitives::Hash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","node_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","node_primitives::Hash"]],
"node_template_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#144\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#145\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#137\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#138\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","node_template_runtime::Hash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","node_template_runtime::Hash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","node_template_runtime::Hash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","node_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","node_template_runtime::Hash"]],
"node_testing":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#144\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#145\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#137\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#138\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","node_testing::client::sc_client_db::DbHash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","node_testing::client::sc_client_db::DbHash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","node_testing::client::sc_client_db::DbHash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEd25519Keyring%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_keyring/ed25519.rs.html#182\">source</a><a href=\"#impl-From%3CEd25519Keyring%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"node_testing/client/enum.Ed25519Keyring.html\" title=\"enum node_testing::client::Ed25519Keyring\">Keyring</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_keyring/ed25519.rs.html#183\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(k: <a class=\"enum\" href=\"node_testing/client/enum.Ed25519Keyring.html\" title=\"enum node_testing::client::Ed25519Keyring\">Keyring</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Keyring>","node_testing::client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSr25519Keyring%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_keyring/sr25519.rs.html#220\">source</a><a href=\"#impl-From%3CSr25519Keyring%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"node_testing/client/enum.AccountKeyring.html\" title=\"enum node_testing::client::AccountKeyring\">Keyring</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_keyring/sr25519.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(k: <a class=\"enum\" href=\"node_testing/client/enum.AccountKeyring.html\" title=\"enum node_testing::client::AccountKeyring\">Keyring</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Keyring>","node_testing::client::sc_client_db::DbHash"]],
"parachain_template_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#144\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#145\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#137\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#138\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","parachain_template_runtime::Hash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","parachain_template_runtime::Hash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","parachain_template_runtime::Hash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","parachain_template_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","parachain_template_runtime::Hash"]],
"parachains_common":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Public&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Public) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Public&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Public) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","parachains_common::types::Hash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","parachains_common::types::Hash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","parachains_common::types::Hash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","parachains_common::types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","parachains_common::types::Hash"]],
"penpal_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#144\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#145\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#137\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#138\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","penpal_runtime::Hash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","penpal_runtime::Hash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","penpal_runtime::Hash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","penpal_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","penpal_runtime::Hash"]],
"polkadot_core_primitives":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Public&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Public) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Public&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Public) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","polkadot_core_primitives::Hash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","polkadot_core_primitives::Hash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","polkadot_core_primitives::Hash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","polkadot_core_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","polkadot_core_primitives::Hash"]],
"polkadot_node_subsystem_types":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Public&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Public) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Public&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Public) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","polkadot_node_subsystem_types::Hash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","polkadot_node_subsystem_types::Hash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","polkadot_node_subsystem_types::Hash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","polkadot_node_subsystem_types::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","polkadot_node_subsystem_types::Hash"]],
"polkadot_parachain":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#144\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#145\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#137\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#138\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","polkadot_parachain::service::Hash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","polkadot_parachain::service::Hash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","polkadot_parachain::service::Hash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKeyring%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_keyring/ed25519.rs.html#182\">source</a><a href=\"#impl-From%3CKeyring%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"sp_keyring/ed25519/enum.Keyring.html\" title=\"enum sp_keyring::ed25519::Keyring\">Keyring</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_keyring/ed25519.rs.html#183\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(k: <a class=\"enum\" href=\"sp_keyring/ed25519/enum.Keyring.html\" title=\"enum sp_keyring::ed25519::Keyring\">Keyring</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Keyring>","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKeyring%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_keyring/sr25519.rs.html#220\">source</a><a href=\"#impl-From%3CKeyring%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"sp_keyring/sr25519/enum.Keyring.html\" title=\"enum sp_keyring::sr25519::Keyring\">Keyring</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_keyring/sr25519.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(k: <a class=\"enum\" href=\"sp_keyring/sr25519/enum.Keyring.html\" title=\"enum sp_keyring::sr25519::Keyring\">Keyring</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Keyring>","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BigEndianHash-for-H256\" class=\"impl\"><a href=\"#impl-BigEndianHash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BigEndianHash for H256</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Uint\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Uint\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Uint</a> = U256</h4></section><section id=\"method.from_uint\" class=\"method trait-impl\"><a href=\"#method.from_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_uint</a>(value: &amp;U256) -&gt; H256</h4></section><section id=\"method.into_uint\" class=\"method trait-impl\"><a href=\"#method.into_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_uint</a>(&amp;self) -&gt; U256</h4></section></div></details>","BigEndianHash","polkadot_parachain::service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-H256\" class=\"impl\"><a href=\"#impl-MallocSizeOf-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MallocSizeOf for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_of</a>(&amp;self, _: &amp;mut MallocSizeOfOps) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.\nIf <code>T::size_of</code> is a constant, consider implementing <code>constant_size</code> as well.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.constant_size\" class=\"method trait-impl\"><a href=\"#method.constant_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">constant_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Used to optimize <code>MallocSizeOf</code> implementation for collections\nlike <code>Vec</code> and <code>HashMap</code> to avoid iterating over them unnecessarily.\nThe <code>Self: Sized</code> bound is for object safety.</div></details></div></details>","MallocSizeOf","polkadot_parachain::service::Hash"]],
"polkadot_primitives":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Public&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Public) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Public&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Public) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","polkadot_primitives::Hash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","polkadot_primitives::Hash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","polkadot_primitives::Hash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","polkadot_primitives::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","polkadot_primitives::Hash"]],
"polkadot_service":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#144\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#145\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#137\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#138\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","polkadot_service::Hash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","polkadot_service::Hash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","polkadot_service::Hash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polkadot_service/runtime_traits/trait.CheckEqual.html\" title=\"trait polkadot_service::runtime_traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polkadot_service/runtime_traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEd25519Keyring%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_keyring/ed25519.rs.html#182\">source</a><a href=\"#impl-From%3CEd25519Keyring%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"sp_keyring/ed25519/enum.Keyring.html\" title=\"enum sp_keyring::ed25519::Keyring\">Keyring</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_keyring/ed25519.rs.html#183\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(k: <a class=\"enum\" href=\"sp_keyring/ed25519/enum.Keyring.html\" title=\"enum sp_keyring::ed25519::Keyring\">Keyring</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Keyring>","polkadot_service::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAccountKeyring%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_keyring/sr25519.rs.html#220\">source</a><a href=\"#impl-From%3CAccountKeyring%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"sp_keyring/sr25519/enum.Keyring.html\" title=\"enum sp_keyring::sr25519::Keyring\">Keyring</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_keyring/sr25519.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(k: <a class=\"enum\" href=\"sp_keyring/sr25519/enum.Keyring.html\" title=\"enum sp_keyring::sr25519::Keyring\">Keyring</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Keyring>","polkadot_service::Hash"]],
"polkadot_test_client":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#144\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#145\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#137\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#138\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","polkadot_test_client::sc_client_db::DbHash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","polkadot_test_client::sc_client_db::DbHash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","polkadot_test_client::sc_client_db::DbHash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEd25519Keyring%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_keyring/ed25519.rs.html#182\">source</a><a href=\"#impl-From%3CEd25519Keyring%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"polkadot_test_client/enum.Ed25519Keyring.html\" title=\"enum polkadot_test_client::Ed25519Keyring\">Keyring</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_keyring/ed25519.rs.html#183\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(k: <a class=\"enum\" href=\"polkadot_test_client/enum.Ed25519Keyring.html\" title=\"enum polkadot_test_client::Ed25519Keyring\">Keyring</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Keyring>","polkadot_test_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSr25519Keyring%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_keyring/sr25519.rs.html#220\">source</a><a href=\"#impl-From%3CSr25519Keyring%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"polkadot_test_client/enum.AccountKeyring.html\" title=\"enum polkadot_test_client::AccountKeyring\">Keyring</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_keyring/sr25519.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(k: <a class=\"enum\" href=\"polkadot_test_client/enum.AccountKeyring.html\" title=\"enum polkadot_test_client::AccountKeyring\">Keyring</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Keyring>","polkadot_test_client::sc_client_db::DbHash"]],
"sc_client_db":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#144\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#145\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#137\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#138\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","sc_client_db::DbHash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sc_client_db::DbHash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","sc_client_db::DbHash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","sc_client_db::DbHash"]],
"sc_network_test":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#144\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#145\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#137\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#138\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","sc_network_test::Hash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sc_network_test::Hash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","sc_network_test::Hash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEd25519Keyring%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_keyring/ed25519.rs.html#182\">source</a><a href=\"#impl-From%3CEd25519Keyring%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"sp_keyring/ed25519/enum.Keyring.html\" title=\"enum sp_keyring::ed25519::Keyring\">Keyring</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_keyring/ed25519.rs.html#183\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(k: <a class=\"enum\" href=\"sp_keyring/ed25519/enum.Keyring.html\" title=\"enum sp_keyring::ed25519::Keyring\">Keyring</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Keyring>","sc_network_test::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAccountKeyring%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_keyring/sr25519.rs.html#220\">source</a><a href=\"#impl-From%3CAccountKeyring%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"sp_keyring/sr25519/enum.Keyring.html\" title=\"enum sp_keyring::sr25519::Keyring\">Keyring</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_keyring/sr25519.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(k: <a class=\"enum\" href=\"sp_keyring/sr25519/enum.Keyring.html\" title=\"enum sp_keyring::sr25519::Keyring\">Keyring</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Keyring>","sc_network_test::Hash"]],
"seedling_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#144\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#145\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#137\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#138\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","seedling_runtime::Hash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","seedling_runtime::Hash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","seedling_runtime::Hash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","seedling_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","seedling_runtime::Hash"]],
"shell_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#144\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#145\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#137\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#138\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","shell_runtime::Hash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","shell_runtime::Hash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","shell_runtime::Hash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","shell_runtime::Hash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","shell_runtime::Hash"]],
"snowbridge_core":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Public&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Public) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Public&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Public) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","snowbridge_core::AgentId"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","snowbridge_core::AgentId"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","snowbridge_core::AgentId"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","snowbridge_core::AgentId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BigEndianHash-for-H256\" class=\"impl\"><a href=\"#impl-BigEndianHash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BigEndianHash for H256</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Uint\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Uint\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Uint</a> = <a class=\"struct\" href=\"snowbridge_core/struct.U256.html\" title=\"struct snowbridge_core::U256\">U256</a></h4></section><section id=\"method.from_uint\" class=\"method trait-impl\"><a href=\"#method.from_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_uint</a>(value: &amp;<a class=\"struct\" href=\"snowbridge_core/struct.U256.html\" title=\"struct snowbridge_core::U256\">U256</a>) -&gt; H256</h4></section><section id=\"method.into_uint\" class=\"method trait-impl\"><a href=\"#method.into_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_uint</a>(&amp;self) -&gt; <a class=\"struct\" href=\"snowbridge_core/struct.U256.html\" title=\"struct snowbridge_core::U256\">U256</a></h4></section></div></details>","BigEndianHash","snowbridge_core::AgentId"]],
"sp_consensus_beefy":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Public&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Public) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Public&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Public) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","sp_consensus_beefy::MmrRootHash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sp_consensus_beefy::MmrRootHash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","sp_consensus_beefy::MmrRootHash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","sp_consensus_beefy::MmrRootHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","sp_consensus_beefy::MmrRootHash"]],
"substrate_test_runtime_client":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeat_byte\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repeat_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new fixed hash where all bits are set to the given byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Returns a new zero-initialized fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len_bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this hash in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable byte slice containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_fixed_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_bytes_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_fixed_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Extracts a reference to the byte array containing the entire fixed hash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">to_fixed_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the inner bytes array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a constant raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable raw pointer to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assign_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assign_from_slice</a>(&amp;mut self, src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Assign the bytes from the byte slice <code>src</code> to <code>self</code>.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new fixed-hash from the given slice <code>src</code>.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>If the length of <code>src</code> and the number of bytes in <code>Self</code> do not match.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.covers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">covers</a>(&amp;self, b: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no bits are set.</p>\n</div></details></div></details>",0,"substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>byteorder</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_be</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as big-endian.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_le</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as little-endian.</p>\n<h5 id=\"note-1\"><a href=\"#note-1\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_low_u64_ne</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the lowest 8 bytes interpreted as native-endian.</p>\n<h5 id=\"note-2\"><a href=\"#note-2\">Note</a></h5>\n<p>For hash type with less than 8 bytes the missing bytes\nare interpreted as being zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_be\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_be</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-3\"><a href=\"#note-3\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as big endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_le\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_le</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-4\"><a href=\"#note-4\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as little endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_low_u64_ne\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_low_u64_ne</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Creates a new hash type from the given <code>u64</code> value.</p>\n<h5 id=\"note-5\"><a href=\"#note-5\">Note</a></h5>\n<ul>\n<li>The given <code>u64</code> value is interpreted as native endian.</li>\n<li>Ignores the most significant bits of the given value\nif the hash type has less than 8 bytes.</li>\n</ul>\n</div></details></div></details>",0,"substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-H256\" class=\"impl\"><a href=\"#impl-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl H256</h3></section></summary><div class=\"docblock\"><p>Utilities using the <code>rand</code> crate.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize_using</a>&lt;R&gt;(&amp;mut self, rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>)<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.randomize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">randomize</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Assign <code>self</code> to a cryptographically random value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_using\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random_using</a>&lt;R&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; H256<span class=\"where fmt-newline\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content using the\ngiven random number generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">random</a>() -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Create a new hash with cryptographically random content.</p>\n</div></details></div></details>",0,"substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#144\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/ed25519.rs.html#145\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/ed25519/struct.Public.html\" title=\"struct sp_core::ed25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPublic%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#137\">source</a><a href=\"#impl-From%3CPublic%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/sr25519.rs.html#138\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"struct\" href=\"sp_core/sr25519/struct.Public.html\" title=\"struct sp_core::sr25519::Public\">Public</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Public>","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-H256\" class=\"impl\"><a href=\"#impl-Clone-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; H256</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-H256\" class=\"impl\"><a href=\"#impl-Default-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; H256</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-H256\" class=\"impl\"><a href=\"#impl-Serialize-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.195/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsMut%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[u8]>","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-H256\" class=\"impl\"><a href=\"#impl-Hash-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], Output = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-H256\" class=\"impl\"><a href=\"#impl-Decodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-H256\" class=\"impl\"><a href=\"#impl-Encodable-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitAndAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&'r H256>","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-H256\" class=\"impl\"><a href=\"#impl-Encode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</span></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut T</a>)<span class=\"where fmt-newline\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-H256\" class=\"impl\"><a href=\"#impl-FromStr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, FromHexError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a hash type instance from the given string.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given input string is interpreted in big endian.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<ul>\n<li>When encountering invalid non hex-digits</li>\n<li>Upon empty string input or invalid input length in general</li>\n</ul>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = FromHexError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-H256\" class=\"impl\"><a href=\"#impl-BitOr-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-H256\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","substrate_test_runtime_client::sc_client_db::DbHash"],["<section id=\"impl-EncodeLike-for-H256\" class=\"impl\"><a href=\"#impl-EncodeLike-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for H256</h3></section>","EncodeLike","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-H256\" class=\"impl\"><a href=\"#impl-PartialOrd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-H256\" class=\"impl\"><a href=\"#impl-Decode-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.75.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, Error&gt;<span class=\"where fmt-newline\">where\n    I: Input,</span></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-H256\" class=\"impl\"><a href=\"#impl-LowerHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-H256\" class=\"impl\"><a href=\"#impl-Display-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-H256\" class=\"impl\"><a href=\"#impl-PartialEq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitXorAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&'r H256>","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign%3C%26H256%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r H256&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: &amp;'r H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&'r H256>","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-H256\" class=\"impl\"><a href=\"#impl-BitOrAssign-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: H256)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-H256\" class=\"impl\"><a href=\"#impl-Debug-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","substrate_test_runtime_client::sc_client_db::DbHash"],["<section id=\"impl-Eq-for-H256\" class=\"impl\"><a href=\"#impl-Eq-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for H256</h3></section>","Eq","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-H256\" class=\"impl\"><a href=\"#impl-BitXor-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","substrate_test_runtime_client::sc_client_db::DbHash"],["<section id=\"impl-Copy-for-H256\" class=\"impl\"><a href=\"#impl-Copy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for H256</h3></section>","Copy","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-H256\" class=\"impl\"><a href=\"#impl-Ord-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;H256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-H256\" class=\"impl\"><a href=\"#impl-TypeInfo-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = H256</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<[u8; 32]>","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a [u8; 32]>","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CH160%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3CH160%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;H160&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: H160) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<H160>","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"impl\"><a href=\"#impl-From%3C%26mut+%5Bu8;+32%5D%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]) -&gt; H256</h4></section></summary><div class=\"docblock\"><p>Constructs a hash type from the given reference\nto the mutable bytes array of fixed length.</p>\n<h5 id=\"note\"><a href=\"#note\">Note</a></h5>\n<p>The given bytes are interpreted in big endian order.</p>\n</div></details></div></details>","From<&'a mut [u8; 32]>","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-H256\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for H256<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-H256\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.195/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-H256\" class=\"impl\"><a href=\"#impl-UpperHex-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-H256\" class=\"impl\"><a href=\"#impl-BitAnd-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = H256</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: H256) -&gt; &lt;H256 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassByInner-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassByInner-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>The inner type that is wrapped by <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; &amp;&lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the reference to the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a></h4></section></summary><div class='docblock'>Consumes <code>self</code> and returns the inner type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#method.from_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#tymethod.from_inner\" class=\"fn\">from_inner</a>(inner: &lt;H256 as <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html\" title=\"trait sp_runtime_interface::pass_by::PassByInner\">PassByInner</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime_interface/pass_by/trait.PassByInner.html#associatedtype.Inner\" title=\"type sp_runtime_interface::pass_by::PassByInner::Inner\">Inner</a>) -&gt; H256</h4></section></summary><div class='docblock'>Construct <code>Self</code> from the given <code>inner</code>.</div></details></div></details>","PassByInner","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PassBy-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime_interface/impls.rs.html#384-388\">source</a><a href=\"#impl-PassBy-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime_interface/pass_by/trait.PassBy.html\" title=\"trait sp_runtime_interface::pass_by::PassBy\">PassBy</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PassBy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PassBy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime_interface/pass_by/trait.PassBy.html#associatedtype.PassBy\" class=\"associatedtype\">PassBy</a> = <a class=\"struct\" href=\"sp_runtime_interface/pass_by/struct.Inner.html\" title=\"struct sp_runtime_interface::pass_by::Inner\">Inner</a>&lt;H256, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">32</a>]&gt;</h4></section></summary><div class='docblock'>The strategy that should be used to pass the type.</div></details></div></details>","PassBy","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckEqual-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1082\">source</a><a href=\"#impl-CheckEqual-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_runtime/traits/trait.CheckEqual.html\" title=\"trait sp_runtime::traits::CheckEqual\">CheckEqual</a> for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1084\">source</a><a href=\"#method.check_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.CheckEqual.html#tymethod.check_equal\" class=\"fn\">check_equal</a>(&amp;self, other: &amp;H256)</h4></section></summary><div class='docblock'>Perform the equality check.</div></details></div></details>","CheckEqual","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEd25519Keyring%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_keyring/ed25519.rs.html#182\">source</a><a href=\"#impl-From%3CEd25519Keyring%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"substrate_test_runtime_client/enum.Ed25519Keyring.html\" title=\"enum substrate_test_runtime_client::Ed25519Keyring\">Keyring</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_keyring/ed25519.rs.html#183\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(k: <a class=\"enum\" href=\"substrate_test_runtime_client/enum.Ed25519Keyring.html\" title=\"enum substrate_test_runtime_client::Ed25519Keyring\">Keyring</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Keyring>","substrate_test_runtime_client::sc_client_db::DbHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSr25519Keyring%3E-for-H256\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_keyring/sr25519.rs.html#220\">source</a><a href=\"#impl-From%3CSr25519Keyring%3E-for-H256\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"substrate_test_runtime_client/enum.AccountKeyring.html\" title=\"enum substrate_test_runtime_client::AccountKeyring\">Keyring</a>&gt; for H256</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_keyring/sr25519.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(k: <a class=\"enum\" href=\"substrate_test_runtime_client/enum.AccountKeyring.html\" title=\"enum substrate_test_runtime_client::AccountKeyring\">Keyring</a>) -&gt; H256</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Keyring>","substrate_test_runtime_client::sc_client_db::DbHash"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()