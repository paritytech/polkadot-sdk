(function() {var type_impls = {
"sc_consensus_beefy":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NotificationStream%3CPayload,+TK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sc_utils/notification.rs.html#72\">source</a><a href=\"#impl-NotificationStream%3CPayload,+TK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Payload, TK&gt; <a class=\"struct\" href=\"sc_utils/notification/struct.NotificationStream.html\" title=\"struct sc_utils::notification::NotificationStream\">NotificationStream</a>&lt;Payload, TK&gt;<span class=\"where fmt-newline\">where\n    TK: <a class=\"trait\" href=\"sc_utils/notification/trait.TracingKeyStr.html\" title=\"trait sc_utils::notification::TracingKeyStr\">TracingKeyStr</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.channel\" class=\"method\"><a class=\"src rightside\" href=\"src/sc_utils/notification.rs.html#74\">source</a><h4 class=\"code-header\">pub fn <a href=\"sc_utils/notification/struct.NotificationStream.html#tymethod.channel\" class=\"fn\">channel</a>(\n) -&gt; (<a class=\"struct\" href=\"sc_utils/notification/struct.NotificationSender.html\" title=\"struct sc_utils::notification::NotificationSender\">NotificationSender</a>&lt;Payload&gt;, <a class=\"struct\" href=\"sc_utils/notification/struct.NotificationStream.html\" title=\"struct sc_utils::notification::NotificationStream\">NotificationStream</a>&lt;Payload, TK&gt;)</h4></section></summary><div class=\"docblock\"><p>Creates a new pair of receiver and sender of <code>Payload</code> notifications.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.subscribe\" class=\"method\"><a class=\"src rightside\" href=\"src/sc_utils/notification.rs.html#82\">source</a><h4 class=\"code-header\">pub fn <a href=\"sc_utils/notification/struct.NotificationStream.html#tymethod.subscribe\" class=\"fn\">subscribe</a>(\n    &amp;self,\n    queue_size_warning: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"struct\" href=\"sc_utils/notification/struct.NotificationReceiver.html\" title=\"struct sc_utils::notification::NotificationReceiver\">NotificationReceiver</a>&lt;Payload&gt;</h4></section></summary><div class=\"docblock\"><p>Subscribe to a channel through which the generic payload can be received.</p>\n</div></details></div></details>",0,"sc_consensus_beefy::communication::notification::BeefyBestBlockStream","sc_consensus_beefy::communication::notification::BeefyVersionedFinalityProofStream"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NotificationStream%3CPayload,+TK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sc_utils/notification.rs.html#55\">source</a><a href=\"#impl-Clone-for-NotificationStream%3CPayload,+TK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Payload, TK&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sc_utils/notification/struct.NotificationStream.html\" title=\"struct sc_utils::notification::NotificationStream\">NotificationStream</a>&lt;Payload, TK&gt;<span class=\"where fmt-newline\">where\n    Payload: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    TK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"sc_utils/notification/trait.TracingKeyStr.html\" title=\"trait sc_utils::notification::TracingKeyStr\">TracingKeyStr</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_utils/notification.rs.html#55\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sc_utils/notification/struct.NotificationStream.html\" title=\"struct sc_utils::notification::NotificationStream\">NotificationStream</a>&lt;Payload, TK&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sc_consensus_beefy::communication::notification::BeefyBestBlockStream","sc_consensus_beefy::communication::notification::BeefyVersionedFinalityProofStream"]],
"sc_consensus_grandpa":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NotificationStream%3CPayload,+TK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sc_utils/notification.rs.html#72\">source</a><a href=\"#impl-NotificationStream%3CPayload,+TK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Payload, TK&gt; <a class=\"struct\" href=\"sc_utils/notification/struct.NotificationStream.html\" title=\"struct sc_utils::notification::NotificationStream\">NotificationStream</a>&lt;Payload, TK&gt;<span class=\"where fmt-newline\">where\n    TK: <a class=\"trait\" href=\"sc_utils/notification/trait.TracingKeyStr.html\" title=\"trait sc_utils::notification::TracingKeyStr\">TracingKeyStr</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.channel\" class=\"method\"><a class=\"src rightside\" href=\"src/sc_utils/notification.rs.html#74\">source</a><h4 class=\"code-header\">pub fn <a href=\"sc_utils/notification/struct.NotificationStream.html#tymethod.channel\" class=\"fn\">channel</a>(\n) -&gt; (<a class=\"struct\" href=\"sc_utils/notification/struct.NotificationSender.html\" title=\"struct sc_utils::notification::NotificationSender\">NotificationSender</a>&lt;Payload&gt;, <a class=\"struct\" href=\"sc_utils/notification/struct.NotificationStream.html\" title=\"struct sc_utils::notification::NotificationStream\">NotificationStream</a>&lt;Payload, TK&gt;)</h4></section></summary><div class=\"docblock\"><p>Creates a new pair of receiver and sender of <code>Payload</code> notifications.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.subscribe\" class=\"method\"><a class=\"src rightside\" href=\"src/sc_utils/notification.rs.html#82\">source</a><h4 class=\"code-header\">pub fn <a href=\"sc_utils/notification/struct.NotificationStream.html#tymethod.subscribe\" class=\"fn\">subscribe</a>(\n    &amp;self,\n    queue_size_warning: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"struct\" href=\"sc_utils/notification/struct.NotificationReceiver.html\" title=\"struct sc_utils::notification::NotificationReceiver\">NotificationReceiver</a>&lt;Payload&gt;</h4></section></summary><div class=\"docblock\"><p>Subscribe to a channel through which the generic payload can be received.</p>\n</div></details></div></details>",0,"sc_consensus_grandpa::notification::GrandpaJustificationStream"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NotificationStream%3CPayload,+TK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sc_utils/notification.rs.html#55\">source</a><a href=\"#impl-Clone-for-NotificationStream%3CPayload,+TK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Payload, TK&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sc_utils/notification/struct.NotificationStream.html\" title=\"struct sc_utils::notification::NotificationStream\">NotificationStream</a>&lt;Payload, TK&gt;<span class=\"where fmt-newline\">where\n    Payload: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    TK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"sc_utils/notification/trait.TracingKeyStr.html\" title=\"trait sc_utils::notification::TracingKeyStr\">TracingKeyStr</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sc_utils/notification.rs.html#55\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sc_utils/notification/struct.NotificationStream.html\" title=\"struct sc_utils::notification::NotificationStream\">NotificationStream</a>&lt;Payload, TK&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sc_consensus_grandpa::notification::GrandpaJustificationStream"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()