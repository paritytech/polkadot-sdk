(function() {var type_impls = {
"cumulus_test_client":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TrieBackendBuilder%3CS,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#215-218\">source</a><a href=\"#impl-TrieBackendBuilder%3CS,+H%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S, H&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"sp_state_machine/trie_backend_essence/trait.TrieBackendStorage.html\" title=\"trait sp_state_machine::trie_backend_essence::TrieBackendStorage\">TrieBackendStorage</a>&lt;H&gt;,\n    H: Hasher,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#221\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.new\" class=\"fn\">new</a>(storage: S, root: &lt;H as Hasher&gt;::Out) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new builder instance.</p>\n</div></details></div></details>",0,"cumulus_test_client::sc_client_db::DbStateBuilder"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TrieBackendBuilder%3CS,+H,+C,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#226-229\">source</a><a href=\"#impl-TrieBackendBuilder%3CS,+H,+C,+R%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S, H, C, R&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"sp_state_machine/trie_backend_essence/trait.TrieBackendStorage.html\" title=\"trait sp_state_machine::trie_backend_essence::TrieBackendStorage\">TrieBackendStorage</a>&lt;H&gt;,\n    H: Hasher,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_with_cache\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#232\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.new_with_cache\" class=\"fn\">new_with_cache</a>(\n    storage: S,\n    root: &lt;H as Hasher&gt;::Out,\n    cache: C\n) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new builder instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrap\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#242\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.wrap\" class=\"fn\">wrap</a>(other: &amp;<a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C, R&gt;) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;S</a>, H, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;C</a>, R&gt;</h4></section></summary><div class=\"docblock\"><p>Wrap the given <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n<p>This can be used for example if all accesses to the trie should\nbe recorded while some other functionality still uses the non-recording\nbackend.</p>\n<p>The backend storage and the cache will be taken from <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_optional_recorder\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#252\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_optional_recorder\" class=\"fn\">with_optional_recorder</a>(\n    self,\n    recorder: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;R&gt;\n) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given optional <code>recorder</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_recorder\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#257\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_recorder\" class=\"fn\">with_recorder</a>(self, recorder: R) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given <code>recorder</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_optional_cache\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#262\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_optional_cache\" class=\"fn\">with_optional_cache</a>&lt;LC&gt;(\n    self,\n    cache: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;LC&gt;\n) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, LC, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given optional <code>cache</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_cache\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#272\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_cache\" class=\"fn\">with_cache</a>&lt;LC&gt;(self, cache: LC) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, LC, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given <code>cache</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.build\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#282\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.build\" class=\"fn\">build</a>(self) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Build the configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details></div></details>",0,"cumulus_test_client::sc_client_db::DbStateBuilder"]],
"node_testing":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TrieBackendBuilder%3CS,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#215-218\">source</a><a href=\"#impl-TrieBackendBuilder%3CS,+H%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S, H&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"sp_state_machine/trie_backend_essence/trait.TrieBackendStorage.html\" title=\"trait sp_state_machine::trie_backend_essence::TrieBackendStorage\">TrieBackendStorage</a>&lt;H&gt;,\n    H: Hasher,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#221\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.new\" class=\"fn\">new</a>(storage: S, root: &lt;H as Hasher&gt;::Out) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new builder instance.</p>\n</div></details></div></details>",0,"node_testing::client::sc_client_db::DbStateBuilder"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TrieBackendBuilder%3CS,+H,+C,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#226-229\">source</a><a href=\"#impl-TrieBackendBuilder%3CS,+H,+C,+R%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S, H, C, R&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"sp_state_machine/trie_backend_essence/trait.TrieBackendStorage.html\" title=\"trait sp_state_machine::trie_backend_essence::TrieBackendStorage\">TrieBackendStorage</a>&lt;H&gt;,\n    H: Hasher,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_with_cache\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#232\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.new_with_cache\" class=\"fn\">new_with_cache</a>(\n    storage: S,\n    root: &lt;H as Hasher&gt;::Out,\n    cache: C\n) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new builder instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrap\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#242\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.wrap\" class=\"fn\">wrap</a>(other: &amp;<a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C, R&gt;) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;S</a>, H, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;C</a>, R&gt;</h4></section></summary><div class=\"docblock\"><p>Wrap the given <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n<p>This can be used for example if all accesses to the trie should\nbe recorded while some other functionality still uses the non-recording\nbackend.</p>\n<p>The backend storage and the cache will be taken from <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_optional_recorder\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#252\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_optional_recorder\" class=\"fn\">with_optional_recorder</a>(\n    self,\n    recorder: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;R&gt;\n) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given optional <code>recorder</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_recorder\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#257\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_recorder\" class=\"fn\">with_recorder</a>(self, recorder: R) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given <code>recorder</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_optional_cache\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#262\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_optional_cache\" class=\"fn\">with_optional_cache</a>&lt;LC&gt;(\n    self,\n    cache: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;LC&gt;\n) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, LC, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given optional <code>cache</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_cache\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#272\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_cache\" class=\"fn\">with_cache</a>&lt;LC&gt;(self, cache: LC) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, LC, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given <code>cache</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.build\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#282\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.build\" class=\"fn\">build</a>(self) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Build the configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details></div></details>",0,"node_testing::client::sc_client_db::DbStateBuilder"]],
"polkadot_test_client":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TrieBackendBuilder%3CS,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#215-218\">source</a><a href=\"#impl-TrieBackendBuilder%3CS,+H%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S, H&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"sp_state_machine/trie_backend_essence/trait.TrieBackendStorage.html\" title=\"trait sp_state_machine::trie_backend_essence::TrieBackendStorage\">TrieBackendStorage</a>&lt;H&gt;,\n    H: Hasher,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#221\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.new\" class=\"fn\">new</a>(storage: S, root: &lt;H as Hasher&gt;::Out) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new builder instance.</p>\n</div></details></div></details>",0,"polkadot_test_client::sc_client_db::DbStateBuilder"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TrieBackendBuilder%3CS,+H,+C,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#226-229\">source</a><a href=\"#impl-TrieBackendBuilder%3CS,+H,+C,+R%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S, H, C, R&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"sp_state_machine/trie_backend_essence/trait.TrieBackendStorage.html\" title=\"trait sp_state_machine::trie_backend_essence::TrieBackendStorage\">TrieBackendStorage</a>&lt;H&gt;,\n    H: Hasher,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_with_cache\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#232\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.new_with_cache\" class=\"fn\">new_with_cache</a>(\n    storage: S,\n    root: &lt;H as Hasher&gt;::Out,\n    cache: C\n) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new builder instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrap\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#242\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.wrap\" class=\"fn\">wrap</a>(other: &amp;<a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C, R&gt;) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;S</a>, H, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;C</a>, R&gt;</h4></section></summary><div class=\"docblock\"><p>Wrap the given <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n<p>This can be used for example if all accesses to the trie should\nbe recorded while some other functionality still uses the non-recording\nbackend.</p>\n<p>The backend storage and the cache will be taken from <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_optional_recorder\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#252\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_optional_recorder\" class=\"fn\">with_optional_recorder</a>(\n    self,\n    recorder: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;R&gt;\n) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given optional <code>recorder</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_recorder\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#257\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_recorder\" class=\"fn\">with_recorder</a>(self, recorder: R) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given <code>recorder</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_optional_cache\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#262\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_optional_cache\" class=\"fn\">with_optional_cache</a>&lt;LC&gt;(\n    self,\n    cache: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;LC&gt;\n) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, LC, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given optional <code>cache</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_cache\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#272\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_cache\" class=\"fn\">with_cache</a>&lt;LC&gt;(self, cache: LC) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, LC, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given <code>cache</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.build\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#282\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.build\" class=\"fn\">build</a>(self) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Build the configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details></div></details>",0,"polkadot_test_client::sc_client_db::DbStateBuilder"]],
"sc_client_db":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TrieBackendBuilder%3CS,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#215-218\">source</a><a href=\"#impl-TrieBackendBuilder%3CS,+H%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S, H&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"sp_state_machine/trie_backend_essence/trait.TrieBackendStorage.html\" title=\"trait sp_state_machine::trie_backend_essence::TrieBackendStorage\">TrieBackendStorage</a>&lt;H&gt;,\n    H: Hasher,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#221\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.new\" class=\"fn\">new</a>(storage: S, root: &lt;H as Hasher&gt;::Out) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new builder instance.</p>\n</div></details></div></details>",0,"sc_client_db::DbStateBuilder"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TrieBackendBuilder%3CS,+H,+C,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#226-229\">source</a><a href=\"#impl-TrieBackendBuilder%3CS,+H,+C,+R%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S, H, C, R&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"sp_state_machine/trie_backend_essence/trait.TrieBackendStorage.html\" title=\"trait sp_state_machine::trie_backend_essence::TrieBackendStorage\">TrieBackendStorage</a>&lt;H&gt;,\n    H: Hasher,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_with_cache\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#232\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.new_with_cache\" class=\"fn\">new_with_cache</a>(\n    storage: S,\n    root: &lt;H as Hasher&gt;::Out,\n    cache: C\n) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new builder instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrap\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#242\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.wrap\" class=\"fn\">wrap</a>(other: &amp;<a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C, R&gt;) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;S</a>, H, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;C</a>, R&gt;</h4></section></summary><div class=\"docblock\"><p>Wrap the given <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n<p>This can be used for example if all accesses to the trie should\nbe recorded while some other functionality still uses the non-recording\nbackend.</p>\n<p>The backend storage and the cache will be taken from <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_optional_recorder\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#252\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_optional_recorder\" class=\"fn\">with_optional_recorder</a>(\n    self,\n    recorder: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;R&gt;\n) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given optional <code>recorder</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_recorder\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#257\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_recorder\" class=\"fn\">with_recorder</a>(self, recorder: R) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given <code>recorder</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_optional_cache\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#262\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_optional_cache\" class=\"fn\">with_optional_cache</a>&lt;LC&gt;(\n    self,\n    cache: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;LC&gt;\n) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, LC, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given optional <code>cache</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_cache\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#272\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_cache\" class=\"fn\">with_cache</a>&lt;LC&gt;(self, cache: LC) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, LC, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given <code>cache</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.build\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#282\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.build\" class=\"fn\">build</a>(self) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Build the configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details></div></details>",0,"sc_client_db::DbStateBuilder"]],
"substrate_test_runtime_client":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TrieBackendBuilder%3CS,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#215-218\">source</a><a href=\"#impl-TrieBackendBuilder%3CS,+H%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S, H&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"sp_state_machine/trie_backend_essence/trait.TrieBackendStorage.html\" title=\"trait sp_state_machine::trie_backend_essence::TrieBackendStorage\">TrieBackendStorage</a>&lt;H&gt;,\n    H: Hasher,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#221\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.new\" class=\"fn\">new</a>(storage: S, root: &lt;H as Hasher&gt;::Out) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new builder instance.</p>\n</div></details></div></details>",0,"substrate_test_runtime_client::sc_client_db::DbStateBuilder"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TrieBackendBuilder%3CS,+H,+C,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#226-229\">source</a><a href=\"#impl-TrieBackendBuilder%3CS,+H,+C,+R%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S, H, C, R&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"sp_state_machine/trie_backend_essence/trait.TrieBackendStorage.html\" title=\"trait sp_state_machine::trie_backend_essence::TrieBackendStorage\">TrieBackendStorage</a>&lt;H&gt;,\n    H: Hasher,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_with_cache\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#232\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.new_with_cache\" class=\"fn\">new_with_cache</a>(\n    storage: S,\n    root: &lt;H as Hasher&gt;::Out,\n    cache: C\n) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new builder instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrap\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#242\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.wrap\" class=\"fn\">wrap</a>(other: &amp;<a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C, R&gt;) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;S</a>, H, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;C</a>, R&gt;</h4></section></summary><div class=\"docblock\"><p>Wrap the given <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n<p>This can be used for example if all accesses to the trie should\nbe recorded while some other functionality still uses the non-recording\nbackend.</p>\n<p>The backend storage and the cache will be taken from <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_optional_recorder\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#252\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_optional_recorder\" class=\"fn\">with_optional_recorder</a>(\n    self,\n    recorder: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;R&gt;\n) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given optional <code>recorder</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_recorder\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#257\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_recorder\" class=\"fn\">with_recorder</a>(self, recorder: R) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given <code>recorder</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_optional_cache\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#262\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_optional_cache\" class=\"fn\">with_optional_cache</a>&lt;LC&gt;(\n    self,\n    cache: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;LC&gt;\n) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, LC, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given optional <code>cache</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_cache\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#272\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.with_cache\" class=\"fn\">with_cache</a>&lt;LC&gt;(self, cache: LC) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html\" title=\"struct sp_state_machine::trie_backend::TrieBackendBuilder\">TrieBackendBuilder</a>&lt;S, H, LC, R&gt;</h4></section></summary><div class=\"docblock\"><p>Use the given <code>cache</code> for the to be configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.build\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#282\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackendBuilder.html#tymethod.build\" class=\"fn\">build</a>(self) -&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C, R&gt;</h4></section></summary><div class=\"docblock\"><p>Build the configured <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</p>\n</div></details></div></details>",0,"substrate_test_runtime_client::sc_client_db::DbStateBuilder"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()