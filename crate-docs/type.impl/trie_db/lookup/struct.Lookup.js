(function() {var type_impls = {
"sp_trie":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Lookup%3C'a,+'cache,+L,+Q%3E\" class=\"impl\"><a href=\"#impl-Lookup%3C'a,+'cache,+L,+Q%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, 'cache, L, Q&gt; Lookup&lt;'a, 'cache, L, Q&gt;<span class=\"where fmt-newline\">where\n    L: <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>,\n    Q: <a class=\"trait\" href=\"sp_trie/trait.Query.html\" title=\"trait sp_trie::Query\">Query</a>&lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Hash\" title=\"type sp_trie::TrieLayout::Hash\">Hash</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_first_descendant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lookup_first_descendant</a>(\n    self,\n    full_key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>],\n    nibble_key: NibbleSlice&lt;'_&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"sp_trie/enum.MerkleValue.html\" title=\"enum sp_trie::MerkleValue\">MerkleValue</a>&lt;&lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Hash\" title=\"type sp_trie::TrieLayout::Hash\">Hash</a> as Hasher&gt;::Out&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;TrieError&lt;&lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Hash\" title=\"type sp_trie::TrieLayout::Hash\">Hash</a> as Hasher&gt;::Out, &lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Codec\" title=\"type sp_trie::TrieLayout::Codec\">Codec</a> as NodeCodec&gt;::Error&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Look up the merkle value (hash) of the node that is the closest descendant for the provided\nkey.</p>\n<p>When the provided key leads to a node, then the merkle value (hash) of that node\nis returned. However, if the key does not lead to a node, then the merkle value\nof the closest descendant is returned. <code>None</code> if no such descendant exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.look_up\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">look_up</a>(\n    self,\n    full_key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>],\n    nibble_key: NibbleSlice&lt;'_&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;Q as <a class=\"trait\" href=\"sp_trie/trait.Query.html\" title=\"trait sp_trie::Query\">Query</a>&lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Hash\" title=\"type sp_trie::TrieLayout::Hash\">Hash</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.Query.html#associatedtype.Item\" title=\"type sp_trie::Query::Item\">Item</a>&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;TrieError&lt;&lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Hash\" title=\"type sp_trie::TrieLayout::Hash\">Hash</a> as Hasher&gt;::Out, &lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Codec\" title=\"type sp_trie::TrieLayout::Codec\">Codec</a> as NodeCodec&gt;::Error&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Look up the given <code>nibble_key</code>.</p>\n<p>If the value is found, it will be passed to the given function to decode or copy.</p>\n<p>The given <code>full_key</code> should be the full key to the data that is requested. This will\nbe used when there is a cache to potentially speed up the lookup.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.look_up_hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">look_up_hash</a>(\n    self,\n    full_key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>],\n    nibble_key: NibbleSlice&lt;'_&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Hash\" title=\"type sp_trie::TrieLayout::Hash\">Hash</a> as Hasher&gt;::Out&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;TrieError&lt;&lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Hash\" title=\"type sp_trie::TrieLayout::Hash\">Hash</a> as Hasher&gt;::Out, &lt;&lt;L as <a class=\"trait\" href=\"sp_trie/trait.TrieLayout.html\" title=\"trait sp_trie::TrieLayout\">TrieLayout</a>&gt;::<a class=\"associatedtype\" href=\"sp_trie/trait.TrieLayout.html#associatedtype.Codec\" title=\"type sp_trie::TrieLayout::Codec\">Codec</a> as NodeCodec&gt;::Error&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Look up the value hash for the given <code>nibble_key</code>.</p>\n<p>The given <code>full_key</code> should be the full key to the data that is requested. This will\nbe used when there is a cache to potentially speed up the lookup.</p>\n</div></details></div></details>",0,"sp_trie::trie_types::Lookup","sp_trie::Lookup"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()